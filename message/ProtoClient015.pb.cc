// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient015.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto11404002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11404002_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11404003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11404003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11404004_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11404004_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11404005_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11404005_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11404006_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11404006_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51404001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51404001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51404002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51404002_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51404003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51404003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51404004_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51404004_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51404005_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51404005_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51404006_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51404006_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81404007_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81404007_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400415_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400415_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400415_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400415_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401471_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401471_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401415_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401415_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401472_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401472_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401416_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401416_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100649_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100649_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100650_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100650_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400624_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400624_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400624_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400624_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100651_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100651_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11405001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11405001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51405001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51405001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400660_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400660_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400660_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400660_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400661_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400661_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400400_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400400_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400407_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400407_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400384_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400384_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400662_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400662_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400662_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400662_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80405002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80405002_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80405011_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80405011_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80405012_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80405012_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80405013_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80405013_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100653_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100653_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100653_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100653_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401480_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401480_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401481_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401481_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401481_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401481_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81405001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81405001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81405003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81405003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100502_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100502_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400625_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400625_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10405011_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10405011_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80405014_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80405014_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80405015_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80405015_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80405016_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80405016_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient015_2eproto() {
  protobuf_AddDesc_ProtoClient015_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient015.proto");
  GOOGLE_CHECK(file != NULL);
  Proto11404002_descriptor_ = file->message_type(0);
  static const int Proto11404002_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11404002, illus_class_id_),
  };
  Proto11404002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11404002_descriptor_,
      Proto11404002::default_instance_,
      Proto11404002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11404002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11404002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11404002));
  Proto11404003_descriptor_ = file->message_type(1);
  static const int Proto11404003_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11404003, illus_group_id_),
  };
  Proto11404003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11404003_descriptor_,
      Proto11404003::default_instance_,
      Proto11404003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11404003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11404003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11404003));
  Proto11404004_descriptor_ = file->message_type(2);
  static const int Proto11404004_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11404004, illus_id_),
  };
  Proto11404004_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11404004_descriptor_,
      Proto11404004::default_instance_,
      Proto11404004_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11404004, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11404004, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11404004));
  Proto11404005_descriptor_ = file->message_type(3);
  static const int Proto11404005_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11404005, illus_id_),
  };
  Proto11404005_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11404005_descriptor_,
      Proto11404005::default_instance_,
      Proto11404005_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11404005, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11404005, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11404005));
  Proto11404006_descriptor_ = file->message_type(4);
  static const int Proto11404006_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11404006, illus_id_),
  };
  Proto11404006_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11404006_descriptor_,
      Proto11404006::default_instance_,
      Proto11404006_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11404006, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11404006, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11404006));
  Proto51404001_descriptor_ = file->message_type(5);
  static const int Proto51404001_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404001, prop_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404001, illus_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404001, illus_group_list_),
  };
  Proto51404001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51404001_descriptor_,
      Proto51404001::default_instance_,
      Proto51404001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51404001));
  Proto51404002_descriptor_ = file->message_type(6);
  static const int Proto51404002_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404002, illus_class_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404002, illus_group_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404002, illus_list_),
  };
  Proto51404002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51404002_descriptor_,
      Proto51404002::default_instance_,
      Proto51404002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51404002));
  Proto51404003_descriptor_ = file->message_type(7);
  static const int Proto51404003_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404003, illus_group_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404003, illus_list_),
  };
  Proto51404003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51404003_descriptor_,
      Proto51404003::default_instance_,
      Proto51404003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51404003));
  Proto51404004_descriptor_ = file->message_type(8);
  static const int Proto51404004_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404004, illus_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404004, illus_info_),
  };
  Proto51404004_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51404004_descriptor_,
      Proto51404004::default_instance_,
      Proto51404004_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404004, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404004, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51404004));
  Proto51404005_descriptor_ = file->message_type(9);
  static const int Proto51404005_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404005, illus_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404005, illus_info_),
  };
  Proto51404005_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51404005_descriptor_,
      Proto51404005::default_instance_,
      Proto51404005_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404005, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404005, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51404005));
  Proto51404006_descriptor_ = file->message_type(10);
  static const int Proto51404006_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404006, illus_id_),
  };
  Proto51404006_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51404006_descriptor_,
      Proto51404006::default_instance_,
      Proto51404006_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404006, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51404006, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51404006));
  Proto81404007_descriptor_ = file->message_type(11);
  static const int Proto81404007_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81404007, illus_class_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81404007, illus_group_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81404007, illus_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81404007, prop_list_),
  };
  Proto81404007_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81404007_descriptor_,
      Proto81404007::default_instance_,
      Proto81404007_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81404007, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81404007, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81404007));
  Proto11400415_descriptor_ = file->message_type(12);
  static const int Proto11400415_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400415, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400415, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400415, mount_type_),
  };
  Proto11400415_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400415_descriptor_,
      Proto11400415::default_instance_,
      Proto11400415_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400415, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400415, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400415));
  Proto51400415_descriptor_ = file->message_type(13);
  static const int Proto51400415_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400415, type_),
  };
  Proto51400415_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400415_descriptor_,
      Proto51400415::default_instance_,
      Proto51400415_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400415, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400415, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400415));
  Proto11401471_descriptor_ = file->message_type(14);
  static const int Proto11401471_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401471, check_total_index_),
  };
  Proto11401471_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401471_descriptor_,
      Proto11401471::default_instance_,
      Proto11401471_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401471, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401471, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401471));
  Proto51401415_descriptor_ = file->message_type(15);
  static const int Proto51401415_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401415, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401415, check_in_point_),
  };
  Proto51401415_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401415_descriptor_,
      Proto51401415::default_instance_,
      Proto51401415_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401415, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401415, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401415));
  Proto11401472_descriptor_ = file->message_type(16);
  static const int Proto11401472_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401472, award_index_),
  };
  Proto11401472_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401472_descriptor_,
      Proto11401472::default_instance_,
      Proto11401472_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401472, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401472, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401472));
  Proto51401416_descriptor_ = file->message_type(17);
  static const int Proto51401416_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401416, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401416, check_in_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401416, charge_money_),
  };
  Proto51401416_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401416_descriptor_,
      Proto51401416::default_instance_,
      Proto51401416_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401416, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401416, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401416));
  Proto50100649_descriptor_ = file->message_type(18);
  static const int Proto50100649_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100649, boss_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100649, boss_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100649, super_summon_role_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100649, normal_summon_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100649, super_summon_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100649, normal_summon_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100649, super_summon_tick_),
  };
  Proto50100649_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100649_descriptor_,
      Proto50100649::default_instance_,
      Proto50100649_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100649, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100649, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100649));
  Proto10100650_descriptor_ = file->message_type(19);
  static const int Proto10100650_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100650, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100650, feed_num_),
  };
  Proto10100650_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100650_descriptor_,
      Proto10100650::default_instance_,
      Proto10100650_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100650, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100650, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100650));
  Proto11400624_descriptor_ = file->message_type(20);
  static const int Proto11400624_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400624, pkg_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400624, type_),
  };
  Proto11400624_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400624_descriptor_,
      Proto11400624::default_instance_,
      Proto11400624_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400624, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400624, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400624));
  Proto51400624_descriptor_ = file->message_type(21);
  static const int Proto51400624_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400624, pkg_index_),
  };
  Proto51400624_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400624_descriptor_,
      Proto51400624::default_instance_,
      Proto51400624_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400624, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400624, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400624));
  Proto10100651_descriptor_ = file->message_type(22);
  static const int Proto10100651_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100651, summon_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100651, role_id_),
  };
  Proto10100651_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100651_descriptor_,
      Proto10100651::default_instance_,
      Proto10100651_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100651, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100651, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100651));
  Proto11405001_descriptor_ = file->message_type(23);
  static const int Proto11405001_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11405001, cycle_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11405001, enter_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11405001, is_reset_),
  };
  Proto11405001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11405001_descriptor_,
      Proto11405001::default_instance_,
      Proto11405001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11405001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11405001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11405001));
  Proto51405001_descriptor_ = file->message_type(24);
  static const int Proto51405001_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51405001, chest_sum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51405001, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51405001, enter_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51405001, cycle_id_),
  };
  Proto51405001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51405001_descriptor_,
      Proto51405001::default_instance_,
      Proto51405001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51405001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51405001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51405001));
  Proto11400660_descriptor_ = file->message_type(25);
  static const int Proto11400660_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400660, screen_recommend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400660, item_list_),
  };
  Proto11400660_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400660_descriptor_,
      Proto11400660::default_instance_,
      Proto11400660_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400660, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400660, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400660));
  Proto51400660_descriptor_ = file->message_type(26);
  static const int Proto51400660_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400660, level_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400660, exp_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400660, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400660, exp_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400660, exp_sum_),
  };
  Proto51400660_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400660_descriptor_,
      Proto51400660::default_instance_,
      Proto51400660_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400660, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400660, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400660));
  Proto51400661_descriptor_ = file->message_type(27);
  static const int Proto51400661_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400661, smelt_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400661, smelt_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400661, recommend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400661, prop_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400661, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400661, exp_limit_),
  };
  Proto51400661_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400661_descriptor_,
      Proto51400661::default_instance_,
      Proto51400661_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400661, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400661, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400661));
  Proto80400400_descriptor_ = file->message_type(28);
  static const int Proto80400400_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400400, chest_id_),
  };
  Proto80400400_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400400_descriptor_,
      Proto80400400::default_instance_,
      Proto80400400_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400400, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400400, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400400));
  Proto80400407_descriptor_ = file->message_type(29);
  static const int Proto80400407_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400407, chests_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400407, chests_list_),
  };
  Proto80400407_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400407_descriptor_,
      Proto80400407::default_instance_,
      Proto80400407_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400407, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400407, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400407));
  Proto80400384_descriptor_ = file->message_type(30);
  static const int Proto80400384_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400384, role_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400384, my_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400384, boss_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400384, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400384, cur_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400384, add_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400384, refresh_tick_),
  };
  Proto80400384_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400384_descriptor_,
      Proto80400384::default_instance_,
      Proto80400384_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400384, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400384, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400384));
  Proto11400662_descriptor_ = file->message_type(31);
  static const int Proto11400662_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400662, status_),
  };
  Proto11400662_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400662_descriptor_,
      Proto11400662::default_instance_,
      Proto11400662_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400662, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400662, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400662));
  Proto51400662_descriptor_ = file->message_type(32);
  static const int Proto51400662_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400662, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400662, item_list_),
  };
  Proto51400662_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400662_descriptor_,
      Proto51400662::default_instance_,
      Proto51400662_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400662, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400662, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400662));
  Proto80405002_descriptor_ = file->message_type(33);
  static const int Proto80405002_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405002, chests_sum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405002, chests_list_),
  };
  Proto80405002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80405002_descriptor_,
      Proto80405002::default_instance_,
      Proto80405002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80405002));
  Proto80405011_descriptor_ = file->message_type(34);
  static const int Proto80405011_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405011, topic_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405011, topic_desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405011, a_answer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405011, b_answer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405011, cur_stage_),
  };
  Proto80405011_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80405011_descriptor_,
      Proto80405011::default_instance_,
      Proto80405011_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405011, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405011, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80405011));
  Proto80405012_descriptor_ = file->message_type(35);
  static const int Proto80405012_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405012, award_id_),
  };
  Proto80405012_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80405012_descriptor_,
      Proto80405012::default_instance_,
      Proto80405012_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405012, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405012, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80405012));
  Proto80405013_descriptor_ = file->message_type(36);
  static const int Proto80405013_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405013, answer_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405013, right_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405013, score_num_),
  };
  Proto80405013_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80405013_descriptor_,
      Proto80405013::default_instance_,
      Proto80405013_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405013, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405013, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80405013));
  Proto10100653_descriptor_ = file->message_type(37);
  static const int Proto10100653_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100653, league_index_),
  };
  Proto10100653_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100653_descriptor_,
      Proto10100653::default_instance_,
      Proto10100653_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100653, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100653, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100653));
  Proto50100653_descriptor_ = file->message_type(38);
  static const int Proto50100653_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100653, member_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100653, league_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100653, league_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100653, leader_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100653, league_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100653, league_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100653, league_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100653, league_force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100653, flag_lvl_),
  };
  Proto50100653_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100653_descriptor_,
      Proto50100653::default_instance_,
      Proto50100653_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100653, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100653, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100653));
  Proto51401480_descriptor_ = file->message_type(39);
  static const int Proto51401480_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401480, received_mark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401480, offline_sum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401480, exp_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401480, longest_time_),
  };
  Proto51401480_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401480_descriptor_,
      Proto51401480::default_instance_,
      Proto51401480_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401480, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401480, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401480));
  Proto11401481_descriptor_ = file->message_type(40);
  static const int Proto11401481_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401481, type_id_),
  };
  Proto11401481_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401481_descriptor_,
      Proto11401481::default_instance_,
      Proto11401481_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401481, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401481, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401481));
  Proto51401481_descriptor_ = file->message_type(41);
  static const int Proto51401481_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401481, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401481, exp_num_),
  };
  Proto51401481_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401481_descriptor_,
      Proto51401481::default_instance_,
      Proto51401481_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401481, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401481, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401481));
  Proto81405001_descriptor_ = file->message_type(42);
  static const int Proto81405001_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405001, award_id_),
  };
  Proto81405001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81405001_descriptor_,
      Proto81405001::default_instance_,
      Proto81405001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81405001));
  Proto81405003_descriptor_ = file->message_type(43);
  static const int Proto81405003_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405003, collect_num_),
  };
  Proto81405003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81405003_descriptor_,
      Proto81405003::default_instance_,
      Proto81405003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81405003));
  Proto80100502_descriptor_ = file->message_type(44);
  static const int Proto80100502_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100502, camp_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100502, self_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100502, self_kill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100502, self_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100502, camp_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100502, top_three_),
  };
  Proto80100502_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100502_descriptor_,
      Proto80100502::default_instance_,
      Proto80100502_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100502, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100502, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100502));
  Proto11400625_descriptor_ = file->message_type(45);
  static const int Proto11400625_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400625, id_),
  };
  Proto11400625_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400625_descriptor_,
      Proto11400625::default_instance_,
      Proto11400625_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400625, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400625, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400625));
  Proto10405011_descriptor_ = file->message_type(46);
  static const int Proto10405011_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405011, player_id_),
  };
  Proto10405011_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10405011_descriptor_,
      Proto10405011::default_instance_,
      Proto10405011_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405011, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405011, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10405011));
  Proto80405014_descriptor_ = file->message_type(47);
  static const int Proto80405014_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405014, player_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405014, player_score_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405014, player_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405014, player_right_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405014, player_score_num_),
  };
  Proto80405014_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80405014_descriptor_,
      Proto80405014::default_instance_,
      Proto80405014_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405014, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405014, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80405014));
  Proto80405015_descriptor_ = file->message_type(48);
  static const int Proto80405015_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405015, top_player_num_),
  };
  Proto80405015_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80405015_descriptor_,
      Proto80405015::default_instance_,
      Proto80405015_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405015, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405015, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80405015));
  Proto80405016_descriptor_ = file->message_type(49);
  static const int Proto80405016_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405016, top_player_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405016, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405016, player_rank_),
  };
  Proto80405016_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80405016_descriptor_,
      Proto80405016::default_instance_,
      Proto80405016_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405016, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405016, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80405016));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient015_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11404002_descriptor_, &Proto11404002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11404003_descriptor_, &Proto11404003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11404004_descriptor_, &Proto11404004::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11404005_descriptor_, &Proto11404005::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11404006_descriptor_, &Proto11404006::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51404001_descriptor_, &Proto51404001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51404002_descriptor_, &Proto51404002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51404003_descriptor_, &Proto51404003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51404004_descriptor_, &Proto51404004::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51404005_descriptor_, &Proto51404005::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51404006_descriptor_, &Proto51404006::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81404007_descriptor_, &Proto81404007::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400415_descriptor_, &Proto11400415::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400415_descriptor_, &Proto51400415::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401471_descriptor_, &Proto11401471::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401415_descriptor_, &Proto51401415::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401472_descriptor_, &Proto11401472::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401416_descriptor_, &Proto51401416::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100649_descriptor_, &Proto50100649::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100650_descriptor_, &Proto10100650::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400624_descriptor_, &Proto11400624::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400624_descriptor_, &Proto51400624::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100651_descriptor_, &Proto10100651::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11405001_descriptor_, &Proto11405001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51405001_descriptor_, &Proto51405001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400660_descriptor_, &Proto11400660::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400660_descriptor_, &Proto51400660::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400661_descriptor_, &Proto51400661::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400400_descriptor_, &Proto80400400::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400407_descriptor_, &Proto80400407::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400384_descriptor_, &Proto80400384::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400662_descriptor_, &Proto11400662::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400662_descriptor_, &Proto51400662::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80405002_descriptor_, &Proto80405002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80405011_descriptor_, &Proto80405011::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80405012_descriptor_, &Proto80405012::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80405013_descriptor_, &Proto80405013::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100653_descriptor_, &Proto10100653::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100653_descriptor_, &Proto50100653::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401480_descriptor_, &Proto51401480::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401481_descriptor_, &Proto11401481::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401481_descriptor_, &Proto51401481::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81405001_descriptor_, &Proto81405001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81405003_descriptor_, &Proto81405003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100502_descriptor_, &Proto80100502::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400625_descriptor_, &Proto11400625::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10405011_descriptor_, &Proto10405011::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80405014_descriptor_, &Proto80405014::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80405015_descriptor_, &Proto80405015::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80405016_descriptor_, &Proto80405016::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient015_2eproto() {
  delete Proto11404002::default_instance_;
  delete Proto11404002_reflection_;
  delete Proto11404003::default_instance_;
  delete Proto11404003_reflection_;
  delete Proto11404004::default_instance_;
  delete Proto11404004_reflection_;
  delete Proto11404005::default_instance_;
  delete Proto11404005_reflection_;
  delete Proto11404006::default_instance_;
  delete Proto11404006_reflection_;
  delete Proto51404001::default_instance_;
  delete Proto51404001_reflection_;
  delete Proto51404002::default_instance_;
  delete Proto51404002_reflection_;
  delete Proto51404003::default_instance_;
  delete Proto51404003_reflection_;
  delete Proto51404004::default_instance_;
  delete Proto51404004_reflection_;
  delete Proto51404005::default_instance_;
  delete Proto51404005_reflection_;
  delete Proto51404006::default_instance_;
  delete Proto51404006_reflection_;
  delete Proto81404007::default_instance_;
  delete Proto81404007_reflection_;
  delete Proto11400415::default_instance_;
  delete Proto11400415_reflection_;
  delete Proto51400415::default_instance_;
  delete Proto51400415_reflection_;
  delete Proto11401471::default_instance_;
  delete Proto11401471_reflection_;
  delete Proto51401415::default_instance_;
  delete Proto51401415_reflection_;
  delete Proto11401472::default_instance_;
  delete Proto11401472_reflection_;
  delete Proto51401416::default_instance_;
  delete Proto51401416_reflection_;
  delete Proto50100649::default_instance_;
  delete Proto50100649_reflection_;
  delete Proto10100650::default_instance_;
  delete Proto10100650_reflection_;
  delete Proto11400624::default_instance_;
  delete Proto11400624_reflection_;
  delete Proto51400624::default_instance_;
  delete Proto51400624_reflection_;
  delete Proto10100651::default_instance_;
  delete Proto10100651_reflection_;
  delete Proto11405001::default_instance_;
  delete Proto11405001_reflection_;
  delete Proto51405001::default_instance_;
  delete Proto51405001_reflection_;
  delete Proto11400660::default_instance_;
  delete Proto11400660_reflection_;
  delete Proto51400660::default_instance_;
  delete Proto51400660_reflection_;
  delete Proto51400661::default_instance_;
  delete Proto51400661_reflection_;
  delete Proto80400400::default_instance_;
  delete Proto80400400_reflection_;
  delete Proto80400407::default_instance_;
  delete Proto80400407_reflection_;
  delete Proto80400384::default_instance_;
  delete Proto80400384_reflection_;
  delete Proto11400662::default_instance_;
  delete Proto11400662_reflection_;
  delete Proto51400662::default_instance_;
  delete Proto51400662_reflection_;
  delete Proto80405002::default_instance_;
  delete Proto80405002_reflection_;
  delete Proto80405011::default_instance_;
  delete Proto80405011_reflection_;
  delete Proto80405012::default_instance_;
  delete Proto80405012_reflection_;
  delete Proto80405013::default_instance_;
  delete Proto80405013_reflection_;
  delete Proto10100653::default_instance_;
  delete Proto10100653_reflection_;
  delete Proto50100653::default_instance_;
  delete Proto50100653_reflection_;
  delete Proto51401480::default_instance_;
  delete Proto51401480_reflection_;
  delete Proto11401481::default_instance_;
  delete Proto11401481_reflection_;
  delete Proto51401481::default_instance_;
  delete Proto51401481_reflection_;
  delete Proto81405001::default_instance_;
  delete Proto81405001_reflection_;
  delete Proto81405003::default_instance_;
  delete Proto81405003_reflection_;
  delete Proto80100502::default_instance_;
  delete Proto80100502_reflection_;
  delete Proto11400625::default_instance_;
  delete Proto11400625_reflection_;
  delete Proto10405011::default_instance_;
  delete Proto10405011_reflection_;
  delete Proto80405014::default_instance_;
  delete Proto80405014_reflection_;
  delete Proto80405015::default_instance_;
  delete Proto80405015_reflection_;
  delete Proto80405016::default_instance_;
  delete Proto80405016_reflection_;
}

void protobuf_AddDesc_ProtoClient015_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient015.proto\032\021ProtoPublic.prot"
    "o\"\'\n\rProto11404002\022\026\n\016illus_class_id\030\001 \001"
    "(\005\"\'\n\rProto11404003\022\026\n\016illus_group_id\030\001 "
    "\001(\005\"!\n\rProto11404004\022\020\n\010illus_id\030\001 \001(\005\"!"
    "\n\rProto11404005\022\020\n\010illus_id\030\001 \001(\005\"!\n\rPro"
    "to11404006\022\020\n\010illus_id\030\001 \001(\005\"p\n\rProto514"
    "04001\022!\n\tprop_list\030\001 \001(\0132\016.ProtoFightPro"
    "\022\"\n\nillus_list\030\002 \003(\0132\016.Illustrations\022\030\n\020"
    "illus_group_list\030\003 \003(\005\"s\n\rProto51404002\022"
    "\026\n\016illus_class_id\030\001 \001(\005\022&\n\020illus_group_l"
    "ist\030\002 \003(\0132\014.Illus_group\022\"\n\nillus_list\030\003 "
    "\003(\0132\016.Illustrations\"K\n\rProto51404003\022\026\n\016"
    "illus_group_id\030\001 \001(\005\022\"\n\nillus_list\030\002 \003(\013"
    "2\016.Illustrations\"E\n\rProto51404004\022\020\n\010ill"
    "us_id\030\001 \001(\005\022\"\n\nillus_info\030\002 \001(\0132\016.Illust"
    "rations\"E\n\rProto51404005\022\020\n\010illus_id\030\001 \001"
    "(\005\022\"\n\nillus_info\030\002 \001(\0132\016.Illustrations\"!"
    "\n\rProto51404006\022\020\n\010illus_id\030\001 \001(\005\"\226\001\n\rPr"
    "oto81404007\022\026\n\016illus_class_id\030\001 \001(\005\022&\n\020i"
    "llus_group_list\030\002 \003(\0132\014.Illus_group\022\"\n\ni"
    "llus_list\030\003 \003(\0132\016.Illustrations\022!\n\tprop_"
    "list\030\004 \001(\0132\016.ProtoFightPro\"A\n\rProto11400"
    "415\022\014\n\004type\030\001 \001(\005\022\016\n\006amount\030\002 \001(\005\022\022\n\nmou"
    "nt_type\030\003 \001(\005\"\035\n\rProto51400415\022\014\n\004type\030\001"
    " \001(\005\"*\n\rProto11401471\022\031\n\021check_total_ind"
    "ex\030\001 \001(\005\"7\n\rProto51401415\022\016\n\006status\030\001 \001("
    "\005\022\026\n\016check_in_point\030\002 \001(\005\"$\n\rProto114014"
    "72\022\023\n\013award_index\030\001 \001(\005\"M\n\rProto51401416"
    "\022\016\n\006status\030\001 \001(\005\022\026\n\016check_in_point\030\002 \001(\005"
    "\022\024\n\014charge_money\030\003 \001(\005\"\276\001\n\rProto50100649"
    "\022\022\n\nboss_index\030\001 \001(\005\022\020\n\010boss_exp\030\002 \001(\005\022\031"
    "\n\021super_summon_role\030\003 \001(\t\022\032\n\022normal_summ"
    "on_type\030\004 \001(\005\022\031\n\021super_summon_type\030\005 \001(\005"
    "\022\032\n\022normal_summon_tick\030\006 \001(\003\022\031\n\021super_su"
    "mmon_tick\030\007 \001(\003\"2\n\rProto10100650\022\017\n\007item"
    "_id\030\001 \001(\005\022\020\n\010feed_num\030\002 \001(\005\"0\n\rProto1140"
    "0624\022\021\n\tpkg_index\030\001 \001(\005\022\014\n\004type\030\002 \001(\005\"\"\n"
    "\rProto51400624\022\021\n\tpkg_index\030\001 \001(\005\"5\n\rPro"
    "to10100651\022\023\n\013summon_type\030\001 \001(\005\022\017\n\007role_"
    "id\030\002 \001(\005\"G\n\rProto11405001\022\020\n\010cycle_id\030\001 "
    "\001(\005\022\022\n\nenter_type\030\002 \001(\005\022\020\n\010is_reset\030\003 \001("
    "\005\"]\n\rProto51405001\022\021\n\tchest_sum\030\001 \001(\005\022\023\n"
    "\013activity_id\030\002 \001(\005\022\022\n\nenter_type\030\003 \001(\005\022\020"
    "\n\010cycle_id\030\004 \001(\005\"<\n\rProto11400660\022\030\n\020scr"
    "een_recommend\030\001 \001(\005\022\021\n\titem_list\030\002 \003(\005\"g"
    "\n\rProto51400660\022\021\n\tlevel_num\030\001 \001(\005\022\017\n\007ex"
    "p_num\030\002 \001(\005\022\016\n\006status\030\003 \001(\005\022\021\n\texp_limit"
    "\030\004 \001(\005\022\017\n\007exp_sum\030\005 \001(\005\"\237\001\n\rProto5140066"
    "1\022\023\n\013smelt_level\030\001 \001(\005\022\021\n\tsmelt_exp\030\002 \001("
    "\005\022\021\n\trecommend\030\003 \001(\005\022!\n\tprop_list\030\004 \001(\0132"
    "\016.ProtoFightPro\022\035\n\titem_list\030\005 \003(\0132\n.Pro"
    "toItem\022\021\n\texp_limit\030\006 \001(\005\"!\n\rProto804004"
    "00\022\020\n\010chest_id\030\001 \001(\005\"8\n\rProto80400407\022\022\n"
    "\nchests_num\030\001 \001(\005\022\023\n\013chests_list\030\002 \003(\005\"\261"
    "\001\n\rProto80400384\022\"\n\010role_set\030\001 \003(\0132\020.Pro"
    "toLScoreInfo\022!\n\007my_rank\030\002 \001(\0132\020.ProtoLSc"
    "oreInfo\022\017\n\007boss_id\030\003 \001(\003\022\016\n\006status\030\004 \001(\005"
    "\022\021\n\tcur_blood\030\005 \001(\001\022\017\n\007add_exp\030\006 \001(\005\022\024\n\014"
    "refresh_tick\030\007 \001(\005\"\037\n\rProto11400662\022\016\n\006s"
    "tatus\030\001 \001(\005\">\n\rProto51400662\022\016\n\006status\030\001"
    " \001(\005\022\035\n\titem_list\030\002 \003(\0132\n.ProtoItem\"8\n\rP"
    "roto80405002\022\022\n\nchests_sum\030\001 \001(\005\022\023\n\013ches"
    "ts_list\030\002 \003(\005\"l\n\rProto80405011\022\020\n\010topic_"
    "id\030\001 \001(\005\022\022\n\ntopic_desc\030\002 \001(\t\022\020\n\010a_answer"
    "\030\003 \001(\t\022\020\n\010b_answer\030\004 \001(\t\022\021\n\tcur_stage\030\005 "
    "\001(\005\"!\n\rProto80405012\022\020\n\010award_id\030\001 \001(\005\"H"
    "\n\rProto80405013\022\021\n\tanswer_id\030\001 \001(\005\022\021\n\tri"
    "ght_num\030\002 \001(\005\022\021\n\tscore_num\030\003 \001(\005\"%\n\rProt"
    "o10100653\022\024\n\014league_index\030\001 \001(\003\"\336\001\n\rProt"
    "o50100653\022&\n\nmember_set\030\001 \003(\0132\022.ProtoLea"
    "gueMember\022\024\n\014league_index\030\002 \001(\003\022\023\n\013leagu"
    "e_name\030\003 \001(\t\022\023\n\013leader_name\030\004 \001(\t\022\024\n\014lea"
    "gue_count\030\005 \001(\005\022\023\n\013league_rank\030\006 \001(\005\022\022\n\n"
    "league_lvl\030\007 \001(\005\022\024\n\014league_force\030\010 \001(\005\022\020"
    "\n\010flag_lvl\030\t \001(\005\"b\n\rProto51401480\022\025\n\rrec"
    "eived_mark\030\001 \001(\005\022\023\n\013offline_sum\030\002 \001(\005\022\017\n"
    "\007exp_num\030\003 \001(\005\022\024\n\014longest_time\030\004 \001(\005\" \n\r"
    "Proto11401481\022\017\n\007type_id\030\001 \001(\005\"0\n\rProto5"
    "1401481\022\016\n\006status\030\001 \001(\005\022\017\n\007exp_num\030\002 \001(\005"
    "\"!\n\rProto81405001\022\020\n\010award_id\030\001 \001(\005\"$\n\rP"
    "roto81405003\022\023\n\013collect_num\030\001 \001(\005\"\234\001\n\rPr"
    "oto80100502\022\021\n\tcamp_rank\030\001 \001(\005\022\021\n\tself_r"
    "ank\030\002 \001(\005\022\021\n\tself_kill\030\003 \001(\005\022\023\n\013self_rew"
    "ard\030\004 \001(\005\022\023\n\013camp_reward\030\005 \001(\005\022(\n\ttop_th"
    "ree\030\006 \003(\0132\025.ProtoSMBattleRankRec\"\033\n\rProt"
    "o11400625\022\n\n\002id\030\001 \001(\005\"\"\n\rProto10405011\022\021"
    "\n\tplayer_id\030\001 \001(\005\"\210\001\n\rProto80405014\022\023\n\013p"
    "layer_list\030\001 \003(\t\022\031\n\021player_score_list\030\002 "
    "\003(\003\022\023\n\013player_rank\030\003 \001(\005\022\030\n\020player_right"
    "_num\030\004 \001(\005\022\030\n\020player_score_num\030\005 \001(\005\"\'\n\r"
    "Proto80405015\022\026\n\016top_player_num\030\001 \001(\005\"X\n"
    "\rProto80405016\022\037\n\ntop_player\030\001 \001(\0132\013.Pro"
    "toCoord\022\021\n\tplayer_id\030\002 \001(\003\022\023\n\013player_ran"
    "k\030\003 \001(\005", 3727);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient015.proto", &protobuf_RegisterTypes);
  Proto11404002::default_instance_ = new Proto11404002();
  Proto11404003::default_instance_ = new Proto11404003();
  Proto11404004::default_instance_ = new Proto11404004();
  Proto11404005::default_instance_ = new Proto11404005();
  Proto11404006::default_instance_ = new Proto11404006();
  Proto51404001::default_instance_ = new Proto51404001();
  Proto51404002::default_instance_ = new Proto51404002();
  Proto51404003::default_instance_ = new Proto51404003();
  Proto51404004::default_instance_ = new Proto51404004();
  Proto51404005::default_instance_ = new Proto51404005();
  Proto51404006::default_instance_ = new Proto51404006();
  Proto81404007::default_instance_ = new Proto81404007();
  Proto11400415::default_instance_ = new Proto11400415();
  Proto51400415::default_instance_ = new Proto51400415();
  Proto11401471::default_instance_ = new Proto11401471();
  Proto51401415::default_instance_ = new Proto51401415();
  Proto11401472::default_instance_ = new Proto11401472();
  Proto51401416::default_instance_ = new Proto51401416();
  Proto50100649::default_instance_ = new Proto50100649();
  Proto10100650::default_instance_ = new Proto10100650();
  Proto11400624::default_instance_ = new Proto11400624();
  Proto51400624::default_instance_ = new Proto51400624();
  Proto10100651::default_instance_ = new Proto10100651();
  Proto11405001::default_instance_ = new Proto11405001();
  Proto51405001::default_instance_ = new Proto51405001();
  Proto11400660::default_instance_ = new Proto11400660();
  Proto51400660::default_instance_ = new Proto51400660();
  Proto51400661::default_instance_ = new Proto51400661();
  Proto80400400::default_instance_ = new Proto80400400();
  Proto80400407::default_instance_ = new Proto80400407();
  Proto80400384::default_instance_ = new Proto80400384();
  Proto11400662::default_instance_ = new Proto11400662();
  Proto51400662::default_instance_ = new Proto51400662();
  Proto80405002::default_instance_ = new Proto80405002();
  Proto80405011::default_instance_ = new Proto80405011();
  Proto80405012::default_instance_ = new Proto80405012();
  Proto80405013::default_instance_ = new Proto80405013();
  Proto10100653::default_instance_ = new Proto10100653();
  Proto50100653::default_instance_ = new Proto50100653();
  Proto51401480::default_instance_ = new Proto51401480();
  Proto11401481::default_instance_ = new Proto11401481();
  Proto51401481::default_instance_ = new Proto51401481();
  Proto81405001::default_instance_ = new Proto81405001();
  Proto81405003::default_instance_ = new Proto81405003();
  Proto80100502::default_instance_ = new Proto80100502();
  Proto11400625::default_instance_ = new Proto11400625();
  Proto10405011::default_instance_ = new Proto10405011();
  Proto80405014::default_instance_ = new Proto80405014();
  Proto80405015::default_instance_ = new Proto80405015();
  Proto80405016::default_instance_ = new Proto80405016();
  Proto11404002::default_instance_->InitAsDefaultInstance();
  Proto11404003::default_instance_->InitAsDefaultInstance();
  Proto11404004::default_instance_->InitAsDefaultInstance();
  Proto11404005::default_instance_->InitAsDefaultInstance();
  Proto11404006::default_instance_->InitAsDefaultInstance();
  Proto51404001::default_instance_->InitAsDefaultInstance();
  Proto51404002::default_instance_->InitAsDefaultInstance();
  Proto51404003::default_instance_->InitAsDefaultInstance();
  Proto51404004::default_instance_->InitAsDefaultInstance();
  Proto51404005::default_instance_->InitAsDefaultInstance();
  Proto51404006::default_instance_->InitAsDefaultInstance();
  Proto81404007::default_instance_->InitAsDefaultInstance();
  Proto11400415::default_instance_->InitAsDefaultInstance();
  Proto51400415::default_instance_->InitAsDefaultInstance();
  Proto11401471::default_instance_->InitAsDefaultInstance();
  Proto51401415::default_instance_->InitAsDefaultInstance();
  Proto11401472::default_instance_->InitAsDefaultInstance();
  Proto51401416::default_instance_->InitAsDefaultInstance();
  Proto50100649::default_instance_->InitAsDefaultInstance();
  Proto10100650::default_instance_->InitAsDefaultInstance();
  Proto11400624::default_instance_->InitAsDefaultInstance();
  Proto51400624::default_instance_->InitAsDefaultInstance();
  Proto10100651::default_instance_->InitAsDefaultInstance();
  Proto11405001::default_instance_->InitAsDefaultInstance();
  Proto51405001::default_instance_->InitAsDefaultInstance();
  Proto11400660::default_instance_->InitAsDefaultInstance();
  Proto51400660::default_instance_->InitAsDefaultInstance();
  Proto51400661::default_instance_->InitAsDefaultInstance();
  Proto80400400::default_instance_->InitAsDefaultInstance();
  Proto80400407::default_instance_->InitAsDefaultInstance();
  Proto80400384::default_instance_->InitAsDefaultInstance();
  Proto11400662::default_instance_->InitAsDefaultInstance();
  Proto51400662::default_instance_->InitAsDefaultInstance();
  Proto80405002::default_instance_->InitAsDefaultInstance();
  Proto80405011::default_instance_->InitAsDefaultInstance();
  Proto80405012::default_instance_->InitAsDefaultInstance();
  Proto80405013::default_instance_->InitAsDefaultInstance();
  Proto10100653::default_instance_->InitAsDefaultInstance();
  Proto50100653::default_instance_->InitAsDefaultInstance();
  Proto51401480::default_instance_->InitAsDefaultInstance();
  Proto11401481::default_instance_->InitAsDefaultInstance();
  Proto51401481::default_instance_->InitAsDefaultInstance();
  Proto81405001::default_instance_->InitAsDefaultInstance();
  Proto81405003::default_instance_->InitAsDefaultInstance();
  Proto80100502::default_instance_->InitAsDefaultInstance();
  Proto11400625::default_instance_->InitAsDefaultInstance();
  Proto10405011::default_instance_->InitAsDefaultInstance();
  Proto80405014::default_instance_->InitAsDefaultInstance();
  Proto80405015::default_instance_->InitAsDefaultInstance();
  Proto80405016::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient015_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient015_2eproto {
  StaticDescriptorInitializer_ProtoClient015_2eproto() {
    protobuf_AddDesc_ProtoClient015_2eproto();
  }
} static_descriptor_initializer_ProtoClient015_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto11404002::kIllusClassIdFieldNumber;
#endif  // !_MSC_VER

Proto11404002::Proto11404002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11404002::InitAsDefaultInstance() {
}

Proto11404002::Proto11404002(const Proto11404002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11404002::SharedCtor() {
  _cached_size_ = 0;
  illus_class_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11404002::~Proto11404002() {
  SharedDtor();
}

void Proto11404002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11404002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11404002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11404002_descriptor_;
}

const Proto11404002& Proto11404002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto11404002* Proto11404002::default_instance_ = NULL;

Proto11404002* Proto11404002::New() const {
  return new Proto11404002;
}

void Proto11404002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    illus_class_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11404002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 illus_class_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &illus_class_id_)));
          set_has_illus_class_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11404002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 illus_class_id = 1;
  if (has_illus_class_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->illus_class_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11404002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 illus_class_id = 1;
  if (has_illus_class_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->illus_class_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11404002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 illus_class_id = 1;
    if (has_illus_class_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->illus_class_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11404002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11404002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11404002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11404002::MergeFrom(const Proto11404002& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_illus_class_id()) {
      set_illus_class_id(from.illus_class_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11404002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11404002::CopyFrom(const Proto11404002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11404002::IsInitialized() const {
  
  return true;
}

void Proto11404002::Swap(Proto11404002* other) {
  if (other != this) {
    std::swap(illus_class_id_, other->illus_class_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11404002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11404002_descriptor_;
  metadata.reflection = Proto11404002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11404003::kIllusGroupIdFieldNumber;
#endif  // !_MSC_VER

Proto11404003::Proto11404003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11404003::InitAsDefaultInstance() {
}

Proto11404003::Proto11404003(const Proto11404003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11404003::SharedCtor() {
  _cached_size_ = 0;
  illus_group_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11404003::~Proto11404003() {
  SharedDtor();
}

void Proto11404003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11404003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11404003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11404003_descriptor_;
}

const Proto11404003& Proto11404003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto11404003* Proto11404003::default_instance_ = NULL;

Proto11404003* Proto11404003::New() const {
  return new Proto11404003;
}

void Proto11404003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    illus_group_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11404003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 illus_group_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &illus_group_id_)));
          set_has_illus_group_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11404003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 illus_group_id = 1;
  if (has_illus_group_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->illus_group_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11404003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 illus_group_id = 1;
  if (has_illus_group_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->illus_group_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11404003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 illus_group_id = 1;
    if (has_illus_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->illus_group_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11404003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11404003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11404003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11404003::MergeFrom(const Proto11404003& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_illus_group_id()) {
      set_illus_group_id(from.illus_group_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11404003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11404003::CopyFrom(const Proto11404003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11404003::IsInitialized() const {
  
  return true;
}

void Proto11404003::Swap(Proto11404003* other) {
  if (other != this) {
    std::swap(illus_group_id_, other->illus_group_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11404003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11404003_descriptor_;
  metadata.reflection = Proto11404003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11404004::kIllusIdFieldNumber;
#endif  // !_MSC_VER

Proto11404004::Proto11404004()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11404004::InitAsDefaultInstance() {
}

Proto11404004::Proto11404004(const Proto11404004& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11404004::SharedCtor() {
  _cached_size_ = 0;
  illus_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11404004::~Proto11404004() {
  SharedDtor();
}

void Proto11404004::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11404004::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11404004::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11404004_descriptor_;
}

const Proto11404004& Proto11404004::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto11404004* Proto11404004::default_instance_ = NULL;

Proto11404004* Proto11404004::New() const {
  return new Proto11404004;
}

void Proto11404004::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    illus_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11404004::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 illus_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &illus_id_)));
          set_has_illus_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11404004::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 illus_id = 1;
  if (has_illus_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->illus_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11404004::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 illus_id = 1;
  if (has_illus_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->illus_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11404004::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 illus_id = 1;
    if (has_illus_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->illus_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11404004::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11404004* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11404004*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11404004::MergeFrom(const Proto11404004& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_illus_id()) {
      set_illus_id(from.illus_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11404004::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11404004::CopyFrom(const Proto11404004& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11404004::IsInitialized() const {
  
  return true;
}

void Proto11404004::Swap(Proto11404004* other) {
  if (other != this) {
    std::swap(illus_id_, other->illus_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11404004::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11404004_descriptor_;
  metadata.reflection = Proto11404004_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11404005::kIllusIdFieldNumber;
#endif  // !_MSC_VER

Proto11404005::Proto11404005()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11404005::InitAsDefaultInstance() {
}

Proto11404005::Proto11404005(const Proto11404005& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11404005::SharedCtor() {
  _cached_size_ = 0;
  illus_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11404005::~Proto11404005() {
  SharedDtor();
}

void Proto11404005::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11404005::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11404005::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11404005_descriptor_;
}

const Proto11404005& Proto11404005::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto11404005* Proto11404005::default_instance_ = NULL;

Proto11404005* Proto11404005::New() const {
  return new Proto11404005;
}

void Proto11404005::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    illus_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11404005::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 illus_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &illus_id_)));
          set_has_illus_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11404005::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 illus_id = 1;
  if (has_illus_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->illus_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11404005::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 illus_id = 1;
  if (has_illus_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->illus_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11404005::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 illus_id = 1;
    if (has_illus_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->illus_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11404005::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11404005* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11404005*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11404005::MergeFrom(const Proto11404005& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_illus_id()) {
      set_illus_id(from.illus_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11404005::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11404005::CopyFrom(const Proto11404005& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11404005::IsInitialized() const {
  
  return true;
}

void Proto11404005::Swap(Proto11404005* other) {
  if (other != this) {
    std::swap(illus_id_, other->illus_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11404005::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11404005_descriptor_;
  metadata.reflection = Proto11404005_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11404006::kIllusIdFieldNumber;
#endif  // !_MSC_VER

Proto11404006::Proto11404006()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11404006::InitAsDefaultInstance() {
}

Proto11404006::Proto11404006(const Proto11404006& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11404006::SharedCtor() {
  _cached_size_ = 0;
  illus_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11404006::~Proto11404006() {
  SharedDtor();
}

void Proto11404006::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11404006::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11404006::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11404006_descriptor_;
}

const Proto11404006& Proto11404006::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto11404006* Proto11404006::default_instance_ = NULL;

Proto11404006* Proto11404006::New() const {
  return new Proto11404006;
}

void Proto11404006::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    illus_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11404006::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 illus_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &illus_id_)));
          set_has_illus_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11404006::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 illus_id = 1;
  if (has_illus_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->illus_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11404006::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 illus_id = 1;
  if (has_illus_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->illus_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11404006::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 illus_id = 1;
    if (has_illus_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->illus_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11404006::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11404006* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11404006*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11404006::MergeFrom(const Proto11404006& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_illus_id()) {
      set_illus_id(from.illus_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11404006::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11404006::CopyFrom(const Proto11404006& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11404006::IsInitialized() const {
  
  return true;
}

void Proto11404006::Swap(Proto11404006* other) {
  if (other != this) {
    std::swap(illus_id_, other->illus_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11404006::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11404006_descriptor_;
  metadata.reflection = Proto11404006_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51404001::kPropListFieldNumber;
const int Proto51404001::kIllusListFieldNumber;
const int Proto51404001::kIllusGroupListFieldNumber;
#endif  // !_MSC_VER

Proto51404001::Proto51404001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51404001::InitAsDefaultInstance() {
  prop_list_ = const_cast< ::ProtoFightPro*>(&::ProtoFightPro::default_instance());
}

Proto51404001::Proto51404001(const Proto51404001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51404001::SharedCtor() {
  _cached_size_ = 0;
  prop_list_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51404001::~Proto51404001() {
  SharedDtor();
}

void Proto51404001::SharedDtor() {
  if (this != default_instance_) {
    delete prop_list_;
  }
}

void Proto51404001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51404001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51404001_descriptor_;
}

const Proto51404001& Proto51404001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto51404001* Proto51404001::default_instance_ = NULL;

Proto51404001* Proto51404001::New() const {
  return new Proto51404001;
}

void Proto51404001::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_prop_list()) {
      if (prop_list_ != NULL) prop_list_->::ProtoFightPro::Clear();
    }
  }
  illus_list_.Clear();
  illus_group_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51404001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoFightPro prop_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prop_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_illus_list;
        break;
      }
      
      // repeated .Illustrations illus_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_illus_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_illus_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_illus_list;
        if (input->ExpectTag(24)) goto parse_illus_group_list;
        break;
      }
      
      // repeated int32 illus_group_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_illus_group_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_illus_group_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_illus_group_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_illus_group_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51404001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoFightPro prop_list = 1;
  if (has_prop_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->prop_list(), output);
  }
  
  // repeated .Illustrations illus_list = 2;
  for (int i = 0; i < this->illus_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->illus_list(i), output);
  }
  
  // repeated int32 illus_group_list = 3;
  for (int i = 0; i < this->illus_group_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->illus_group_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51404001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoFightPro prop_list = 1;
  if (has_prop_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->prop_list(), target);
  }
  
  // repeated .Illustrations illus_list = 2;
  for (int i = 0; i < this->illus_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->illus_list(i), target);
  }
  
  // repeated int32 illus_group_list = 3;
  for (int i = 0; i < this->illus_group_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->illus_group_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51404001::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoFightPro prop_list = 1;
    if (has_prop_list()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prop_list());
    }
    
  }
  // repeated .Illustrations illus_list = 2;
  total_size += 1 * this->illus_list_size();
  for (int i = 0; i < this->illus_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->illus_list(i));
  }
  
  // repeated int32 illus_group_list = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->illus_group_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->illus_group_list(i));
    }
    total_size += 1 * this->illus_group_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51404001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51404001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51404001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51404001::MergeFrom(const Proto51404001& from) {
  GOOGLE_CHECK_NE(&from, this);
  illus_list_.MergeFrom(from.illus_list_);
  illus_group_list_.MergeFrom(from.illus_group_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_prop_list()) {
      mutable_prop_list()->::ProtoFightPro::MergeFrom(from.prop_list());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51404001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51404001::CopyFrom(const Proto51404001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51404001::IsInitialized() const {
  
  return true;
}

void Proto51404001::Swap(Proto51404001* other) {
  if (other != this) {
    std::swap(prop_list_, other->prop_list_);
    illus_list_.Swap(&other->illus_list_);
    illus_group_list_.Swap(&other->illus_group_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51404001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51404001_descriptor_;
  metadata.reflection = Proto51404001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51404002::kIllusClassIdFieldNumber;
const int Proto51404002::kIllusGroupListFieldNumber;
const int Proto51404002::kIllusListFieldNumber;
#endif  // !_MSC_VER

Proto51404002::Proto51404002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51404002::InitAsDefaultInstance() {
}

Proto51404002::Proto51404002(const Proto51404002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51404002::SharedCtor() {
  _cached_size_ = 0;
  illus_class_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51404002::~Proto51404002() {
  SharedDtor();
}

void Proto51404002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51404002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51404002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51404002_descriptor_;
}

const Proto51404002& Proto51404002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto51404002* Proto51404002::default_instance_ = NULL;

Proto51404002* Proto51404002::New() const {
  return new Proto51404002;
}

void Proto51404002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    illus_class_id_ = 0;
  }
  illus_group_list_.Clear();
  illus_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51404002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 illus_class_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &illus_class_id_)));
          set_has_illus_class_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_illus_group_list;
        break;
      }
      
      // repeated .Illus_group illus_group_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_illus_group_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_illus_group_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_illus_group_list;
        if (input->ExpectTag(26)) goto parse_illus_list;
        break;
      }
      
      // repeated .Illustrations illus_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_illus_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_illus_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_illus_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51404002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 illus_class_id = 1;
  if (has_illus_class_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->illus_class_id(), output);
  }
  
  // repeated .Illus_group illus_group_list = 2;
  for (int i = 0; i < this->illus_group_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->illus_group_list(i), output);
  }
  
  // repeated .Illustrations illus_list = 3;
  for (int i = 0; i < this->illus_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->illus_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51404002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 illus_class_id = 1;
  if (has_illus_class_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->illus_class_id(), target);
  }
  
  // repeated .Illus_group illus_group_list = 2;
  for (int i = 0; i < this->illus_group_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->illus_group_list(i), target);
  }
  
  // repeated .Illustrations illus_list = 3;
  for (int i = 0; i < this->illus_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->illus_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51404002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 illus_class_id = 1;
    if (has_illus_class_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->illus_class_id());
    }
    
  }
  // repeated .Illus_group illus_group_list = 2;
  total_size += 1 * this->illus_group_list_size();
  for (int i = 0; i < this->illus_group_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->illus_group_list(i));
  }
  
  // repeated .Illustrations illus_list = 3;
  total_size += 1 * this->illus_list_size();
  for (int i = 0; i < this->illus_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->illus_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51404002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51404002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51404002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51404002::MergeFrom(const Proto51404002& from) {
  GOOGLE_CHECK_NE(&from, this);
  illus_group_list_.MergeFrom(from.illus_group_list_);
  illus_list_.MergeFrom(from.illus_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_illus_class_id()) {
      set_illus_class_id(from.illus_class_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51404002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51404002::CopyFrom(const Proto51404002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51404002::IsInitialized() const {
  
  return true;
}

void Proto51404002::Swap(Proto51404002* other) {
  if (other != this) {
    std::swap(illus_class_id_, other->illus_class_id_);
    illus_group_list_.Swap(&other->illus_group_list_);
    illus_list_.Swap(&other->illus_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51404002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51404002_descriptor_;
  metadata.reflection = Proto51404002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51404003::kIllusGroupIdFieldNumber;
const int Proto51404003::kIllusListFieldNumber;
#endif  // !_MSC_VER

Proto51404003::Proto51404003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51404003::InitAsDefaultInstance() {
}

Proto51404003::Proto51404003(const Proto51404003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51404003::SharedCtor() {
  _cached_size_ = 0;
  illus_group_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51404003::~Proto51404003() {
  SharedDtor();
}

void Proto51404003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51404003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51404003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51404003_descriptor_;
}

const Proto51404003& Proto51404003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto51404003* Proto51404003::default_instance_ = NULL;

Proto51404003* Proto51404003::New() const {
  return new Proto51404003;
}

void Proto51404003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    illus_group_id_ = 0;
  }
  illus_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51404003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 illus_group_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &illus_group_id_)));
          set_has_illus_group_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_illus_list;
        break;
      }
      
      // repeated .Illustrations illus_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_illus_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_illus_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_illus_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51404003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 illus_group_id = 1;
  if (has_illus_group_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->illus_group_id(), output);
  }
  
  // repeated .Illustrations illus_list = 2;
  for (int i = 0; i < this->illus_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->illus_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51404003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 illus_group_id = 1;
  if (has_illus_group_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->illus_group_id(), target);
  }
  
  // repeated .Illustrations illus_list = 2;
  for (int i = 0; i < this->illus_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->illus_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51404003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 illus_group_id = 1;
    if (has_illus_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->illus_group_id());
    }
    
  }
  // repeated .Illustrations illus_list = 2;
  total_size += 1 * this->illus_list_size();
  for (int i = 0; i < this->illus_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->illus_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51404003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51404003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51404003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51404003::MergeFrom(const Proto51404003& from) {
  GOOGLE_CHECK_NE(&from, this);
  illus_list_.MergeFrom(from.illus_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_illus_group_id()) {
      set_illus_group_id(from.illus_group_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51404003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51404003::CopyFrom(const Proto51404003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51404003::IsInitialized() const {
  
  return true;
}

void Proto51404003::Swap(Proto51404003* other) {
  if (other != this) {
    std::swap(illus_group_id_, other->illus_group_id_);
    illus_list_.Swap(&other->illus_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51404003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51404003_descriptor_;
  metadata.reflection = Proto51404003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51404004::kIllusIdFieldNumber;
const int Proto51404004::kIllusInfoFieldNumber;
#endif  // !_MSC_VER

Proto51404004::Proto51404004()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51404004::InitAsDefaultInstance() {
  illus_info_ = const_cast< ::Illustrations*>(&::Illustrations::default_instance());
}

Proto51404004::Proto51404004(const Proto51404004& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51404004::SharedCtor() {
  _cached_size_ = 0;
  illus_id_ = 0;
  illus_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51404004::~Proto51404004() {
  SharedDtor();
}

void Proto51404004::SharedDtor() {
  if (this != default_instance_) {
    delete illus_info_;
  }
}

void Proto51404004::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51404004::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51404004_descriptor_;
}

const Proto51404004& Proto51404004::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto51404004* Proto51404004::default_instance_ = NULL;

Proto51404004* Proto51404004::New() const {
  return new Proto51404004;
}

void Proto51404004::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    illus_id_ = 0;
    if (has_illus_info()) {
      if (illus_info_ != NULL) illus_info_->::Illustrations::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51404004::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 illus_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &illus_id_)));
          set_has_illus_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_illus_info;
        break;
      }
      
      // optional .Illustrations illus_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_illus_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_illus_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51404004::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 illus_id = 1;
  if (has_illus_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->illus_id(), output);
  }
  
  // optional .Illustrations illus_info = 2;
  if (has_illus_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->illus_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51404004::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 illus_id = 1;
  if (has_illus_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->illus_id(), target);
  }
  
  // optional .Illustrations illus_info = 2;
  if (has_illus_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->illus_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51404004::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 illus_id = 1;
    if (has_illus_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->illus_id());
    }
    
    // optional .Illustrations illus_info = 2;
    if (has_illus_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->illus_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51404004::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51404004* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51404004*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51404004::MergeFrom(const Proto51404004& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_illus_id()) {
      set_illus_id(from.illus_id());
    }
    if (from.has_illus_info()) {
      mutable_illus_info()->::Illustrations::MergeFrom(from.illus_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51404004::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51404004::CopyFrom(const Proto51404004& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51404004::IsInitialized() const {
  
  return true;
}

void Proto51404004::Swap(Proto51404004* other) {
  if (other != this) {
    std::swap(illus_id_, other->illus_id_);
    std::swap(illus_info_, other->illus_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51404004::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51404004_descriptor_;
  metadata.reflection = Proto51404004_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51404005::kIllusIdFieldNumber;
const int Proto51404005::kIllusInfoFieldNumber;
#endif  // !_MSC_VER

Proto51404005::Proto51404005()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51404005::InitAsDefaultInstance() {
  illus_info_ = const_cast< ::Illustrations*>(&::Illustrations::default_instance());
}

Proto51404005::Proto51404005(const Proto51404005& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51404005::SharedCtor() {
  _cached_size_ = 0;
  illus_id_ = 0;
  illus_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51404005::~Proto51404005() {
  SharedDtor();
}

void Proto51404005::SharedDtor() {
  if (this != default_instance_) {
    delete illus_info_;
  }
}

void Proto51404005::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51404005::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51404005_descriptor_;
}

const Proto51404005& Proto51404005::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto51404005* Proto51404005::default_instance_ = NULL;

Proto51404005* Proto51404005::New() const {
  return new Proto51404005;
}

void Proto51404005::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    illus_id_ = 0;
    if (has_illus_info()) {
      if (illus_info_ != NULL) illus_info_->::Illustrations::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51404005::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 illus_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &illus_id_)));
          set_has_illus_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_illus_info;
        break;
      }
      
      // optional .Illustrations illus_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_illus_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_illus_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51404005::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 illus_id = 1;
  if (has_illus_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->illus_id(), output);
  }
  
  // optional .Illustrations illus_info = 2;
  if (has_illus_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->illus_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51404005::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 illus_id = 1;
  if (has_illus_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->illus_id(), target);
  }
  
  // optional .Illustrations illus_info = 2;
  if (has_illus_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->illus_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51404005::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 illus_id = 1;
    if (has_illus_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->illus_id());
    }
    
    // optional .Illustrations illus_info = 2;
    if (has_illus_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->illus_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51404005::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51404005* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51404005*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51404005::MergeFrom(const Proto51404005& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_illus_id()) {
      set_illus_id(from.illus_id());
    }
    if (from.has_illus_info()) {
      mutable_illus_info()->::Illustrations::MergeFrom(from.illus_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51404005::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51404005::CopyFrom(const Proto51404005& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51404005::IsInitialized() const {
  
  return true;
}

void Proto51404005::Swap(Proto51404005* other) {
  if (other != this) {
    std::swap(illus_id_, other->illus_id_);
    std::swap(illus_info_, other->illus_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51404005::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51404005_descriptor_;
  metadata.reflection = Proto51404005_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51404006::kIllusIdFieldNumber;
#endif  // !_MSC_VER

Proto51404006::Proto51404006()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51404006::InitAsDefaultInstance() {
}

Proto51404006::Proto51404006(const Proto51404006& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51404006::SharedCtor() {
  _cached_size_ = 0;
  illus_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51404006::~Proto51404006() {
  SharedDtor();
}

void Proto51404006::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51404006::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51404006::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51404006_descriptor_;
}

const Proto51404006& Proto51404006::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto51404006* Proto51404006::default_instance_ = NULL;

Proto51404006* Proto51404006::New() const {
  return new Proto51404006;
}

void Proto51404006::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    illus_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51404006::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 illus_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &illus_id_)));
          set_has_illus_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51404006::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 illus_id = 1;
  if (has_illus_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->illus_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51404006::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 illus_id = 1;
  if (has_illus_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->illus_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51404006::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 illus_id = 1;
    if (has_illus_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->illus_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51404006::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51404006* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51404006*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51404006::MergeFrom(const Proto51404006& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_illus_id()) {
      set_illus_id(from.illus_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51404006::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51404006::CopyFrom(const Proto51404006& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51404006::IsInitialized() const {
  
  return true;
}

void Proto51404006::Swap(Proto51404006* other) {
  if (other != this) {
    std::swap(illus_id_, other->illus_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51404006::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51404006_descriptor_;
  metadata.reflection = Proto51404006_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81404007::kIllusClassIdFieldNumber;
const int Proto81404007::kIllusGroupListFieldNumber;
const int Proto81404007::kIllusListFieldNumber;
const int Proto81404007::kPropListFieldNumber;
#endif  // !_MSC_VER

Proto81404007::Proto81404007()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81404007::InitAsDefaultInstance() {
  prop_list_ = const_cast< ::ProtoFightPro*>(&::ProtoFightPro::default_instance());
}

Proto81404007::Proto81404007(const Proto81404007& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81404007::SharedCtor() {
  _cached_size_ = 0;
  illus_class_id_ = 0;
  prop_list_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81404007::~Proto81404007() {
  SharedDtor();
}

void Proto81404007::SharedDtor() {
  if (this != default_instance_) {
    delete prop_list_;
  }
}

void Proto81404007::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81404007::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81404007_descriptor_;
}

const Proto81404007& Proto81404007::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto81404007* Proto81404007::default_instance_ = NULL;

Proto81404007* Proto81404007::New() const {
  return new Proto81404007;
}

void Proto81404007::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    illus_class_id_ = 0;
    if (has_prop_list()) {
      if (prop_list_ != NULL) prop_list_->::ProtoFightPro::Clear();
    }
  }
  illus_group_list_.Clear();
  illus_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81404007::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 illus_class_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &illus_class_id_)));
          set_has_illus_class_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_illus_group_list;
        break;
      }
      
      // repeated .Illus_group illus_group_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_illus_group_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_illus_group_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_illus_group_list;
        if (input->ExpectTag(26)) goto parse_illus_list;
        break;
      }
      
      // repeated .Illustrations illus_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_illus_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_illus_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_illus_list;
        if (input->ExpectTag(34)) goto parse_prop_list;
        break;
      }
      
      // optional .ProtoFightPro prop_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prop_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prop_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81404007::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 illus_class_id = 1;
  if (has_illus_class_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->illus_class_id(), output);
  }
  
  // repeated .Illus_group illus_group_list = 2;
  for (int i = 0; i < this->illus_group_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->illus_group_list(i), output);
  }
  
  // repeated .Illustrations illus_list = 3;
  for (int i = 0; i < this->illus_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->illus_list(i), output);
  }
  
  // optional .ProtoFightPro prop_list = 4;
  if (has_prop_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->prop_list(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81404007::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 illus_class_id = 1;
  if (has_illus_class_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->illus_class_id(), target);
  }
  
  // repeated .Illus_group illus_group_list = 2;
  for (int i = 0; i < this->illus_group_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->illus_group_list(i), target);
  }
  
  // repeated .Illustrations illus_list = 3;
  for (int i = 0; i < this->illus_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->illus_list(i), target);
  }
  
  // optional .ProtoFightPro prop_list = 4;
  if (has_prop_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->prop_list(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81404007::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 illus_class_id = 1;
    if (has_illus_class_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->illus_class_id());
    }
    
    // optional .ProtoFightPro prop_list = 4;
    if (has_prop_list()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prop_list());
    }
    
  }
  // repeated .Illus_group illus_group_list = 2;
  total_size += 1 * this->illus_group_list_size();
  for (int i = 0; i < this->illus_group_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->illus_group_list(i));
  }
  
  // repeated .Illustrations illus_list = 3;
  total_size += 1 * this->illus_list_size();
  for (int i = 0; i < this->illus_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->illus_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81404007::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81404007* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81404007*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81404007::MergeFrom(const Proto81404007& from) {
  GOOGLE_CHECK_NE(&from, this);
  illus_group_list_.MergeFrom(from.illus_group_list_);
  illus_list_.MergeFrom(from.illus_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_illus_class_id()) {
      set_illus_class_id(from.illus_class_id());
    }
    if (from.has_prop_list()) {
      mutable_prop_list()->::ProtoFightPro::MergeFrom(from.prop_list());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81404007::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81404007::CopyFrom(const Proto81404007& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81404007::IsInitialized() const {
  
  return true;
}

void Proto81404007::Swap(Proto81404007* other) {
  if (other != this) {
    std::swap(illus_class_id_, other->illus_class_id_);
    illus_group_list_.Swap(&other->illus_group_list_);
    illus_list_.Swap(&other->illus_list_);
    std::swap(prop_list_, other->prop_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81404007::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81404007_descriptor_;
  metadata.reflection = Proto81404007_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400415::kTypeFieldNumber;
const int Proto11400415::kAmountFieldNumber;
const int Proto11400415::kMountTypeFieldNumber;
#endif  // !_MSC_VER

Proto11400415::Proto11400415()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400415::InitAsDefaultInstance() {
}

Proto11400415::Proto11400415(const Proto11400415& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400415::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  amount_ = 0;
  mount_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400415::~Proto11400415() {
  SharedDtor();
}

void Proto11400415::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400415::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400415::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400415_descriptor_;
}

const Proto11400415& Proto11400415::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto11400415* Proto11400415::default_instance_ = NULL;

Proto11400415* Proto11400415::New() const {
  return new Proto11400415;
}

void Proto11400415::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    amount_ = 0;
    mount_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400415::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_mount_type;
        break;
      }
      
      // optional int32 mount_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mount_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mount_type_)));
          set_has_mount_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400415::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 amount = 2;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->amount(), output);
  }
  
  // optional int32 mount_type = 3;
  if (has_mount_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mount_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400415::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 amount = 2;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->amount(), target);
  }
  
  // optional int32 mount_type = 3;
  if (has_mount_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mount_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400415::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 amount = 2;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
    // optional int32 mount_type = 3;
    if (has_mount_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mount_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400415::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400415* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400415*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400415::MergeFrom(const Proto11400415& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_mount_type()) {
      set_mount_type(from.mount_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400415::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400415::CopyFrom(const Proto11400415& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400415::IsInitialized() const {
  
  return true;
}

void Proto11400415::Swap(Proto11400415* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(amount_, other->amount_);
    std::swap(mount_type_, other->mount_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400415::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400415_descriptor_;
  metadata.reflection = Proto11400415_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400415::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto51400415::Proto51400415()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400415::InitAsDefaultInstance() {
}

Proto51400415::Proto51400415(const Proto51400415& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400415::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400415::~Proto51400415() {
  SharedDtor();
}

void Proto51400415::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400415::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400415::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400415_descriptor_;
}

const Proto51400415& Proto51400415::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto51400415* Proto51400415::default_instance_ = NULL;

Proto51400415* Proto51400415::New() const {
  return new Proto51400415;
}

void Proto51400415::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400415::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400415::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400415::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400415::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400415::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400415* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400415*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400415::MergeFrom(const Proto51400415& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400415::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400415::CopyFrom(const Proto51400415& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400415::IsInitialized() const {
  
  return true;
}

void Proto51400415::Swap(Proto51400415* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400415::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400415_descriptor_;
  metadata.reflection = Proto51400415_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401471::kCheckTotalIndexFieldNumber;
#endif  // !_MSC_VER

Proto11401471::Proto11401471()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401471::InitAsDefaultInstance() {
}

Proto11401471::Proto11401471(const Proto11401471& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401471::SharedCtor() {
  _cached_size_ = 0;
  check_total_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401471::~Proto11401471() {
  SharedDtor();
}

void Proto11401471::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401471::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401471::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401471_descriptor_;
}

const Proto11401471& Proto11401471::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto11401471* Proto11401471::default_instance_ = NULL;

Proto11401471* Proto11401471::New() const {
  return new Proto11401471;
}

void Proto11401471::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    check_total_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401471::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 check_total_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &check_total_index_)));
          set_has_check_total_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401471::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 check_total_index = 1;
  if (has_check_total_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->check_total_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401471::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 check_total_index = 1;
  if (has_check_total_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->check_total_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401471::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 check_total_index = 1;
    if (has_check_total_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->check_total_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401471::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401471* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401471*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401471::MergeFrom(const Proto11401471& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_check_total_index()) {
      set_check_total_index(from.check_total_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401471::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401471::CopyFrom(const Proto11401471& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401471::IsInitialized() const {
  
  return true;
}

void Proto11401471::Swap(Proto11401471* other) {
  if (other != this) {
    std::swap(check_total_index_, other->check_total_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401471::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401471_descriptor_;
  metadata.reflection = Proto11401471_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401415::kStatusFieldNumber;
const int Proto51401415::kCheckInPointFieldNumber;
#endif  // !_MSC_VER

Proto51401415::Proto51401415()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401415::InitAsDefaultInstance() {
}

Proto51401415::Proto51401415(const Proto51401415& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401415::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  check_in_point_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401415::~Proto51401415() {
  SharedDtor();
}

void Proto51401415::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401415::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401415::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401415_descriptor_;
}

const Proto51401415& Proto51401415::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto51401415* Proto51401415::default_instance_ = NULL;

Proto51401415* Proto51401415::New() const {
  return new Proto51401415;
}

void Proto51401415::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
    check_in_point_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401415::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_check_in_point;
        break;
      }
      
      // optional int32 check_in_point = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_check_in_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &check_in_point_)));
          set_has_check_in_point();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401415::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  // optional int32 check_in_point = 2;
  if (has_check_in_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->check_in_point(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401415::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  // optional int32 check_in_point = 2;
  if (has_check_in_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->check_in_point(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401415::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int32 check_in_point = 2;
    if (has_check_in_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->check_in_point());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401415::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401415* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401415*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401415::MergeFrom(const Proto51401415& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_check_in_point()) {
      set_check_in_point(from.check_in_point());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401415::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401415::CopyFrom(const Proto51401415& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401415::IsInitialized() const {
  
  return true;
}

void Proto51401415::Swap(Proto51401415* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(check_in_point_, other->check_in_point_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401415::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401415_descriptor_;
  metadata.reflection = Proto51401415_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401472::kAwardIndexFieldNumber;
#endif  // !_MSC_VER

Proto11401472::Proto11401472()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401472::InitAsDefaultInstance() {
}

Proto11401472::Proto11401472(const Proto11401472& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401472::SharedCtor() {
  _cached_size_ = 0;
  award_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401472::~Proto11401472() {
  SharedDtor();
}

void Proto11401472::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401472::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401472::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401472_descriptor_;
}

const Proto11401472& Proto11401472::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto11401472* Proto11401472::default_instance_ = NULL;

Proto11401472* Proto11401472::New() const {
  return new Proto11401472;
}

void Proto11401472::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    award_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401472::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 award_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &award_index_)));
          set_has_award_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401472::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 award_index = 1;
  if (has_award_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->award_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401472::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 award_index = 1;
  if (has_award_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->award_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401472::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 award_index = 1;
    if (has_award_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->award_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401472::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401472* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401472*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401472::MergeFrom(const Proto11401472& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_award_index()) {
      set_award_index(from.award_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401472::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401472::CopyFrom(const Proto11401472& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401472::IsInitialized() const {
  
  return true;
}

void Proto11401472::Swap(Proto11401472* other) {
  if (other != this) {
    std::swap(award_index_, other->award_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401472::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401472_descriptor_;
  metadata.reflection = Proto11401472_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401416::kStatusFieldNumber;
const int Proto51401416::kCheckInPointFieldNumber;
const int Proto51401416::kChargeMoneyFieldNumber;
#endif  // !_MSC_VER

Proto51401416::Proto51401416()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401416::InitAsDefaultInstance() {
}

Proto51401416::Proto51401416(const Proto51401416& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401416::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  check_in_point_ = 0;
  charge_money_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401416::~Proto51401416() {
  SharedDtor();
}

void Proto51401416::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401416::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401416::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401416_descriptor_;
}

const Proto51401416& Proto51401416::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto51401416* Proto51401416::default_instance_ = NULL;

Proto51401416* Proto51401416::New() const {
  return new Proto51401416;
}

void Proto51401416::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
    check_in_point_ = 0;
    charge_money_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401416::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_check_in_point;
        break;
      }
      
      // optional int32 check_in_point = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_check_in_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &check_in_point_)));
          set_has_check_in_point();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_charge_money;
        break;
      }
      
      // optional int32 charge_money = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_charge_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &charge_money_)));
          set_has_charge_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401416::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  // optional int32 check_in_point = 2;
  if (has_check_in_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->check_in_point(), output);
  }
  
  // optional int32 charge_money = 3;
  if (has_charge_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->charge_money(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401416::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  // optional int32 check_in_point = 2;
  if (has_check_in_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->check_in_point(), target);
  }
  
  // optional int32 charge_money = 3;
  if (has_charge_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->charge_money(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401416::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int32 check_in_point = 2;
    if (has_check_in_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->check_in_point());
    }
    
    // optional int32 charge_money = 3;
    if (has_charge_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->charge_money());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401416::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401416* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401416*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401416::MergeFrom(const Proto51401416& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_check_in_point()) {
      set_check_in_point(from.check_in_point());
    }
    if (from.has_charge_money()) {
      set_charge_money(from.charge_money());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401416::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401416::CopyFrom(const Proto51401416& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401416::IsInitialized() const {
  
  return true;
}

void Proto51401416::Swap(Proto51401416* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(check_in_point_, other->check_in_point_);
    std::swap(charge_money_, other->charge_money_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401416::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401416_descriptor_;
  metadata.reflection = Proto51401416_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100649::kBossIndexFieldNumber;
const int Proto50100649::kBossExpFieldNumber;
const int Proto50100649::kSuperSummonRoleFieldNumber;
const int Proto50100649::kNormalSummonTypeFieldNumber;
const int Proto50100649::kSuperSummonTypeFieldNumber;
const int Proto50100649::kNormalSummonTickFieldNumber;
const int Proto50100649::kSuperSummonTickFieldNumber;
#endif  // !_MSC_VER

Proto50100649::Proto50100649()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100649::InitAsDefaultInstance() {
}

Proto50100649::Proto50100649(const Proto50100649& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100649::SharedCtor() {
  _cached_size_ = 0;
  boss_index_ = 0;
  boss_exp_ = 0;
  super_summon_role_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  normal_summon_type_ = 0;
  super_summon_type_ = 0;
  normal_summon_tick_ = GOOGLE_LONGLONG(0);
  super_summon_tick_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100649::~Proto50100649() {
  SharedDtor();
}

void Proto50100649::SharedDtor() {
  if (super_summon_role_ != &::google::protobuf::internal::kEmptyString) {
    delete super_summon_role_;
  }
  if (this != default_instance_) {
  }
}

void Proto50100649::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100649::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100649_descriptor_;
}

const Proto50100649& Proto50100649::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto50100649* Proto50100649::default_instance_ = NULL;

Proto50100649* Proto50100649::New() const {
  return new Proto50100649;
}

void Proto50100649::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    boss_index_ = 0;
    boss_exp_ = 0;
    if (has_super_summon_role()) {
      if (super_summon_role_ != &::google::protobuf::internal::kEmptyString) {
        super_summon_role_->clear();
      }
    }
    normal_summon_type_ = 0;
    super_summon_type_ = 0;
    normal_summon_tick_ = GOOGLE_LONGLONG(0);
    super_summon_tick_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100649::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 boss_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boss_index_)));
          set_has_boss_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_boss_exp;
        break;
      }
      
      // optional int32 boss_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_boss_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boss_exp_)));
          set_has_boss_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_super_summon_role;
        break;
      }
      
      // optional string super_summon_role = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_super_summon_role:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_super_summon_role()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->super_summon_role().data(), this->super_summon_role().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_normal_summon_type;
        break;
      }
      
      // optional int32 normal_summon_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_normal_summon_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &normal_summon_type_)));
          set_has_normal_summon_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_super_summon_type;
        break;
      }
      
      // optional int32 super_summon_type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_super_summon_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &super_summon_type_)));
          set_has_super_summon_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_normal_summon_tick;
        break;
      }
      
      // optional int64 normal_summon_tick = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_normal_summon_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &normal_summon_tick_)));
          set_has_normal_summon_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_super_summon_tick;
        break;
      }
      
      // optional int64 super_summon_tick = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_super_summon_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &super_summon_tick_)));
          set_has_super_summon_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100649::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 boss_index = 1;
  if (has_boss_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->boss_index(), output);
  }
  
  // optional int32 boss_exp = 2;
  if (has_boss_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->boss_exp(), output);
  }
  
  // optional string super_summon_role = 3;
  if (has_super_summon_role()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->super_summon_role().data(), this->super_summon_role().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->super_summon_role(), output);
  }
  
  // optional int32 normal_summon_type = 4;
  if (has_normal_summon_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->normal_summon_type(), output);
  }
  
  // optional int32 super_summon_type = 5;
  if (has_super_summon_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->super_summon_type(), output);
  }
  
  // optional int64 normal_summon_tick = 6;
  if (has_normal_summon_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->normal_summon_tick(), output);
  }
  
  // optional int64 super_summon_tick = 7;
  if (has_super_summon_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->super_summon_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100649::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 boss_index = 1;
  if (has_boss_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->boss_index(), target);
  }
  
  // optional int32 boss_exp = 2;
  if (has_boss_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->boss_exp(), target);
  }
  
  // optional string super_summon_role = 3;
  if (has_super_summon_role()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->super_summon_role().data(), this->super_summon_role().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->super_summon_role(), target);
  }
  
  // optional int32 normal_summon_type = 4;
  if (has_normal_summon_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->normal_summon_type(), target);
  }
  
  // optional int32 super_summon_type = 5;
  if (has_super_summon_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->super_summon_type(), target);
  }
  
  // optional int64 normal_summon_tick = 6;
  if (has_normal_summon_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->normal_summon_tick(), target);
  }
  
  // optional int64 super_summon_tick = 7;
  if (has_super_summon_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->super_summon_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100649::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 boss_index = 1;
    if (has_boss_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boss_index());
    }
    
    // optional int32 boss_exp = 2;
    if (has_boss_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boss_exp());
    }
    
    // optional string super_summon_role = 3;
    if (has_super_summon_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->super_summon_role());
    }
    
    // optional int32 normal_summon_type = 4;
    if (has_normal_summon_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->normal_summon_type());
    }
    
    // optional int32 super_summon_type = 5;
    if (has_super_summon_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->super_summon_type());
    }
    
    // optional int64 normal_summon_tick = 6;
    if (has_normal_summon_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->normal_summon_tick());
    }
    
    // optional int64 super_summon_tick = 7;
    if (has_super_summon_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->super_summon_tick());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100649::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100649* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100649*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100649::MergeFrom(const Proto50100649& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_boss_index()) {
      set_boss_index(from.boss_index());
    }
    if (from.has_boss_exp()) {
      set_boss_exp(from.boss_exp());
    }
    if (from.has_super_summon_role()) {
      set_super_summon_role(from.super_summon_role());
    }
    if (from.has_normal_summon_type()) {
      set_normal_summon_type(from.normal_summon_type());
    }
    if (from.has_super_summon_type()) {
      set_super_summon_type(from.super_summon_type());
    }
    if (from.has_normal_summon_tick()) {
      set_normal_summon_tick(from.normal_summon_tick());
    }
    if (from.has_super_summon_tick()) {
      set_super_summon_tick(from.super_summon_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100649::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100649::CopyFrom(const Proto50100649& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100649::IsInitialized() const {
  
  return true;
}

void Proto50100649::Swap(Proto50100649* other) {
  if (other != this) {
    std::swap(boss_index_, other->boss_index_);
    std::swap(boss_exp_, other->boss_exp_);
    std::swap(super_summon_role_, other->super_summon_role_);
    std::swap(normal_summon_type_, other->normal_summon_type_);
    std::swap(super_summon_type_, other->super_summon_type_);
    std::swap(normal_summon_tick_, other->normal_summon_tick_);
    std::swap(super_summon_tick_, other->super_summon_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100649::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100649_descriptor_;
  metadata.reflection = Proto50100649_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100650::kItemIdFieldNumber;
const int Proto10100650::kFeedNumFieldNumber;
#endif  // !_MSC_VER

Proto10100650::Proto10100650()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100650::InitAsDefaultInstance() {
}

Proto10100650::Proto10100650(const Proto10100650& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100650::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  feed_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100650::~Proto10100650() {
  SharedDtor();
}

void Proto10100650::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100650::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100650::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100650_descriptor_;
}

const Proto10100650& Proto10100650::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto10100650* Proto10100650::default_instance_ = NULL;

Proto10100650* Proto10100650::New() const {
  return new Proto10100650;
}

void Proto10100650::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    feed_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100650::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_feed_num;
        break;
      }
      
      // optional int32 feed_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_feed_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &feed_num_)));
          set_has_feed_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100650::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 feed_num = 2;
  if (has_feed_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->feed_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100650::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 feed_num = 2;
  if (has_feed_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->feed_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100650::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 feed_num = 2;
    if (has_feed_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->feed_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100650::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100650* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100650*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100650::MergeFrom(const Proto10100650& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_feed_num()) {
      set_feed_num(from.feed_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100650::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100650::CopyFrom(const Proto10100650& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100650::IsInitialized() const {
  
  return true;
}

void Proto10100650::Swap(Proto10100650* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(feed_num_, other->feed_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100650::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100650_descriptor_;
  metadata.reflection = Proto10100650_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400624::kPkgIndexFieldNumber;
const int Proto11400624::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto11400624::Proto11400624()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400624::InitAsDefaultInstance() {
}

Proto11400624::Proto11400624(const Proto11400624& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400624::SharedCtor() {
  _cached_size_ = 0;
  pkg_index_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400624::~Proto11400624() {
  SharedDtor();
}

void Proto11400624::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400624::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400624::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400624_descriptor_;
}

const Proto11400624& Proto11400624::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto11400624* Proto11400624::default_instance_ = NULL;

Proto11400624* Proto11400624::New() const {
  return new Proto11400624;
}

void Proto11400624::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pkg_index_ = 0;
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400624::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pkg_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400624::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pkg_index = 1;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pkg_index(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400624::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pkg_index = 1;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pkg_index(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400624::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pkg_index = 1;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400624::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400624* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400624*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400624::MergeFrom(const Proto11400624& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400624::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400624::CopyFrom(const Proto11400624& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400624::IsInitialized() const {
  
  return true;
}

void Proto11400624::Swap(Proto11400624* other) {
  if (other != this) {
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400624::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400624_descriptor_;
  metadata.reflection = Proto11400624_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400624::kPkgIndexFieldNumber;
#endif  // !_MSC_VER

Proto51400624::Proto51400624()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400624::InitAsDefaultInstance() {
}

Proto51400624::Proto51400624(const Proto51400624& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400624::SharedCtor() {
  _cached_size_ = 0;
  pkg_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400624::~Proto51400624() {
  SharedDtor();
}

void Proto51400624::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400624::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400624::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400624_descriptor_;
}

const Proto51400624& Proto51400624::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto51400624* Proto51400624::default_instance_ = NULL;

Proto51400624* Proto51400624::New() const {
  return new Proto51400624;
}

void Proto51400624::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pkg_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400624::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pkg_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400624::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pkg_index = 1;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pkg_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400624::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pkg_index = 1;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pkg_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400624::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pkg_index = 1;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400624::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400624* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400624*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400624::MergeFrom(const Proto51400624& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400624::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400624::CopyFrom(const Proto51400624& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400624::IsInitialized() const {
  
  return true;
}

void Proto51400624::Swap(Proto51400624* other) {
  if (other != this) {
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400624::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400624_descriptor_;
  metadata.reflection = Proto51400624_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100651::kSummonTypeFieldNumber;
const int Proto10100651::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto10100651::Proto10100651()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100651::InitAsDefaultInstance() {
}

Proto10100651::Proto10100651(const Proto10100651& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100651::SharedCtor() {
  _cached_size_ = 0;
  summon_type_ = 0;
  role_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100651::~Proto10100651() {
  SharedDtor();
}

void Proto10100651::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100651::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100651::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100651_descriptor_;
}

const Proto10100651& Proto10100651::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto10100651* Proto10100651::default_instance_ = NULL;

Proto10100651* Proto10100651::New() const {
  return new Proto10100651;
}

void Proto10100651::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    summon_type_ = 0;
    role_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100651::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 summon_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &summon_type_)));
          set_has_summon_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_id;
        break;
      }
      
      // optional int32 role_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100651::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 summon_type = 1;
  if (has_summon_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->summon_type(), output);
  }
  
  // optional int32 role_id = 2;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100651::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 summon_type = 1;
  if (has_summon_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->summon_type(), target);
  }
  
  // optional int32 role_id = 2;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100651::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 summon_type = 1;
    if (has_summon_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->summon_type());
    }
    
    // optional int32 role_id = 2;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100651::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100651* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100651*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100651::MergeFrom(const Proto10100651& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_summon_type()) {
      set_summon_type(from.summon_type());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100651::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100651::CopyFrom(const Proto10100651& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100651::IsInitialized() const {
  
  return true;
}

void Proto10100651::Swap(Proto10100651* other) {
  if (other != this) {
    std::swap(summon_type_, other->summon_type_);
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100651::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100651_descriptor_;
  metadata.reflection = Proto10100651_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11405001::kCycleIdFieldNumber;
const int Proto11405001::kEnterTypeFieldNumber;
const int Proto11405001::kIsResetFieldNumber;
#endif  // !_MSC_VER

Proto11405001::Proto11405001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11405001::InitAsDefaultInstance() {
}

Proto11405001::Proto11405001(const Proto11405001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11405001::SharedCtor() {
  _cached_size_ = 0;
  cycle_id_ = 0;
  enter_type_ = 0;
  is_reset_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11405001::~Proto11405001() {
  SharedDtor();
}

void Proto11405001::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11405001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11405001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11405001_descriptor_;
}

const Proto11405001& Proto11405001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto11405001* Proto11405001::default_instance_ = NULL;

Proto11405001* Proto11405001::New() const {
  return new Proto11405001;
}

void Proto11405001::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cycle_id_ = 0;
    enter_type_ = 0;
    is_reset_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11405001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cycle_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cycle_id_)));
          set_has_cycle_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_enter_type;
        break;
      }
      
      // optional int32 enter_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_enter_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enter_type_)));
          set_has_enter_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_reset;
        break;
      }
      
      // optional int32 is_reset = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_reset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_reset_)));
          set_has_is_reset();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11405001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cycle_id = 1;
  if (has_cycle_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cycle_id(), output);
  }
  
  // optional int32 enter_type = 2;
  if (has_enter_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->enter_type(), output);
  }
  
  // optional int32 is_reset = 3;
  if (has_is_reset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_reset(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11405001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cycle_id = 1;
  if (has_cycle_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cycle_id(), target);
  }
  
  // optional int32 enter_type = 2;
  if (has_enter_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->enter_type(), target);
  }
  
  // optional int32 is_reset = 3;
  if (has_is_reset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_reset(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11405001::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cycle_id = 1;
    if (has_cycle_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cycle_id());
    }
    
    // optional int32 enter_type = 2;
    if (has_enter_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->enter_type());
    }
    
    // optional int32 is_reset = 3;
    if (has_is_reset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_reset());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11405001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11405001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11405001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11405001::MergeFrom(const Proto11405001& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cycle_id()) {
      set_cycle_id(from.cycle_id());
    }
    if (from.has_enter_type()) {
      set_enter_type(from.enter_type());
    }
    if (from.has_is_reset()) {
      set_is_reset(from.is_reset());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11405001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11405001::CopyFrom(const Proto11405001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11405001::IsInitialized() const {
  
  return true;
}

void Proto11405001::Swap(Proto11405001* other) {
  if (other != this) {
    std::swap(cycle_id_, other->cycle_id_);
    std::swap(enter_type_, other->enter_type_);
    std::swap(is_reset_, other->is_reset_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11405001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11405001_descriptor_;
  metadata.reflection = Proto11405001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51405001::kChestSumFieldNumber;
const int Proto51405001::kActivityIdFieldNumber;
const int Proto51405001::kEnterTypeFieldNumber;
const int Proto51405001::kCycleIdFieldNumber;
#endif  // !_MSC_VER

Proto51405001::Proto51405001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51405001::InitAsDefaultInstance() {
}

Proto51405001::Proto51405001(const Proto51405001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51405001::SharedCtor() {
  _cached_size_ = 0;
  chest_sum_ = 0;
  activity_id_ = 0;
  enter_type_ = 0;
  cycle_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51405001::~Proto51405001() {
  SharedDtor();
}

void Proto51405001::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51405001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51405001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51405001_descriptor_;
}

const Proto51405001& Proto51405001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto51405001* Proto51405001::default_instance_ = NULL;

Proto51405001* Proto51405001::New() const {
  return new Proto51405001;
}

void Proto51405001::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    chest_sum_ = 0;
    activity_id_ = 0;
    enter_type_ = 0;
    cycle_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51405001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 chest_sum = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chest_sum_)));
          set_has_chest_sum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_activity_id;
        break;
      }
      
      // optional int32 activity_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_enter_type;
        break;
      }
      
      // optional int32 enter_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_enter_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enter_type_)));
          set_has_enter_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_cycle_id;
        break;
      }
      
      // optional int32 cycle_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cycle_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cycle_id_)));
          set_has_cycle_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51405001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 chest_sum = 1;
  if (has_chest_sum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chest_sum(), output);
  }
  
  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activity_id(), output);
  }
  
  // optional int32 enter_type = 3;
  if (has_enter_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->enter_type(), output);
  }
  
  // optional int32 cycle_id = 4;
  if (has_cycle_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cycle_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51405001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 chest_sum = 1;
  if (has_chest_sum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chest_sum(), target);
  }
  
  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activity_id(), target);
  }
  
  // optional int32 enter_type = 3;
  if (has_enter_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->enter_type(), target);
  }
  
  // optional int32 cycle_id = 4;
  if (has_cycle_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cycle_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51405001::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 chest_sum = 1;
    if (has_chest_sum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chest_sum());
    }
    
    // optional int32 activity_id = 2;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 enter_type = 3;
    if (has_enter_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->enter_type());
    }
    
    // optional int32 cycle_id = 4;
    if (has_cycle_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cycle_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51405001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51405001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51405001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51405001::MergeFrom(const Proto51405001& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chest_sum()) {
      set_chest_sum(from.chest_sum());
    }
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_enter_type()) {
      set_enter_type(from.enter_type());
    }
    if (from.has_cycle_id()) {
      set_cycle_id(from.cycle_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51405001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51405001::CopyFrom(const Proto51405001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51405001::IsInitialized() const {
  
  return true;
}

void Proto51405001::Swap(Proto51405001* other) {
  if (other != this) {
    std::swap(chest_sum_, other->chest_sum_);
    std::swap(activity_id_, other->activity_id_);
    std::swap(enter_type_, other->enter_type_);
    std::swap(cycle_id_, other->cycle_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51405001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51405001_descriptor_;
  metadata.reflection = Proto51405001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400660::kScreenRecommendFieldNumber;
const int Proto11400660::kItemListFieldNumber;
#endif  // !_MSC_VER

Proto11400660::Proto11400660()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400660::InitAsDefaultInstance() {
}

Proto11400660::Proto11400660(const Proto11400660& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400660::SharedCtor() {
  _cached_size_ = 0;
  screen_recommend_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400660::~Proto11400660() {
  SharedDtor();
}

void Proto11400660::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400660::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400660::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400660_descriptor_;
}

const Proto11400660& Proto11400660::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto11400660* Proto11400660::default_instance_ = NULL;

Proto11400660* Proto11400660::New() const {
  return new Proto11400660;
}

void Proto11400660::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    screen_recommend_ = 0;
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400660::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 screen_recommend = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &screen_recommend_)));
          set_has_screen_recommend();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_list;
        break;
      }
      
      // repeated int32 item_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_item_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400660::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 screen_recommend = 1;
  if (has_screen_recommend()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->screen_recommend(), output);
  }
  
  // repeated int32 item_list = 2;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->item_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400660::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 screen_recommend = 1;
  if (has_screen_recommend()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->screen_recommend(), target);
  }
  
  // repeated int32 item_list = 2;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->item_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400660::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 screen_recommend = 1;
    if (has_screen_recommend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->screen_recommend());
    }
    
  }
  // repeated int32 item_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item_list(i));
    }
    total_size += 1 * this->item_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400660::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400660* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400660*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400660::MergeFrom(const Proto11400660& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_screen_recommend()) {
      set_screen_recommend(from.screen_recommend());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400660::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400660::CopyFrom(const Proto11400660& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400660::IsInitialized() const {
  
  return true;
}

void Proto11400660::Swap(Proto11400660* other) {
  if (other != this) {
    std::swap(screen_recommend_, other->screen_recommend_);
    item_list_.Swap(&other->item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400660::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400660_descriptor_;
  metadata.reflection = Proto11400660_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400660::kLevelNumFieldNumber;
const int Proto51400660::kExpNumFieldNumber;
const int Proto51400660::kStatusFieldNumber;
const int Proto51400660::kExpLimitFieldNumber;
const int Proto51400660::kExpSumFieldNumber;
#endif  // !_MSC_VER

Proto51400660::Proto51400660()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400660::InitAsDefaultInstance() {
}

Proto51400660::Proto51400660(const Proto51400660& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400660::SharedCtor() {
  _cached_size_ = 0;
  level_num_ = 0;
  exp_num_ = 0;
  status_ = 0;
  exp_limit_ = 0;
  exp_sum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400660::~Proto51400660() {
  SharedDtor();
}

void Proto51400660::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400660::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400660::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400660_descriptor_;
}

const Proto51400660& Proto51400660::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto51400660* Proto51400660::default_instance_ = NULL;

Proto51400660* Proto51400660::New() const {
  return new Proto51400660;
}

void Proto51400660::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_num_ = 0;
    exp_num_ = 0;
    status_ = 0;
    exp_limit_ = 0;
    exp_sum_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400660::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_num_)));
          set_has_level_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exp_num;
        break;
      }
      
      // optional int32 exp_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_num_)));
          set_has_exp_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_status;
        break;
      }
      
      // optional int32 status = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_exp_limit;
        break;
      }
      
      // optional int32 exp_limit = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_limit_)));
          set_has_exp_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_exp_sum;
        break;
      }
      
      // optional int32 exp_sum = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp_sum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_sum_)));
          set_has_exp_sum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400660::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level_num = 1;
  if (has_level_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level_num(), output);
  }
  
  // optional int32 exp_num = 2;
  if (has_exp_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exp_num(), output);
  }
  
  // optional int32 status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->status(), output);
  }
  
  // optional int32 exp_limit = 4;
  if (has_exp_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->exp_limit(), output);
  }
  
  // optional int32 exp_sum = 5;
  if (has_exp_sum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->exp_sum(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400660::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level_num = 1;
  if (has_level_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level_num(), target);
  }
  
  // optional int32 exp_num = 2;
  if (has_exp_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exp_num(), target);
  }
  
  // optional int32 status = 3;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->status(), target);
  }
  
  // optional int32 exp_limit = 4;
  if (has_exp_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->exp_limit(), target);
  }
  
  // optional int32 exp_sum = 5;
  if (has_exp_sum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->exp_sum(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400660::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level_num = 1;
    if (has_level_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level_num());
    }
    
    // optional int32 exp_num = 2;
    if (has_exp_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp_num());
    }
    
    // optional int32 status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int32 exp_limit = 4;
    if (has_exp_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp_limit());
    }
    
    // optional int32 exp_sum = 5;
    if (has_exp_sum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp_sum());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400660::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400660* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400660*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400660::MergeFrom(const Proto51400660& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level_num()) {
      set_level_num(from.level_num());
    }
    if (from.has_exp_num()) {
      set_exp_num(from.exp_num());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_exp_limit()) {
      set_exp_limit(from.exp_limit());
    }
    if (from.has_exp_sum()) {
      set_exp_sum(from.exp_sum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400660::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400660::CopyFrom(const Proto51400660& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400660::IsInitialized() const {
  
  return true;
}

void Proto51400660::Swap(Proto51400660* other) {
  if (other != this) {
    std::swap(level_num_, other->level_num_);
    std::swap(exp_num_, other->exp_num_);
    std::swap(status_, other->status_);
    std::swap(exp_limit_, other->exp_limit_);
    std::swap(exp_sum_, other->exp_sum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400660::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400660_descriptor_;
  metadata.reflection = Proto51400660_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400661::kSmeltLevelFieldNumber;
const int Proto51400661::kSmeltExpFieldNumber;
const int Proto51400661::kRecommendFieldNumber;
const int Proto51400661::kPropListFieldNumber;
const int Proto51400661::kItemListFieldNumber;
const int Proto51400661::kExpLimitFieldNumber;
#endif  // !_MSC_VER

Proto51400661::Proto51400661()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400661::InitAsDefaultInstance() {
  prop_list_ = const_cast< ::ProtoFightPro*>(&::ProtoFightPro::default_instance());
}

Proto51400661::Proto51400661(const Proto51400661& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400661::SharedCtor() {
  _cached_size_ = 0;
  smelt_level_ = 0;
  smelt_exp_ = 0;
  recommend_ = 0;
  prop_list_ = NULL;
  exp_limit_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400661::~Proto51400661() {
  SharedDtor();
}

void Proto51400661::SharedDtor() {
  if (this != default_instance_) {
    delete prop_list_;
  }
}

void Proto51400661::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400661::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400661_descriptor_;
}

const Proto51400661& Proto51400661::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto51400661* Proto51400661::default_instance_ = NULL;

Proto51400661* Proto51400661::New() const {
  return new Proto51400661;
}

void Proto51400661::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    smelt_level_ = 0;
    smelt_exp_ = 0;
    recommend_ = 0;
    if (has_prop_list()) {
      if (prop_list_ != NULL) prop_list_->::ProtoFightPro::Clear();
    }
    exp_limit_ = 0;
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400661::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 smelt_level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &smelt_level_)));
          set_has_smelt_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_smelt_exp;
        break;
      }
      
      // optional int32 smelt_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_smelt_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &smelt_exp_)));
          set_has_smelt_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_recommend;
        break;
      }
      
      // optional int32 recommend = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recommend:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recommend_)));
          set_has_recommend();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_prop_list;
        break;
      }
      
      // optional .ProtoFightPro prop_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prop_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prop_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoItem item_list = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_item_list;
        if (input->ExpectTag(48)) goto parse_exp_limit;
        break;
      }
      
      // optional int32 exp_limit = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_limit_)));
          set_has_exp_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400661::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 smelt_level = 1;
  if (has_smelt_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->smelt_level(), output);
  }
  
  // optional int32 smelt_exp = 2;
  if (has_smelt_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->smelt_exp(), output);
  }
  
  // optional int32 recommend = 3;
  if (has_recommend()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->recommend(), output);
  }
  
  // optional .ProtoFightPro prop_list = 4;
  if (has_prop_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->prop_list(), output);
  }
  
  // repeated .ProtoItem item_list = 5;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->item_list(i), output);
  }
  
  // optional int32 exp_limit = 6;
  if (has_exp_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->exp_limit(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400661::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 smelt_level = 1;
  if (has_smelt_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->smelt_level(), target);
  }
  
  // optional int32 smelt_exp = 2;
  if (has_smelt_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->smelt_exp(), target);
  }
  
  // optional int32 recommend = 3;
  if (has_recommend()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->recommend(), target);
  }
  
  // optional .ProtoFightPro prop_list = 4;
  if (has_prop_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->prop_list(), target);
  }
  
  // repeated .ProtoItem item_list = 5;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->item_list(i), target);
  }
  
  // optional int32 exp_limit = 6;
  if (has_exp_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->exp_limit(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400661::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 smelt_level = 1;
    if (has_smelt_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->smelt_level());
    }
    
    // optional int32 smelt_exp = 2;
    if (has_smelt_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->smelt_exp());
    }
    
    // optional int32 recommend = 3;
    if (has_recommend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recommend());
    }
    
    // optional .ProtoFightPro prop_list = 4;
    if (has_prop_list()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prop_list());
    }
    
    // optional int32 exp_limit = 6;
    if (has_exp_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp_limit());
    }
    
  }
  // repeated .ProtoItem item_list = 5;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400661::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400661* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400661*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400661::MergeFrom(const Proto51400661& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_smelt_level()) {
      set_smelt_level(from.smelt_level());
    }
    if (from.has_smelt_exp()) {
      set_smelt_exp(from.smelt_exp());
    }
    if (from.has_recommend()) {
      set_recommend(from.recommend());
    }
    if (from.has_prop_list()) {
      mutable_prop_list()->::ProtoFightPro::MergeFrom(from.prop_list());
    }
    if (from.has_exp_limit()) {
      set_exp_limit(from.exp_limit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400661::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400661::CopyFrom(const Proto51400661& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400661::IsInitialized() const {
  
  return true;
}

void Proto51400661::Swap(Proto51400661* other) {
  if (other != this) {
    std::swap(smelt_level_, other->smelt_level_);
    std::swap(smelt_exp_, other->smelt_exp_);
    std::swap(recommend_, other->recommend_);
    std::swap(prop_list_, other->prop_list_);
    item_list_.Swap(&other->item_list_);
    std::swap(exp_limit_, other->exp_limit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400661::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400661_descriptor_;
  metadata.reflection = Proto51400661_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400400::kChestIdFieldNumber;
#endif  // !_MSC_VER

Proto80400400::Proto80400400()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400400::InitAsDefaultInstance() {
}

Proto80400400::Proto80400400(const Proto80400400& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400400::SharedCtor() {
  _cached_size_ = 0;
  chest_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400400::~Proto80400400() {
  SharedDtor();
}

void Proto80400400::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400400::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400400::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400400_descriptor_;
}

const Proto80400400& Proto80400400::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto80400400* Proto80400400::default_instance_ = NULL;

Proto80400400* Proto80400400::New() const {
  return new Proto80400400;
}

void Proto80400400::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    chest_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400400::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 chest_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chest_id_)));
          set_has_chest_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400400::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 chest_id = 1;
  if (has_chest_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chest_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400400::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 chest_id = 1;
  if (has_chest_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chest_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400400::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 chest_id = 1;
    if (has_chest_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chest_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400400::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400400* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400400*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400400::MergeFrom(const Proto80400400& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chest_id()) {
      set_chest_id(from.chest_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400400::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400400::CopyFrom(const Proto80400400& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400400::IsInitialized() const {
  
  return true;
}

void Proto80400400::Swap(Proto80400400* other) {
  if (other != this) {
    std::swap(chest_id_, other->chest_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400400::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400400_descriptor_;
  metadata.reflection = Proto80400400_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400407::kChestsNumFieldNumber;
const int Proto80400407::kChestsListFieldNumber;
#endif  // !_MSC_VER

Proto80400407::Proto80400407()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400407::InitAsDefaultInstance() {
}

Proto80400407::Proto80400407(const Proto80400407& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400407::SharedCtor() {
  _cached_size_ = 0;
  chests_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400407::~Proto80400407() {
  SharedDtor();
}

void Proto80400407::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400407::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400407::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400407_descriptor_;
}

const Proto80400407& Proto80400407::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto80400407* Proto80400407::default_instance_ = NULL;

Proto80400407* Proto80400407::New() const {
  return new Proto80400407;
}

void Proto80400407::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    chests_num_ = 0;
  }
  chests_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400407::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 chests_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chests_num_)));
          set_has_chests_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_chests_list;
        break;
      }
      
      // repeated int32 chests_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_chests_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_chests_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_chests_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_chests_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400407::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 chests_num = 1;
  if (has_chests_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chests_num(), output);
  }
  
  // repeated int32 chests_list = 2;
  for (int i = 0; i < this->chests_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->chests_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400407::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 chests_num = 1;
  if (has_chests_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chests_num(), target);
  }
  
  // repeated int32 chests_list = 2;
  for (int i = 0; i < this->chests_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->chests_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400407::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 chests_num = 1;
    if (has_chests_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chests_num());
    }
    
  }
  // repeated int32 chests_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->chests_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->chests_list(i));
    }
    total_size += 1 * this->chests_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400407::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400407* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400407*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400407::MergeFrom(const Proto80400407& from) {
  GOOGLE_CHECK_NE(&from, this);
  chests_list_.MergeFrom(from.chests_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chests_num()) {
      set_chests_num(from.chests_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400407::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400407::CopyFrom(const Proto80400407& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400407::IsInitialized() const {
  
  return true;
}

void Proto80400407::Swap(Proto80400407* other) {
  if (other != this) {
    std::swap(chests_num_, other->chests_num_);
    chests_list_.Swap(&other->chests_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400407::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400407_descriptor_;
  metadata.reflection = Proto80400407_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400384::kRoleSetFieldNumber;
const int Proto80400384::kMyRankFieldNumber;
const int Proto80400384::kBossIdFieldNumber;
const int Proto80400384::kStatusFieldNumber;
const int Proto80400384::kCurBloodFieldNumber;
const int Proto80400384::kAddExpFieldNumber;
const int Proto80400384::kRefreshTickFieldNumber;
#endif  // !_MSC_VER

Proto80400384::Proto80400384()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400384::InitAsDefaultInstance() {
  my_rank_ = const_cast< ::ProtoLScoreInfo*>(&::ProtoLScoreInfo::default_instance());
}

Proto80400384::Proto80400384(const Proto80400384& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400384::SharedCtor() {
  _cached_size_ = 0;
  my_rank_ = NULL;
  boss_id_ = GOOGLE_LONGLONG(0);
  status_ = 0;
  cur_blood_ = 0;
  add_exp_ = 0;
  refresh_tick_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400384::~Proto80400384() {
  SharedDtor();
}

void Proto80400384::SharedDtor() {
  if (this != default_instance_) {
    delete my_rank_;
  }
}

void Proto80400384::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400384::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400384_descriptor_;
}

const Proto80400384& Proto80400384::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto80400384* Proto80400384::default_instance_ = NULL;

Proto80400384* Proto80400384::New() const {
  return new Proto80400384;
}

void Proto80400384::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_my_rank()) {
      if (my_rank_ != NULL) my_rank_->::ProtoLScoreInfo::Clear();
    }
    boss_id_ = GOOGLE_LONGLONG(0);
    status_ = 0;
    cur_blood_ = 0;
    add_exp_ = 0;
    refresh_tick_ = 0;
  }
  role_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400384::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoLScoreInfo role_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_role_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_role_set;
        if (input->ExpectTag(18)) goto parse_my_rank;
        break;
      }
      
      // optional .ProtoLScoreInfo my_rank = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_my_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_my_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_boss_id;
        break;
      }
      
      // optional int64 boss_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_boss_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &boss_id_)));
          set_has_boss_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_status;
        break;
      }
      
      // optional int32 status = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(41)) goto parse_cur_blood;
        break;
      }
      
      // optional double cur_blood = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cur_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cur_blood_)));
          set_has_cur_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_add_exp;
        break;
      }
      
      // optional int32 add_exp = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_add_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_exp_)));
          set_has_add_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_refresh_tick;
        break;
      }
      
      // optional int32 refresh_tick = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refresh_tick_)));
          set_has_refresh_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400384::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoLScoreInfo role_set = 1;
  for (int i = 0; i < this->role_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->role_set(i), output);
  }
  
  // optional .ProtoLScoreInfo my_rank = 2;
  if (has_my_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->my_rank(), output);
  }
  
  // optional int64 boss_id = 3;
  if (has_boss_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->boss_id(), output);
  }
  
  // optional int32 status = 4;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->status(), output);
  }
  
  // optional double cur_blood = 5;
  if (has_cur_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->cur_blood(), output);
  }
  
  // optional int32 add_exp = 6;
  if (has_add_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->add_exp(), output);
  }
  
  // optional int32 refresh_tick = 7;
  if (has_refresh_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->refresh_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400384::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoLScoreInfo role_set = 1;
  for (int i = 0; i < this->role_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->role_set(i), target);
  }
  
  // optional .ProtoLScoreInfo my_rank = 2;
  if (has_my_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->my_rank(), target);
  }
  
  // optional int64 boss_id = 3;
  if (has_boss_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->boss_id(), target);
  }
  
  // optional int32 status = 4;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->status(), target);
  }
  
  // optional double cur_blood = 5;
  if (has_cur_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->cur_blood(), target);
  }
  
  // optional int32 add_exp = 6;
  if (has_add_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->add_exp(), target);
  }
  
  // optional int32 refresh_tick = 7;
  if (has_refresh_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->refresh_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400384::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .ProtoLScoreInfo my_rank = 2;
    if (has_my_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->my_rank());
    }
    
    // optional int64 boss_id = 3;
    if (has_boss_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->boss_id());
    }
    
    // optional int32 status = 4;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional double cur_blood = 5;
    if (has_cur_blood()) {
      total_size += 1 + 8;
    }
    
    // optional int32 add_exp = 6;
    if (has_add_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_exp());
    }
    
    // optional int32 refresh_tick = 7;
    if (has_refresh_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refresh_tick());
    }
    
  }
  // repeated .ProtoLScoreInfo role_set = 1;
  total_size += 1 * this->role_set_size();
  for (int i = 0; i < this->role_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400384::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400384* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400384*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400384::MergeFrom(const Proto80400384& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_set_.MergeFrom(from.role_set_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_my_rank()) {
      mutable_my_rank()->::ProtoLScoreInfo::MergeFrom(from.my_rank());
    }
    if (from.has_boss_id()) {
      set_boss_id(from.boss_id());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_cur_blood()) {
      set_cur_blood(from.cur_blood());
    }
    if (from.has_add_exp()) {
      set_add_exp(from.add_exp());
    }
    if (from.has_refresh_tick()) {
      set_refresh_tick(from.refresh_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400384::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400384::CopyFrom(const Proto80400384& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400384::IsInitialized() const {
  
  return true;
}

void Proto80400384::Swap(Proto80400384* other) {
  if (other != this) {
    role_set_.Swap(&other->role_set_);
    std::swap(my_rank_, other->my_rank_);
    std::swap(boss_id_, other->boss_id_);
    std::swap(status_, other->status_);
    std::swap(cur_blood_, other->cur_blood_);
    std::swap(add_exp_, other->add_exp_);
    std::swap(refresh_tick_, other->refresh_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400384::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400384_descriptor_;
  metadata.reflection = Proto80400384_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400662::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto11400662::Proto11400662()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400662::InitAsDefaultInstance() {
}

Proto11400662::Proto11400662(const Proto11400662& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400662::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400662::~Proto11400662() {
  SharedDtor();
}

void Proto11400662::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400662::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400662::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400662_descriptor_;
}

const Proto11400662& Proto11400662::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto11400662* Proto11400662::default_instance_ = NULL;

Proto11400662* Proto11400662::New() const {
  return new Proto11400662;
}

void Proto11400662::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400662::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400662::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400662::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400662::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400662::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400662* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400662*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400662::MergeFrom(const Proto11400662& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400662::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400662::CopyFrom(const Proto11400662& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400662::IsInitialized() const {
  
  return true;
}

void Proto11400662::Swap(Proto11400662* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400662::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400662_descriptor_;
  metadata.reflection = Proto11400662_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400662::kStatusFieldNumber;
const int Proto51400662::kItemListFieldNumber;
#endif  // !_MSC_VER

Proto51400662::Proto51400662()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400662::InitAsDefaultInstance() {
}

Proto51400662::Proto51400662(const Proto51400662& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400662::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400662::~Proto51400662() {
  SharedDtor();
}

void Proto51400662::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400662::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400662::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400662_descriptor_;
}

const Proto51400662& Proto51400662::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto51400662* Proto51400662::default_instance_ = NULL;

Proto51400662* Proto51400662::New() const {
  return new Proto51400662;
}

void Proto51400662::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400662::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoItem item_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400662::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  // repeated .ProtoItem item_list = 2;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400662::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  // repeated .ProtoItem item_list = 2;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400662::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  // repeated .ProtoItem item_list = 2;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400662::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400662* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400662*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400662::MergeFrom(const Proto51400662& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400662::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400662::CopyFrom(const Proto51400662& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400662::IsInitialized() const {
  
  return true;
}

void Proto51400662::Swap(Proto51400662* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    item_list_.Swap(&other->item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400662::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400662_descriptor_;
  metadata.reflection = Proto51400662_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80405002::kChestsSumFieldNumber;
const int Proto80405002::kChestsListFieldNumber;
#endif  // !_MSC_VER

Proto80405002::Proto80405002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80405002::InitAsDefaultInstance() {
}

Proto80405002::Proto80405002(const Proto80405002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80405002::SharedCtor() {
  _cached_size_ = 0;
  chests_sum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80405002::~Proto80405002() {
  SharedDtor();
}

void Proto80405002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80405002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80405002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80405002_descriptor_;
}

const Proto80405002& Proto80405002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto80405002* Proto80405002::default_instance_ = NULL;

Proto80405002* Proto80405002::New() const {
  return new Proto80405002;
}

void Proto80405002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    chests_sum_ = 0;
  }
  chests_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80405002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 chests_sum = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chests_sum_)));
          set_has_chests_sum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_chests_list;
        break;
      }
      
      // repeated int32 chests_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_chests_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_chests_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_chests_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_chests_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80405002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 chests_sum = 1;
  if (has_chests_sum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chests_sum(), output);
  }
  
  // repeated int32 chests_list = 2;
  for (int i = 0; i < this->chests_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->chests_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80405002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 chests_sum = 1;
  if (has_chests_sum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chests_sum(), target);
  }
  
  // repeated int32 chests_list = 2;
  for (int i = 0; i < this->chests_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->chests_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80405002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 chests_sum = 1;
    if (has_chests_sum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chests_sum());
    }
    
  }
  // repeated int32 chests_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->chests_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->chests_list(i));
    }
    total_size += 1 * this->chests_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80405002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80405002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80405002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80405002::MergeFrom(const Proto80405002& from) {
  GOOGLE_CHECK_NE(&from, this);
  chests_list_.MergeFrom(from.chests_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chests_sum()) {
      set_chests_sum(from.chests_sum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80405002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80405002::CopyFrom(const Proto80405002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80405002::IsInitialized() const {
  
  return true;
}

void Proto80405002::Swap(Proto80405002* other) {
  if (other != this) {
    std::swap(chests_sum_, other->chests_sum_);
    chests_list_.Swap(&other->chests_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80405002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80405002_descriptor_;
  metadata.reflection = Proto80405002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80405011::kTopicIdFieldNumber;
const int Proto80405011::kTopicDescFieldNumber;
const int Proto80405011::kAAnswerFieldNumber;
const int Proto80405011::kBAnswerFieldNumber;
const int Proto80405011::kCurStageFieldNumber;
#endif  // !_MSC_VER

Proto80405011::Proto80405011()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80405011::InitAsDefaultInstance() {
}

Proto80405011::Proto80405011(const Proto80405011& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80405011::SharedCtor() {
  _cached_size_ = 0;
  topic_id_ = 0;
  topic_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  a_answer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  b_answer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cur_stage_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80405011::~Proto80405011() {
  SharedDtor();
}

void Proto80405011::SharedDtor() {
  if (topic_desc_ != &::google::protobuf::internal::kEmptyString) {
    delete topic_desc_;
  }
  if (a_answer_ != &::google::protobuf::internal::kEmptyString) {
    delete a_answer_;
  }
  if (b_answer_ != &::google::protobuf::internal::kEmptyString) {
    delete b_answer_;
  }
  if (this != default_instance_) {
  }
}

void Proto80405011::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80405011::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80405011_descriptor_;
}

const Proto80405011& Proto80405011::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto80405011* Proto80405011::default_instance_ = NULL;

Proto80405011* Proto80405011::New() const {
  return new Proto80405011;
}

void Proto80405011::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    topic_id_ = 0;
    if (has_topic_desc()) {
      if (topic_desc_ != &::google::protobuf::internal::kEmptyString) {
        topic_desc_->clear();
      }
    }
    if (has_a_answer()) {
      if (a_answer_ != &::google::protobuf::internal::kEmptyString) {
        a_answer_->clear();
      }
    }
    if (has_b_answer()) {
      if (b_answer_ != &::google::protobuf::internal::kEmptyString) {
        b_answer_->clear();
      }
    }
    cur_stage_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80405011::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 topic_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &topic_id_)));
          set_has_topic_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_topic_desc;
        break;
      }
      
      // optional string topic_desc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_topic_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->topic_desc().data(), this->topic_desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_a_answer;
        break;
      }
      
      // optional string a_answer = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_a_answer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_a_answer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->a_answer().data(), this->a_answer().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_b_answer;
        break;
      }
      
      // optional string b_answer = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_b_answer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_b_answer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->b_answer().data(), this->b_answer().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_cur_stage;
        break;
      }
      
      // optional int32 cur_stage = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_stage_)));
          set_has_cur_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80405011::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 topic_id = 1;
  if (has_topic_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->topic_id(), output);
  }
  
  // optional string topic_desc = 2;
  if (has_topic_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->topic_desc().data(), this->topic_desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->topic_desc(), output);
  }
  
  // optional string a_answer = 3;
  if (has_a_answer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->a_answer().data(), this->a_answer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->a_answer(), output);
  }
  
  // optional string b_answer = 4;
  if (has_b_answer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->b_answer().data(), this->b_answer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->b_answer(), output);
  }
  
  // optional int32 cur_stage = 5;
  if (has_cur_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cur_stage(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80405011::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 topic_id = 1;
  if (has_topic_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->topic_id(), target);
  }
  
  // optional string topic_desc = 2;
  if (has_topic_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->topic_desc().data(), this->topic_desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->topic_desc(), target);
  }
  
  // optional string a_answer = 3;
  if (has_a_answer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->a_answer().data(), this->a_answer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->a_answer(), target);
  }
  
  // optional string b_answer = 4;
  if (has_b_answer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->b_answer().data(), this->b_answer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->b_answer(), target);
  }
  
  // optional int32 cur_stage = 5;
  if (has_cur_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cur_stage(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80405011::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 topic_id = 1;
    if (has_topic_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->topic_id());
    }
    
    // optional string topic_desc = 2;
    if (has_topic_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->topic_desc());
    }
    
    // optional string a_answer = 3;
    if (has_a_answer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->a_answer());
    }
    
    // optional string b_answer = 4;
    if (has_b_answer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->b_answer());
    }
    
    // optional int32 cur_stage = 5;
    if (has_cur_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_stage());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80405011::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80405011* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80405011*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80405011::MergeFrom(const Proto80405011& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_topic_id()) {
      set_topic_id(from.topic_id());
    }
    if (from.has_topic_desc()) {
      set_topic_desc(from.topic_desc());
    }
    if (from.has_a_answer()) {
      set_a_answer(from.a_answer());
    }
    if (from.has_b_answer()) {
      set_b_answer(from.b_answer());
    }
    if (from.has_cur_stage()) {
      set_cur_stage(from.cur_stage());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80405011::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80405011::CopyFrom(const Proto80405011& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80405011::IsInitialized() const {
  
  return true;
}

void Proto80405011::Swap(Proto80405011* other) {
  if (other != this) {
    std::swap(topic_id_, other->topic_id_);
    std::swap(topic_desc_, other->topic_desc_);
    std::swap(a_answer_, other->a_answer_);
    std::swap(b_answer_, other->b_answer_);
    std::swap(cur_stage_, other->cur_stage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80405011::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80405011_descriptor_;
  metadata.reflection = Proto80405011_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80405012::kAwardIdFieldNumber;
#endif  // !_MSC_VER

Proto80405012::Proto80405012()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80405012::InitAsDefaultInstance() {
}

Proto80405012::Proto80405012(const Proto80405012& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80405012::SharedCtor() {
  _cached_size_ = 0;
  award_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80405012::~Proto80405012() {
  SharedDtor();
}

void Proto80405012::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80405012::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80405012::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80405012_descriptor_;
}

const Proto80405012& Proto80405012::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto80405012* Proto80405012::default_instance_ = NULL;

Proto80405012* Proto80405012::New() const {
  return new Proto80405012;
}

void Proto80405012::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    award_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80405012::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 award_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &award_id_)));
          set_has_award_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80405012::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 award_id = 1;
  if (has_award_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->award_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80405012::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 award_id = 1;
  if (has_award_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->award_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80405012::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 award_id = 1;
    if (has_award_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->award_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80405012::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80405012* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80405012*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80405012::MergeFrom(const Proto80405012& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_award_id()) {
      set_award_id(from.award_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80405012::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80405012::CopyFrom(const Proto80405012& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80405012::IsInitialized() const {
  
  return true;
}

void Proto80405012::Swap(Proto80405012* other) {
  if (other != this) {
    std::swap(award_id_, other->award_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80405012::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80405012_descriptor_;
  metadata.reflection = Proto80405012_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80405013::kAnswerIdFieldNumber;
const int Proto80405013::kRightNumFieldNumber;
const int Proto80405013::kScoreNumFieldNumber;
#endif  // !_MSC_VER

Proto80405013::Proto80405013()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80405013::InitAsDefaultInstance() {
}

Proto80405013::Proto80405013(const Proto80405013& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80405013::SharedCtor() {
  _cached_size_ = 0;
  answer_id_ = 0;
  right_num_ = 0;
  score_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80405013::~Proto80405013() {
  SharedDtor();
}

void Proto80405013::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80405013::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80405013::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80405013_descriptor_;
}

const Proto80405013& Proto80405013::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto80405013* Proto80405013::default_instance_ = NULL;

Proto80405013* Proto80405013::New() const {
  return new Proto80405013;
}

void Proto80405013::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    answer_id_ = 0;
    right_num_ = 0;
    score_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80405013::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 answer_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &answer_id_)));
          set_has_answer_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_right_num;
        break;
      }
      
      // optional int32 right_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_right_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &right_num_)));
          set_has_right_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_score_num;
        break;
      }
      
      // optional int32 score_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_score_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_num_)));
          set_has_score_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80405013::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 answer_id = 1;
  if (has_answer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->answer_id(), output);
  }
  
  // optional int32 right_num = 2;
  if (has_right_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->right_num(), output);
  }
  
  // optional int32 score_num = 3;
  if (has_score_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->score_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80405013::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 answer_id = 1;
  if (has_answer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->answer_id(), target);
  }
  
  // optional int32 right_num = 2;
  if (has_right_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->right_num(), target);
  }
  
  // optional int32 score_num = 3;
  if (has_score_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->score_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80405013::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 answer_id = 1;
    if (has_answer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->answer_id());
    }
    
    // optional int32 right_num = 2;
    if (has_right_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->right_num());
    }
    
    // optional int32 score_num = 3;
    if (has_score_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80405013::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80405013* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80405013*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80405013::MergeFrom(const Proto80405013& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_answer_id()) {
      set_answer_id(from.answer_id());
    }
    if (from.has_right_num()) {
      set_right_num(from.right_num());
    }
    if (from.has_score_num()) {
      set_score_num(from.score_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80405013::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80405013::CopyFrom(const Proto80405013& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80405013::IsInitialized() const {
  
  return true;
}

void Proto80405013::Swap(Proto80405013* other) {
  if (other != this) {
    std::swap(answer_id_, other->answer_id_);
    std::swap(right_num_, other->right_num_);
    std::swap(score_num_, other->score_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80405013::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80405013_descriptor_;
  metadata.reflection = Proto80405013_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100653::kLeagueIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100653::Proto10100653()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100653::InitAsDefaultInstance() {
}

Proto10100653::Proto10100653(const Proto10100653& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100653::SharedCtor() {
  _cached_size_ = 0;
  league_index_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100653::~Proto10100653() {
  SharedDtor();
}

void Proto10100653::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100653::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100653::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100653_descriptor_;
}

const Proto10100653& Proto10100653::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto10100653* Proto10100653::default_instance_ = NULL;

Proto10100653* Proto10100653::New() const {
  return new Proto10100653;
}

void Proto10100653::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_index_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100653::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 league_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_index_)));
          set_has_league_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100653::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->league_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100653::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->league_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100653::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 league_index = 1;
    if (has_league_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100653::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100653* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100653*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100653::MergeFrom(const Proto10100653& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_index()) {
      set_league_index(from.league_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100653::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100653::CopyFrom(const Proto10100653& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100653::IsInitialized() const {
  
  return true;
}

void Proto10100653::Swap(Proto10100653* other) {
  if (other != this) {
    std::swap(league_index_, other->league_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100653::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100653_descriptor_;
  metadata.reflection = Proto10100653_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100653::kMemberSetFieldNumber;
const int Proto50100653::kLeagueIndexFieldNumber;
const int Proto50100653::kLeagueNameFieldNumber;
const int Proto50100653::kLeaderNameFieldNumber;
const int Proto50100653::kLeagueCountFieldNumber;
const int Proto50100653::kLeagueRankFieldNumber;
const int Proto50100653::kLeagueLvlFieldNumber;
const int Proto50100653::kLeagueForceFieldNumber;
const int Proto50100653::kFlagLvlFieldNumber;
#endif  // !_MSC_VER

Proto50100653::Proto50100653()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100653::InitAsDefaultInstance() {
}

Proto50100653::Proto50100653(const Proto50100653& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100653::SharedCtor() {
  _cached_size_ = 0;
  league_index_ = GOOGLE_LONGLONG(0);
  league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  leader_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  league_count_ = 0;
  league_rank_ = 0;
  league_lvl_ = 0;
  league_force_ = 0;
  flag_lvl_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100653::~Proto50100653() {
  SharedDtor();
}

void Proto50100653::SharedDtor() {
  if (league_name_ != &::google::protobuf::internal::kEmptyString) {
    delete league_name_;
  }
  if (leader_name_ != &::google::protobuf::internal::kEmptyString) {
    delete leader_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto50100653::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100653::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100653_descriptor_;
}

const Proto50100653& Proto50100653::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto50100653* Proto50100653::default_instance_ = NULL;

Proto50100653* Proto50100653::New() const {
  return new Proto50100653;
}

void Proto50100653::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    league_index_ = GOOGLE_LONGLONG(0);
    if (has_league_name()) {
      if (league_name_ != &::google::protobuf::internal::kEmptyString) {
        league_name_->clear();
      }
    }
    if (has_leader_name()) {
      if (leader_name_ != &::google::protobuf::internal::kEmptyString) {
        leader_name_->clear();
      }
    }
    league_count_ = 0;
    league_rank_ = 0;
    league_lvl_ = 0;
    league_force_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    flag_lvl_ = 0;
  }
  member_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100653::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoLeagueMember member_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_member_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_member_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_member_set;
        if (input->ExpectTag(16)) goto parse_league_index;
        break;
      }
      
      // optional int64 league_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_index_)));
          set_has_league_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_league_name;
        break;
      }
      
      // optional string league_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_league_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->league_name().data(), this->league_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_leader_name;
        break;
      }
      
      // optional string leader_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_leader_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->leader_name().data(), this->leader_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_league_count;
        break;
      }
      
      // optional int32 league_count = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &league_count_)));
          set_has_league_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_league_rank;
        break;
      }
      
      // optional int32 league_rank = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &league_rank_)));
          set_has_league_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_league_lvl;
        break;
      }
      
      // optional int32 league_lvl = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &league_lvl_)));
          set_has_league_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_league_force;
        break;
      }
      
      // optional int32 league_force = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &league_force_)));
          set_has_league_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_flag_lvl;
        break;
      }
      
      // optional int32 flag_lvl = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flag_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_lvl_)));
          set_has_flag_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100653::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoLeagueMember member_set = 1;
  for (int i = 0; i < this->member_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->member_set(i), output);
  }
  
  // optional int64 league_index = 2;
  if (has_league_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->league_index(), output);
  }
  
  // optional string league_name = 3;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->league_name(), output);
  }
  
  // optional string leader_name = 4;
  if (has_leader_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leader_name().data(), this->leader_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->leader_name(), output);
  }
  
  // optional int32 league_count = 5;
  if (has_league_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->league_count(), output);
  }
  
  // optional int32 league_rank = 6;
  if (has_league_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->league_rank(), output);
  }
  
  // optional int32 league_lvl = 7;
  if (has_league_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->league_lvl(), output);
  }
  
  // optional int32 league_force = 8;
  if (has_league_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->league_force(), output);
  }
  
  // optional int32 flag_lvl = 9;
  if (has_flag_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->flag_lvl(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100653::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoLeagueMember member_set = 1;
  for (int i = 0; i < this->member_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->member_set(i), target);
  }
  
  // optional int64 league_index = 2;
  if (has_league_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->league_index(), target);
  }
  
  // optional string league_name = 3;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->league_name(), target);
  }
  
  // optional string leader_name = 4;
  if (has_leader_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leader_name().data(), this->leader_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->leader_name(), target);
  }
  
  // optional int32 league_count = 5;
  if (has_league_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->league_count(), target);
  }
  
  // optional int32 league_rank = 6;
  if (has_league_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->league_rank(), target);
  }
  
  // optional int32 league_lvl = 7;
  if (has_league_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->league_lvl(), target);
  }
  
  // optional int32 league_force = 8;
  if (has_league_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->league_force(), target);
  }
  
  // optional int32 flag_lvl = 9;
  if (has_flag_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->flag_lvl(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100653::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int64 league_index = 2;
    if (has_league_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_index());
    }
    
    // optional string league_name = 3;
    if (has_league_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->league_name());
    }
    
    // optional string leader_name = 4;
    if (has_leader_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->leader_name());
    }
    
    // optional int32 league_count = 5;
    if (has_league_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->league_count());
    }
    
    // optional int32 league_rank = 6;
    if (has_league_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->league_rank());
    }
    
    // optional int32 league_lvl = 7;
    if (has_league_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->league_lvl());
    }
    
    // optional int32 league_force = 8;
    if (has_league_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->league_force());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 flag_lvl = 9;
    if (has_flag_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag_lvl());
    }
    
  }
  // repeated .ProtoLeagueMember member_set = 1;
  total_size += 1 * this->member_set_size();
  for (int i = 0; i < this->member_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->member_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100653::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100653* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100653*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100653::MergeFrom(const Proto50100653& from) {
  GOOGLE_CHECK_NE(&from, this);
  member_set_.MergeFrom(from.member_set_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_league_index()) {
      set_league_index(from.league_index());
    }
    if (from.has_league_name()) {
      set_league_name(from.league_name());
    }
    if (from.has_leader_name()) {
      set_leader_name(from.leader_name());
    }
    if (from.has_league_count()) {
      set_league_count(from.league_count());
    }
    if (from.has_league_rank()) {
      set_league_rank(from.league_rank());
    }
    if (from.has_league_lvl()) {
      set_league_lvl(from.league_lvl());
    }
    if (from.has_league_force()) {
      set_league_force(from.league_force());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_flag_lvl()) {
      set_flag_lvl(from.flag_lvl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100653::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100653::CopyFrom(const Proto50100653& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100653::IsInitialized() const {
  
  return true;
}

void Proto50100653::Swap(Proto50100653* other) {
  if (other != this) {
    member_set_.Swap(&other->member_set_);
    std::swap(league_index_, other->league_index_);
    std::swap(league_name_, other->league_name_);
    std::swap(leader_name_, other->leader_name_);
    std::swap(league_count_, other->league_count_);
    std::swap(league_rank_, other->league_rank_);
    std::swap(league_lvl_, other->league_lvl_);
    std::swap(league_force_, other->league_force_);
    std::swap(flag_lvl_, other->flag_lvl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100653::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100653_descriptor_;
  metadata.reflection = Proto50100653_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401480::kReceivedMarkFieldNumber;
const int Proto51401480::kOfflineSumFieldNumber;
const int Proto51401480::kExpNumFieldNumber;
const int Proto51401480::kLongestTimeFieldNumber;
#endif  // !_MSC_VER

Proto51401480::Proto51401480()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401480::InitAsDefaultInstance() {
}

Proto51401480::Proto51401480(const Proto51401480& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401480::SharedCtor() {
  _cached_size_ = 0;
  received_mark_ = 0;
  offline_sum_ = 0;
  exp_num_ = 0;
  longest_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401480::~Proto51401480() {
  SharedDtor();
}

void Proto51401480::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401480::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401480::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401480_descriptor_;
}

const Proto51401480& Proto51401480::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto51401480* Proto51401480::default_instance_ = NULL;

Proto51401480* Proto51401480::New() const {
  return new Proto51401480;
}

void Proto51401480::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    received_mark_ = 0;
    offline_sum_ = 0;
    exp_num_ = 0;
    longest_time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401480::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 received_mark = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &received_mark_)));
          set_has_received_mark();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_offline_sum;
        break;
      }
      
      // optional int32 offline_sum = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_offline_sum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offline_sum_)));
          set_has_offline_sum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_exp_num;
        break;
      }
      
      // optional int32 exp_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_num_)));
          set_has_exp_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_longest_time;
        break;
      }
      
      // optional int32 longest_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_longest_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &longest_time_)));
          set_has_longest_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401480::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 received_mark = 1;
  if (has_received_mark()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->received_mark(), output);
  }
  
  // optional int32 offline_sum = 2;
  if (has_offline_sum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->offline_sum(), output);
  }
  
  // optional int32 exp_num = 3;
  if (has_exp_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->exp_num(), output);
  }
  
  // optional int32 longest_time = 4;
  if (has_longest_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->longest_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401480::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 received_mark = 1;
  if (has_received_mark()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->received_mark(), target);
  }
  
  // optional int32 offline_sum = 2;
  if (has_offline_sum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->offline_sum(), target);
  }
  
  // optional int32 exp_num = 3;
  if (has_exp_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->exp_num(), target);
  }
  
  // optional int32 longest_time = 4;
  if (has_longest_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->longest_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401480::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 received_mark = 1;
    if (has_received_mark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->received_mark());
    }
    
    // optional int32 offline_sum = 2;
    if (has_offline_sum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->offline_sum());
    }
    
    // optional int32 exp_num = 3;
    if (has_exp_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp_num());
    }
    
    // optional int32 longest_time = 4;
    if (has_longest_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->longest_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401480::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401480* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401480*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401480::MergeFrom(const Proto51401480& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_received_mark()) {
      set_received_mark(from.received_mark());
    }
    if (from.has_offline_sum()) {
      set_offline_sum(from.offline_sum());
    }
    if (from.has_exp_num()) {
      set_exp_num(from.exp_num());
    }
    if (from.has_longest_time()) {
      set_longest_time(from.longest_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401480::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401480::CopyFrom(const Proto51401480& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401480::IsInitialized() const {
  
  return true;
}

void Proto51401480::Swap(Proto51401480* other) {
  if (other != this) {
    std::swap(received_mark_, other->received_mark_);
    std::swap(offline_sum_, other->offline_sum_);
    std::swap(exp_num_, other->exp_num_);
    std::swap(longest_time_, other->longest_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401480::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401480_descriptor_;
  metadata.reflection = Proto51401480_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401481::kTypeIdFieldNumber;
#endif  // !_MSC_VER

Proto11401481::Proto11401481()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401481::InitAsDefaultInstance() {
}

Proto11401481::Proto11401481(const Proto11401481& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401481::SharedCtor() {
  _cached_size_ = 0;
  type_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401481::~Proto11401481() {
  SharedDtor();
}

void Proto11401481::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401481::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401481::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401481_descriptor_;
}

const Proto11401481& Proto11401481::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto11401481* Proto11401481::default_instance_ = NULL;

Proto11401481* Proto11401481::New() const {
  return new Proto11401481;
}

void Proto11401481::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401481::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_id_)));
          set_has_type_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401481::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type_id = 1;
  if (has_type_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401481::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type_id = 1;
  if (has_type_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401481::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type_id = 1;
    if (has_type_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401481::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401481* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401481*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401481::MergeFrom(const Proto11401481& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type_id()) {
      set_type_id(from.type_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401481::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401481::CopyFrom(const Proto11401481& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401481::IsInitialized() const {
  
  return true;
}

void Proto11401481::Swap(Proto11401481* other) {
  if (other != this) {
    std::swap(type_id_, other->type_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401481::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401481_descriptor_;
  metadata.reflection = Proto11401481_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401481::kStatusFieldNumber;
const int Proto51401481::kExpNumFieldNumber;
#endif  // !_MSC_VER

Proto51401481::Proto51401481()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401481::InitAsDefaultInstance() {
}

Proto51401481::Proto51401481(const Proto51401481& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401481::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  exp_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401481::~Proto51401481() {
  SharedDtor();
}

void Proto51401481::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401481::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401481::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401481_descriptor_;
}

const Proto51401481& Proto51401481::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto51401481* Proto51401481::default_instance_ = NULL;

Proto51401481* Proto51401481::New() const {
  return new Proto51401481;
}

void Proto51401481::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
    exp_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401481::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exp_num;
        break;
      }
      
      // optional int32 exp_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_num_)));
          set_has_exp_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401481::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  // optional int32 exp_num = 2;
  if (has_exp_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exp_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401481::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  // optional int32 exp_num = 2;
  if (has_exp_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exp_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401481::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int32 exp_num = 2;
    if (has_exp_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401481::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401481* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401481*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401481::MergeFrom(const Proto51401481& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_exp_num()) {
      set_exp_num(from.exp_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401481::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401481::CopyFrom(const Proto51401481& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401481::IsInitialized() const {
  
  return true;
}

void Proto51401481::Swap(Proto51401481* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(exp_num_, other->exp_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401481::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401481_descriptor_;
  metadata.reflection = Proto51401481_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81405001::kAwardIdFieldNumber;
#endif  // !_MSC_VER

Proto81405001::Proto81405001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81405001::InitAsDefaultInstance() {
}

Proto81405001::Proto81405001(const Proto81405001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81405001::SharedCtor() {
  _cached_size_ = 0;
  award_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81405001::~Proto81405001() {
  SharedDtor();
}

void Proto81405001::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81405001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81405001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81405001_descriptor_;
}

const Proto81405001& Proto81405001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto81405001* Proto81405001::default_instance_ = NULL;

Proto81405001* Proto81405001::New() const {
  return new Proto81405001;
}

void Proto81405001::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    award_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81405001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 award_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &award_id_)));
          set_has_award_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81405001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 award_id = 1;
  if (has_award_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->award_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81405001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 award_id = 1;
  if (has_award_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->award_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81405001::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 award_id = 1;
    if (has_award_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->award_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81405001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81405001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81405001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81405001::MergeFrom(const Proto81405001& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_award_id()) {
      set_award_id(from.award_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81405001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81405001::CopyFrom(const Proto81405001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81405001::IsInitialized() const {
  
  return true;
}

void Proto81405001::Swap(Proto81405001* other) {
  if (other != this) {
    std::swap(award_id_, other->award_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81405001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81405001_descriptor_;
  metadata.reflection = Proto81405001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81405003::kCollectNumFieldNumber;
#endif  // !_MSC_VER

Proto81405003::Proto81405003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81405003::InitAsDefaultInstance() {
}

Proto81405003::Proto81405003(const Proto81405003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81405003::SharedCtor() {
  _cached_size_ = 0;
  collect_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81405003::~Proto81405003() {
  SharedDtor();
}

void Proto81405003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81405003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81405003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81405003_descriptor_;
}

const Proto81405003& Proto81405003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto81405003* Proto81405003::default_instance_ = NULL;

Proto81405003* Proto81405003::New() const {
  return new Proto81405003;
}

void Proto81405003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    collect_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81405003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 collect_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &collect_num_)));
          set_has_collect_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81405003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 collect_num = 1;
  if (has_collect_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->collect_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81405003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 collect_num = 1;
  if (has_collect_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->collect_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81405003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 collect_num = 1;
    if (has_collect_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->collect_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81405003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81405003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81405003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81405003::MergeFrom(const Proto81405003& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_collect_num()) {
      set_collect_num(from.collect_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81405003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81405003::CopyFrom(const Proto81405003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81405003::IsInitialized() const {
  
  return true;
}

void Proto81405003::Swap(Proto81405003* other) {
  if (other != this) {
    std::swap(collect_num_, other->collect_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81405003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81405003_descriptor_;
  metadata.reflection = Proto81405003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100502::kCampRankFieldNumber;
const int Proto80100502::kSelfRankFieldNumber;
const int Proto80100502::kSelfKillFieldNumber;
const int Proto80100502::kSelfRewardFieldNumber;
const int Proto80100502::kCampRewardFieldNumber;
const int Proto80100502::kTopThreeFieldNumber;
#endif  // !_MSC_VER

Proto80100502::Proto80100502()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100502::InitAsDefaultInstance() {
}

Proto80100502::Proto80100502(const Proto80100502& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100502::SharedCtor() {
  _cached_size_ = 0;
  camp_rank_ = 0;
  self_rank_ = 0;
  self_kill_ = 0;
  self_reward_ = 0;
  camp_reward_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100502::~Proto80100502() {
  SharedDtor();
}

void Proto80100502::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80100502::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100502::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100502_descriptor_;
}

const Proto80100502& Proto80100502::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto80100502* Proto80100502::default_instance_ = NULL;

Proto80100502* Proto80100502::New() const {
  return new Proto80100502;
}

void Proto80100502::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    camp_rank_ = 0;
    self_rank_ = 0;
    self_kill_ = 0;
    self_reward_ = 0;
    camp_reward_ = 0;
  }
  top_three_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100502::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 camp_rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &camp_rank_)));
          set_has_camp_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_self_rank;
        break;
      }
      
      // optional int32 self_rank = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_self_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &self_rank_)));
          set_has_self_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_self_kill;
        break;
      }
      
      // optional int32 self_kill = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_self_kill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &self_kill_)));
          set_has_self_kill();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_self_reward;
        break;
      }
      
      // optional int32 self_reward = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_self_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &self_reward_)));
          set_has_self_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_camp_reward;
        break;
      }
      
      // optional int32 camp_reward = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_camp_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &camp_reward_)));
          set_has_camp_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_top_three;
        break;
      }
      
      // repeated .ProtoSMBattleRankRec top_three = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_top_three:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_top_three()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_top_three;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100502::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 camp_rank = 1;
  if (has_camp_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->camp_rank(), output);
  }
  
  // optional int32 self_rank = 2;
  if (has_self_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->self_rank(), output);
  }
  
  // optional int32 self_kill = 3;
  if (has_self_kill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->self_kill(), output);
  }
  
  // optional int32 self_reward = 4;
  if (has_self_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->self_reward(), output);
  }
  
  // optional int32 camp_reward = 5;
  if (has_camp_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->camp_reward(), output);
  }
  
  // repeated .ProtoSMBattleRankRec top_three = 6;
  for (int i = 0; i < this->top_three_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->top_three(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100502::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 camp_rank = 1;
  if (has_camp_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->camp_rank(), target);
  }
  
  // optional int32 self_rank = 2;
  if (has_self_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->self_rank(), target);
  }
  
  // optional int32 self_kill = 3;
  if (has_self_kill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->self_kill(), target);
  }
  
  // optional int32 self_reward = 4;
  if (has_self_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->self_reward(), target);
  }
  
  // optional int32 camp_reward = 5;
  if (has_camp_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->camp_reward(), target);
  }
  
  // repeated .ProtoSMBattleRankRec top_three = 6;
  for (int i = 0; i < this->top_three_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->top_three(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100502::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 camp_rank = 1;
    if (has_camp_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->camp_rank());
    }
    
    // optional int32 self_rank = 2;
    if (has_self_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->self_rank());
    }
    
    // optional int32 self_kill = 3;
    if (has_self_kill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->self_kill());
    }
    
    // optional int32 self_reward = 4;
    if (has_self_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->self_reward());
    }
    
    // optional int32 camp_reward = 5;
    if (has_camp_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->camp_reward());
    }
    
  }
  // repeated .ProtoSMBattleRankRec top_three = 6;
  total_size += 1 * this->top_three_size();
  for (int i = 0; i < this->top_three_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->top_three(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100502::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100502* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100502*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100502::MergeFrom(const Proto80100502& from) {
  GOOGLE_CHECK_NE(&from, this);
  top_three_.MergeFrom(from.top_three_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_camp_rank()) {
      set_camp_rank(from.camp_rank());
    }
    if (from.has_self_rank()) {
      set_self_rank(from.self_rank());
    }
    if (from.has_self_kill()) {
      set_self_kill(from.self_kill());
    }
    if (from.has_self_reward()) {
      set_self_reward(from.self_reward());
    }
    if (from.has_camp_reward()) {
      set_camp_reward(from.camp_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100502::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100502::CopyFrom(const Proto80100502& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100502::IsInitialized() const {
  
  return true;
}

void Proto80100502::Swap(Proto80100502* other) {
  if (other != this) {
    std::swap(camp_rank_, other->camp_rank_);
    std::swap(self_rank_, other->self_rank_);
    std::swap(self_kill_, other->self_kill_);
    std::swap(self_reward_, other->self_reward_);
    std::swap(camp_reward_, other->camp_reward_);
    top_three_.Swap(&other->top_three_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100502::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100502_descriptor_;
  metadata.reflection = Proto80100502_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400625::kIdFieldNumber;
#endif  // !_MSC_VER

Proto11400625::Proto11400625()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400625::InitAsDefaultInstance() {
}

Proto11400625::Proto11400625(const Proto11400625& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400625::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400625::~Proto11400625() {
  SharedDtor();
}

void Proto11400625::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400625::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400625::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400625_descriptor_;
}

const Proto11400625& Proto11400625::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto11400625* Proto11400625::default_instance_ = NULL;

Proto11400625* Proto11400625::New() const {
  return new Proto11400625;
}

void Proto11400625::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400625::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400625::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400625::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400625::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400625::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400625* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400625*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400625::MergeFrom(const Proto11400625& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400625::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400625::CopyFrom(const Proto11400625& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400625::IsInitialized() const {
  
  return true;
}

void Proto11400625::Swap(Proto11400625* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400625::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400625_descriptor_;
  metadata.reflection = Proto11400625_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10405011::kPlayerIdFieldNumber;
#endif  // !_MSC_VER

Proto10405011::Proto10405011()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10405011::InitAsDefaultInstance() {
}

Proto10405011::Proto10405011(const Proto10405011& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10405011::SharedCtor() {
  _cached_size_ = 0;
  player_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10405011::~Proto10405011() {
  SharedDtor();
}

void Proto10405011::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10405011::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10405011::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10405011_descriptor_;
}

const Proto10405011& Proto10405011::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto10405011* Proto10405011::default_instance_ = NULL;

Proto10405011* Proto10405011::New() const {
  return new Proto10405011;
}

void Proto10405011::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    player_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10405011::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 player_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
          set_has_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10405011::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->player_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10405011::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->player_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10405011::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10405011::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10405011* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10405011*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10405011::MergeFrom(const Proto10405011& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10405011::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10405011::CopyFrom(const Proto10405011& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10405011::IsInitialized() const {
  
  return true;
}

void Proto10405011::Swap(Proto10405011* other) {
  if (other != this) {
    std::swap(player_id_, other->player_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10405011::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10405011_descriptor_;
  metadata.reflection = Proto10405011_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80405014::kPlayerListFieldNumber;
const int Proto80405014::kPlayerScoreListFieldNumber;
const int Proto80405014::kPlayerRankFieldNumber;
const int Proto80405014::kPlayerRightNumFieldNumber;
const int Proto80405014::kPlayerScoreNumFieldNumber;
#endif  // !_MSC_VER

Proto80405014::Proto80405014()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80405014::InitAsDefaultInstance() {
}

Proto80405014::Proto80405014(const Proto80405014& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80405014::SharedCtor() {
  _cached_size_ = 0;
  player_rank_ = 0;
  player_right_num_ = 0;
  player_score_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80405014::~Proto80405014() {
  SharedDtor();
}

void Proto80405014::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80405014::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80405014::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80405014_descriptor_;
}

const Proto80405014& Proto80405014::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto80405014* Proto80405014::default_instance_ = NULL;

Proto80405014* Proto80405014::New() const {
  return new Proto80405014;
}

void Proto80405014::Clear() {
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    player_rank_ = 0;
    player_right_num_ = 0;
    player_score_num_ = 0;
  }
  player_list_.Clear();
  player_score_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80405014::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string player_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_player_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_player_list()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->player_list(0).data(), this->player_list(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_player_list;
        if (input->ExpectTag(16)) goto parse_player_score_list;
        break;
      }
      
      // repeated int64 player_score_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_score_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16, input, this->mutable_player_score_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_player_score_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_player_score_list;
        if (input->ExpectTag(24)) goto parse_player_rank;
        break;
      }
      
      // optional int32 player_rank = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_rank_)));
          set_has_player_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_player_right_num;
        break;
      }
      
      // optional int32 player_right_num = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_right_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_right_num_)));
          set_has_player_right_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_player_score_num;
        break;
      }
      
      // optional int32 player_score_num = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_score_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_score_num_)));
          set_has_player_score_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80405014::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string player_list = 1;
  for (int i = 0; i < this->player_list_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->player_list(i).data(), this->player_list(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->player_list(i), output);
  }
  
  // repeated int64 player_score_list = 2;
  for (int i = 0; i < this->player_score_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->player_score_list(i), output);
  }
  
  // optional int32 player_rank = 3;
  if (has_player_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->player_rank(), output);
  }
  
  // optional int32 player_right_num = 4;
  if (has_player_right_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->player_right_num(), output);
  }
  
  // optional int32 player_score_num = 5;
  if (has_player_score_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->player_score_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80405014::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string player_list = 1;
  for (int i = 0; i < this->player_list_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->player_list(i).data(), this->player_list(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->player_list(i), target);
  }
  
  // repeated int64 player_score_list = 2;
  for (int i = 0; i < this->player_score_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->player_score_list(i), target);
  }
  
  // optional int32 player_rank = 3;
  if (has_player_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->player_rank(), target);
  }
  
  // optional int32 player_right_num = 4;
  if (has_player_right_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->player_right_num(), target);
  }
  
  // optional int32 player_score_num = 5;
  if (has_player_score_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->player_score_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80405014::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional int32 player_rank = 3;
    if (has_player_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_rank());
    }
    
    // optional int32 player_right_num = 4;
    if (has_player_right_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_right_num());
    }
    
    // optional int32 player_score_num = 5;
    if (has_player_score_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_score_num());
    }
    
  }
  // repeated string player_list = 1;
  total_size += 1 * this->player_list_size();
  for (int i = 0; i < this->player_list_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->player_list(i));
  }
  
  // repeated int64 player_score_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->player_score_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->player_score_list(i));
    }
    total_size += 1 * this->player_score_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80405014::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80405014* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80405014*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80405014::MergeFrom(const Proto80405014& from) {
  GOOGLE_CHECK_NE(&from, this);
  player_list_.MergeFrom(from.player_list_);
  player_score_list_.MergeFrom(from.player_score_list_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_player_rank()) {
      set_player_rank(from.player_rank());
    }
    if (from.has_player_right_num()) {
      set_player_right_num(from.player_right_num());
    }
    if (from.has_player_score_num()) {
      set_player_score_num(from.player_score_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80405014::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80405014::CopyFrom(const Proto80405014& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80405014::IsInitialized() const {
  
  return true;
}

void Proto80405014::Swap(Proto80405014* other) {
  if (other != this) {
    player_list_.Swap(&other->player_list_);
    player_score_list_.Swap(&other->player_score_list_);
    std::swap(player_rank_, other->player_rank_);
    std::swap(player_right_num_, other->player_right_num_);
    std::swap(player_score_num_, other->player_score_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80405014::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80405014_descriptor_;
  metadata.reflection = Proto80405014_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80405015::kTopPlayerNumFieldNumber;
#endif  // !_MSC_VER

Proto80405015::Proto80405015()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80405015::InitAsDefaultInstance() {
}

Proto80405015::Proto80405015(const Proto80405015& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80405015::SharedCtor() {
  _cached_size_ = 0;
  top_player_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80405015::~Proto80405015() {
  SharedDtor();
}

void Proto80405015::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80405015::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80405015::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80405015_descriptor_;
}

const Proto80405015& Proto80405015::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto80405015* Proto80405015::default_instance_ = NULL;

Proto80405015* Proto80405015::New() const {
  return new Proto80405015;
}

void Proto80405015::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    top_player_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80405015::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 top_player_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_player_num_)));
          set_has_top_player_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80405015::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 top_player_num = 1;
  if (has_top_player_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->top_player_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80405015::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 top_player_num = 1;
  if (has_top_player_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->top_player_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80405015::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 top_player_num = 1;
    if (has_top_player_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top_player_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80405015::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80405015* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80405015*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80405015::MergeFrom(const Proto80405015& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_top_player_num()) {
      set_top_player_num(from.top_player_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80405015::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80405015::CopyFrom(const Proto80405015& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80405015::IsInitialized() const {
  
  return true;
}

void Proto80405015::Swap(Proto80405015* other) {
  if (other != this) {
    std::swap(top_player_num_, other->top_player_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80405015::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80405015_descriptor_;
  metadata.reflection = Proto80405015_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80405016::kTopPlayerFieldNumber;
const int Proto80405016::kPlayerIdFieldNumber;
const int Proto80405016::kPlayerRankFieldNumber;
#endif  // !_MSC_VER

Proto80405016::Proto80405016()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80405016::InitAsDefaultInstance() {
  top_player_ = const_cast< ::ProtoCoord*>(&::ProtoCoord::default_instance());
}

Proto80405016::Proto80405016(const Proto80405016& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80405016::SharedCtor() {
  _cached_size_ = 0;
  top_player_ = NULL;
  player_id_ = GOOGLE_LONGLONG(0);
  player_rank_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80405016::~Proto80405016() {
  SharedDtor();
}

void Proto80405016::SharedDtor() {
  if (this != default_instance_) {
    delete top_player_;
  }
}

void Proto80405016::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80405016::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80405016_descriptor_;
}

const Proto80405016& Proto80405016::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient015_2eproto();  return *default_instance_;
}

Proto80405016* Proto80405016::default_instance_ = NULL;

Proto80405016* Proto80405016::New() const {
  return new Proto80405016;
}

void Proto80405016::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_top_player()) {
      if (top_player_ != NULL) top_player_->::ProtoCoord::Clear();
    }
    player_id_ = GOOGLE_LONGLONG(0);
    player_rank_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80405016::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoCoord top_player = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_top_player()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_player_id;
        break;
      }
      
      // optional int64 player_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
          set_has_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_player_rank;
        break;
      }
      
      // optional int32 player_rank = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_rank_)));
          set_has_player_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80405016::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoCoord top_player = 1;
  if (has_top_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->top_player(), output);
  }
  
  // optional int64 player_id = 2;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->player_id(), output);
  }
  
  // optional int32 player_rank = 3;
  if (has_player_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->player_rank(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80405016::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoCoord top_player = 1;
  if (has_top_player()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->top_player(), target);
  }
  
  // optional int64 player_id = 2;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->player_id(), target);
  }
  
  // optional int32 player_rank = 3;
  if (has_player_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->player_rank(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80405016::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoCoord top_player = 1;
    if (has_top_player()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->top_player());
    }
    
    // optional int64 player_id = 2;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_id());
    }
    
    // optional int32 player_rank = 3;
    if (has_player_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_rank());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80405016::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80405016* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80405016*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80405016::MergeFrom(const Proto80405016& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_top_player()) {
      mutable_top_player()->::ProtoCoord::MergeFrom(from.top_player());
    }
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
    if (from.has_player_rank()) {
      set_player_rank(from.player_rank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80405016::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80405016::CopyFrom(const Proto80405016& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80405016::IsInitialized() const {
  
  return true;
}

void Proto80405016::Swap(Proto80405016* other) {
  if (other != this) {
    std::swap(top_player_, other->top_player_);
    std::swap(player_id_, other->player_id_);
    std::swap(player_rank_, other->player_rank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80405016::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80405016_descriptor_;
  metadata.reflection = Proto80405016_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
