// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoInner010.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto31403200_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31403200_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30103200_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30103200_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400515_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400515_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400516_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400516_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400055_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400055_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400057_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400057_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400042_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400042_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400056_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400056_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31403201_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31403201_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400057_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400057_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100111_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100111_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100607_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100607_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400058_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400058_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402501_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402501_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402502_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402502_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402503_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402503_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400517_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400517_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402504_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402504_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402505_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402505_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400059_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400059_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100232_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100232_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400457_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400457_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31403202_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31403202_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31402701_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31402701_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31402702_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31402702_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402506_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402506_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400060_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400060_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31403203_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31403203_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402006_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402006_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30101905_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30101905_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30101909_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30101909_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402009_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402009_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402010_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402010_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31403204_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31403204_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400061_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400061_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402014_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402014_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400062_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400062_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402002_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402005_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402005_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402015_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402015_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoInner010_2eproto() {
  protobuf_AddDesc_ProtoInner010_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoInner010.proto");
  GOOGLE_CHECK(file != NULL);
  Proto31403200_descriptor_ = file->message_type(0);
  static const int Proto31403200_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403200, task_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403200, task_finish_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403200, type_),
  };
  Proto31403200_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31403200_descriptor_,
      Proto31403200::default_instance_,
      Proto31403200_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403200, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403200, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31403200));
  Proto30103200_descriptor_ = file->message_type(1);
  static const int Proto30103200_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30103200, add_gold_),
  };
  Proto30103200_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30103200_descriptor_,
      Proto30103200::default_instance_,
      Proto30103200_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30103200, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30103200, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30103200));
  Proto30400515_descriptor_ = file->message_type(2);
  static const int Proto30400515_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400515, first_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400515, second_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400515, page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400515, act_info_),
  };
  Proto30400515_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400515_descriptor_,
      Proto30400515::default_instance_,
      Proto30400515_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400515, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400515, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400515));
  Proto30400516_descriptor_ = file->message_type(3);
  static const int Proto30400516_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400516, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400516, self_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400516, server_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400516, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400516, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400516, act_info_),
  };
  Proto30400516_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400516_descriptor_,
      Proto30400516::default_instance_,
      Proto30400516_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400516, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400516, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400516));
  Proto31400055_descriptor_ = file->message_type(4);
  static const int Proto31400055_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400055, first_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400055, second_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400055, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400055, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400055, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400055, item_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400055, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400055, ret_),
  };
  Proto31400055_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400055_descriptor_,
      Proto31400055::default_instance_,
      Proto31400055_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400055, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400055, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400055));
  Proto30400057_descriptor_ = file->message_type(5);
  static const int Proto30400057_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400057, league_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400057, type_),
  };
  Proto30400057_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400057_descriptor_,
      Proto30400057::default_instance_,
      Proto30400057_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400057, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400057, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400057));
  Proto30400042_descriptor_ = file->message_type(6);
  static const int Proto30400042_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400042, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400042, start_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400042, end_tick_),
  };
  Proto30400042_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400042_descriptor_,
      Proto30400042::default_instance_,
      Proto30400042_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400042, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400042, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400042));
  Proto31400056_descriptor_ = file->message_type(7);
  static const int Proto31400056_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400056, is_big_act_time_),
  };
  Proto31400056_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400056_descriptor_,
      Proto31400056::default_instance_,
      Proto31400056_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400056, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400056, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400056));
  Proto31403201_descriptor_ = file->message_type(8);
  static const int Proto31403201_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403201, task_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403201, task_finish_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403201, type_),
  };
  Proto31403201_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31403201_descriptor_,
      Proto31403201::default_instance_,
      Proto31403201_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403201, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403201, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31403201));
  Proto31400057_descriptor_ = file->message_type(9);
  static const int Proto31400057_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400057, buy_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400057, hickty_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400057, amount_),
  };
  Proto31400057_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400057_descriptor_,
      Proto31400057::default_instance_,
      Proto31400057_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400057, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400057, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400057));
  Proto30100111_descriptor_ = file->message_type(10);
  static const int Proto30100111_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100111, result_list_),
  };
  Proto30100111_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100111_descriptor_,
      Proto30100111::default_instance_,
      Proto30100111_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100111, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100111, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100111));
  Proto30100607_descriptor_ = file->message_type(11);
  static const int Proto30100607_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100607, brocast_info_),
  };
  Proto30100607_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100607_descriptor_,
      Proto30100607::default_instance_,
      Proto30100607_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100607, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100607, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100607));
  Proto31400058_descriptor_ = file->message_type(12);
  static const int Proto31400058_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400058, synthesis_item_id_),
  };
  Proto31400058_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400058_descriptor_,
      Proto31400058::default_instance_,
      Proto31400058_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400058, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400058, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400058));
  Proto30402501_descriptor_ = file->message_type(13);
  static const int Proto30402501_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402501, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402501, refresh_),
  };
  Proto30402501_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402501_descriptor_,
      Proto30402501::default_instance_,
      Proto30402501_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402501, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402501, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402501));
  Proto30402502_descriptor_ = file->message_type(14);
  static const int Proto30402502_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402502, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402502, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402502, rank_),
  };
  Proto30402502_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402502_descriptor_,
      Proto30402502::default_instance_,
      Proto30402502_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402502, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402502, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402502));
  Proto30402503_descriptor_ = file->message_type(15);
  static const int Proto30402503_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402503, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402503, ahead_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402503, last_),
  };
  Proto30402503_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402503_descriptor_,
      Proto30402503::default_instance_,
      Proto30402503_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402503, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402503, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402503));
  Proto30400517_descriptor_ = file->message_type(16);
  static const int Proto30400517_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400517, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400517, mail_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400517, boss_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400517, mail_info_),
  };
  Proto30400517_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400517_descriptor_,
      Proto30400517::default_instance_,
      Proto30400517_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400517, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400517, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400517));
  Proto30402504_descriptor_ = file->message_type(17);
  static const int Proto30402504_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402504, tbattle_value_),
  };
  Proto30402504_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402504_descriptor_,
      Proto30402504::default_instance_,
      Proto30402504_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402504, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402504, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402504));
  Proto30402505_descriptor_ = file->message_type(18);
  static const int Proto30402505_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402505, reward_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402505, serial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402505, mail_id_),
  };
  Proto30402505_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402505_descriptor_,
      Proto30402505::default_instance_,
      Proto30402505_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402505, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402505, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402505));
  Proto31400059_descriptor_ = file->message_type(19);
  static const int Proto31400059_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400059, qq_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400059, des_content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400059, des_mail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400059, limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400059, agent_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400059, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400059, type_),
  };
  Proto31400059_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400059_descriptor_,
      Proto31400059::default_instance_,
      Proto31400059_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400059, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400059, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400059));
  Proto30100232_descriptor_ = file->message_type(20);
  static const int Proto30100232_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100232, role_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100232, rank_),
  };
  Proto30100232_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100232_descriptor_,
      Proto30100232::default_instance_,
      Proto30100232_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100232, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100232, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100232));
  Proto30400457_descriptor_ = file->message_type(21);
  static const int Proto30400457_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400457, leader_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400457, leader_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400457, league_index_),
  };
  Proto30400457_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400457_descriptor_,
      Proto30400457::default_instance_,
      Proto30400457_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400457, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400457, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400457));
  Proto31403202_descriptor_ = file->message_type(22);
  static const int Proto31403202_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403202, act_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403202, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403202, item_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403202, item_bind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403202, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403202, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403202, type_),
  };
  Proto31403202_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31403202_descriptor_,
      Proto31403202::default_instance_,
      Proto31403202_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403202, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403202, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31403202));
  Proto31402701_descriptor_ = file->message_type(23);
  static const int Proto31402701_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402701, promot_turns_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402701, win_team_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402701, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402701, team_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402701, server_prev_),
  };
  Proto31402701_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31402701_descriptor_,
      Proto31402701::default_instance_,
      Proto31402701_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402701, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402701, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31402701));
  Proto31402702_descriptor_ = file->message_type(24);
  static const int Proto31402702_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402702, team_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402702, need_force_),
  };
  Proto31402702_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31402702_descriptor_,
      Proto31402702::default_instance_,
      Proto31402702_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402702, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402702, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31402702));
  Proto30402506_descriptor_ = file->message_type(25);
  static const int Proto30402506_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402506, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402506, practice_),
  };
  Proto30402506_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402506_descriptor_,
      Proto30402506::default_instance_,
      Proto30402506_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402506, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402506, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402506));
  Proto31400060_descriptor_ = file->message_type(26);
  static const int Proto31400060_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400060, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400060, first_recharge_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400060, last_recharge_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400060, today_recharge_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400060, act_recharge_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400060, act_has_mail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400060, reward_),
  };
  Proto31400060_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400060_descriptor_,
      Proto31400060::default_instance_,
      Proto31400060_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400060, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400060, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400060));
  Proto31403203_descriptor_ = file->message_type(27);
  static const int Proto31403203_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403203, value_),
  };
  Proto31403203_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31403203_descriptor_,
      Proto31403203::default_instance_,
      Proto31403203_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403203, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403203, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31403203));
  Proto30402001_descriptor_ = file->message_type(28);
  static const int Proto30402001_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402001, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402001, op_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402001, team_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402001, need_force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402001, leader_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402001, teamer_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402001, server_info_),
  };
  Proto30402001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402001_descriptor_,
      Proto30402001::default_instance_,
      Proto30402001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402001));
  Proto30402006_descriptor_ = file->message_type(29);
  static const int Proto30402006_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402006, team_id_),
  };
  Proto30402006_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402006_descriptor_,
      Proto30402006::default_instance_,
      Proto30402006_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402006, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402006, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402006));
  Proto30101905_descriptor_ = file->message_type(30);
  static const int Proto30101905_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101905, team_id_),
  };
  Proto30101905_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30101905_descriptor_,
      Proto30101905::default_instance_,
      Proto30101905_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101905, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101905, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30101905));
  Proto30101909_descriptor_ = file->message_type(31);
  static const int Proto30101909_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101909, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101909, is_signup_),
  };
  Proto30101909_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30101909_descriptor_,
      Proto30101909::default_instance_,
      Proto30101909_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101909, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101909, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30101909));
  Proto30402009_descriptor_ = file->message_type(32);
  static const int Proto30402009_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402009, server_flag_),
  };
  Proto30402009_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402009_descriptor_,
      Proto30402009::default_instance_,
      Proto30402009_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402009, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402009, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402009));
  Proto30402010_descriptor_ = file->message_type(33);
  static const int Proto30402010_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402010, signup_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402010, signup_end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402010, quality_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402010, quality_end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402010, knockout_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402010, knockout_end_),
  };
  Proto30402010_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402010_descriptor_,
      Proto30402010::default_instance_,
      Proto30402010_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402010, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402010, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402010));
  Proto31403204_descriptor_ = file->message_type(34);
  static const int Proto31403204_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403204, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403204, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403204, item_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403204, item_bind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403204, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403204, sub_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403204, serial_obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403204, type_),
  };
  Proto31403204_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31403204_descriptor_,
      Proto31403204::default_instance_,
      Proto31403204_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403204, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403204, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31403204));
  Proto31400061_descriptor_ = file->message_type(35);
  static const int Proto31400061_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400061, item_info_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400061, obj_),
  };
  Proto31400061_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400061_descriptor_,
      Proto31400061::default_instance_,
      Proto31400061_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400061, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400061, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400061));
  Proto30402014_descriptor_ = file->message_type(36);
  static const int Proto30402014_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402014, force_info_),
  };
  Proto30402014_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402014_descriptor_,
      Proto30402014::default_instance_,
      Proto30402014_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402014, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402014, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402014));
  Proto31400062_descriptor_ = file->message_type(37);
  static const int Proto31400062_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400062, item_info_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400062, obj_),
  };
  Proto31400062_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400062_descriptor_,
      Proto31400062::default_instance_,
      Proto31400062_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400062, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400062, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400062));
  Proto30402003_descriptor_ = file->message_type(38);
  static const int Proto30402003_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402003, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402003, role_id_),
  };
  Proto30402003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402003_descriptor_,
      Proto30402003::default_instance_,
      Proto30402003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402003));
  Proto30402002_descriptor_ = file->message_type(39);
  static const int Proto30402002_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402002, offline_role_recogn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402002, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402002, src_role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402002, msg_body_),
  };
  Proto30402002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402002_descriptor_,
      Proto30402002::default_instance_,
      Proto30402002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402002));
  Proto30402005_descriptor_ = file->message_type(40);
  static const int Proto30402005_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402005, team_id_),
  };
  Proto30402005_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402005_descriptor_,
      Proto30402005::default_instance_,
      Proto30402005_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402005, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402005, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402005));
  Proto30402015_descriptor_ = file->message_type(41);
  static const int Proto30402015_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402015, page_),
  };
  Proto30402015_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402015_descriptor_,
      Proto30402015::default_instance_,
      Proto30402015_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402015, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402015, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402015));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoInner010_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31403200_descriptor_, &Proto31403200::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30103200_descriptor_, &Proto30103200::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400515_descriptor_, &Proto30400515::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400516_descriptor_, &Proto30400516::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400055_descriptor_, &Proto31400055::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400057_descriptor_, &Proto30400057::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400042_descriptor_, &Proto30400042::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400056_descriptor_, &Proto31400056::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31403201_descriptor_, &Proto31403201::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400057_descriptor_, &Proto31400057::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100111_descriptor_, &Proto30100111::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100607_descriptor_, &Proto30100607::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400058_descriptor_, &Proto31400058::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402501_descriptor_, &Proto30402501::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402502_descriptor_, &Proto30402502::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402503_descriptor_, &Proto30402503::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400517_descriptor_, &Proto30400517::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402504_descriptor_, &Proto30402504::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402505_descriptor_, &Proto30402505::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400059_descriptor_, &Proto31400059::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100232_descriptor_, &Proto30100232::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400457_descriptor_, &Proto30400457::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31403202_descriptor_, &Proto31403202::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31402701_descriptor_, &Proto31402701::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31402702_descriptor_, &Proto31402702::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402506_descriptor_, &Proto30402506::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400060_descriptor_, &Proto31400060::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31403203_descriptor_, &Proto31403203::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402001_descriptor_, &Proto30402001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402006_descriptor_, &Proto30402006::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30101905_descriptor_, &Proto30101905::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30101909_descriptor_, &Proto30101909::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402009_descriptor_, &Proto30402009::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402010_descriptor_, &Proto30402010::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31403204_descriptor_, &Proto31403204::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400061_descriptor_, &Proto31400061::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402014_descriptor_, &Proto30402014::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400062_descriptor_, &Proto31400062::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402003_descriptor_, &Proto30402003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402002_descriptor_, &Proto30402002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402005_descriptor_, &Proto30402005::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402015_descriptor_, &Proto30402015::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoInner010_2eproto() {
  delete Proto31403200::default_instance_;
  delete Proto31403200_reflection_;
  delete Proto30103200::default_instance_;
  delete Proto30103200_reflection_;
  delete Proto30400515::default_instance_;
  delete Proto30400515_reflection_;
  delete Proto30400516::default_instance_;
  delete Proto30400516_reflection_;
  delete Proto31400055::default_instance_;
  delete Proto31400055_reflection_;
  delete Proto30400057::default_instance_;
  delete Proto30400057_reflection_;
  delete Proto30400042::default_instance_;
  delete Proto30400042_reflection_;
  delete Proto31400056::default_instance_;
  delete Proto31400056_reflection_;
  delete Proto31403201::default_instance_;
  delete Proto31403201_reflection_;
  delete Proto31400057::default_instance_;
  delete Proto31400057_reflection_;
  delete Proto30100111::default_instance_;
  delete Proto30100111_reflection_;
  delete Proto30100607::default_instance_;
  delete Proto30100607_reflection_;
  delete Proto31400058::default_instance_;
  delete Proto31400058_reflection_;
  delete Proto30402501::default_instance_;
  delete Proto30402501_reflection_;
  delete Proto30402502::default_instance_;
  delete Proto30402502_reflection_;
  delete Proto30402503::default_instance_;
  delete Proto30402503_reflection_;
  delete Proto30400517::default_instance_;
  delete Proto30400517_reflection_;
  delete Proto30402504::default_instance_;
  delete Proto30402504_reflection_;
  delete Proto30402505::default_instance_;
  delete Proto30402505_reflection_;
  delete Proto31400059::default_instance_;
  delete Proto31400059_reflection_;
  delete Proto30100232::default_instance_;
  delete Proto30100232_reflection_;
  delete Proto30400457::default_instance_;
  delete Proto30400457_reflection_;
  delete Proto31403202::default_instance_;
  delete Proto31403202_reflection_;
  delete Proto31402701::default_instance_;
  delete Proto31402701_reflection_;
  delete Proto31402702::default_instance_;
  delete Proto31402702_reflection_;
  delete Proto30402506::default_instance_;
  delete Proto30402506_reflection_;
  delete Proto31400060::default_instance_;
  delete Proto31400060_reflection_;
  delete Proto31403203::default_instance_;
  delete Proto31403203_reflection_;
  delete Proto30402001::default_instance_;
  delete Proto30402001_reflection_;
  delete Proto30402006::default_instance_;
  delete Proto30402006_reflection_;
  delete Proto30101905::default_instance_;
  delete Proto30101905_reflection_;
  delete Proto30101909::default_instance_;
  delete Proto30101909_reflection_;
  delete Proto30402009::default_instance_;
  delete Proto30402009_reflection_;
  delete Proto30402010::default_instance_;
  delete Proto30402010_reflection_;
  delete Proto31403204::default_instance_;
  delete Proto31403204_reflection_;
  delete Proto31400061::default_instance_;
  delete Proto31400061_reflection_;
  delete Proto30402014::default_instance_;
  delete Proto30402014_reflection_;
  delete Proto31400062::default_instance_;
  delete Proto31400062_reflection_;
  delete Proto30402003::default_instance_;
  delete Proto30402003_reflection_;
  delete Proto30402002::default_instance_;
  delete Proto30402002_reflection_;
  delete Proto30402005::default_instance_;
  delete Proto30402005_reflection_;
  delete Proto30402015::default_instance_;
  delete Proto30402015_reflection_;
}

void protobuf_AddDesc_ProtoInner010_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::protobuf_AddDesc_ProtoInnerPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023ProtoInner010.proto\032\021ProtoPublic.proto"
    "\032\026ProtoInnerPublic.proto\"I\n\rProto3140320"
    "0\022\017\n\007task_id\030\001 \001(\005\022\031\n\021task_finish_count\030"
    "\002 \001(\005\022\014\n\004type\030\003 \001(\005\"!\n\rProto30103200\022\020\n\010"
    "add_gold\030\001 \001(\005\"k\n\rProto30400515\022\022\n\nfirst"
    "_type\030\001 \001(\005\022\023\n\013second_type\030\002 \001(\005\022\014\n\004page"
    "\030\003 \001(\005\022#\n\010act_info\030\004 \001(\0132\021.ProtoBackActI"
    "nfo\"\253\001\n\rProto30400516\022\014\n\004type\030\001 \001(\005\022\037\n\ts"
    "elf_info\030\002 \001(\0132\014.ProtoTeamer\022!\n\013server_i"
    "nfo\030\003 \001(\0132\014.ProtoServer\022\016\n\006amount\030\004 \001(\005\022"
    "\023\n\013activity_id\030\005 \001(\005\022#\n\010act_info\030\006 \001(\0132\021"
    ".ProtoBackActInfo\"\230\001\n\rProto31400055\022\023\n\013f"
    "irst_index\030\001 \001(\005\022\024\n\014second_index\030\002 \001(\005\022\014"
    "\n\004type\030\003 \001(\005\022\r\n\005money\030\004 \001(\005\022\017\n\007item_id\030\005"
    " \001(\005\022\021\n\titem_type\030\006 \001(\005\022\016\n\006amount\030\007 \001(\005\022"
    "\013\n\003ret\030\010 \001(\005\"0\n\rProto30400057\022\021\n\tleague_"
    "id\030\001 \001(\003\022\014\n\004type\030\002 \001(\005\"C\n\rProto30400042\022"
    "\014\n\004type\030\001 \001(\005\022\022\n\nstart_tick\030\002 \001(\003\022\020\n\010end"
    "_tick\030\003 \001(\003\"(\n\rProto31400056\022\027\n\017is_big_a"
    "ct_time\030\001 \001(\005\"I\n\rProto31403201\022\017\n\007task_i"
    "d\030\001 \001(\005\022\031\n\021task_finish_count\030\002 \001(\005\022\014\n\004ty"
    "pe\030\003 \001(\005\"D\n\rProto31400057\022\020\n\010buy_type\030\001 "
    "\001(\005\022\021\n\thickty_id\030\002 \001(\005\022\016\n\006amount\030\003 \001(\005\"0"
    "\n\rProto30100111\022\037\n\013result_list\030\001 \003(\0132\n.P"
    "rotoItem\"%\n\rProto30100607\022\024\n\014brocast_inf"
    "o\030\001 \001(\014\"*\n\rProto31400058\022\031\n\021synthesis_it"
    "em_id\030\001 \001(\005\".\n\rProto30402501\022\014\n\004type\030\001 \001"
    "(\005\022\017\n\007refresh\030\002 \001(\005\"<\n\rProto30402502\022\017\n\007"
    "role_id\030\001 \001(\003\022\014\n\004type\030\002 \001(\005\022\014\n\004rank\030\003 \001("
    "\005\":\n\rProto30402503\022\014\n\004type\030\001 \001(\005\022\r\n\005ahea"
    "d\030\002 \001(\005\022\014\n\004last\030\003 \001(\005\"i\n\rProto30400517\022\014"
    "\n\004type\030\001 \001(\005\022\017\n\007mail_id\030\002 \001(\005\022\021\n\tboss_na"
    "me\030\003 \001(\t\022&\n\tmail_info\030\004 \003(\0132\023.ProtoTrvlW"
    "bossMail\"&\n\rProto30402504\022\025\n\rtbattle_val"
    "ue\030\001 \001(\005\"T\n\rProto30402505\022\021\n\treward_id\030\001"
    " \001(\005\022\037\n\006serial\030\002 \001(\0132\017.ProtoSerialObj\022\017\n"
    "\007mail_id\030\003 \001(\005\"\210\001\n\rProto31400059\022\016\n\006qq_n"
    "um\030\001 \001(\t\022\023\n\013des_content\030\002 \001(\t\022\020\n\010des_mai"
    "l\030\003 \001(\t\022\r\n\005limit\030\004 \001(\005\022\022\n\nagent_code\030\005 \001"
    "(\005\022\017\n\007role_id\030\006 \001(\003\022\014\n\004type\030\007 \001(\005\"+\n\rPro"
    "to30100232\022\014\n\004role\030\001 \001(\003\022\014\n\004rank\030\002 \001(\005\"K"
    "\n\rProto30400457\022\024\n\014leader_index\030\001 \001(\003\022\016\n"
    "\006leader\030\002 \001(\t\022\024\n\014league_index\030\003 \001(\003\"\202\001\n\r"
    "Proto31403202\022\016\n\006act_id\030\001 \001(\005\022\017\n\007item_id"
    "\030\002 \003(\005\022\023\n\013item_amount\030\003 \003(\005\022\021\n\titem_bind"
    "\030\004 \003(\005\022\013\n\003ret\030\005 \001(\005\022\r\n\005index\030\006 \001(\005\022\014\n\004ty"
    "pe\030\007 \001(\005\"o\n\rProto31402701\022\024\n\014promot_turn"
    "s\030\001 \001(\005\022\020\n\010win_team\030\002 \001(\003\022\016\n\006amount\030\003 \001("
    "\005\022\021\n\tteam_name\030\004 \001(\t\022\023\n\013server_prev\030\005 \001("
    "\t\"6\n\rProto31402702\022\021\n\tteam_name\030\001 \001(\t\022\022\n"
    "\nneed_force\030\002 \001(\005\"2\n\rProto30402506\022\017\n\007ro"
    "le_id\030\001 \001(\003\022\020\n\010practice\030\002 \001(\005\"\270\001\n\rProto3"
    "1400060\022\017\n\007role_id\030\001 \001(\003\022\033\n\023first_rechar"
    "ge_gold\030\002 \001(\005\022\032\n\022last_recharge_time\030\003 \001("
    "\005\022\033\n\023today_recharge_gold\030\004 \001(\005\022\032\n\022act_re"
    "charge_times\030\005 \001(\005\022\024\n\014act_has_mail\030\006 \001(\005"
    "\022\016\n\006reward\030\007 \003(\005\"\036\n\rProto31403203\022\r\n\005val"
    "ue\030\001 \001(\005\"\261\001\n\rProto30402001\022\017\n\007team_id\030\001 "
    "\001(\003\022\017\n\007op_type\030\002 \001(\005\022\021\n\tteam_name\030\003 \001(\t\022"
    "\022\n\nneed_force\030\004 \001(\005\022\021\n\tleader_id\030\005 \001(\003\022!"
    "\n\013teamer_list\030\006 \003(\0132\014.ProtoTeamer\022!\n\013ser"
    "ver_info\030\007 \001(\0132\014.ProtoServer\" \n\rProto304"
    "02006\022\017\n\007team_id\030\001 \001(\003\" \n\rProto30101905\022"
    "\017\n\007team_id\030\001 \001(\003\"3\n\rProto30101909\022\017\n\007tea"
    "m_id\030\001 \001(\003\022\021\n\tis_signup\030\002 \001(\005\"$\n\rProto30"
    "402009\022\023\n\013server_flag\030\001 \001(\t\"\223\001\n\rProto304"
    "02010\022\024\n\014signup_start\030\001 \001(\003\022\022\n\nsignup_en"
    "d\030\002 \001(\003\022\025\n\rquality_start\030\003 \001(\003\022\023\n\013qualit"
    "y_end\030\004 \001(\003\022\026\n\016knockout_start\030\005 \001(\003\022\024\n\014k"
    "nockout_end\030\006 \001(\005\"\252\001\n\rProto31403204\022\r\n\005m"
    "oney\030\001 \001(\005\022\017\n\007item_id\030\002 \001(\005\022\023\n\013item_amou"
    "nt\030\003 \001(\005\022\021\n\titem_bind\030\004 \001(\005\022\013\n\003ret\030\005 \001(\005"
    "\022\021\n\tsub_value\030\006 \001(\005\022#\n\nserial_obj\030\007 \001(\0132"
    "\017.ProtoSerialObj\022\014\n\004type\030\010 \001(\005\"S\n\rProto3"
    "1400061\022$\n\016item_info_list\030\001 \003(\0132\014.ProtoI"
    "temId\022\034\n\003obj\030\002 \001(\0132\017.ProtoSerialObj\"8\n\rP"
    "roto30402014\022\'\n\nforce_info\030\001 \003(\0132\023.Proto"
    "TeamForceInfo\"S\n\rProto31400062\022$\n\016item_i"
    "nfo_list\030\001 \003(\0132\014.ProtoItemId\022\034\n\003obj\030\002 \001("
    "\0132\017.ProtoSerialObj\"1\n\rProto30402003\022\017\n\007t"
    "eam_id\030\001 \001(\003\022\017\n\007role_id\030\002 \001(\003\"d\n\rProto30"
    "402002\022\033\n\023offline_role_recogn\030\001 \001(\005\022\017\n\007t"
    "eam_id\030\002 \001(\003\022\023\n\013src_role_id\030\003 \001(\003\022\020\n\010msg"
    "_body\030\004 \001(\014\" \n\rProto30402005\022\017\n\007team_id\030"
    "\001 \001(\003\"\035\n\rProto30402015\022\014\n\004page\030\001 \001(\005", 3396);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoInner010.proto", &protobuf_RegisterTypes);
  Proto31403200::default_instance_ = new Proto31403200();
  Proto30103200::default_instance_ = new Proto30103200();
  Proto30400515::default_instance_ = new Proto30400515();
  Proto30400516::default_instance_ = new Proto30400516();
  Proto31400055::default_instance_ = new Proto31400055();
  Proto30400057::default_instance_ = new Proto30400057();
  Proto30400042::default_instance_ = new Proto30400042();
  Proto31400056::default_instance_ = new Proto31400056();
  Proto31403201::default_instance_ = new Proto31403201();
  Proto31400057::default_instance_ = new Proto31400057();
  Proto30100111::default_instance_ = new Proto30100111();
  Proto30100607::default_instance_ = new Proto30100607();
  Proto31400058::default_instance_ = new Proto31400058();
  Proto30402501::default_instance_ = new Proto30402501();
  Proto30402502::default_instance_ = new Proto30402502();
  Proto30402503::default_instance_ = new Proto30402503();
  Proto30400517::default_instance_ = new Proto30400517();
  Proto30402504::default_instance_ = new Proto30402504();
  Proto30402505::default_instance_ = new Proto30402505();
  Proto31400059::default_instance_ = new Proto31400059();
  Proto30100232::default_instance_ = new Proto30100232();
  Proto30400457::default_instance_ = new Proto30400457();
  Proto31403202::default_instance_ = new Proto31403202();
  Proto31402701::default_instance_ = new Proto31402701();
  Proto31402702::default_instance_ = new Proto31402702();
  Proto30402506::default_instance_ = new Proto30402506();
  Proto31400060::default_instance_ = new Proto31400060();
  Proto31403203::default_instance_ = new Proto31403203();
  Proto30402001::default_instance_ = new Proto30402001();
  Proto30402006::default_instance_ = new Proto30402006();
  Proto30101905::default_instance_ = new Proto30101905();
  Proto30101909::default_instance_ = new Proto30101909();
  Proto30402009::default_instance_ = new Proto30402009();
  Proto30402010::default_instance_ = new Proto30402010();
  Proto31403204::default_instance_ = new Proto31403204();
  Proto31400061::default_instance_ = new Proto31400061();
  Proto30402014::default_instance_ = new Proto30402014();
  Proto31400062::default_instance_ = new Proto31400062();
  Proto30402003::default_instance_ = new Proto30402003();
  Proto30402002::default_instance_ = new Proto30402002();
  Proto30402005::default_instance_ = new Proto30402005();
  Proto30402015::default_instance_ = new Proto30402015();
  Proto31403200::default_instance_->InitAsDefaultInstance();
  Proto30103200::default_instance_->InitAsDefaultInstance();
  Proto30400515::default_instance_->InitAsDefaultInstance();
  Proto30400516::default_instance_->InitAsDefaultInstance();
  Proto31400055::default_instance_->InitAsDefaultInstance();
  Proto30400057::default_instance_->InitAsDefaultInstance();
  Proto30400042::default_instance_->InitAsDefaultInstance();
  Proto31400056::default_instance_->InitAsDefaultInstance();
  Proto31403201::default_instance_->InitAsDefaultInstance();
  Proto31400057::default_instance_->InitAsDefaultInstance();
  Proto30100111::default_instance_->InitAsDefaultInstance();
  Proto30100607::default_instance_->InitAsDefaultInstance();
  Proto31400058::default_instance_->InitAsDefaultInstance();
  Proto30402501::default_instance_->InitAsDefaultInstance();
  Proto30402502::default_instance_->InitAsDefaultInstance();
  Proto30402503::default_instance_->InitAsDefaultInstance();
  Proto30400517::default_instance_->InitAsDefaultInstance();
  Proto30402504::default_instance_->InitAsDefaultInstance();
  Proto30402505::default_instance_->InitAsDefaultInstance();
  Proto31400059::default_instance_->InitAsDefaultInstance();
  Proto30100232::default_instance_->InitAsDefaultInstance();
  Proto30400457::default_instance_->InitAsDefaultInstance();
  Proto31403202::default_instance_->InitAsDefaultInstance();
  Proto31402701::default_instance_->InitAsDefaultInstance();
  Proto31402702::default_instance_->InitAsDefaultInstance();
  Proto30402506::default_instance_->InitAsDefaultInstance();
  Proto31400060::default_instance_->InitAsDefaultInstance();
  Proto31403203::default_instance_->InitAsDefaultInstance();
  Proto30402001::default_instance_->InitAsDefaultInstance();
  Proto30402006::default_instance_->InitAsDefaultInstance();
  Proto30101905::default_instance_->InitAsDefaultInstance();
  Proto30101909::default_instance_->InitAsDefaultInstance();
  Proto30402009::default_instance_->InitAsDefaultInstance();
  Proto30402010::default_instance_->InitAsDefaultInstance();
  Proto31403204::default_instance_->InitAsDefaultInstance();
  Proto31400061::default_instance_->InitAsDefaultInstance();
  Proto30402014::default_instance_->InitAsDefaultInstance();
  Proto31400062::default_instance_->InitAsDefaultInstance();
  Proto30402003::default_instance_->InitAsDefaultInstance();
  Proto30402002::default_instance_->InitAsDefaultInstance();
  Proto30402005::default_instance_->InitAsDefaultInstance();
  Proto30402015::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoInner010_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoInner010_2eproto {
  StaticDescriptorInitializer_ProtoInner010_2eproto() {
    protobuf_AddDesc_ProtoInner010_2eproto();
  }
} static_descriptor_initializer_ProtoInner010_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto31403200::kTaskIdFieldNumber;
const int Proto31403200::kTaskFinishCountFieldNumber;
const int Proto31403200::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto31403200::Proto31403200()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31403200::InitAsDefaultInstance() {
}

Proto31403200::Proto31403200(const Proto31403200& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31403200::SharedCtor() {
  _cached_size_ = 0;
  task_id_ = 0;
  task_finish_count_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31403200::~Proto31403200() {
  SharedDtor();
}

void Proto31403200::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31403200::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31403200::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31403200_descriptor_;
}

const Proto31403200& Proto31403200::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto31403200* Proto31403200::default_instance_ = NULL;

Proto31403200* Proto31403200::New() const {
  return new Proto31403200;
}

void Proto31403200::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    task_id_ = 0;
    task_finish_count_ = 0;
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31403200::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 task_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
          set_has_task_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_task_finish_count;
        break;
      }
      
      // optional int32 task_finish_count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_task_finish_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_finish_count_)));
          set_has_task_finish_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }
      
      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31403200::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->task_id(), output);
  }
  
  // optional int32 task_finish_count = 2;
  if (has_task_finish_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->task_finish_count(), output);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31403200::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->task_id(), target);
  }
  
  // optional int32 task_finish_count = 2;
  if (has_task_finish_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->task_finish_count(), target);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31403200::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 task_id = 1;
    if (has_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task_id());
    }
    
    // optional int32 task_finish_count = 2;
    if (has_task_finish_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task_finish_count());
    }
    
    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31403200::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31403200* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31403200*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31403200::MergeFrom(const Proto31403200& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_task_id()) {
      set_task_id(from.task_id());
    }
    if (from.has_task_finish_count()) {
      set_task_finish_count(from.task_finish_count());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31403200::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31403200::CopyFrom(const Proto31403200& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31403200::IsInitialized() const {
  
  return true;
}

void Proto31403200::Swap(Proto31403200* other) {
  if (other != this) {
    std::swap(task_id_, other->task_id_);
    std::swap(task_finish_count_, other->task_finish_count_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31403200::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31403200_descriptor_;
  metadata.reflection = Proto31403200_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30103200::kAddGoldFieldNumber;
#endif  // !_MSC_VER

Proto30103200::Proto30103200()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30103200::InitAsDefaultInstance() {
}

Proto30103200::Proto30103200(const Proto30103200& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30103200::SharedCtor() {
  _cached_size_ = 0;
  add_gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30103200::~Proto30103200() {
  SharedDtor();
}

void Proto30103200::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30103200::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30103200::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30103200_descriptor_;
}

const Proto30103200& Proto30103200::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30103200* Proto30103200::default_instance_ = NULL;

Proto30103200* Proto30103200::New() const {
  return new Proto30103200;
}

void Proto30103200::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    add_gold_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30103200::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 add_gold = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_gold_)));
          set_has_add_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30103200::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 add_gold = 1;
  if (has_add_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->add_gold(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30103200::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 add_gold = 1;
  if (has_add_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->add_gold(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30103200::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 add_gold = 1;
    if (has_add_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_gold());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30103200::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30103200* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30103200*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30103200::MergeFrom(const Proto30103200& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_add_gold()) {
      set_add_gold(from.add_gold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30103200::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30103200::CopyFrom(const Proto30103200& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30103200::IsInitialized() const {
  
  return true;
}

void Proto30103200::Swap(Proto30103200* other) {
  if (other != this) {
    std::swap(add_gold_, other->add_gold_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30103200::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30103200_descriptor_;
  metadata.reflection = Proto30103200_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400515::kFirstTypeFieldNumber;
const int Proto30400515::kSecondTypeFieldNumber;
const int Proto30400515::kPageFieldNumber;
const int Proto30400515::kActInfoFieldNumber;
#endif  // !_MSC_VER

Proto30400515::Proto30400515()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400515::InitAsDefaultInstance() {
  act_info_ = const_cast< ::ProtoBackActInfo*>(&::ProtoBackActInfo::default_instance());
}

Proto30400515::Proto30400515(const Proto30400515& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400515::SharedCtor() {
  _cached_size_ = 0;
  first_type_ = 0;
  second_type_ = 0;
  page_ = 0;
  act_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400515::~Proto30400515() {
  SharedDtor();
}

void Proto30400515::SharedDtor() {
  if (this != default_instance_) {
    delete act_info_;
  }
}

void Proto30400515::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400515::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400515_descriptor_;
}

const Proto30400515& Proto30400515::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30400515* Proto30400515::default_instance_ = NULL;

Proto30400515* Proto30400515::New() const {
  return new Proto30400515;
}

void Proto30400515::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    first_type_ = 0;
    second_type_ = 0;
    page_ = 0;
    if (has_act_info()) {
      if (act_info_ != NULL) act_info_->::ProtoBackActInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400515::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 first_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_type_)));
          set_has_first_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_second_type;
        break;
      }
      
      // optional int32 second_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_type_)));
          set_has_second_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_page;
        break;
      }
      
      // optional int32 page = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
          set_has_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_act_info;
        break;
      }
      
      // optional .ProtoBackActInfo act_info = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_act_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400515::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 first_type = 1;
  if (has_first_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->first_type(), output);
  }
  
  // optional int32 second_type = 2;
  if (has_second_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->second_type(), output);
  }
  
  // optional int32 page = 3;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page(), output);
  }
  
  // optional .ProtoBackActInfo act_info = 4;
  if (has_act_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->act_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400515::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 first_type = 1;
  if (has_first_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->first_type(), target);
  }
  
  // optional int32 second_type = 2;
  if (has_second_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->second_type(), target);
  }
  
  // optional int32 page = 3;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page(), target);
  }
  
  // optional .ProtoBackActInfo act_info = 4;
  if (has_act_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->act_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400515::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 first_type = 1;
    if (has_first_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_type());
    }
    
    // optional int32 second_type = 2;
    if (has_second_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_type());
    }
    
    // optional int32 page = 3;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page());
    }
    
    // optional .ProtoBackActInfo act_info = 4;
    if (has_act_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->act_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400515::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400515* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400515*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400515::MergeFrom(const Proto30400515& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_first_type()) {
      set_first_type(from.first_type());
    }
    if (from.has_second_type()) {
      set_second_type(from.second_type());
    }
    if (from.has_page()) {
      set_page(from.page());
    }
    if (from.has_act_info()) {
      mutable_act_info()->::ProtoBackActInfo::MergeFrom(from.act_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400515::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400515::CopyFrom(const Proto30400515& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400515::IsInitialized() const {
  
  return true;
}

void Proto30400515::Swap(Proto30400515* other) {
  if (other != this) {
    std::swap(first_type_, other->first_type_);
    std::swap(second_type_, other->second_type_);
    std::swap(page_, other->page_);
    std::swap(act_info_, other->act_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400515::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400515_descriptor_;
  metadata.reflection = Proto30400515_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400516::kTypeFieldNumber;
const int Proto30400516::kSelfInfoFieldNumber;
const int Proto30400516::kServerInfoFieldNumber;
const int Proto30400516::kAmountFieldNumber;
const int Proto30400516::kActivityIdFieldNumber;
const int Proto30400516::kActInfoFieldNumber;
#endif  // !_MSC_VER

Proto30400516::Proto30400516()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400516::InitAsDefaultInstance() {
  self_info_ = const_cast< ::ProtoTeamer*>(&::ProtoTeamer::default_instance());
  server_info_ = const_cast< ::ProtoServer*>(&::ProtoServer::default_instance());
  act_info_ = const_cast< ::ProtoBackActInfo*>(&::ProtoBackActInfo::default_instance());
}

Proto30400516::Proto30400516(const Proto30400516& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400516::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  self_info_ = NULL;
  server_info_ = NULL;
  amount_ = 0;
  activity_id_ = 0;
  act_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400516::~Proto30400516() {
  SharedDtor();
}

void Proto30400516::SharedDtor() {
  if (this != default_instance_) {
    delete self_info_;
    delete server_info_;
    delete act_info_;
  }
}

void Proto30400516::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400516::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400516_descriptor_;
}

const Proto30400516& Proto30400516::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30400516* Proto30400516::default_instance_ = NULL;

Proto30400516* Proto30400516::New() const {
  return new Proto30400516;
}

void Proto30400516::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_self_info()) {
      if (self_info_ != NULL) self_info_->::ProtoTeamer::Clear();
    }
    if (has_server_info()) {
      if (server_info_ != NULL) server_info_->::ProtoServer::Clear();
    }
    amount_ = 0;
    activity_id_ = 0;
    if (has_act_info()) {
      if (act_info_ != NULL) act_info_->::ProtoBackActInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400516::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_self_info;
        break;
      }
      
      // optional .ProtoTeamer self_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_self_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_server_info;
        break;
      }
      
      // optional .ProtoServer server_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_server_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_server_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_activity_id;
        break;
      }
      
      // optional int32 activity_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_act_info;
        break;
      }
      
      // optional .ProtoBackActInfo act_info = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_act_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400516::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional .ProtoTeamer self_info = 2;
  if (has_self_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->self_info(), output);
  }
  
  // optional .ProtoServer server_info = 3;
  if (has_server_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->server_info(), output);
  }
  
  // optional int32 amount = 4;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->amount(), output);
  }
  
  // optional int32 activity_id = 5;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->activity_id(), output);
  }
  
  // optional .ProtoBackActInfo act_info = 6;
  if (has_act_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->act_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400516::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional .ProtoTeamer self_info = 2;
  if (has_self_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->self_info(), target);
  }
  
  // optional .ProtoServer server_info = 3;
  if (has_server_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->server_info(), target);
  }
  
  // optional int32 amount = 4;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->amount(), target);
  }
  
  // optional int32 activity_id = 5;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->activity_id(), target);
  }
  
  // optional .ProtoBackActInfo act_info = 6;
  if (has_act_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->act_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400516::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional .ProtoTeamer self_info = 2;
    if (has_self_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->self_info());
    }
    
    // optional .ProtoServer server_info = 3;
    if (has_server_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->server_info());
    }
    
    // optional int32 amount = 4;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
    // optional int32 activity_id = 5;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional .ProtoBackActInfo act_info = 6;
    if (has_act_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->act_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400516::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400516* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400516*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400516::MergeFrom(const Proto30400516& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_self_info()) {
      mutable_self_info()->::ProtoTeamer::MergeFrom(from.self_info());
    }
    if (from.has_server_info()) {
      mutable_server_info()->::ProtoServer::MergeFrom(from.server_info());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_act_info()) {
      mutable_act_info()->::ProtoBackActInfo::MergeFrom(from.act_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400516::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400516::CopyFrom(const Proto30400516& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400516::IsInitialized() const {
  
  return true;
}

void Proto30400516::Swap(Proto30400516* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(self_info_, other->self_info_);
    std::swap(server_info_, other->server_info_);
    std::swap(amount_, other->amount_);
    std::swap(activity_id_, other->activity_id_);
    std::swap(act_info_, other->act_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400516::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400516_descriptor_;
  metadata.reflection = Proto30400516_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400055::kFirstIndexFieldNumber;
const int Proto31400055::kSecondIndexFieldNumber;
const int Proto31400055::kTypeFieldNumber;
const int Proto31400055::kMoneyFieldNumber;
const int Proto31400055::kItemIdFieldNumber;
const int Proto31400055::kItemTypeFieldNumber;
const int Proto31400055::kAmountFieldNumber;
const int Proto31400055::kRetFieldNumber;
#endif  // !_MSC_VER

Proto31400055::Proto31400055()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400055::InitAsDefaultInstance() {
}

Proto31400055::Proto31400055(const Proto31400055& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400055::SharedCtor() {
  _cached_size_ = 0;
  first_index_ = 0;
  second_index_ = 0;
  type_ = 0;
  money_ = 0;
  item_id_ = 0;
  item_type_ = 0;
  amount_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400055::~Proto31400055() {
  SharedDtor();
}

void Proto31400055::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400055::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400055::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400055_descriptor_;
}

const Proto31400055& Proto31400055::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto31400055* Proto31400055::default_instance_ = NULL;

Proto31400055* Proto31400055::New() const {
  return new Proto31400055;
}

void Proto31400055::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    first_index_ = 0;
    second_index_ = 0;
    type_ = 0;
    money_ = 0;
    item_id_ = 0;
    item_type_ = 0;
    amount_ = 0;
    ret_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400055::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 first_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_index_)));
          set_has_first_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_second_index;
        break;
      }
      
      // optional int32 second_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_index_)));
          set_has_second_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }
      
      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_money;
        break;
      }
      
      // optional int32 money = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_item_id;
        break;
      }
      
      // optional int32 item_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_item_type;
        break;
      }
      
      // optional int32 item_type = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_type_)));
          set_has_item_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_ret;
        break;
      }
      
      // optional int32 ret = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400055::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 first_index = 1;
  if (has_first_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->first_index(), output);
  }
  
  // optional int32 second_index = 2;
  if (has_second_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->second_index(), output);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }
  
  // optional int32 money = 4;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->money(), output);
  }
  
  // optional int32 item_id = 5;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->item_id(), output);
  }
  
  // optional int32 item_type = 6;
  if (has_item_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->item_type(), output);
  }
  
  // optional int32 amount = 7;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->amount(), output);
  }
  
  // optional int32 ret = 8;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->ret(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400055::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 first_index = 1;
  if (has_first_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->first_index(), target);
  }
  
  // optional int32 second_index = 2;
  if (has_second_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->second_index(), target);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }
  
  // optional int32 money = 4;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->money(), target);
  }
  
  // optional int32 item_id = 5;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->item_id(), target);
  }
  
  // optional int32 item_type = 6;
  if (has_item_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->item_type(), target);
  }
  
  // optional int32 amount = 7;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->amount(), target);
  }
  
  // optional int32 ret = 8;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->ret(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400055::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 first_index = 1;
    if (has_first_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_index());
    }
    
    // optional int32 second_index = 2;
    if (has_second_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_index());
    }
    
    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 money = 4;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }
    
    // optional int32 item_id = 5;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_type = 6;
    if (has_item_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_type());
    }
    
    // optional int32 amount = 7;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
    // optional int32 ret = 8;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400055::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400055* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400055*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400055::MergeFrom(const Proto31400055& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_first_index()) {
      set_first_index(from.first_index());
    }
    if (from.has_second_index()) {
      set_second_index(from.second_index());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_type()) {
      set_item_type(from.item_type());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400055::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400055::CopyFrom(const Proto31400055& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400055::IsInitialized() const {
  
  return true;
}

void Proto31400055::Swap(Proto31400055* other) {
  if (other != this) {
    std::swap(first_index_, other->first_index_);
    std::swap(second_index_, other->second_index_);
    std::swap(type_, other->type_);
    std::swap(money_, other->money_);
    std::swap(item_id_, other->item_id_);
    std::swap(item_type_, other->item_type_);
    std::swap(amount_, other->amount_);
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400055::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400055_descriptor_;
  metadata.reflection = Proto31400055_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400057::kLeagueIdFieldNumber;
const int Proto30400057::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto30400057::Proto30400057()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400057::InitAsDefaultInstance() {
}

Proto30400057::Proto30400057(const Proto30400057& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400057::SharedCtor() {
  _cached_size_ = 0;
  league_id_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400057::~Proto30400057() {
  SharedDtor();
}

void Proto30400057::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400057::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400057::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400057_descriptor_;
}

const Proto30400057& Proto30400057::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30400057* Proto30400057::default_instance_ = NULL;

Proto30400057* Proto30400057::New() const {
  return new Proto30400057;
}

void Proto30400057::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_id_ = GOOGLE_LONGLONG(0);
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400057::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 league_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_id_)));
          set_has_league_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400057::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 league_id = 1;
  if (has_league_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->league_id(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400057::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 league_id = 1;
  if (has_league_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->league_id(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400057::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 league_id = 1;
    if (has_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_id());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400057::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400057* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400057*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400057::MergeFrom(const Proto30400057& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_id()) {
      set_league_id(from.league_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400057::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400057::CopyFrom(const Proto30400057& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400057::IsInitialized() const {
  
  return true;
}

void Proto30400057::Swap(Proto30400057* other) {
  if (other != this) {
    std::swap(league_id_, other->league_id_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400057::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400057_descriptor_;
  metadata.reflection = Proto30400057_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400042::kTypeFieldNumber;
const int Proto30400042::kStartTickFieldNumber;
const int Proto30400042::kEndTickFieldNumber;
#endif  // !_MSC_VER

Proto30400042::Proto30400042()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400042::InitAsDefaultInstance() {
}

Proto30400042::Proto30400042(const Proto30400042& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400042::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  start_tick_ = GOOGLE_LONGLONG(0);
  end_tick_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400042::~Proto30400042() {
  SharedDtor();
}

void Proto30400042::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400042::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400042::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400042_descriptor_;
}

const Proto30400042& Proto30400042::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30400042* Proto30400042::default_instance_ = NULL;

Proto30400042* Proto30400042::New() const {
  return new Proto30400042;
}

void Proto30400042::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    start_tick_ = GOOGLE_LONGLONG(0);
    end_tick_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400042::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_start_tick;
        break;
      }
      
      // optional int64 start_tick = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_tick_)));
          set_has_start_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_end_tick;
        break;
      }
      
      // optional int64 end_tick = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_tick_)));
          set_has_end_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400042::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int64 start_tick = 2;
  if (has_start_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->start_tick(), output);
  }
  
  // optional int64 end_tick = 3;
  if (has_end_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->end_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400042::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int64 start_tick = 2;
  if (has_start_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->start_tick(), target);
  }
  
  // optional int64 end_tick = 3;
  if (has_end_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->end_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400042::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int64 start_tick = 2;
    if (has_start_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_tick());
    }
    
    // optional int64 end_tick = 3;
    if (has_end_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_tick());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400042::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400042* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400042*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400042::MergeFrom(const Proto30400042& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_start_tick()) {
      set_start_tick(from.start_tick());
    }
    if (from.has_end_tick()) {
      set_end_tick(from.end_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400042::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400042::CopyFrom(const Proto30400042& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400042::IsInitialized() const {
  
  return true;
}

void Proto30400042::Swap(Proto30400042* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(start_tick_, other->start_tick_);
    std::swap(end_tick_, other->end_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400042::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400042_descriptor_;
  metadata.reflection = Proto30400042_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400056::kIsBigActTimeFieldNumber;
#endif  // !_MSC_VER

Proto31400056::Proto31400056()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400056::InitAsDefaultInstance() {
}

Proto31400056::Proto31400056(const Proto31400056& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400056::SharedCtor() {
  _cached_size_ = 0;
  is_big_act_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400056::~Proto31400056() {
  SharedDtor();
}

void Proto31400056::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400056::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400056::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400056_descriptor_;
}

const Proto31400056& Proto31400056::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto31400056* Proto31400056::default_instance_ = NULL;

Proto31400056* Proto31400056::New() const {
  return new Proto31400056;
}

void Proto31400056::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_big_act_time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400056::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 is_big_act_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_big_act_time_)));
          set_has_is_big_act_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400056::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 is_big_act_time = 1;
  if (has_is_big_act_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->is_big_act_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400056::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 is_big_act_time = 1;
  if (has_is_big_act_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->is_big_act_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400056::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 is_big_act_time = 1;
    if (has_is_big_act_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_big_act_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400056::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400056* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400056*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400056::MergeFrom(const Proto31400056& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_big_act_time()) {
      set_is_big_act_time(from.is_big_act_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400056::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400056::CopyFrom(const Proto31400056& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400056::IsInitialized() const {
  
  return true;
}

void Proto31400056::Swap(Proto31400056* other) {
  if (other != this) {
    std::swap(is_big_act_time_, other->is_big_act_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400056::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400056_descriptor_;
  metadata.reflection = Proto31400056_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31403201::kTaskIdFieldNumber;
const int Proto31403201::kTaskFinishCountFieldNumber;
const int Proto31403201::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto31403201::Proto31403201()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31403201::InitAsDefaultInstance() {
}

Proto31403201::Proto31403201(const Proto31403201& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31403201::SharedCtor() {
  _cached_size_ = 0;
  task_id_ = 0;
  task_finish_count_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31403201::~Proto31403201() {
  SharedDtor();
}

void Proto31403201::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31403201::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31403201::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31403201_descriptor_;
}

const Proto31403201& Proto31403201::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto31403201* Proto31403201::default_instance_ = NULL;

Proto31403201* Proto31403201::New() const {
  return new Proto31403201;
}

void Proto31403201::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    task_id_ = 0;
    task_finish_count_ = 0;
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31403201::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 task_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
          set_has_task_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_task_finish_count;
        break;
      }
      
      // optional int32 task_finish_count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_task_finish_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_finish_count_)));
          set_has_task_finish_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }
      
      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31403201::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->task_id(), output);
  }
  
  // optional int32 task_finish_count = 2;
  if (has_task_finish_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->task_finish_count(), output);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31403201::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->task_id(), target);
  }
  
  // optional int32 task_finish_count = 2;
  if (has_task_finish_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->task_finish_count(), target);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31403201::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 task_id = 1;
    if (has_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task_id());
    }
    
    // optional int32 task_finish_count = 2;
    if (has_task_finish_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task_finish_count());
    }
    
    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31403201::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31403201* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31403201*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31403201::MergeFrom(const Proto31403201& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_task_id()) {
      set_task_id(from.task_id());
    }
    if (from.has_task_finish_count()) {
      set_task_finish_count(from.task_finish_count());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31403201::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31403201::CopyFrom(const Proto31403201& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31403201::IsInitialized() const {
  
  return true;
}

void Proto31403201::Swap(Proto31403201* other) {
  if (other != this) {
    std::swap(task_id_, other->task_id_);
    std::swap(task_finish_count_, other->task_finish_count_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31403201::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31403201_descriptor_;
  metadata.reflection = Proto31403201_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400057::kBuyTypeFieldNumber;
const int Proto31400057::kHicktyIdFieldNumber;
const int Proto31400057::kAmountFieldNumber;
#endif  // !_MSC_VER

Proto31400057::Proto31400057()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400057::InitAsDefaultInstance() {
}

Proto31400057::Proto31400057(const Proto31400057& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400057::SharedCtor() {
  _cached_size_ = 0;
  buy_type_ = 0;
  hickty_id_ = 0;
  amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400057::~Proto31400057() {
  SharedDtor();
}

void Proto31400057::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400057::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400057::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400057_descriptor_;
}

const Proto31400057& Proto31400057::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto31400057* Proto31400057::default_instance_ = NULL;

Proto31400057* Proto31400057::New() const {
  return new Proto31400057;
}

void Proto31400057::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    buy_type_ = 0;
    hickty_id_ = 0;
    amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400057::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 buy_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_type_)));
          set_has_buy_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_hickty_id;
        break;
      }
      
      // optional int32 hickty_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hickty_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hickty_id_)));
          set_has_hickty_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400057::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 buy_type = 1;
  if (has_buy_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->buy_type(), output);
  }
  
  // optional int32 hickty_id = 2;
  if (has_hickty_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hickty_id(), output);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400057::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 buy_type = 1;
  if (has_buy_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->buy_type(), target);
  }
  
  // optional int32 hickty_id = 2;
  if (has_hickty_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hickty_id(), target);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400057::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 buy_type = 1;
    if (has_buy_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_type());
    }
    
    // optional int32 hickty_id = 2;
    if (has_hickty_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hickty_id());
    }
    
    // optional int32 amount = 3;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400057::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400057* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400057*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400057::MergeFrom(const Proto31400057& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buy_type()) {
      set_buy_type(from.buy_type());
    }
    if (from.has_hickty_id()) {
      set_hickty_id(from.hickty_id());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400057::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400057::CopyFrom(const Proto31400057& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400057::IsInitialized() const {
  
  return true;
}

void Proto31400057::Swap(Proto31400057* other) {
  if (other != this) {
    std::swap(buy_type_, other->buy_type_);
    std::swap(hickty_id_, other->hickty_id_);
    std::swap(amount_, other->amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400057::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400057_descriptor_;
  metadata.reflection = Proto31400057_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100111::kResultListFieldNumber;
#endif  // !_MSC_VER

Proto30100111::Proto30100111()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100111::InitAsDefaultInstance() {
}

Proto30100111::Proto30100111(const Proto30100111& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100111::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100111::~Proto30100111() {
  SharedDtor();
}

void Proto30100111::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100111::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100111::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100111_descriptor_;
}

const Proto30100111& Proto30100111::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30100111* Proto30100111::default_instance_ = NULL;

Proto30100111* Proto30100111::New() const {
  return new Proto30100111;
}

void Proto30100111::Clear() {
  result_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100111::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem result_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_result_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_result_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_result_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100111::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem result_list = 1;
  for (int i = 0; i < this->result_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100111::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem result_list = 1;
  for (int i = 0; i < this->result_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100111::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoItem result_list = 1;
  total_size += 1 * this->result_list_size();
  for (int i = 0; i < this->result_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->result_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100111::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100111* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100111*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100111::MergeFrom(const Proto30100111& from) {
  GOOGLE_CHECK_NE(&from, this);
  result_list_.MergeFrom(from.result_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100111::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100111::CopyFrom(const Proto30100111& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100111::IsInitialized() const {
  
  return true;
}

void Proto30100111::Swap(Proto30100111* other) {
  if (other != this) {
    result_list_.Swap(&other->result_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100111::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100111_descriptor_;
  metadata.reflection = Proto30100111_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100607::kBrocastInfoFieldNumber;
#endif  // !_MSC_VER

Proto30100607::Proto30100607()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100607::InitAsDefaultInstance() {
}

Proto30100607::Proto30100607(const Proto30100607& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100607::SharedCtor() {
  _cached_size_ = 0;
  brocast_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100607::~Proto30100607() {
  SharedDtor();
}

void Proto30100607::SharedDtor() {
  if (brocast_info_ != &::google::protobuf::internal::kEmptyString) {
    delete brocast_info_;
  }
  if (this != default_instance_) {
  }
}

void Proto30100607::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100607::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100607_descriptor_;
}

const Proto30100607& Proto30100607::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30100607* Proto30100607::default_instance_ = NULL;

Proto30100607* Proto30100607::New() const {
  return new Proto30100607;
}

void Proto30100607::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_brocast_info()) {
      if (brocast_info_ != &::google::protobuf::internal::kEmptyString) {
        brocast_info_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100607::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes brocast_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_brocast_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100607::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bytes brocast_info = 1;
  if (has_brocast_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->brocast_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100607::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bytes brocast_info = 1;
  if (has_brocast_info()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->brocast_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100607::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes brocast_info = 1;
    if (has_brocast_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->brocast_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100607::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100607* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100607*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100607::MergeFrom(const Proto30100607& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_brocast_info()) {
      set_brocast_info(from.brocast_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100607::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100607::CopyFrom(const Proto30100607& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100607::IsInitialized() const {
  
  return true;
}

void Proto30100607::Swap(Proto30100607* other) {
  if (other != this) {
    std::swap(brocast_info_, other->brocast_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100607::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100607_descriptor_;
  metadata.reflection = Proto30100607_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400058::kSynthesisItemIdFieldNumber;
#endif  // !_MSC_VER

Proto31400058::Proto31400058()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400058::InitAsDefaultInstance() {
}

Proto31400058::Proto31400058(const Proto31400058& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400058::SharedCtor() {
  _cached_size_ = 0;
  synthesis_item_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400058::~Proto31400058() {
  SharedDtor();
}

void Proto31400058::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400058::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400058::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400058_descriptor_;
}

const Proto31400058& Proto31400058::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto31400058* Proto31400058::default_instance_ = NULL;

Proto31400058* Proto31400058::New() const {
  return new Proto31400058;
}

void Proto31400058::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    synthesis_item_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400058::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 synthesis_item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &synthesis_item_id_)));
          set_has_synthesis_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400058::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 synthesis_item_id = 1;
  if (has_synthesis_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->synthesis_item_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400058::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 synthesis_item_id = 1;
  if (has_synthesis_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->synthesis_item_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400058::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 synthesis_item_id = 1;
    if (has_synthesis_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->synthesis_item_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400058::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400058* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400058*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400058::MergeFrom(const Proto31400058& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_synthesis_item_id()) {
      set_synthesis_item_id(from.synthesis_item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400058::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400058::CopyFrom(const Proto31400058& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400058::IsInitialized() const {
  
  return true;
}

void Proto31400058::Swap(Proto31400058* other) {
  if (other != this) {
    std::swap(synthesis_item_id_, other->synthesis_item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400058::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400058_descriptor_;
  metadata.reflection = Proto31400058_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402501::kTypeFieldNumber;
const int Proto30402501::kRefreshFieldNumber;
#endif  // !_MSC_VER

Proto30402501::Proto30402501()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402501::InitAsDefaultInstance() {
}

Proto30402501::Proto30402501(const Proto30402501& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402501::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  refresh_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402501::~Proto30402501() {
  SharedDtor();
}

void Proto30402501::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30402501::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402501::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402501_descriptor_;
}

const Proto30402501& Proto30402501::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30402501* Proto30402501::default_instance_ = NULL;

Proto30402501* Proto30402501::New() const {
  return new Proto30402501;
}

void Proto30402501::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    refresh_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402501::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_refresh;
        break;
      }
      
      // optional int32 refresh = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refresh_)));
          set_has_refresh();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402501::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 refresh = 2;
  if (has_refresh()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->refresh(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402501::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 refresh = 2;
  if (has_refresh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->refresh(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402501::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 refresh = 2;
    if (has_refresh()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refresh());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402501::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402501* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402501*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402501::MergeFrom(const Proto30402501& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_refresh()) {
      set_refresh(from.refresh());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402501::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402501::CopyFrom(const Proto30402501& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402501::IsInitialized() const {
  
  return true;
}

void Proto30402501::Swap(Proto30402501* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(refresh_, other->refresh_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402501::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402501_descriptor_;
  metadata.reflection = Proto30402501_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402502::kRoleIdFieldNumber;
const int Proto30402502::kTypeFieldNumber;
const int Proto30402502::kRankFieldNumber;
#endif  // !_MSC_VER

Proto30402502::Proto30402502()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402502::InitAsDefaultInstance() {
}

Proto30402502::Proto30402502(const Proto30402502& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402502::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  rank_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402502::~Proto30402502() {
  SharedDtor();
}

void Proto30402502::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30402502::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402502::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402502_descriptor_;
}

const Proto30402502& Proto30402502::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30402502* Proto30402502::default_instance_ = NULL;

Proto30402502* Proto30402502::New() const {
  return new Proto30402502;
}

void Proto30402502::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    type_ = 0;
    rank_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402502::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_rank;
        break;
      }
      
      // optional int32 rank = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402502::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  // optional int32 rank = 3;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rank(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402502::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  // optional int32 rank = 3;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rank(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402502::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 rank = 3;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402502::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402502* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402502*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402502::MergeFrom(const Proto30402502& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_rank()) {
      set_rank(from.rank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402502::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402502::CopyFrom(const Proto30402502& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402502::IsInitialized() const {
  
  return true;
}

void Proto30402502::Swap(Proto30402502* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(type_, other->type_);
    std::swap(rank_, other->rank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402502::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402502_descriptor_;
  metadata.reflection = Proto30402502_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402503::kTypeFieldNumber;
const int Proto30402503::kAheadFieldNumber;
const int Proto30402503::kLastFieldNumber;
#endif  // !_MSC_VER

Proto30402503::Proto30402503()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402503::InitAsDefaultInstance() {
}

Proto30402503::Proto30402503(const Proto30402503& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402503::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ahead_ = 0;
  last_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402503::~Proto30402503() {
  SharedDtor();
}

void Proto30402503::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30402503::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402503::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402503_descriptor_;
}

const Proto30402503& Proto30402503::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30402503* Proto30402503::default_instance_ = NULL;

Proto30402503* Proto30402503::New() const {
  return new Proto30402503;
}

void Proto30402503::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    ahead_ = 0;
    last_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402503::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ahead;
        break;
      }
      
      // optional int32 ahead = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ahead:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ahead_)));
          set_has_ahead();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_last;
        break;
      }
      
      // optional int32 last = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_)));
          set_has_last();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402503::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 ahead = 2;
  if (has_ahead()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ahead(), output);
  }
  
  // optional int32 last = 3;
  if (has_last()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->last(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402503::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 ahead = 2;
  if (has_ahead()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ahead(), target);
  }
  
  // optional int32 last = 3;
  if (has_last()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->last(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402503::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 ahead = 2;
    if (has_ahead()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ahead());
    }
    
    // optional int32 last = 3;
    if (has_last()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402503::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402503* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402503*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402503::MergeFrom(const Proto30402503& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_ahead()) {
      set_ahead(from.ahead());
    }
    if (from.has_last()) {
      set_last(from.last());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402503::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402503::CopyFrom(const Proto30402503& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402503::IsInitialized() const {
  
  return true;
}

void Proto30402503::Swap(Proto30402503* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(ahead_, other->ahead_);
    std::swap(last_, other->last_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402503::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402503_descriptor_;
  metadata.reflection = Proto30402503_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400517::kTypeFieldNumber;
const int Proto30400517::kMailIdFieldNumber;
const int Proto30400517::kBossNameFieldNumber;
const int Proto30400517::kMailInfoFieldNumber;
#endif  // !_MSC_VER

Proto30400517::Proto30400517()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400517::InitAsDefaultInstance() {
}

Proto30400517::Proto30400517(const Proto30400517& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400517::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  mail_id_ = 0;
  boss_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400517::~Proto30400517() {
  SharedDtor();
}

void Proto30400517::SharedDtor() {
  if (boss_name_ != &::google::protobuf::internal::kEmptyString) {
    delete boss_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto30400517::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400517::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400517_descriptor_;
}

const Proto30400517& Proto30400517::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30400517* Proto30400517::default_instance_ = NULL;

Proto30400517* Proto30400517::New() const {
  return new Proto30400517;
}

void Proto30400517::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    mail_id_ = 0;
    if (has_boss_name()) {
      if (boss_name_ != &::google::protobuf::internal::kEmptyString) {
        boss_name_->clear();
      }
    }
  }
  mail_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400517::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_mail_id;
        break;
      }
      
      // optional int32 mail_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mail_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mail_id_)));
          set_has_mail_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_boss_name;
        break;
      }
      
      // optional string boss_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_boss_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_boss_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->boss_name().data(), this->boss_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_mail_info;
        break;
      }
      
      // repeated .ProtoTrvlWbossMail mail_info = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mail_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mail_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_mail_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400517::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 mail_id = 2;
  if (has_mail_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mail_id(), output);
  }
  
  // optional string boss_name = 3;
  if (has_boss_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->boss_name().data(), this->boss_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->boss_name(), output);
  }
  
  // repeated .ProtoTrvlWbossMail mail_info = 4;
  for (int i = 0; i < this->mail_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->mail_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400517::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 mail_id = 2;
  if (has_mail_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mail_id(), target);
  }
  
  // optional string boss_name = 3;
  if (has_boss_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->boss_name().data(), this->boss_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->boss_name(), target);
  }
  
  // repeated .ProtoTrvlWbossMail mail_info = 4;
  for (int i = 0; i < this->mail_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->mail_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400517::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 mail_id = 2;
    if (has_mail_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mail_id());
    }
    
    // optional string boss_name = 3;
    if (has_boss_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->boss_name());
    }
    
  }
  // repeated .ProtoTrvlWbossMail mail_info = 4;
  total_size += 1 * this->mail_info_size();
  for (int i = 0; i < this->mail_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mail_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400517::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400517* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400517*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400517::MergeFrom(const Proto30400517& from) {
  GOOGLE_CHECK_NE(&from, this);
  mail_info_.MergeFrom(from.mail_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_mail_id()) {
      set_mail_id(from.mail_id());
    }
    if (from.has_boss_name()) {
      set_boss_name(from.boss_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400517::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400517::CopyFrom(const Proto30400517& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400517::IsInitialized() const {
  
  return true;
}

void Proto30400517::Swap(Proto30400517* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(mail_id_, other->mail_id_);
    std::swap(boss_name_, other->boss_name_);
    mail_info_.Swap(&other->mail_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400517::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400517_descriptor_;
  metadata.reflection = Proto30400517_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402504::kTbattleValueFieldNumber;
#endif  // !_MSC_VER

Proto30402504::Proto30402504()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402504::InitAsDefaultInstance() {
}

Proto30402504::Proto30402504(const Proto30402504& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402504::SharedCtor() {
  _cached_size_ = 0;
  tbattle_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402504::~Proto30402504() {
  SharedDtor();
}

void Proto30402504::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30402504::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402504::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402504_descriptor_;
}

const Proto30402504& Proto30402504::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30402504* Proto30402504::default_instance_ = NULL;

Proto30402504* Proto30402504::New() const {
  return new Proto30402504;
}

void Proto30402504::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tbattle_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402504::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tbattle_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tbattle_value_)));
          set_has_tbattle_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402504::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 tbattle_value = 1;
  if (has_tbattle_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tbattle_value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402504::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 tbattle_value = 1;
  if (has_tbattle_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tbattle_value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402504::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 tbattle_value = 1;
    if (has_tbattle_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tbattle_value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402504::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402504* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402504*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402504::MergeFrom(const Proto30402504& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tbattle_value()) {
      set_tbattle_value(from.tbattle_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402504::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402504::CopyFrom(const Proto30402504& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402504::IsInitialized() const {
  
  return true;
}

void Proto30402504::Swap(Proto30402504* other) {
  if (other != this) {
    std::swap(tbattle_value_, other->tbattle_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402504::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402504_descriptor_;
  metadata.reflection = Proto30402504_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402505::kRewardIdFieldNumber;
const int Proto30402505::kSerialFieldNumber;
const int Proto30402505::kMailIdFieldNumber;
#endif  // !_MSC_VER

Proto30402505::Proto30402505()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402505::InitAsDefaultInstance() {
  serial_ = const_cast< ::ProtoSerialObj*>(&::ProtoSerialObj::default_instance());
}

Proto30402505::Proto30402505(const Proto30402505& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402505::SharedCtor() {
  _cached_size_ = 0;
  reward_id_ = 0;
  serial_ = NULL;
  mail_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402505::~Proto30402505() {
  SharedDtor();
}

void Proto30402505::SharedDtor() {
  if (this != default_instance_) {
    delete serial_;
  }
}

void Proto30402505::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402505::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402505_descriptor_;
}

const Proto30402505& Proto30402505::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30402505* Proto30402505::default_instance_ = NULL;

Proto30402505* Proto30402505::New() const {
  return new Proto30402505;
}

void Proto30402505::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    reward_id_ = 0;
    if (has_serial()) {
      if (serial_ != NULL) serial_->::ProtoSerialObj::Clear();
    }
    mail_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402505::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 reward_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_id_)));
          set_has_reward_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_serial;
        break;
      }
      
      // optional .ProtoSerialObj serial = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_serial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serial()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_mail_id;
        break;
      }
      
      // optional int32 mail_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mail_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mail_id_)));
          set_has_mail_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402505::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 reward_id = 1;
  if (has_reward_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reward_id(), output);
  }
  
  // optional .ProtoSerialObj serial = 2;
  if (has_serial()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->serial(), output);
  }
  
  // optional int32 mail_id = 3;
  if (has_mail_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mail_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402505::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 reward_id = 1;
  if (has_reward_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reward_id(), target);
  }
  
  // optional .ProtoSerialObj serial = 2;
  if (has_serial()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->serial(), target);
  }
  
  // optional int32 mail_id = 3;
  if (has_mail_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mail_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402505::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 reward_id = 1;
    if (has_reward_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_id());
    }
    
    // optional .ProtoSerialObj serial = 2;
    if (has_serial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serial());
    }
    
    // optional int32 mail_id = 3;
    if (has_mail_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mail_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402505::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402505* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402505*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402505::MergeFrom(const Proto30402505& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward_id()) {
      set_reward_id(from.reward_id());
    }
    if (from.has_serial()) {
      mutable_serial()->::ProtoSerialObj::MergeFrom(from.serial());
    }
    if (from.has_mail_id()) {
      set_mail_id(from.mail_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402505::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402505::CopyFrom(const Proto30402505& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402505::IsInitialized() const {
  
  return true;
}

void Proto30402505::Swap(Proto30402505* other) {
  if (other != this) {
    std::swap(reward_id_, other->reward_id_);
    std::swap(serial_, other->serial_);
    std::swap(mail_id_, other->mail_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402505::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402505_descriptor_;
  metadata.reflection = Proto30402505_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400059::kQqNumFieldNumber;
const int Proto31400059::kDesContentFieldNumber;
const int Proto31400059::kDesMailFieldNumber;
const int Proto31400059::kLimitFieldNumber;
const int Proto31400059::kAgentCodeFieldNumber;
const int Proto31400059::kRoleIdFieldNumber;
const int Proto31400059::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto31400059::Proto31400059()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400059::InitAsDefaultInstance() {
}

Proto31400059::Proto31400059(const Proto31400059& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400059::SharedCtor() {
  _cached_size_ = 0;
  qq_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  des_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  des_mail_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  limit_ = 0;
  agent_code_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400059::~Proto31400059() {
  SharedDtor();
}

void Proto31400059::SharedDtor() {
  if (qq_num_ != &::google::protobuf::internal::kEmptyString) {
    delete qq_num_;
  }
  if (des_content_ != &::google::protobuf::internal::kEmptyString) {
    delete des_content_;
  }
  if (des_mail_ != &::google::protobuf::internal::kEmptyString) {
    delete des_mail_;
  }
  if (this != default_instance_) {
  }
}

void Proto31400059::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400059::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400059_descriptor_;
}

const Proto31400059& Proto31400059::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto31400059* Proto31400059::default_instance_ = NULL;

Proto31400059* Proto31400059::New() const {
  return new Proto31400059;
}

void Proto31400059::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_qq_num()) {
      if (qq_num_ != &::google::protobuf::internal::kEmptyString) {
        qq_num_->clear();
      }
    }
    if (has_des_content()) {
      if (des_content_ != &::google::protobuf::internal::kEmptyString) {
        des_content_->clear();
      }
    }
    if (has_des_mail()) {
      if (des_mail_ != &::google::protobuf::internal::kEmptyString) {
        des_mail_->clear();
      }
    }
    limit_ = 0;
    agent_code_ = 0;
    role_id_ = GOOGLE_LONGLONG(0);
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400059::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string qq_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_qq_num()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->qq_num().data(), this->qq_num().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_des_content;
        break;
      }
      
      // optional string des_content = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_des_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_des_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->des_content().data(), this->des_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_des_mail;
        break;
      }
      
      // optional string des_mail = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_des_mail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_des_mail()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->des_mail().data(), this->des_mail().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_limit;
        break;
      }
      
      // optional int32 limit = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_agent_code;
        break;
      }
      
      // optional int32 agent_code = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_agent_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &agent_code_)));
          set_has_agent_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_type;
        break;
      }
      
      // optional int32 type = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400059::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string qq_num = 1;
  if (has_qq_num()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->qq_num().data(), this->qq_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->qq_num(), output);
  }
  
  // optional string des_content = 2;
  if (has_des_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->des_content().data(), this->des_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->des_content(), output);
  }
  
  // optional string des_mail = 3;
  if (has_des_mail()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->des_mail().data(), this->des_mail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->des_mail(), output);
  }
  
  // optional int32 limit = 4;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->limit(), output);
  }
  
  // optional int32 agent_code = 5;
  if (has_agent_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->agent_code(), output);
  }
  
  // optional int64 role_id = 6;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->role_id(), output);
  }
  
  // optional int32 type = 7;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400059::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string qq_num = 1;
  if (has_qq_num()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->qq_num().data(), this->qq_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->qq_num(), target);
  }
  
  // optional string des_content = 2;
  if (has_des_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->des_content().data(), this->des_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->des_content(), target);
  }
  
  // optional string des_mail = 3;
  if (has_des_mail()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->des_mail().data(), this->des_mail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->des_mail(), target);
  }
  
  // optional int32 limit = 4;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->limit(), target);
  }
  
  // optional int32 agent_code = 5;
  if (has_agent_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->agent_code(), target);
  }
  
  // optional int64 role_id = 6;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->role_id(), target);
  }
  
  // optional int32 type = 7;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400059::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string qq_num = 1;
    if (has_qq_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->qq_num());
    }
    
    // optional string des_content = 2;
    if (has_des_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->des_content());
    }
    
    // optional string des_mail = 3;
    if (has_des_mail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->des_mail());
    }
    
    // optional int32 limit = 4;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->limit());
    }
    
    // optional int32 agent_code = 5;
    if (has_agent_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->agent_code());
    }
    
    // optional int64 role_id = 6;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 type = 7;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400059::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400059* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400059*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400059::MergeFrom(const Proto31400059& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_qq_num()) {
      set_qq_num(from.qq_num());
    }
    if (from.has_des_content()) {
      set_des_content(from.des_content());
    }
    if (from.has_des_mail()) {
      set_des_mail(from.des_mail());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
    if (from.has_agent_code()) {
      set_agent_code(from.agent_code());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400059::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400059::CopyFrom(const Proto31400059& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400059::IsInitialized() const {
  
  return true;
}

void Proto31400059::Swap(Proto31400059* other) {
  if (other != this) {
    std::swap(qq_num_, other->qq_num_);
    std::swap(des_content_, other->des_content_);
    std::swap(des_mail_, other->des_mail_);
    std::swap(limit_, other->limit_);
    std::swap(agent_code_, other->agent_code_);
    std::swap(role_id_, other->role_id_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400059::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400059_descriptor_;
  metadata.reflection = Proto31400059_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100232::kRoleFieldNumber;
const int Proto30100232::kRankFieldNumber;
#endif  // !_MSC_VER

Proto30100232::Proto30100232()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100232::InitAsDefaultInstance() {
}

Proto30100232::Proto30100232(const Proto30100232& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100232::SharedCtor() {
  _cached_size_ = 0;
  role_ = GOOGLE_LONGLONG(0);
  rank_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100232::~Proto30100232() {
  SharedDtor();
}

void Proto30100232::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100232::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100232::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100232_descriptor_;
}

const Proto30100232& Proto30100232::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30100232* Proto30100232::default_instance_ = NULL;

Proto30100232* Proto30100232::New() const {
  return new Proto30100232;
}

void Proto30100232::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_ = GOOGLE_LONGLONG(0);
    rank_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100232::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_)));
          set_has_role();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_rank;
        break;
      }
      
      // optional int32 rank = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100232::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role = 1;
  if (has_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role(), output);
  }
  
  // optional int32 rank = 2;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rank(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100232::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role = 1;
  if (has_role()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role(), target);
  }
  
  // optional int32 rank = 2;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rank(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100232::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role = 1;
    if (has_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role());
    }
    
    // optional int32 rank = 2;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100232::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100232* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100232*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100232::MergeFrom(const Proto30100232& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role()) {
      set_role(from.role());
    }
    if (from.has_rank()) {
      set_rank(from.rank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100232::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100232::CopyFrom(const Proto30100232& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100232::IsInitialized() const {
  
  return true;
}

void Proto30100232::Swap(Proto30100232* other) {
  if (other != this) {
    std::swap(role_, other->role_);
    std::swap(rank_, other->rank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100232::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100232_descriptor_;
  metadata.reflection = Proto30100232_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400457::kLeaderIndexFieldNumber;
const int Proto30400457::kLeaderFieldNumber;
const int Proto30400457::kLeagueIndexFieldNumber;
#endif  // !_MSC_VER

Proto30400457::Proto30400457()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400457::InitAsDefaultInstance() {
}

Proto30400457::Proto30400457(const Proto30400457& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400457::SharedCtor() {
  _cached_size_ = 0;
  leader_index_ = GOOGLE_LONGLONG(0);
  leader_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  league_index_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400457::~Proto30400457() {
  SharedDtor();
}

void Proto30400457::SharedDtor() {
  if (leader_ != &::google::protobuf::internal::kEmptyString) {
    delete leader_;
  }
  if (this != default_instance_) {
  }
}

void Proto30400457::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400457::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400457_descriptor_;
}

const Proto30400457& Proto30400457::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30400457* Proto30400457::default_instance_ = NULL;

Proto30400457* Proto30400457::New() const {
  return new Proto30400457;
}

void Proto30400457::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    leader_index_ = GOOGLE_LONGLONG(0);
    if (has_leader()) {
      if (leader_ != &::google::protobuf::internal::kEmptyString) {
        leader_->clear();
      }
    }
    league_index_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400457::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 leader_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &leader_index_)));
          set_has_leader_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_leader;
        break;
      }
      
      // optional string leader = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_leader:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->leader().data(), this->leader().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_league_index;
        break;
      }
      
      // optional int64 league_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_index_)));
          set_has_league_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400457::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 leader_index = 1;
  if (has_leader_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->leader_index(), output);
  }
  
  // optional string leader = 2;
  if (has_leader()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leader().data(), this->leader().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->leader(), output);
  }
  
  // optional int64 league_index = 3;
  if (has_league_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->league_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400457::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 leader_index = 1;
  if (has_leader_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->leader_index(), target);
  }
  
  // optional string leader = 2;
  if (has_leader()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leader().data(), this->leader().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->leader(), target);
  }
  
  // optional int64 league_index = 3;
  if (has_league_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->league_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400457::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 leader_index = 1;
    if (has_leader_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->leader_index());
    }
    
    // optional string leader = 2;
    if (has_leader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->leader());
    }
    
    // optional int64 league_index = 3;
    if (has_league_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400457::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400457* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400457*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400457::MergeFrom(const Proto30400457& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_leader_index()) {
      set_leader_index(from.leader_index());
    }
    if (from.has_leader()) {
      set_leader(from.leader());
    }
    if (from.has_league_index()) {
      set_league_index(from.league_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400457::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400457::CopyFrom(const Proto30400457& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400457::IsInitialized() const {
  
  return true;
}

void Proto30400457::Swap(Proto30400457* other) {
  if (other != this) {
    std::swap(leader_index_, other->leader_index_);
    std::swap(leader_, other->leader_);
    std::swap(league_index_, other->league_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400457::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400457_descriptor_;
  metadata.reflection = Proto30400457_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31403202::kActIdFieldNumber;
const int Proto31403202::kItemIdFieldNumber;
const int Proto31403202::kItemAmountFieldNumber;
const int Proto31403202::kItemBindFieldNumber;
const int Proto31403202::kRetFieldNumber;
const int Proto31403202::kIndexFieldNumber;
const int Proto31403202::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto31403202::Proto31403202()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31403202::InitAsDefaultInstance() {
}

Proto31403202::Proto31403202(const Proto31403202& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31403202::SharedCtor() {
  _cached_size_ = 0;
  act_id_ = 0;
  ret_ = 0;
  index_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31403202::~Proto31403202() {
  SharedDtor();
}

void Proto31403202::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31403202::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31403202::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31403202_descriptor_;
}

const Proto31403202& Proto31403202::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto31403202* Proto31403202::default_instance_ = NULL;

Proto31403202* Proto31403202::New() const {
  return new Proto31403202;
}

void Proto31403202::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    act_id_ = 0;
    ret_ = 0;
    index_ = 0;
    type_ = 0;
  }
  item_id_.Clear();
  item_amount_.Clear();
  item_bind_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31403202::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 act_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_id_)));
          set_has_act_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }
      
      // repeated int32 item_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_item_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        if (input->ExpectTag(24)) goto parse_item_amount;
        break;
      }
      
      // repeated int32 item_amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_item_amount())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item_amount())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_amount;
        if (input->ExpectTag(32)) goto parse_item_bind;
        break;
      }
      
      // repeated int32 item_bind = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_bind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_item_bind())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item_bind())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_item_bind;
        if (input->ExpectTag(40)) goto parse_ret;
        break;
      }
      
      // optional int32 ret = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_index;
        break;
      }
      
      // optional int32 index = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_type;
        break;
      }
      
      // optional int32 type = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31403202::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 act_id = 1;
  if (has_act_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->act_id(), output);
  }
  
  // repeated int32 item_id = 2;
  for (int i = 0; i < this->item_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->item_id(i), output);
  }
  
  // repeated int32 item_amount = 3;
  for (int i = 0; i < this->item_amount_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->item_amount(i), output);
  }
  
  // repeated int32 item_bind = 4;
  for (int i = 0; i < this->item_bind_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->item_bind(i), output);
  }
  
  // optional int32 ret = 5;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ret(), output);
  }
  
  // optional int32 index = 6;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->index(), output);
  }
  
  // optional int32 type = 7;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31403202::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 act_id = 1;
  if (has_act_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->act_id(), target);
  }
  
  // repeated int32 item_id = 2;
  for (int i = 0; i < this->item_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->item_id(i), target);
  }
  
  // repeated int32 item_amount = 3;
  for (int i = 0; i < this->item_amount_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->item_amount(i), target);
  }
  
  // repeated int32 item_bind = 4;
  for (int i = 0; i < this->item_bind_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->item_bind(i), target);
  }
  
  // optional int32 ret = 5;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ret(), target);
  }
  
  // optional int32 index = 6;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->index(), target);
  }
  
  // optional int32 type = 7;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31403202::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 act_id = 1;
    if (has_act_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_id());
    }
    
    // optional int32 ret = 5;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }
    
    // optional int32 index = 6;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 type = 7;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  // repeated int32 item_id = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item_id(i));
    }
    total_size += 1 * this->item_id_size() + data_size;
  }
  
  // repeated int32 item_amount = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_amount_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item_amount(i));
    }
    total_size += 1 * this->item_amount_size() + data_size;
  }
  
  // repeated int32 item_bind = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_bind_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item_bind(i));
    }
    total_size += 1 * this->item_bind_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31403202::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31403202* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31403202*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31403202::MergeFrom(const Proto31403202& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_id_.MergeFrom(from.item_id_);
  item_amount_.MergeFrom(from.item_amount_);
  item_bind_.MergeFrom(from.item_bind_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_act_id()) {
      set_act_id(from.act_id());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31403202::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31403202::CopyFrom(const Proto31403202& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31403202::IsInitialized() const {
  
  return true;
}

void Proto31403202::Swap(Proto31403202* other) {
  if (other != this) {
    std::swap(act_id_, other->act_id_);
    item_id_.Swap(&other->item_id_);
    item_amount_.Swap(&other->item_amount_);
    item_bind_.Swap(&other->item_bind_);
    std::swap(ret_, other->ret_);
    std::swap(index_, other->index_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31403202::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31403202_descriptor_;
  metadata.reflection = Proto31403202_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31402701::kPromotTurnsFieldNumber;
const int Proto31402701::kWinTeamFieldNumber;
const int Proto31402701::kAmountFieldNumber;
const int Proto31402701::kTeamNameFieldNumber;
const int Proto31402701::kServerPrevFieldNumber;
#endif  // !_MSC_VER

Proto31402701::Proto31402701()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31402701::InitAsDefaultInstance() {
}

Proto31402701::Proto31402701(const Proto31402701& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31402701::SharedCtor() {
  _cached_size_ = 0;
  promot_turns_ = 0;
  win_team_ = GOOGLE_LONGLONG(0);
  amount_ = 0;
  team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  server_prev_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31402701::~Proto31402701() {
  SharedDtor();
}

void Proto31402701::SharedDtor() {
  if (team_name_ != &::google::protobuf::internal::kEmptyString) {
    delete team_name_;
  }
  if (server_prev_ != &::google::protobuf::internal::kEmptyString) {
    delete server_prev_;
  }
  if (this != default_instance_) {
  }
}

void Proto31402701::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31402701::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31402701_descriptor_;
}

const Proto31402701& Proto31402701::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto31402701* Proto31402701::default_instance_ = NULL;

Proto31402701* Proto31402701::New() const {
  return new Proto31402701;
}

void Proto31402701::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    promot_turns_ = 0;
    win_team_ = GOOGLE_LONGLONG(0);
    amount_ = 0;
    if (has_team_name()) {
      if (team_name_ != &::google::protobuf::internal::kEmptyString) {
        team_name_->clear();
      }
    }
    if (has_server_prev()) {
      if (server_prev_ != &::google::protobuf::internal::kEmptyString) {
        server_prev_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31402701::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 promot_turns = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &promot_turns_)));
          set_has_promot_turns();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_win_team;
        break;
      }
      
      // optional int64 win_team = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_win_team:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &win_team_)));
          set_has_win_team();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_team_name;
        break;
      }
      
      // optional string team_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_team_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_team_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->team_name().data(), this->team_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_server_prev;
        break;
      }
      
      // optional string server_prev = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_server_prev:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_prev()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->server_prev().data(), this->server_prev().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31402701::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 promot_turns = 1;
  if (has_promot_turns()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->promot_turns(), output);
  }
  
  // optional int64 win_team = 2;
  if (has_win_team()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->win_team(), output);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->amount(), output);
  }
  
  // optional string team_name = 4;
  if (has_team_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->team_name().data(), this->team_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->team_name(), output);
  }
  
  // optional string server_prev = 5;
  if (has_server_prev()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_prev().data(), this->server_prev().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->server_prev(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31402701::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 promot_turns = 1;
  if (has_promot_turns()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->promot_turns(), target);
  }
  
  // optional int64 win_team = 2;
  if (has_win_team()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->win_team(), target);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->amount(), target);
  }
  
  // optional string team_name = 4;
  if (has_team_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->team_name().data(), this->team_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->team_name(), target);
  }
  
  // optional string server_prev = 5;
  if (has_server_prev()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_prev().data(), this->server_prev().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->server_prev(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31402701::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 promot_turns = 1;
    if (has_promot_turns()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->promot_turns());
    }
    
    // optional int64 win_team = 2;
    if (has_win_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->win_team());
    }
    
    // optional int32 amount = 3;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
    // optional string team_name = 4;
    if (has_team_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->team_name());
    }
    
    // optional string server_prev = 5;
    if (has_server_prev()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_prev());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31402701::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31402701* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31402701*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31402701::MergeFrom(const Proto31402701& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_promot_turns()) {
      set_promot_turns(from.promot_turns());
    }
    if (from.has_win_team()) {
      set_win_team(from.win_team());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_team_name()) {
      set_team_name(from.team_name());
    }
    if (from.has_server_prev()) {
      set_server_prev(from.server_prev());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31402701::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31402701::CopyFrom(const Proto31402701& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31402701::IsInitialized() const {
  
  return true;
}

void Proto31402701::Swap(Proto31402701* other) {
  if (other != this) {
    std::swap(promot_turns_, other->promot_turns_);
    std::swap(win_team_, other->win_team_);
    std::swap(amount_, other->amount_);
    std::swap(team_name_, other->team_name_);
    std::swap(server_prev_, other->server_prev_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31402701::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31402701_descriptor_;
  metadata.reflection = Proto31402701_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31402702::kTeamNameFieldNumber;
const int Proto31402702::kNeedForceFieldNumber;
#endif  // !_MSC_VER

Proto31402702::Proto31402702()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31402702::InitAsDefaultInstance() {
}

Proto31402702::Proto31402702(const Proto31402702& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31402702::SharedCtor() {
  _cached_size_ = 0;
  team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  need_force_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31402702::~Proto31402702() {
  SharedDtor();
}

void Proto31402702::SharedDtor() {
  if (team_name_ != &::google::protobuf::internal::kEmptyString) {
    delete team_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto31402702::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31402702::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31402702_descriptor_;
}

const Proto31402702& Proto31402702::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto31402702* Proto31402702::default_instance_ = NULL;

Proto31402702* Proto31402702::New() const {
  return new Proto31402702;
}

void Proto31402702::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_team_name()) {
      if (team_name_ != &::google::protobuf::internal::kEmptyString) {
        team_name_->clear();
      }
    }
    need_force_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31402702::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string team_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_team_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->team_name().data(), this->team_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_need_force;
        break;
      }
      
      // optional int32 need_force = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_need_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_force_)));
          set_has_need_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31402702::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string team_name = 1;
  if (has_team_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->team_name().data(), this->team_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->team_name(), output);
  }
  
  // optional int32 need_force = 2;
  if (has_need_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->need_force(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31402702::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string team_name = 1;
  if (has_team_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->team_name().data(), this->team_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->team_name(), target);
  }
  
  // optional int32 need_force = 2;
  if (has_need_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->need_force(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31402702::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string team_name = 1;
    if (has_team_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->team_name());
    }
    
    // optional int32 need_force = 2;
    if (has_need_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->need_force());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31402702::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31402702* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31402702*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31402702::MergeFrom(const Proto31402702& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_name()) {
      set_team_name(from.team_name());
    }
    if (from.has_need_force()) {
      set_need_force(from.need_force());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31402702::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31402702::CopyFrom(const Proto31402702& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31402702::IsInitialized() const {
  
  return true;
}

void Proto31402702::Swap(Proto31402702* other) {
  if (other != this) {
    std::swap(team_name_, other->team_name_);
    std::swap(need_force_, other->need_force_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31402702::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31402702_descriptor_;
  metadata.reflection = Proto31402702_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402506::kRoleIdFieldNumber;
const int Proto30402506::kPracticeFieldNumber;
#endif  // !_MSC_VER

Proto30402506::Proto30402506()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402506::InitAsDefaultInstance() {
}

Proto30402506::Proto30402506(const Proto30402506& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402506::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  practice_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402506::~Proto30402506() {
  SharedDtor();
}

void Proto30402506::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30402506::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402506::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402506_descriptor_;
}

const Proto30402506& Proto30402506::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30402506* Proto30402506::default_instance_ = NULL;

Proto30402506* Proto30402506::New() const {
  return new Proto30402506;
}

void Proto30402506::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    practice_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402506::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_practice;
        break;
      }
      
      // optional int32 practice = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_practice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &practice_)));
          set_has_practice();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402506::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 practice = 2;
  if (has_practice()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->practice(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402506::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 practice = 2;
  if (has_practice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->practice(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402506::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 practice = 2;
    if (has_practice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->practice());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402506::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402506* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402506*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402506::MergeFrom(const Proto30402506& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_practice()) {
      set_practice(from.practice());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402506::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402506::CopyFrom(const Proto30402506& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402506::IsInitialized() const {
  
  return true;
}

void Proto30402506::Swap(Proto30402506* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(practice_, other->practice_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402506::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402506_descriptor_;
  metadata.reflection = Proto30402506_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400060::kRoleIdFieldNumber;
const int Proto31400060::kFirstRechargeGoldFieldNumber;
const int Proto31400060::kLastRechargeTimeFieldNumber;
const int Proto31400060::kTodayRechargeGoldFieldNumber;
const int Proto31400060::kActRechargeTimesFieldNumber;
const int Proto31400060::kActHasMailFieldNumber;
const int Proto31400060::kRewardFieldNumber;
#endif  // !_MSC_VER

Proto31400060::Proto31400060()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400060::InitAsDefaultInstance() {
}

Proto31400060::Proto31400060(const Proto31400060& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400060::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  first_recharge_gold_ = 0;
  last_recharge_time_ = 0;
  today_recharge_gold_ = 0;
  act_recharge_times_ = 0;
  act_has_mail_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400060::~Proto31400060() {
  SharedDtor();
}

void Proto31400060::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400060::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400060::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400060_descriptor_;
}

const Proto31400060& Proto31400060::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto31400060* Proto31400060::default_instance_ = NULL;

Proto31400060* Proto31400060::New() const {
  return new Proto31400060;
}

void Proto31400060::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    first_recharge_gold_ = 0;
    last_recharge_time_ = 0;
    today_recharge_gold_ = 0;
    act_recharge_times_ = 0;
    act_has_mail_ = 0;
  }
  reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400060::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_first_recharge_gold;
        break;
      }
      
      // optional int32 first_recharge_gold = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_recharge_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_recharge_gold_)));
          set_has_first_recharge_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_last_recharge_time;
        break;
      }
      
      // optional int32 last_recharge_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last_recharge_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_recharge_time_)));
          set_has_last_recharge_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_today_recharge_gold;
        break;
      }
      
      // optional int32 today_recharge_gold = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_today_recharge_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &today_recharge_gold_)));
          set_has_today_recharge_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_act_recharge_times;
        break;
      }
      
      // optional int32 act_recharge_times = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_recharge_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_recharge_times_)));
          set_has_act_recharge_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_act_has_mail;
        break;
      }
      
      // optional int32 act_has_mail = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_has_mail:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_has_mail_)));
          set_has_act_has_mail();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_reward;
        break;
      }
      
      // repeated int32 reward = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_reward())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_reward())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_reward;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400060::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 first_recharge_gold = 2;
  if (has_first_recharge_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->first_recharge_gold(), output);
  }
  
  // optional int32 last_recharge_time = 3;
  if (has_last_recharge_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->last_recharge_time(), output);
  }
  
  // optional int32 today_recharge_gold = 4;
  if (has_today_recharge_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->today_recharge_gold(), output);
  }
  
  // optional int32 act_recharge_times = 5;
  if (has_act_recharge_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->act_recharge_times(), output);
  }
  
  // optional int32 act_has_mail = 6;
  if (has_act_has_mail()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->act_has_mail(), output);
  }
  
  // repeated int32 reward = 7;
  for (int i = 0; i < this->reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->reward(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400060::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 first_recharge_gold = 2;
  if (has_first_recharge_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->first_recharge_gold(), target);
  }
  
  // optional int32 last_recharge_time = 3;
  if (has_last_recharge_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->last_recharge_time(), target);
  }
  
  // optional int32 today_recharge_gold = 4;
  if (has_today_recharge_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->today_recharge_gold(), target);
  }
  
  // optional int32 act_recharge_times = 5;
  if (has_act_recharge_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->act_recharge_times(), target);
  }
  
  // optional int32 act_has_mail = 6;
  if (has_act_has_mail()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->act_has_mail(), target);
  }
  
  // repeated int32 reward = 7;
  for (int i = 0; i < this->reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->reward(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400060::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 first_recharge_gold = 2;
    if (has_first_recharge_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_recharge_gold());
    }
    
    // optional int32 last_recharge_time = 3;
    if (has_last_recharge_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_recharge_time());
    }
    
    // optional int32 today_recharge_gold = 4;
    if (has_today_recharge_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->today_recharge_gold());
    }
    
    // optional int32 act_recharge_times = 5;
    if (has_act_recharge_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_recharge_times());
    }
    
    // optional int32 act_has_mail = 6;
    if (has_act_has_mail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_has_mail());
    }
    
  }
  // repeated int32 reward = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->reward_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->reward(i));
    }
    total_size += 1 * this->reward_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400060::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400060* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400060*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400060::MergeFrom(const Proto31400060& from) {
  GOOGLE_CHECK_NE(&from, this);
  reward_.MergeFrom(from.reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_first_recharge_gold()) {
      set_first_recharge_gold(from.first_recharge_gold());
    }
    if (from.has_last_recharge_time()) {
      set_last_recharge_time(from.last_recharge_time());
    }
    if (from.has_today_recharge_gold()) {
      set_today_recharge_gold(from.today_recharge_gold());
    }
    if (from.has_act_recharge_times()) {
      set_act_recharge_times(from.act_recharge_times());
    }
    if (from.has_act_has_mail()) {
      set_act_has_mail(from.act_has_mail());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400060::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400060::CopyFrom(const Proto31400060& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400060::IsInitialized() const {
  
  return true;
}

void Proto31400060::Swap(Proto31400060* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(first_recharge_gold_, other->first_recharge_gold_);
    std::swap(last_recharge_time_, other->last_recharge_time_);
    std::swap(today_recharge_gold_, other->today_recharge_gold_);
    std::swap(act_recharge_times_, other->act_recharge_times_);
    std::swap(act_has_mail_, other->act_has_mail_);
    reward_.Swap(&other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400060::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400060_descriptor_;
  metadata.reflection = Proto31400060_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31403203::kValueFieldNumber;
#endif  // !_MSC_VER

Proto31403203::Proto31403203()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31403203::InitAsDefaultInstance() {
}

Proto31403203::Proto31403203(const Proto31403203& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31403203::SharedCtor() {
  _cached_size_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31403203::~Proto31403203() {
  SharedDtor();
}

void Proto31403203::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31403203::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31403203::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31403203_descriptor_;
}

const Proto31403203& Proto31403203::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto31403203* Proto31403203::default_instance_ = NULL;

Proto31403203* Proto31403203::New() const {
  return new Proto31403203;
}

void Proto31403203::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31403203::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31403203::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31403203::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 value = 1;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31403203::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 value = 1;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31403203::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31403203* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31403203*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31403203::MergeFrom(const Proto31403203& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31403203::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31403203::CopyFrom(const Proto31403203& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31403203::IsInitialized() const {
  
  return true;
}

void Proto31403203::Swap(Proto31403203* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31403203::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31403203_descriptor_;
  metadata.reflection = Proto31403203_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402001::kTeamIdFieldNumber;
const int Proto30402001::kOpTypeFieldNumber;
const int Proto30402001::kTeamNameFieldNumber;
const int Proto30402001::kNeedForceFieldNumber;
const int Proto30402001::kLeaderIdFieldNumber;
const int Proto30402001::kTeamerListFieldNumber;
const int Proto30402001::kServerInfoFieldNumber;
#endif  // !_MSC_VER

Proto30402001::Proto30402001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402001::InitAsDefaultInstance() {
  server_info_ = const_cast< ::ProtoServer*>(&::ProtoServer::default_instance());
}

Proto30402001::Proto30402001(const Proto30402001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402001::SharedCtor() {
  _cached_size_ = 0;
  team_id_ = GOOGLE_LONGLONG(0);
  op_type_ = 0;
  team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  need_force_ = 0;
  leader_id_ = GOOGLE_LONGLONG(0);
  server_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402001::~Proto30402001() {
  SharedDtor();
}

void Proto30402001::SharedDtor() {
  if (team_name_ != &::google::protobuf::internal::kEmptyString) {
    delete team_name_;
  }
  if (this != default_instance_) {
    delete server_info_;
  }
}

void Proto30402001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402001_descriptor_;
}

const Proto30402001& Proto30402001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30402001* Proto30402001::default_instance_ = NULL;

Proto30402001* Proto30402001::New() const {
  return new Proto30402001;
}

void Proto30402001::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    team_id_ = GOOGLE_LONGLONG(0);
    op_type_ = 0;
    if (has_team_name()) {
      if (team_name_ != &::google::protobuf::internal::kEmptyString) {
        team_name_->clear();
      }
    }
    need_force_ = 0;
    leader_id_ = GOOGLE_LONGLONG(0);
    if (has_server_info()) {
      if (server_info_ != NULL) server_info_->::ProtoServer::Clear();
    }
  }
  teamer_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 team_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_op_type;
        break;
      }
      
      // optional int32 op_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_op_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &op_type_)));
          set_has_op_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_team_name;
        break;
      }
      
      // optional string team_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_team_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_team_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->team_name().data(), this->team_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_need_force;
        break;
      }
      
      // optional int32 need_force = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_need_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_force_)));
          set_has_need_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_leader_id;
        break;
      }
      
      // optional int64 leader_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leader_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &leader_id_)));
          set_has_leader_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_teamer_list;
        break;
      }
      
      // repeated .ProtoTeamer teamer_list = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_teamer_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_teamer_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_teamer_list;
        if (input->ExpectTag(58)) goto parse_server_info;
        break;
      }
      
      // optional .ProtoServer server_info = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_server_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_server_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->team_id(), output);
  }
  
  // optional int32 op_type = 2;
  if (has_op_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->op_type(), output);
  }
  
  // optional string team_name = 3;
  if (has_team_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->team_name().data(), this->team_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->team_name(), output);
  }
  
  // optional int32 need_force = 4;
  if (has_need_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->need_force(), output);
  }
  
  // optional int64 leader_id = 5;
  if (has_leader_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->leader_id(), output);
  }
  
  // repeated .ProtoTeamer teamer_list = 6;
  for (int i = 0; i < this->teamer_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->teamer_list(i), output);
  }
  
  // optional .ProtoServer server_info = 7;
  if (has_server_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->server_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->team_id(), target);
  }
  
  // optional int32 op_type = 2;
  if (has_op_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->op_type(), target);
  }
  
  // optional string team_name = 3;
  if (has_team_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->team_name().data(), this->team_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->team_name(), target);
  }
  
  // optional int32 need_force = 4;
  if (has_need_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->need_force(), target);
  }
  
  // optional int64 leader_id = 5;
  if (has_leader_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->leader_id(), target);
  }
  
  // repeated .ProtoTeamer teamer_list = 6;
  for (int i = 0; i < this->teamer_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->teamer_list(i), target);
  }
  
  // optional .ProtoServer server_info = 7;
  if (has_server_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->server_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402001::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 team_id = 1;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->team_id());
    }
    
    // optional int32 op_type = 2;
    if (has_op_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->op_type());
    }
    
    // optional string team_name = 3;
    if (has_team_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->team_name());
    }
    
    // optional int32 need_force = 4;
    if (has_need_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->need_force());
    }
    
    // optional int64 leader_id = 5;
    if (has_leader_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->leader_id());
    }
    
    // optional .ProtoServer server_info = 7;
    if (has_server_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->server_info());
    }
    
  }
  // repeated .ProtoTeamer teamer_list = 6;
  total_size += 1 * this->teamer_list_size();
  for (int i = 0; i < this->teamer_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->teamer_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402001::MergeFrom(const Proto30402001& from) {
  GOOGLE_CHECK_NE(&from, this);
  teamer_list_.MergeFrom(from.teamer_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
    if (from.has_op_type()) {
      set_op_type(from.op_type());
    }
    if (from.has_team_name()) {
      set_team_name(from.team_name());
    }
    if (from.has_need_force()) {
      set_need_force(from.need_force());
    }
    if (from.has_leader_id()) {
      set_leader_id(from.leader_id());
    }
    if (from.has_server_info()) {
      mutable_server_info()->::ProtoServer::MergeFrom(from.server_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402001::CopyFrom(const Proto30402001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402001::IsInitialized() const {
  
  return true;
}

void Proto30402001::Swap(Proto30402001* other) {
  if (other != this) {
    std::swap(team_id_, other->team_id_);
    std::swap(op_type_, other->op_type_);
    std::swap(team_name_, other->team_name_);
    std::swap(need_force_, other->need_force_);
    std::swap(leader_id_, other->leader_id_);
    teamer_list_.Swap(&other->teamer_list_);
    std::swap(server_info_, other->server_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402001_descriptor_;
  metadata.reflection = Proto30402001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402006::kTeamIdFieldNumber;
#endif  // !_MSC_VER

Proto30402006::Proto30402006()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402006::InitAsDefaultInstance() {
}

Proto30402006::Proto30402006(const Proto30402006& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402006::SharedCtor() {
  _cached_size_ = 0;
  team_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402006::~Proto30402006() {
  SharedDtor();
}

void Proto30402006::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30402006::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402006::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402006_descriptor_;
}

const Proto30402006& Proto30402006::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30402006* Proto30402006::default_instance_ = NULL;

Proto30402006* Proto30402006::New() const {
  return new Proto30402006;
}

void Proto30402006::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    team_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402006::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 team_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402006::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->team_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402006::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->team_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402006::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 team_id = 1;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->team_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402006::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402006* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402006*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402006::MergeFrom(const Proto30402006& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402006::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402006::CopyFrom(const Proto30402006& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402006::IsInitialized() const {
  
  return true;
}

void Proto30402006::Swap(Proto30402006* other) {
  if (other != this) {
    std::swap(team_id_, other->team_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402006::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402006_descriptor_;
  metadata.reflection = Proto30402006_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30101905::kTeamIdFieldNumber;
#endif  // !_MSC_VER

Proto30101905::Proto30101905()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30101905::InitAsDefaultInstance() {
}

Proto30101905::Proto30101905(const Proto30101905& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30101905::SharedCtor() {
  _cached_size_ = 0;
  team_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30101905::~Proto30101905() {
  SharedDtor();
}

void Proto30101905::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30101905::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30101905::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30101905_descriptor_;
}

const Proto30101905& Proto30101905::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30101905* Proto30101905::default_instance_ = NULL;

Proto30101905* Proto30101905::New() const {
  return new Proto30101905;
}

void Proto30101905::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    team_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30101905::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 team_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30101905::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->team_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30101905::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->team_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30101905::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 team_id = 1;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->team_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30101905::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30101905* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30101905*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30101905::MergeFrom(const Proto30101905& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30101905::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30101905::CopyFrom(const Proto30101905& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30101905::IsInitialized() const {
  
  return true;
}

void Proto30101905::Swap(Proto30101905* other) {
  if (other != this) {
    std::swap(team_id_, other->team_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30101905::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30101905_descriptor_;
  metadata.reflection = Proto30101905_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30101909::kTeamIdFieldNumber;
const int Proto30101909::kIsSignupFieldNumber;
#endif  // !_MSC_VER

Proto30101909::Proto30101909()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30101909::InitAsDefaultInstance() {
}

Proto30101909::Proto30101909(const Proto30101909& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30101909::SharedCtor() {
  _cached_size_ = 0;
  team_id_ = GOOGLE_LONGLONG(0);
  is_signup_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30101909::~Proto30101909() {
  SharedDtor();
}

void Proto30101909::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30101909::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30101909::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30101909_descriptor_;
}

const Proto30101909& Proto30101909::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30101909* Proto30101909::default_instance_ = NULL;

Proto30101909* Proto30101909::New() const {
  return new Proto30101909;
}

void Proto30101909::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    team_id_ = GOOGLE_LONGLONG(0);
    is_signup_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30101909::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 team_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_signup;
        break;
      }
      
      // optional int32 is_signup = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_signup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_signup_)));
          set_has_is_signup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30101909::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->team_id(), output);
  }
  
  // optional int32 is_signup = 2;
  if (has_is_signup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_signup(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30101909::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->team_id(), target);
  }
  
  // optional int32 is_signup = 2;
  if (has_is_signup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_signup(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30101909::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 team_id = 1;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->team_id());
    }
    
    // optional int32 is_signup = 2;
    if (has_is_signup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_signup());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30101909::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30101909* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30101909*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30101909::MergeFrom(const Proto30101909& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
    if (from.has_is_signup()) {
      set_is_signup(from.is_signup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30101909::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30101909::CopyFrom(const Proto30101909& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30101909::IsInitialized() const {
  
  return true;
}

void Proto30101909::Swap(Proto30101909* other) {
  if (other != this) {
    std::swap(team_id_, other->team_id_);
    std::swap(is_signup_, other->is_signup_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30101909::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30101909_descriptor_;
  metadata.reflection = Proto30101909_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402009::kServerFlagFieldNumber;
#endif  // !_MSC_VER

Proto30402009::Proto30402009()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402009::InitAsDefaultInstance() {
}

Proto30402009::Proto30402009(const Proto30402009& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402009::SharedCtor() {
  _cached_size_ = 0;
  server_flag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402009::~Proto30402009() {
  SharedDtor();
}

void Proto30402009::SharedDtor() {
  if (server_flag_ != &::google::protobuf::internal::kEmptyString) {
    delete server_flag_;
  }
  if (this != default_instance_) {
  }
}

void Proto30402009::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402009::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402009_descriptor_;
}

const Proto30402009& Proto30402009::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30402009* Proto30402009::default_instance_ = NULL;

Proto30402009* Proto30402009::New() const {
  return new Proto30402009;
}

void Proto30402009::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_server_flag()) {
      if (server_flag_ != &::google::protobuf::internal::kEmptyString) {
        server_flag_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402009::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string server_flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_flag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->server_flag().data(), this->server_flag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402009::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string server_flag = 1;
  if (has_server_flag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_flag().data(), this->server_flag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->server_flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402009::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string server_flag = 1;
  if (has_server_flag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_flag().data(), this->server_flag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server_flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402009::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string server_flag = 1;
    if (has_server_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_flag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402009::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402009* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402009*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402009::MergeFrom(const Proto30402009& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_server_flag()) {
      set_server_flag(from.server_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402009::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402009::CopyFrom(const Proto30402009& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402009::IsInitialized() const {
  
  return true;
}

void Proto30402009::Swap(Proto30402009* other) {
  if (other != this) {
    std::swap(server_flag_, other->server_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402009::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402009_descriptor_;
  metadata.reflection = Proto30402009_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402010::kSignupStartFieldNumber;
const int Proto30402010::kSignupEndFieldNumber;
const int Proto30402010::kQualityStartFieldNumber;
const int Proto30402010::kQualityEndFieldNumber;
const int Proto30402010::kKnockoutStartFieldNumber;
const int Proto30402010::kKnockoutEndFieldNumber;
#endif  // !_MSC_VER

Proto30402010::Proto30402010()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402010::InitAsDefaultInstance() {
}

Proto30402010::Proto30402010(const Proto30402010& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402010::SharedCtor() {
  _cached_size_ = 0;
  signup_start_ = GOOGLE_LONGLONG(0);
  signup_end_ = GOOGLE_LONGLONG(0);
  quality_start_ = GOOGLE_LONGLONG(0);
  quality_end_ = GOOGLE_LONGLONG(0);
  knockout_start_ = GOOGLE_LONGLONG(0);
  knockout_end_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402010::~Proto30402010() {
  SharedDtor();
}

void Proto30402010::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30402010::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402010::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402010_descriptor_;
}

const Proto30402010& Proto30402010::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30402010* Proto30402010::default_instance_ = NULL;

Proto30402010* Proto30402010::New() const {
  return new Proto30402010;
}

void Proto30402010::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    signup_start_ = GOOGLE_LONGLONG(0);
    signup_end_ = GOOGLE_LONGLONG(0);
    quality_start_ = GOOGLE_LONGLONG(0);
    quality_end_ = GOOGLE_LONGLONG(0);
    knockout_start_ = GOOGLE_LONGLONG(0);
    knockout_end_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402010::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 signup_start = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &signup_start_)));
          set_has_signup_start();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_signup_end;
        break;
      }
      
      // optional int64 signup_end = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_signup_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &signup_end_)));
          set_has_signup_end();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_quality_start;
        break;
      }
      
      // optional int64 quality_start = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quality_start:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &quality_start_)));
          set_has_quality_start();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_quality_end;
        break;
      }
      
      // optional int64 quality_end = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quality_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &quality_end_)));
          set_has_quality_end();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_knockout_start;
        break;
      }
      
      // optional int64 knockout_start = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_knockout_start:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &knockout_start_)));
          set_has_knockout_start();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_knockout_end;
        break;
      }
      
      // optional int32 knockout_end = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_knockout_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &knockout_end_)));
          set_has_knockout_end();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402010::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 signup_start = 1;
  if (has_signup_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->signup_start(), output);
  }
  
  // optional int64 signup_end = 2;
  if (has_signup_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->signup_end(), output);
  }
  
  // optional int64 quality_start = 3;
  if (has_quality_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->quality_start(), output);
  }
  
  // optional int64 quality_end = 4;
  if (has_quality_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->quality_end(), output);
  }
  
  // optional int64 knockout_start = 5;
  if (has_knockout_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->knockout_start(), output);
  }
  
  // optional int32 knockout_end = 6;
  if (has_knockout_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->knockout_end(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402010::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 signup_start = 1;
  if (has_signup_start()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->signup_start(), target);
  }
  
  // optional int64 signup_end = 2;
  if (has_signup_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->signup_end(), target);
  }
  
  // optional int64 quality_start = 3;
  if (has_quality_start()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->quality_start(), target);
  }
  
  // optional int64 quality_end = 4;
  if (has_quality_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->quality_end(), target);
  }
  
  // optional int64 knockout_start = 5;
  if (has_knockout_start()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->knockout_start(), target);
  }
  
  // optional int32 knockout_end = 6;
  if (has_knockout_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->knockout_end(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402010::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 signup_start = 1;
    if (has_signup_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->signup_start());
    }
    
    // optional int64 signup_end = 2;
    if (has_signup_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->signup_end());
    }
    
    // optional int64 quality_start = 3;
    if (has_quality_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->quality_start());
    }
    
    // optional int64 quality_end = 4;
    if (has_quality_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->quality_end());
    }
    
    // optional int64 knockout_start = 5;
    if (has_knockout_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->knockout_start());
    }
    
    // optional int32 knockout_end = 6;
    if (has_knockout_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->knockout_end());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402010::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402010* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402010*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402010::MergeFrom(const Proto30402010& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_signup_start()) {
      set_signup_start(from.signup_start());
    }
    if (from.has_signup_end()) {
      set_signup_end(from.signup_end());
    }
    if (from.has_quality_start()) {
      set_quality_start(from.quality_start());
    }
    if (from.has_quality_end()) {
      set_quality_end(from.quality_end());
    }
    if (from.has_knockout_start()) {
      set_knockout_start(from.knockout_start());
    }
    if (from.has_knockout_end()) {
      set_knockout_end(from.knockout_end());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402010::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402010::CopyFrom(const Proto30402010& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402010::IsInitialized() const {
  
  return true;
}

void Proto30402010::Swap(Proto30402010* other) {
  if (other != this) {
    std::swap(signup_start_, other->signup_start_);
    std::swap(signup_end_, other->signup_end_);
    std::swap(quality_start_, other->quality_start_);
    std::swap(quality_end_, other->quality_end_);
    std::swap(knockout_start_, other->knockout_start_);
    std::swap(knockout_end_, other->knockout_end_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402010::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402010_descriptor_;
  metadata.reflection = Proto30402010_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31403204::kMoneyFieldNumber;
const int Proto31403204::kItemIdFieldNumber;
const int Proto31403204::kItemAmountFieldNumber;
const int Proto31403204::kItemBindFieldNumber;
const int Proto31403204::kRetFieldNumber;
const int Proto31403204::kSubValueFieldNumber;
const int Proto31403204::kSerialObjFieldNumber;
const int Proto31403204::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto31403204::Proto31403204()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31403204::InitAsDefaultInstance() {
  serial_obj_ = const_cast< ::ProtoSerialObj*>(&::ProtoSerialObj::default_instance());
}

Proto31403204::Proto31403204(const Proto31403204& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31403204::SharedCtor() {
  _cached_size_ = 0;
  money_ = 0;
  item_id_ = 0;
  item_amount_ = 0;
  item_bind_ = 0;
  ret_ = 0;
  sub_value_ = 0;
  serial_obj_ = NULL;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31403204::~Proto31403204() {
  SharedDtor();
}

void Proto31403204::SharedDtor() {
  if (this != default_instance_) {
    delete serial_obj_;
  }
}

void Proto31403204::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31403204::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31403204_descriptor_;
}

const Proto31403204& Proto31403204::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto31403204* Proto31403204::default_instance_ = NULL;

Proto31403204* Proto31403204::New() const {
  return new Proto31403204;
}

void Proto31403204::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    money_ = 0;
    item_id_ = 0;
    item_amount_ = 0;
    item_bind_ = 0;
    ret_ = 0;
    sub_value_ = 0;
    if (has_serial_obj()) {
      if (serial_obj_ != NULL) serial_obj_->::ProtoSerialObj::Clear();
    }
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31403204::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 money = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }
      
      // optional int32 item_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_amount;
        break;
      }
      
      // optional int32 item_amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_amount_)));
          set_has_item_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_item_bind;
        break;
      }
      
      // optional int32 item_bind = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_bind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_bind_)));
          set_has_item_bind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_ret;
        break;
      }
      
      // optional int32 ret = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_sub_value;
        break;
      }
      
      // optional int32 sub_value = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sub_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sub_value_)));
          set_has_sub_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_serial_obj;
        break;
      }
      
      // optional .ProtoSerialObj serial_obj = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_serial_obj:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serial_obj()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_type;
        break;
      }
      
      // optional int32 type = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31403204::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 money = 1;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->money(), output);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_id(), output);
  }
  
  // optional int32 item_amount = 3;
  if (has_item_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_amount(), output);
  }
  
  // optional int32 item_bind = 4;
  if (has_item_bind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->item_bind(), output);
  }
  
  // optional int32 ret = 5;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ret(), output);
  }
  
  // optional int32 sub_value = 6;
  if (has_sub_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->sub_value(), output);
  }
  
  // optional .ProtoSerialObj serial_obj = 7;
  if (has_serial_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->serial_obj(), output);
  }
  
  // optional int32 type = 8;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31403204::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 money = 1;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->money(), target);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_id(), target);
  }
  
  // optional int32 item_amount = 3;
  if (has_item_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_amount(), target);
  }
  
  // optional int32 item_bind = 4;
  if (has_item_bind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->item_bind(), target);
  }
  
  // optional int32 ret = 5;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ret(), target);
  }
  
  // optional int32 sub_value = 6;
  if (has_sub_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->sub_value(), target);
  }
  
  // optional .ProtoSerialObj serial_obj = 7;
  if (has_serial_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->serial_obj(), target);
  }
  
  // optional int32 type = 8;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31403204::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 money = 1;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }
    
    // optional int32 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_amount = 3;
    if (has_item_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_amount());
    }
    
    // optional int32 item_bind = 4;
    if (has_item_bind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_bind());
    }
    
    // optional int32 ret = 5;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }
    
    // optional int32 sub_value = 6;
    if (has_sub_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sub_value());
    }
    
    // optional .ProtoSerialObj serial_obj = 7;
    if (has_serial_obj()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serial_obj());
    }
    
    // optional int32 type = 8;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31403204::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31403204* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31403204*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31403204::MergeFrom(const Proto31403204& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_amount()) {
      set_item_amount(from.item_amount());
    }
    if (from.has_item_bind()) {
      set_item_bind(from.item_bind());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_sub_value()) {
      set_sub_value(from.sub_value());
    }
    if (from.has_serial_obj()) {
      mutable_serial_obj()->::ProtoSerialObj::MergeFrom(from.serial_obj());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31403204::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31403204::CopyFrom(const Proto31403204& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31403204::IsInitialized() const {
  
  return true;
}

void Proto31403204::Swap(Proto31403204* other) {
  if (other != this) {
    std::swap(money_, other->money_);
    std::swap(item_id_, other->item_id_);
    std::swap(item_amount_, other->item_amount_);
    std::swap(item_bind_, other->item_bind_);
    std::swap(ret_, other->ret_);
    std::swap(sub_value_, other->sub_value_);
    std::swap(serial_obj_, other->serial_obj_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31403204::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31403204_descriptor_;
  metadata.reflection = Proto31403204_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400061::kItemInfoListFieldNumber;
const int Proto31400061::kObjFieldNumber;
#endif  // !_MSC_VER

Proto31400061::Proto31400061()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400061::InitAsDefaultInstance() {
  obj_ = const_cast< ::ProtoSerialObj*>(&::ProtoSerialObj::default_instance());
}

Proto31400061::Proto31400061(const Proto31400061& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400061::SharedCtor() {
  _cached_size_ = 0;
  obj_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400061::~Proto31400061() {
  SharedDtor();
}

void Proto31400061::SharedDtor() {
  if (this != default_instance_) {
    delete obj_;
  }
}

void Proto31400061::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400061::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400061_descriptor_;
}

const Proto31400061& Proto31400061::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto31400061* Proto31400061::default_instance_ = NULL;

Proto31400061* Proto31400061::New() const {
  return new Proto31400061;
}

void Proto31400061::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_obj()) {
      if (obj_ != NULL) obj_->::ProtoSerialObj::Clear();
    }
  }
  item_info_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400061::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItemId item_info_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_info_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_info_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_info_list;
        if (input->ExpectTag(18)) goto parse_obj;
        break;
      }
      
      // optional .ProtoSerialObj obj = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_obj:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_obj()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400061::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItemId item_info_list = 1;
  for (int i = 0; i < this->item_info_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_info_list(i), output);
  }
  
  // optional .ProtoSerialObj obj = 2;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->obj(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400061::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItemId item_info_list = 1;
  for (int i = 0; i < this->item_info_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_info_list(i), target);
  }
  
  // optional .ProtoSerialObj obj = 2;
  if (has_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->obj(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400061::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .ProtoSerialObj obj = 2;
    if (has_obj()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->obj());
    }
    
  }
  // repeated .ProtoItemId item_info_list = 1;
  total_size += 1 * this->item_info_list_size();
  for (int i = 0; i < this->item_info_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_info_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400061::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400061* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400061*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400061::MergeFrom(const Proto31400061& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_info_list_.MergeFrom(from.item_info_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_obj()) {
      mutable_obj()->::ProtoSerialObj::MergeFrom(from.obj());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400061::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400061::CopyFrom(const Proto31400061& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400061::IsInitialized() const {
  
  return true;
}

void Proto31400061::Swap(Proto31400061* other) {
  if (other != this) {
    item_info_list_.Swap(&other->item_info_list_);
    std::swap(obj_, other->obj_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400061::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400061_descriptor_;
  metadata.reflection = Proto31400061_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402014::kForceInfoFieldNumber;
#endif  // !_MSC_VER

Proto30402014::Proto30402014()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402014::InitAsDefaultInstance() {
}

Proto30402014::Proto30402014(const Proto30402014& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402014::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402014::~Proto30402014() {
  SharedDtor();
}

void Proto30402014::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30402014::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402014::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402014_descriptor_;
}

const Proto30402014& Proto30402014::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30402014* Proto30402014::default_instance_ = NULL;

Proto30402014* Proto30402014::New() const {
  return new Proto30402014;
}

void Proto30402014::Clear() {
  force_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402014::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoTeamForceInfo force_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_force_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_force_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_force_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402014::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoTeamForceInfo force_info = 1;
  for (int i = 0; i < this->force_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->force_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402014::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoTeamForceInfo force_info = 1;
  for (int i = 0; i < this->force_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->force_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402014::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoTeamForceInfo force_info = 1;
  total_size += 1 * this->force_info_size();
  for (int i = 0; i < this->force_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->force_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402014::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402014* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402014*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402014::MergeFrom(const Proto30402014& from) {
  GOOGLE_CHECK_NE(&from, this);
  force_info_.MergeFrom(from.force_info_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402014::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402014::CopyFrom(const Proto30402014& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402014::IsInitialized() const {
  
  return true;
}

void Proto30402014::Swap(Proto30402014* other) {
  if (other != this) {
    force_info_.Swap(&other->force_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402014::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402014_descriptor_;
  metadata.reflection = Proto30402014_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400062::kItemInfoListFieldNumber;
const int Proto31400062::kObjFieldNumber;
#endif  // !_MSC_VER

Proto31400062::Proto31400062()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400062::InitAsDefaultInstance() {
  obj_ = const_cast< ::ProtoSerialObj*>(&::ProtoSerialObj::default_instance());
}

Proto31400062::Proto31400062(const Proto31400062& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400062::SharedCtor() {
  _cached_size_ = 0;
  obj_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400062::~Proto31400062() {
  SharedDtor();
}

void Proto31400062::SharedDtor() {
  if (this != default_instance_) {
    delete obj_;
  }
}

void Proto31400062::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400062::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400062_descriptor_;
}

const Proto31400062& Proto31400062::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto31400062* Proto31400062::default_instance_ = NULL;

Proto31400062* Proto31400062::New() const {
  return new Proto31400062;
}

void Proto31400062::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_obj()) {
      if (obj_ != NULL) obj_->::ProtoSerialObj::Clear();
    }
  }
  item_info_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400062::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItemId item_info_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_info_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_info_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_info_list;
        if (input->ExpectTag(18)) goto parse_obj;
        break;
      }
      
      // optional .ProtoSerialObj obj = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_obj:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_obj()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400062::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItemId item_info_list = 1;
  for (int i = 0; i < this->item_info_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_info_list(i), output);
  }
  
  // optional .ProtoSerialObj obj = 2;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->obj(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400062::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItemId item_info_list = 1;
  for (int i = 0; i < this->item_info_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_info_list(i), target);
  }
  
  // optional .ProtoSerialObj obj = 2;
  if (has_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->obj(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400062::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .ProtoSerialObj obj = 2;
    if (has_obj()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->obj());
    }
    
  }
  // repeated .ProtoItemId item_info_list = 1;
  total_size += 1 * this->item_info_list_size();
  for (int i = 0; i < this->item_info_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_info_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400062::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400062* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400062*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400062::MergeFrom(const Proto31400062& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_info_list_.MergeFrom(from.item_info_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_obj()) {
      mutable_obj()->::ProtoSerialObj::MergeFrom(from.obj());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400062::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400062::CopyFrom(const Proto31400062& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400062::IsInitialized() const {
  
  return true;
}

void Proto31400062::Swap(Proto31400062* other) {
  if (other != this) {
    item_info_list_.Swap(&other->item_info_list_);
    std::swap(obj_, other->obj_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400062::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400062_descriptor_;
  metadata.reflection = Proto31400062_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402003::kTeamIdFieldNumber;
const int Proto30402003::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto30402003::Proto30402003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402003::InitAsDefaultInstance() {
}

Proto30402003::Proto30402003(const Proto30402003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402003::SharedCtor() {
  _cached_size_ = 0;
  team_id_ = GOOGLE_LONGLONG(0);
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402003::~Proto30402003() {
  SharedDtor();
}

void Proto30402003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30402003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402003_descriptor_;
}

const Proto30402003& Proto30402003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30402003* Proto30402003::default_instance_ = NULL;

Proto30402003* Proto30402003::New() const {
  return new Proto30402003;
}

void Proto30402003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    team_id_ = GOOGLE_LONGLONG(0);
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 team_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->team_id(), output);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->team_id(), target);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 team_id = 1;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->team_id());
    }
    
    // optional int64 role_id = 2;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402003::MergeFrom(const Proto30402003& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402003::CopyFrom(const Proto30402003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402003::IsInitialized() const {
  
  return true;
}

void Proto30402003::Swap(Proto30402003* other) {
  if (other != this) {
    std::swap(team_id_, other->team_id_);
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402003_descriptor_;
  metadata.reflection = Proto30402003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402002::kOfflineRoleRecognFieldNumber;
const int Proto30402002::kTeamIdFieldNumber;
const int Proto30402002::kSrcRoleIdFieldNumber;
const int Proto30402002::kMsgBodyFieldNumber;
#endif  // !_MSC_VER

Proto30402002::Proto30402002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402002::InitAsDefaultInstance() {
}

Proto30402002::Proto30402002(const Proto30402002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402002::SharedCtor() {
  _cached_size_ = 0;
  offline_role_recogn_ = 0;
  team_id_ = GOOGLE_LONGLONG(0);
  src_role_id_ = GOOGLE_LONGLONG(0);
  msg_body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402002::~Proto30402002() {
  SharedDtor();
}

void Proto30402002::SharedDtor() {
  if (msg_body_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_body_;
  }
  if (this != default_instance_) {
  }
}

void Proto30402002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402002_descriptor_;
}

const Proto30402002& Proto30402002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30402002* Proto30402002::default_instance_ = NULL;

Proto30402002* Proto30402002::New() const {
  return new Proto30402002;
}

void Proto30402002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    offline_role_recogn_ = 0;
    team_id_ = GOOGLE_LONGLONG(0);
    src_role_id_ = GOOGLE_LONGLONG(0);
    if (has_msg_body()) {
      if (msg_body_ != &::google::protobuf::internal::kEmptyString) {
        msg_body_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 offline_role_recogn = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offline_role_recogn_)));
          set_has_offline_role_recogn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_team_id;
        break;
      }
      
      // optional int64 team_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_team_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_src_role_id;
        break;
      }
      
      // optional int64 src_role_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_src_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &src_role_id_)));
          set_has_src_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_msg_body;
        break;
      }
      
      // optional bytes msg_body = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_msg_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg_body()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 offline_role_recogn = 1;
  if (has_offline_role_recogn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->offline_role_recogn(), output);
  }
  
  // optional int64 team_id = 2;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->team_id(), output);
  }
  
  // optional int64 src_role_id = 3;
  if (has_src_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->src_role_id(), output);
  }
  
  // optional bytes msg_body = 4;
  if (has_msg_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      4, this->msg_body(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 offline_role_recogn = 1;
  if (has_offline_role_recogn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->offline_role_recogn(), target);
  }
  
  // optional int64 team_id = 2;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->team_id(), target);
  }
  
  // optional int64 src_role_id = 3;
  if (has_src_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->src_role_id(), target);
  }
  
  // optional bytes msg_body = 4;
  if (has_msg_body()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->msg_body(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 offline_role_recogn = 1;
    if (has_offline_role_recogn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->offline_role_recogn());
    }
    
    // optional int64 team_id = 2;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->team_id());
    }
    
    // optional int64 src_role_id = 3;
    if (has_src_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->src_role_id());
    }
    
    // optional bytes msg_body = 4;
    if (has_msg_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->msg_body());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402002::MergeFrom(const Proto30402002& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_offline_role_recogn()) {
      set_offline_role_recogn(from.offline_role_recogn());
    }
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
    if (from.has_src_role_id()) {
      set_src_role_id(from.src_role_id());
    }
    if (from.has_msg_body()) {
      set_msg_body(from.msg_body());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402002::CopyFrom(const Proto30402002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402002::IsInitialized() const {
  
  return true;
}

void Proto30402002::Swap(Proto30402002* other) {
  if (other != this) {
    std::swap(offline_role_recogn_, other->offline_role_recogn_);
    std::swap(team_id_, other->team_id_);
    std::swap(src_role_id_, other->src_role_id_);
    std::swap(msg_body_, other->msg_body_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402002_descriptor_;
  metadata.reflection = Proto30402002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402005::kTeamIdFieldNumber;
#endif  // !_MSC_VER

Proto30402005::Proto30402005()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402005::InitAsDefaultInstance() {
}

Proto30402005::Proto30402005(const Proto30402005& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402005::SharedCtor() {
  _cached_size_ = 0;
  team_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402005::~Proto30402005() {
  SharedDtor();
}

void Proto30402005::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30402005::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402005::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402005_descriptor_;
}

const Proto30402005& Proto30402005::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30402005* Proto30402005::default_instance_ = NULL;

Proto30402005* Proto30402005::New() const {
  return new Proto30402005;
}

void Proto30402005::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    team_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402005::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 team_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402005::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->team_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402005::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->team_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402005::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 team_id = 1;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->team_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402005::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402005* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402005*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402005::MergeFrom(const Proto30402005& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402005::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402005::CopyFrom(const Proto30402005& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402005::IsInitialized() const {
  
  return true;
}

void Proto30402005::Swap(Proto30402005* other) {
  if (other != this) {
    std::swap(team_id_, other->team_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402005::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402005_descriptor_;
  metadata.reflection = Proto30402005_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402015::kPageFieldNumber;
#endif  // !_MSC_VER

Proto30402015::Proto30402015()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402015::InitAsDefaultInstance() {
}

Proto30402015::Proto30402015(const Proto30402015& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402015::SharedCtor() {
  _cached_size_ = 0;
  page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402015::~Proto30402015() {
  SharedDtor();
}

void Proto30402015::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30402015::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402015::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402015_descriptor_;
}

const Proto30402015& Proto30402015::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner010_2eproto();  return *default_instance_;
}

Proto30402015* Proto30402015::default_instance_ = NULL;

Proto30402015* Proto30402015::New() const {
  return new Proto30402015;
}

void Proto30402015::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402015::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
          set_has_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402015::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page = 1;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402015::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page = 1;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402015::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page = 1;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402015::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402015* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402015*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402015::MergeFrom(const Proto30402015& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page()) {
      set_page(from.page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402015::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402015::CopyFrom(const Proto30402015& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402015::IsInitialized() const {
  
  return true;
}

void Proto30402015::Swap(Proto30402015* other) {
  if (other != this) {
    std::swap(page_, other->page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402015::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402015_descriptor_;
  metadata.reflection = Proto30402015_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
