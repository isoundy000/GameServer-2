// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient019.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto50102006_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102006_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102007_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102007_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102008_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102008_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102008_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102008_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102011_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102011_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102011_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102011_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102012_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102012_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102012_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102012_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102013_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102013_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102013_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102013_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102014_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102014_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102014_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102014_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100215_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100215_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400122_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400122_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400113_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400113_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51402601_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51402601_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11402602_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11402602_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51402603_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51402603_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11402605_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11402605_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51402605_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51402605_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11402606_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11402606_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51402606_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51402606_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101410_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101410_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101411_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101411_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101412_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101412_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81402101_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81402101_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100420_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100420_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101420_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101420_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101421_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101421_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101421_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101421_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101420_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101420_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100410_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100410_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400941_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400941_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101413_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101413_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101413_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101413_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101414_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101414_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101414_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101414_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102009_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102009_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102009_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102009_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102010_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102010_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102010_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102010_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101415_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101415_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101416_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101416_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101416_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101416_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102015_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102015_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102021_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102021_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102021_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102021_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102022_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102022_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102022_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102022_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102016_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102016_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient019_2eproto() {
  protobuf_AddDesc_ProtoClient019_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient019.proto");
  GOOGLE_CHECK(file != NULL);
  Proto50102006_descriptor_ = file->message_type(0);
  static const int Proto50102006_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102006, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102006, left_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102006, now_time_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102006, limit_end_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102006, start_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102006, time_limit_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102006, server_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102006, buy_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102006, reward_location_),
  };
  Proto50102006_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102006_descriptor_,
      Proto50102006::default_instance_,
      Proto50102006_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102006, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102006, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102006));
  Proto10102007_descriptor_ = file->message_type(1);
  static const int Proto10102007_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102007, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102007, slot_id_),
  };
  Proto10102007_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102007_descriptor_,
      Proto10102007::default_instance_,
      Proto10102007_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102007, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102007, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102007));
  Proto10102008_descriptor_ = file->message_type(2);
  static const int Proto10102008_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102008, location_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102008, activity_id_),
  };
  Proto10102008_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102008_descriptor_,
      Proto10102008::default_instance_,
      Proto10102008_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102008, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102008, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102008));
  Proto50102008_descriptor_ = file->message_type(3);
  static const int Proto50102008_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102008, location_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102008, activity_id_),
  };
  Proto50102008_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102008_descriptor_,
      Proto50102008::default_instance_,
      Proto50102008_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102008, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102008, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102008));
  Proto10102011_descriptor_ = file->message_type(4);
  static const int Proto10102011_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102011, activity_id_),
  };
  Proto10102011_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102011_descriptor_,
      Proto10102011::default_instance_,
      Proto10102011_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102011, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102011, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102011));
  Proto50102011_descriptor_ = file->message_type(5);
  static const int Proto50102011_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102011, act_left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102011, act_refresh_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102011, refresh_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102011, refresh_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102011, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102011, refresh_status_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102011, activity_id_),
  };
  Proto50102011_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102011_descriptor_,
      Proto50102011::default_instance_,
      Proto50102011_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102011, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102011, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102011));
  Proto10102012_descriptor_ = file->message_type(6);
  static const int Proto10102012_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102012, times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102012, activity_id_),
  };
  Proto10102012_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102012_descriptor_,
      Proto10102012::default_instance_,
      Proto10102012_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102012, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102012, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102012));
  Proto50102012_descriptor_ = file->message_type(7);
  static const int Proto50102012_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102012, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102012, act_left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102012, refresh_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102012, act_refresh_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102012, refresh_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102012, activity_id_),
  };
  Proto50102012_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102012_descriptor_,
      Proto50102012::default_instance_,
      Proto50102012_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102012, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102012, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102012));
  Proto10102013_descriptor_ = file->message_type(8);
  static const int Proto10102013_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102013, is_all_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102013, slot_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102013, activity_id_),
  };
  Proto10102013_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102013_descriptor_,
      Proto10102013::default_instance_,
      Proto10102013_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102013, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102013, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102013));
  Proto50102013_descriptor_ = file->message_type(9);
  static const int Proto50102013_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102013, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102013, activity_id_),
  };
  Proto50102013_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102013_descriptor_,
      Proto50102013::default_instance_,
      Proto50102013_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102013, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102013, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102013));
  Proto10102014_descriptor_ = file->message_type(10);
  static const int Proto10102014_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102014, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102014, activity_id_),
  };
  Proto10102014_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102014_descriptor_,
      Proto10102014::default_instance_,
      Proto10102014_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102014, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102014, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102014));
  Proto50102014_descriptor_ = file->message_type(11);
  static const int Proto50102014_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102014, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102014, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102014, activity_id_),
  };
  Proto50102014_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102014_descriptor_,
      Proto50102014::default_instance_,
      Proto50102014_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102014, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102014, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102014));
  Proto50100215_descriptor_ = file->message_type(12);
  static const int Proto50100215_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100215, icon_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100215, act_list_),
  };
  Proto50100215_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100215_descriptor_,
      Proto50100215::default_instance_,
      Proto50100215_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100215, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100215, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100215));
  Proto11400122_descriptor_ = file->message_type(13);
  static const int Proto11400122_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400122, index_),
  };
  Proto11400122_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400122_descriptor_,
      Proto11400122::default_instance_,
      Proto11400122_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400122, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400122, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400122));
  Proto81400113_descriptor_ = file->message_type(14);
  static const int Proto81400113_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400113, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400113, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400113, other_info_),
  };
  Proto81400113_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400113_descriptor_,
      Proto81400113::default_instance_,
      Proto81400113_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400113, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400113, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400113));
  Proto51402601_descriptor_ = file->message_type(15);
  static const int Proto51402601_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402601, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402601, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402601, fashion_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402601, fashion_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402601, color_id_),
  };
  Proto51402601_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51402601_descriptor_,
      Proto51402601::default_instance_,
      Proto51402601_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402601, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402601, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51402601));
  Proto11402602_descriptor_ = file->message_type(16);
  static const int Proto11402602_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402602, fashion_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402602, color_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402602, active_buy_),
  };
  Proto11402602_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11402602_descriptor_,
      Proto11402602::default_instance_,
      Proto11402602_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402602, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402602, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11402602));
  Proto51402603_descriptor_ = file->message_type(17);
  static const int Proto51402603_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402603, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402603, exp_),
  };
  Proto51402603_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51402603_descriptor_,
      Proto51402603::default_instance_,
      Proto51402603_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402603, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402603, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51402603));
  Proto11402605_descriptor_ = file->message_type(18);
  static const int Proto11402605_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402605, fashion_id_),
  };
  Proto11402605_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11402605_descriptor_,
      Proto11402605::default_instance_,
      Proto11402605_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402605, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402605, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11402605));
  Proto51402605_descriptor_ = file->message_type(19);
  static const int Proto51402605_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402605, fashion_id_),
  };
  Proto51402605_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51402605_descriptor_,
      Proto51402605::default_instance_,
      Proto51402605_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402605, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402605, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51402605));
  Proto11402606_descriptor_ = file->message_type(20);
  static const int Proto11402606_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402606, fashion_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402606, sel_color_id_),
  };
  Proto11402606_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11402606_descriptor_,
      Proto11402606::default_instance_,
      Proto11402606_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402606, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402606, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11402606));
  Proto51402606_descriptor_ = file->message_type(21);
  static const int Proto51402606_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402606, fashion_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402606, sel_color_id_),
  };
  Proto51402606_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51402606_descriptor_,
      Proto51402606::default_instance_,
      Proto51402606_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402606, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402606, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51402606));
  Proto10101410_descriptor_ = file->message_type(22);
  static const int Proto10101410_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101410, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101410, item_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101410, item_list_),
  };
  Proto10101410_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101410_descriptor_,
      Proto10101410::default_instance_,
      Proto10101410_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101410, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101410, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101410));
  Proto10101411_descriptor_ = file->message_type(23);
  static const int Proto10101411_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101411, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101411, item_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101411, item_list_),
  };
  Proto10101411_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101411_descriptor_,
      Proto10101411::default_instance_,
      Proto10101411_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101411, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101411, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101411));
  Proto10101412_descriptor_ = file->message_type(24);
  static const int Proto10101412_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101412, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101412, item_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101412, item_list_),
  };
  Proto10101412_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101412_descriptor_,
      Proto10101412::default_instance_,
      Proto10101412_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101412, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101412, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101412));
  Proto81402101_descriptor_ = file->message_type(25);
  static const int Proto81402101_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81402101, fashion_id_),
  };
  Proto81402101_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81402101_descriptor_,
      Proto81402101::default_instance_,
      Proto81402101_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81402101, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81402101, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81402101));
  Proto10100420_descriptor_ = file->message_type(26);
  static const int Proto10100420_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100420, state_),
  };
  Proto10100420_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100420_descriptor_,
      Proto10100420::default_instance_,
      Proto10100420_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100420, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100420, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100420));
  Proto10101420_descriptor_ = file->message_type(27);
  static const int Proto10101420_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101420, wedding_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101420, other_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101420, lead_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101420, lead_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101420, teamer_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101420, teamer_name_),
  };
  Proto10101420_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101420_descriptor_,
      Proto10101420::default_instance_,
      Proto10101420_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101420, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101420, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101420));
  Proto10101421_descriptor_ = file->message_type(28);
  static const int Proto10101421_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101421, wedding_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101421, is_ok_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101421, other_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101421, lead_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101421, lead_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101421, teamer_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101421, teamer_name_),
  };
  Proto10101421_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101421_descriptor_,
      Proto10101421::default_instance_,
      Proto10101421_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101421, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101421, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101421));
  Proto50101421_descriptor_ = file->message_type(29);
  static const int Proto50101421_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101421, wedding_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101421, is_ok_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101421, other_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101421, lead_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101421, lead_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101421, teamer_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101421, teamer_name_),
  };
  Proto50101421_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101421_descriptor_,
      Proto50101421::default_instance_,
      Proto50101421_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101421, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101421, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101421));
  Proto50101420_descriptor_ = file->message_type(30);
  static const int Proto50101420_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101420, wedding_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101420, is_ok_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101420, other_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101420, lead_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101420, lead_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101420, teamer_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101420, teamer_name_),
  };
  Proto50101420_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101420_descriptor_,
      Proto50101420::default_instance_,
      Proto50101420_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101420, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101420, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101420));
  Proto80100410_descriptor_ = file->message_type(31);
  static const int Proto80100410_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100410, fb_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100410, team_state_),
  };
  Proto80100410_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100410_descriptor_,
      Proto80100410::default_instance_,
      Proto80100410_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100410, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100410, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100410));
  Proto10400941_descriptor_ = file->message_type(32);
  static const int Proto10400941_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400941, select_id_),
  };
  Proto10400941_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400941_descriptor_,
      Proto10400941::default_instance_,
      Proto10400941_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400941, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400941, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400941));
  Proto10101413_descriptor_ = file->message_type(33);
  static const int Proto10101413_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101413, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101413, other_info_),
  };
  Proto10101413_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101413_descriptor_,
      Proto10101413::default_instance_,
      Proto10101413_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101413, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101413, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101413));
  Proto50101413_descriptor_ = file->message_type(34);
  static const int Proto50101413_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101413, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101413, other_info_),
  };
  Proto50101413_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101413_descriptor_,
      Proto50101413::default_instance_,
      Proto50101413_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101413, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101413, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101413));
  Proto50101414_descriptor_ = file->message_type(35);
  static const int Proto50101414_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101414, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101414, other_info_),
  };
  Proto50101414_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101414_descriptor_,
      Proto50101414::default_instance_,
      Proto50101414_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101414, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101414, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101414));
  Proto10101414_descriptor_ = file->message_type(36);
  static const int Proto10101414_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101414, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101414, other_info_),
  };
  Proto10101414_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101414_descriptor_,
      Proto10101414::default_instance_,
      Proto10101414_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101414, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101414, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101414));
  Proto10102009_descriptor_ = file->message_type(37);
  static const int Proto10102009_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102009, page_),
  };
  Proto10102009_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102009_descriptor_,
      Proto10102009::default_instance_,
      Proto10102009_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102009, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102009, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102009));
  Proto50102009_descriptor_ = file->message_type(38);
  static const int Proto50102009_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102009, rank_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102009, my_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102009, label_get_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102009, reward_get_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102009, cur_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102009, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102009, left_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102009, couples_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102009, label_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102009, rank_reward_),
  };
  Proto50102009_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102009_descriptor_,
      Proto50102009::default_instance_,
      Proto50102009_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102009, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102009, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102009));
  Proto10102010_descriptor_ = file->message_type(39);
  static const int Proto10102010_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102010, type_),
  };
  Proto10102010_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102010_descriptor_,
      Proto10102010::default_instance_,
      Proto10102010_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102010, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102010, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102010));
  Proto50102010_descriptor_ = file->message_type(40);
  static const int Proto50102010_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102010, type_),
  };
  Proto50102010_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102010_descriptor_,
      Proto50102010::default_instance_,
      Proto50102010_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102010, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102010, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102010));
  Proto50101415_descriptor_ = file->message_type(41);
  static const int Proto50101415_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101415, label_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101415, ring_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101415, sys_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101415, tree_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101415, other_info_),
  };
  Proto50101415_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101415_descriptor_,
      Proto50101415::default_instance_,
      Proto50101415_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101415, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101415, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101415));
  Proto10101416_descriptor_ = file->message_type(42);
  static const int Proto10101416_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101416, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101416, label_id_),
  };
  Proto10101416_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101416_descriptor_,
      Proto10101416::default_instance_,
      Proto10101416_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101416, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101416, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101416));
  Proto50101416_descriptor_ = file->message_type(43);
  static const int Proto50101416_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101416, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101416, label_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101416, status_),
  };
  Proto50101416_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101416_descriptor_,
      Proto50101416::default_instance_,
      Proto50101416_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101416, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101416, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101416));
  Proto50102015_descriptor_ = file->message_type(44);
  static const int Proto50102015_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102015, activity_set_),
  };
  Proto50102015_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102015_descriptor_,
      Proto50102015::default_instance_,
      Proto50102015_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102015, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102015, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102015));
  Proto50102021_descriptor_ = file->message_type(45);
  static const int Proto50102021_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102021, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102021, left_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102021, person_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102021, server_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102021, slot_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102021, now_slot_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102021, act_finish_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102021, left_free_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102021, free_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102021, other_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102021, bless_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102021, max_bless_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102021, one_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102021, total_cost_),
  };
  Proto50102021_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102021_descriptor_,
      Proto50102021::default_instance_,
      Proto50102021_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102021, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102021, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102021));
  Proto10102021_descriptor_ = file->message_type(46);
  static const int Proto10102021_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102021, activity_id_),
  };
  Proto10102021_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102021_descriptor_,
      Proto10102021::default_instance_,
      Proto10102021_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102021, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102021, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102021));
  Proto10102022_descriptor_ = file->message_type(47);
  static const int Proto10102022_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102022, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102022, is_total_),
  };
  Proto10102022_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102022_descriptor_,
      Proto10102022::default_instance_,
      Proto10102022_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102022, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102022, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102022));
  Proto50102022_descriptor_ = file->message_type(48);
  static const int Proto50102022_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102022, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102022, rand_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102022, slot_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102022, pre_slot_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102022, now_slot_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102022, record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102022, other_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102022, is_total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102022, mult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102022, bless_),
  };
  Proto50102022_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102022_descriptor_,
      Proto50102022::default_instance_,
      Proto50102022_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102022, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102022, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102022));
  Proto10102016_descriptor_ = file->message_type(49);
  static const int Proto10102016_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102016, column_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102016, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102016, type_),
  };
  Proto10102016_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102016_descriptor_,
      Proto10102016::default_instance_,
      Proto10102016_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102016, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102016, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102016));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient019_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102006_descriptor_, &Proto50102006::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102007_descriptor_, &Proto10102007::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102008_descriptor_, &Proto10102008::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102008_descriptor_, &Proto50102008::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102011_descriptor_, &Proto10102011::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102011_descriptor_, &Proto50102011::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102012_descriptor_, &Proto10102012::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102012_descriptor_, &Proto50102012::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102013_descriptor_, &Proto10102013::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102013_descriptor_, &Proto50102013::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102014_descriptor_, &Proto10102014::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102014_descriptor_, &Proto50102014::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100215_descriptor_, &Proto50100215::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400122_descriptor_, &Proto11400122::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400113_descriptor_, &Proto81400113::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51402601_descriptor_, &Proto51402601::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11402602_descriptor_, &Proto11402602::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51402603_descriptor_, &Proto51402603::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11402605_descriptor_, &Proto11402605::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51402605_descriptor_, &Proto51402605::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11402606_descriptor_, &Proto11402606::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51402606_descriptor_, &Proto51402606::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101410_descriptor_, &Proto10101410::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101411_descriptor_, &Proto10101411::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101412_descriptor_, &Proto10101412::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81402101_descriptor_, &Proto81402101::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100420_descriptor_, &Proto10100420::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101420_descriptor_, &Proto10101420::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101421_descriptor_, &Proto10101421::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101421_descriptor_, &Proto50101421::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101420_descriptor_, &Proto50101420::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100410_descriptor_, &Proto80100410::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400941_descriptor_, &Proto10400941::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101413_descriptor_, &Proto10101413::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101413_descriptor_, &Proto50101413::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101414_descriptor_, &Proto50101414::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101414_descriptor_, &Proto10101414::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102009_descriptor_, &Proto10102009::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102009_descriptor_, &Proto50102009::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102010_descriptor_, &Proto10102010::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102010_descriptor_, &Proto50102010::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101415_descriptor_, &Proto50101415::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101416_descriptor_, &Proto10101416::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101416_descriptor_, &Proto50101416::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102015_descriptor_, &Proto50102015::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102021_descriptor_, &Proto50102021::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102021_descriptor_, &Proto10102021::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102022_descriptor_, &Proto10102022::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102022_descriptor_, &Proto50102022::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102016_descriptor_, &Proto10102016::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient019_2eproto() {
  delete Proto50102006::default_instance_;
  delete Proto50102006_reflection_;
  delete Proto10102007::default_instance_;
  delete Proto10102007_reflection_;
  delete Proto10102008::default_instance_;
  delete Proto10102008_reflection_;
  delete Proto50102008::default_instance_;
  delete Proto50102008_reflection_;
  delete Proto10102011::default_instance_;
  delete Proto10102011_reflection_;
  delete Proto50102011::default_instance_;
  delete Proto50102011_reflection_;
  delete Proto10102012::default_instance_;
  delete Proto10102012_reflection_;
  delete Proto50102012::default_instance_;
  delete Proto50102012_reflection_;
  delete Proto10102013::default_instance_;
  delete Proto10102013_reflection_;
  delete Proto50102013::default_instance_;
  delete Proto50102013_reflection_;
  delete Proto10102014::default_instance_;
  delete Proto10102014_reflection_;
  delete Proto50102014::default_instance_;
  delete Proto50102014_reflection_;
  delete Proto50100215::default_instance_;
  delete Proto50100215_reflection_;
  delete Proto11400122::default_instance_;
  delete Proto11400122_reflection_;
  delete Proto81400113::default_instance_;
  delete Proto81400113_reflection_;
  delete Proto51402601::default_instance_;
  delete Proto51402601_reflection_;
  delete Proto11402602::default_instance_;
  delete Proto11402602_reflection_;
  delete Proto51402603::default_instance_;
  delete Proto51402603_reflection_;
  delete Proto11402605::default_instance_;
  delete Proto11402605_reflection_;
  delete Proto51402605::default_instance_;
  delete Proto51402605_reflection_;
  delete Proto11402606::default_instance_;
  delete Proto11402606_reflection_;
  delete Proto51402606::default_instance_;
  delete Proto51402606_reflection_;
  delete Proto10101410::default_instance_;
  delete Proto10101410_reflection_;
  delete Proto10101411::default_instance_;
  delete Proto10101411_reflection_;
  delete Proto10101412::default_instance_;
  delete Proto10101412_reflection_;
  delete Proto81402101::default_instance_;
  delete Proto81402101_reflection_;
  delete Proto10100420::default_instance_;
  delete Proto10100420_reflection_;
  delete Proto10101420::default_instance_;
  delete Proto10101420_reflection_;
  delete Proto10101421::default_instance_;
  delete Proto10101421_reflection_;
  delete Proto50101421::default_instance_;
  delete Proto50101421_reflection_;
  delete Proto50101420::default_instance_;
  delete Proto50101420_reflection_;
  delete Proto80100410::default_instance_;
  delete Proto80100410_reflection_;
  delete Proto10400941::default_instance_;
  delete Proto10400941_reflection_;
  delete Proto10101413::default_instance_;
  delete Proto10101413_reflection_;
  delete Proto50101413::default_instance_;
  delete Proto50101413_reflection_;
  delete Proto50101414::default_instance_;
  delete Proto50101414_reflection_;
  delete Proto10101414::default_instance_;
  delete Proto10101414_reflection_;
  delete Proto10102009::default_instance_;
  delete Proto10102009_reflection_;
  delete Proto50102009::default_instance_;
  delete Proto50102009_reflection_;
  delete Proto10102010::default_instance_;
  delete Proto10102010_reflection_;
  delete Proto50102010::default_instance_;
  delete Proto50102010_reflection_;
  delete Proto50101415::default_instance_;
  delete Proto50101415_reflection_;
  delete Proto10101416::default_instance_;
  delete Proto10101416_reflection_;
  delete Proto50101416::default_instance_;
  delete Proto50101416_reflection_;
  delete Proto50102015::default_instance_;
  delete Proto50102015_reflection_;
  delete Proto50102021::default_instance_;
  delete Proto50102021_reflection_;
  delete Proto10102021::default_instance_;
  delete Proto10102021_reflection_;
  delete Proto10102022::default_instance_;
  delete Proto10102022_reflection_;
  delete Proto50102022::default_instance_;
  delete Proto50102022_reflection_;
  delete Proto10102016::default_instance_;
  delete Proto10102016_reflection_;
}

void protobuf_AddDesc_ProtoClient019_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient019.proto\032\021ProtoPublic.prot"
    "o\"\200\002\n\rProto50102006\022\023\n\013activity_id\030\001 \001(\005"
    "\022\021\n\tleft_tick\030\002 \001(\005\022\026\n\016now_time_point\030\003 "
    "\001(\005\022\026\n\016limit_end_tick\030\004 \001(\005\022\022\n\nstart_tic"
    "k\030\005 \001(\005\022,\n\017time_limit_info\030\006 \003(\0132\023.Proto"
    "TimeLimitInfo\022)\n\rserver_record\030\007 \003(\0132\022.P"
    "rotoServerRecord\022\021\n\tbuy_times\030\010 \001(\005\022\027\n\017r"
    "eward_location\030\t \003(\005\"5\n\rProto10102007\022\023\n"
    "\013activity_id\030\001 \001(\005\022\017\n\007slot_id\030\002 \001(\005\"9\n\rP"
    "roto10102008\022\023\n\013location_id\030\001 \001(\005\022\023\n\013act"
    "ivity_id\030\002 \001(\005\"9\n\rProto50102008\022\023\n\013locat"
    "ion_id\030\001 \001(\005\022\023\n\013activity_id\030\002 \001(\005\"$\n\rPro"
    "to10102011\022\023\n\013activity_id\030\001 \001(\005\"\302\001\n\rProt"
    "o50102011\022\025\n\ract_left_time\030\001 \001(\003\022\031\n\021act_"
    "refresh_times\030\002 \001(\005\022\024\n\014refresh_time\030\003 \001("
    "\003\022\024\n\014refresh_cost\030\004 \001(\005\022!\n\titem_list\030\005 \003"
    "(\0132\016.ProtoShopInfo\022\033\n\023refresh_status_lis"
    "t\030\006 \003(\005\022\023\n\013activity_id\030\007 \001(\005\"3\n\rProto101"
    "02012\022\r\n\005times\030\001 \001(\005\022\023\n\013activity_id\030\002 \001("
    "\005\"\245\001\n\rProto50102012\022!\n\titem_list\030\001 \003(\0132\016"
    ".ProtoShopInfo\022\025\n\ract_left_time\030\002 \001(\003\022\024\n"
    "\014refresh_time\030\003 \001(\003\022\031\n\021act_refresh_times"
    "\030\004 \001(\005\022\024\n\014refresh_cost\030\005 \001(\005\022\023\n\013activity"
    "_id\030\006 \001(\005\"E\n\rProto10102013\022\016\n\006is_all\030\001 \001"
    "(\005\022\017\n\007slot_id\030\002 \001(\005\022\023\n\013activity_id\030\003 \001(\005"
    "\"4\n\rProto50102013\022\016\n\006status\030\001 \001(\005\022\023\n\013act"
    "ivity_id\030\002 \001(\005\"2\n\rProto10102014\022\014\n\004type\030"
    "\001 \001(\005\022\023\n\013activity_id\030\002 \001(\005\"B\n\rProto50102"
    "014\022\014\n\004type\030\001 \001(\005\022\016\n\006status\030\002 \001(\005\022\023\n\013act"
    "ivity_id\030\003 \001(\005\"4\n\rProto50100215\022\021\n\ticon_"
    "type\030\001 \001(\005\022\020\n\010act_list\030\002 \003(\005\"\036\n\rProto114"
    "00122\022\r\n\005index\030\001 \001(\005\"[\n\rProto81400113\022\014\n"
    "\004type\030\001 \001(\005\022\030\n\004item\030\002 \003(\0132\n.ProtoItem\022\"\n"
    "\nother_info\030\003 \001(\0132\016.ProtoThreeObj\"|\n\rPro"
    "to51402601\022\r\n\005level\030\001 \001(\005\022\013\n\003exp\030\002 \001(\005\022)"
    "\n\014fashion_info\030\003 \003(\0132\023.ProtoFashionDetai"
    "l\022\022\n\nfashion_id\030\004 \001(\005\022\020\n\010color_id\030\005 \001(\005\""
    "I\n\rProto11402602\022\022\n\nfashion_id\030\001 \001(\005\022\020\n\010"
    "color_id\030\002 \001(\005\022\022\n\nactive_buy\030\003 \001(\005\"+\n\rPr"
    "oto51402603\022\r\n\005level\030\001 \001(\005\022\013\n\003exp\030\002 \001(\005\""
    "#\n\rProto11402605\022\022\n\nfashion_id\030\001 \001(\005\"#\n\r"
    "Proto51402605\022\022\n\nfashion_id\030\001 \001(\005\"9\n\rPro"
    "to11402606\022\022\n\nfashion_id\030\001 \001(\005\022\024\n\014sel_co"
    "lor_id\030\002 \001(\005\"9\n\rProto51402606\022\022\n\nfashion"
    "_id\030\001 \001(\005\022\024\n\014sel_color_id\030\002 \001(\005\"Q\n\rProto"
    "10101410\022\017\n\007item_id\030\001 \003(\005\022\020\n\010item_num\030\002 "
    "\003(\005\022\035\n\titem_list\030\003 \003(\0132\n.ProtoItem\"Q\n\rPr"
    "oto10101411\022\017\n\007item_id\030\001 \003(\005\022\020\n\010item_num"
    "\030\002 \003(\005\022\035\n\titem_list\030\003 \003(\0132\n.ProtoItem\"Q\n"
    "\rProto10101412\022\017\n\007item_id\030\001 \003(\005\022\020\n\010item_"
    "num\030\002 \003(\005\022\035\n\titem_list\030\003 \003(\0132\n.ProtoItem"
    "\"#\n\rProto81402101\022\022\n\nfashion_id\030\001 \001(\005\"\036\n"
    "\rProto10100420\022\r\n\005state\030\001 \001(\005\"\225\001\n\rProto1"
    "0101420\022\024\n\014wedding_type\030\001 \001(\005\022\"\n\nother_i"
    "nfo\030\002 \001(\0132\016.ProtoThreeObj\022\017\n\007lead_id\030\003 \001"
    "(\003\022\021\n\tlead_name\030\004 \001(\t\022\021\n\tteamer_id\030\005 \001(\003"
    "\022\023\n\013teamer_name\030\006 \001(\t\"\244\001\n\rProto10101421\022"
    "\024\n\014wedding_type\030\001 \001(\005\022\r\n\005is_ok\030\002 \001(\005\022\"\n\n"
    "other_info\030\003 \001(\0132\016.ProtoThreeObj\022\017\n\007lead"
    "_id\030\004 \001(\003\022\021\n\tlead_name\030\005 \001(\t\022\021\n\tteamer_i"
    "d\030\006 \001(\003\022\023\n\013teamer_name\030\007 \001(\t\"\244\001\n\rProto50"
    "101421\022\024\n\014wedding_type\030\001 \001(\005\022\r\n\005is_ok\030\002 "
    "\001(\005\022\"\n\nother_info\030\003 \001(\0132\016.ProtoThreeObj\022"
    "\017\n\007lead_id\030\004 \001(\003\022\021\n\tlead_name\030\005 \001(\t\022\021\n\tt"
    "eamer_id\030\006 \001(\003\022\023\n\013teamer_name\030\007 \001(\t\"\244\001\n\r"
    "Proto50101420\022\024\n\014wedding_type\030\001 \001(\005\022\r\n\005i"
    "s_ok\030\002 \001(\005\022\"\n\nother_info\030\003 \001(\0132\016.ProtoTh"
    "reeObj\022\017\n\007lead_id\030\004 \001(\003\022\021\n\tlead_name\030\005 \001"
    "(\t\022\021\n\tteamer_id\030\006 \001(\003\022\023\n\013teamer_name\030\007 \001"
    "(\t\"2\n\rProto80100410\022\r\n\005fb_id\030\001 \001(\005\022\022\n\nte"
    "am_state\030\002 \001(\005\"\"\n\rProto10400941\022\021\n\tselec"
    "t_id\030\001 \001(\005\"A\n\rProto10101413\022\014\n\004type\030\001 \001("
    "\005\022\"\n\nother_info\030\002 \001(\0132\016.ProtoThreeObj\"A\n"
    "\rProto50101413\022\014\n\004type\030\001 \001(\005\022\"\n\nother_in"
    "fo\030\002 \001(\0132\016.ProtoThreeObj\"1\n\rProto5010141"
    "4\022\014\n\004type\030\001 \001(\005\022\022\n\nother_info\030\002 \001(\005\"1\n\rP"
    "roto10101414\022\014\n\004type\030\001 \001(\005\022\022\n\nother_info"
    "\030\002 \001(\005\"\035\n\rProto10102009\022\014\n\004page\030\001 \001(\005\"\365\001"
    "\n\rProto50102009\022$\n\trank_info\030\001 \003(\0132\021.Pro"
    "toWeddingRank\022\"\n\007my_rank\030\002 \001(\0132\021.ProtoWe"
    "ddingRank\022\021\n\tlabel_get\030\003 \001(\005\022\022\n\nreward_g"
    "et\030\004 \001(\005\022\020\n\010cur_page\030\005 \001(\005\022\022\n\ntotal_page"
    "\030\006 \001(\005\022\021\n\tleft_tick\030\007 \001(\005\022\017\n\007couples\030\010 \001"
    "(\005\022\024\n\014label_reward\030\t \001(\005\022\023\n\013rank_reward\030"
    "\n \001(\005\"\035\n\rProto10102010\022\014\n\004type\030\001 \001(\005\"\035\n\r"
    "Proto50102010\022\014\n\004type\030\001 \001(\005\"\222\001\n\rProto501"
    "01415\022\"\n\nlabel_list\030\001 \003(\0132\016.ProtoWedLabe"
    "l\022\022\n\nring_level\030\002 \001(\005\022\021\n\tsys_level\030\003 \001(\005"
    "\022\022\n\ntree_level\030\004 \001(\005\022\"\n\nother_info\030\005 \001(\013"
    "2\016.ProtoThreeObj\"-\n\rProto10101416\022\n\n\002id\030"
    "\001 \001(\005\022\020\n\010label_id\030\002 \001(\005\"=\n\rProto50101416"
    "\022\n\n\002id\030\001 \001(\005\022\020\n\010label_id\030\002 \001(\005\022\016\n\006status"
    "\030\003 \001(\005\"%\n\rProto50102015\022\024\n\014activity_set\030"
    "\001 \003(\005\"\367\002\n\rProto50102021\022\023\n\013activity_id\030\001"
    " \001(\005\022\021\n\tleft_tick\030\002 \001(\005\022)\n\rperson_record"
    "\030\003 \003(\0132\022.ProtoPersonRecord\022)\n\rserver_rec"
    "ord\030\004 \003(\0132\022.ProtoServerRecord\022!\n\tslot_in"
    "fo\030\005 \003(\0132\016.ProtoSlotInfo\022\023\n\013now_slot_id\030"
    "\006 \001(\005\022\027\n\017act_finish_time\030\007 \001(\005\022\027\n\017left_f"
    "ree_times\030\010 \001(\005\022\022\n\nfree_times\030\t \001(\005\022\"\n\no"
    "ther_info\030\n \001(\0132\016.ProtoThreeObj\022\r\n\005bless"
    "\030\013 \001(\005\022\021\n\tmax_bless\030\014 \001(\005\022\020\n\010one_cost\030\r "
    "\001(\005\022\022\n\ntotal_cost\030\016 \001(\005\"$\n\rProto10102021"
    "\022\023\n\013activity_id\030\001 \001(\005\"6\n\rProto10102022\022\023"
    "\n\013activity_id\030\001 \001(\005\022\020\n\010is_total\030\002 \001(\005\"\372\001"
    "\n\rProto50102022\022\023\n\013activity_id\030\001 \001(\005\022\020\n\010"
    "rand_num\030\002 \001(\005\022!\n\tslot_info\030\003 \003(\0132\016.Prot"
    "oSlotInfo\022\023\n\013pre_slot_id\030\004 \001(\005\022\023\n\013now_sl"
    "ot_id\030\005 \001(\005\022\"\n\006record\030\006 \003(\0132\022.ProtoPerso"
    "nRecord\022\"\n\nother_info\030\007 \001(\0132\016.ProtoThree"
    "Obj\022\020\n\010is_total\030\010 \001(\005\022\014\n\004mult\030\t \001(\005\022\r\n\005b"
    "less\030\n \001(\005\":\n\rProto10102016\022\016\n\006column\030\001 "
    "\001(\005\022\013\n\003num\030\002 \001(\005\022\014\n\004type\030\003 \001(\005", 4510);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient019.proto", &protobuf_RegisterTypes);
  Proto50102006::default_instance_ = new Proto50102006();
  Proto10102007::default_instance_ = new Proto10102007();
  Proto10102008::default_instance_ = new Proto10102008();
  Proto50102008::default_instance_ = new Proto50102008();
  Proto10102011::default_instance_ = new Proto10102011();
  Proto50102011::default_instance_ = new Proto50102011();
  Proto10102012::default_instance_ = new Proto10102012();
  Proto50102012::default_instance_ = new Proto50102012();
  Proto10102013::default_instance_ = new Proto10102013();
  Proto50102013::default_instance_ = new Proto50102013();
  Proto10102014::default_instance_ = new Proto10102014();
  Proto50102014::default_instance_ = new Proto50102014();
  Proto50100215::default_instance_ = new Proto50100215();
  Proto11400122::default_instance_ = new Proto11400122();
  Proto81400113::default_instance_ = new Proto81400113();
  Proto51402601::default_instance_ = new Proto51402601();
  Proto11402602::default_instance_ = new Proto11402602();
  Proto51402603::default_instance_ = new Proto51402603();
  Proto11402605::default_instance_ = new Proto11402605();
  Proto51402605::default_instance_ = new Proto51402605();
  Proto11402606::default_instance_ = new Proto11402606();
  Proto51402606::default_instance_ = new Proto51402606();
  Proto10101410::default_instance_ = new Proto10101410();
  Proto10101411::default_instance_ = new Proto10101411();
  Proto10101412::default_instance_ = new Proto10101412();
  Proto81402101::default_instance_ = new Proto81402101();
  Proto10100420::default_instance_ = new Proto10100420();
  Proto10101420::default_instance_ = new Proto10101420();
  Proto10101421::default_instance_ = new Proto10101421();
  Proto50101421::default_instance_ = new Proto50101421();
  Proto50101420::default_instance_ = new Proto50101420();
  Proto80100410::default_instance_ = new Proto80100410();
  Proto10400941::default_instance_ = new Proto10400941();
  Proto10101413::default_instance_ = new Proto10101413();
  Proto50101413::default_instance_ = new Proto50101413();
  Proto50101414::default_instance_ = new Proto50101414();
  Proto10101414::default_instance_ = new Proto10101414();
  Proto10102009::default_instance_ = new Proto10102009();
  Proto50102009::default_instance_ = new Proto50102009();
  Proto10102010::default_instance_ = new Proto10102010();
  Proto50102010::default_instance_ = new Proto50102010();
  Proto50101415::default_instance_ = new Proto50101415();
  Proto10101416::default_instance_ = new Proto10101416();
  Proto50101416::default_instance_ = new Proto50101416();
  Proto50102015::default_instance_ = new Proto50102015();
  Proto50102021::default_instance_ = new Proto50102021();
  Proto10102021::default_instance_ = new Proto10102021();
  Proto10102022::default_instance_ = new Proto10102022();
  Proto50102022::default_instance_ = new Proto50102022();
  Proto10102016::default_instance_ = new Proto10102016();
  Proto50102006::default_instance_->InitAsDefaultInstance();
  Proto10102007::default_instance_->InitAsDefaultInstance();
  Proto10102008::default_instance_->InitAsDefaultInstance();
  Proto50102008::default_instance_->InitAsDefaultInstance();
  Proto10102011::default_instance_->InitAsDefaultInstance();
  Proto50102011::default_instance_->InitAsDefaultInstance();
  Proto10102012::default_instance_->InitAsDefaultInstance();
  Proto50102012::default_instance_->InitAsDefaultInstance();
  Proto10102013::default_instance_->InitAsDefaultInstance();
  Proto50102013::default_instance_->InitAsDefaultInstance();
  Proto10102014::default_instance_->InitAsDefaultInstance();
  Proto50102014::default_instance_->InitAsDefaultInstance();
  Proto50100215::default_instance_->InitAsDefaultInstance();
  Proto11400122::default_instance_->InitAsDefaultInstance();
  Proto81400113::default_instance_->InitAsDefaultInstance();
  Proto51402601::default_instance_->InitAsDefaultInstance();
  Proto11402602::default_instance_->InitAsDefaultInstance();
  Proto51402603::default_instance_->InitAsDefaultInstance();
  Proto11402605::default_instance_->InitAsDefaultInstance();
  Proto51402605::default_instance_->InitAsDefaultInstance();
  Proto11402606::default_instance_->InitAsDefaultInstance();
  Proto51402606::default_instance_->InitAsDefaultInstance();
  Proto10101410::default_instance_->InitAsDefaultInstance();
  Proto10101411::default_instance_->InitAsDefaultInstance();
  Proto10101412::default_instance_->InitAsDefaultInstance();
  Proto81402101::default_instance_->InitAsDefaultInstance();
  Proto10100420::default_instance_->InitAsDefaultInstance();
  Proto10101420::default_instance_->InitAsDefaultInstance();
  Proto10101421::default_instance_->InitAsDefaultInstance();
  Proto50101421::default_instance_->InitAsDefaultInstance();
  Proto50101420::default_instance_->InitAsDefaultInstance();
  Proto80100410::default_instance_->InitAsDefaultInstance();
  Proto10400941::default_instance_->InitAsDefaultInstance();
  Proto10101413::default_instance_->InitAsDefaultInstance();
  Proto50101413::default_instance_->InitAsDefaultInstance();
  Proto50101414::default_instance_->InitAsDefaultInstance();
  Proto10101414::default_instance_->InitAsDefaultInstance();
  Proto10102009::default_instance_->InitAsDefaultInstance();
  Proto50102009::default_instance_->InitAsDefaultInstance();
  Proto10102010::default_instance_->InitAsDefaultInstance();
  Proto50102010::default_instance_->InitAsDefaultInstance();
  Proto50101415::default_instance_->InitAsDefaultInstance();
  Proto10101416::default_instance_->InitAsDefaultInstance();
  Proto50101416::default_instance_->InitAsDefaultInstance();
  Proto50102015::default_instance_->InitAsDefaultInstance();
  Proto50102021::default_instance_->InitAsDefaultInstance();
  Proto10102021::default_instance_->InitAsDefaultInstance();
  Proto10102022::default_instance_->InitAsDefaultInstance();
  Proto50102022::default_instance_->InitAsDefaultInstance();
  Proto10102016::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient019_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient019_2eproto {
  StaticDescriptorInitializer_ProtoClient019_2eproto() {
    protobuf_AddDesc_ProtoClient019_2eproto();
  }
} static_descriptor_initializer_ProtoClient019_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto50102006::kActivityIdFieldNumber;
const int Proto50102006::kLeftTickFieldNumber;
const int Proto50102006::kNowTimePointFieldNumber;
const int Proto50102006::kLimitEndTickFieldNumber;
const int Proto50102006::kStartTickFieldNumber;
const int Proto50102006::kTimeLimitInfoFieldNumber;
const int Proto50102006::kServerRecordFieldNumber;
const int Proto50102006::kBuyTimesFieldNumber;
const int Proto50102006::kRewardLocationFieldNumber;
#endif  // !_MSC_VER

Proto50102006::Proto50102006()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102006::InitAsDefaultInstance() {
}

Proto50102006::Proto50102006(const Proto50102006& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102006::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  left_tick_ = 0;
  now_time_point_ = 0;
  limit_end_tick_ = 0;
  start_tick_ = 0;
  buy_times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102006::~Proto50102006() {
  SharedDtor();
}

void Proto50102006::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102006::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102006::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102006_descriptor_;
}

const Proto50102006& Proto50102006::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto50102006* Proto50102006::default_instance_ = NULL;

Proto50102006* Proto50102006::New() const {
  return new Proto50102006;
}

void Proto50102006::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    left_tick_ = 0;
    now_time_point_ = 0;
    limit_end_tick_ = 0;
    start_tick_ = 0;
    buy_times_ = 0;
  }
  time_limit_info_.Clear();
  server_record_.Clear();
  reward_location_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102006::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_left_tick;
        break;
      }
      
      // optional int32 left_tick = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_tick_)));
          set_has_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_now_time_point;
        break;
      }
      
      // optional int32 now_time_point = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_now_time_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &now_time_point_)));
          set_has_now_time_point();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_limit_end_tick;
        break;
      }
      
      // optional int32 limit_end_tick = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_limit_end_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_end_tick_)));
          set_has_limit_end_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_start_tick;
        break;
      }
      
      // optional int32 start_tick = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_tick_)));
          set_has_start_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_time_limit_info;
        break;
      }
      
      // repeated .ProtoTimeLimitInfo time_limit_info = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_time_limit_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_time_limit_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_time_limit_info;
        if (input->ExpectTag(58)) goto parse_server_record;
        break;
      }
      
      // repeated .ProtoServerRecord server_record = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_server_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_server_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_server_record;
        if (input->ExpectTag(64)) goto parse_buy_times;
        break;
      }
      
      // optional int32 buy_times = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_times_)));
          set_has_buy_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_reward_location;
        break;
      }
      
      // repeated int32 reward_location = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_location:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 72, input, this->mutable_reward_location())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_reward_location())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_reward_location;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102006::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 left_tick = 2;
  if (has_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_tick(), output);
  }
  
  // optional int32 now_time_point = 3;
  if (has_now_time_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->now_time_point(), output);
  }
  
  // optional int32 limit_end_tick = 4;
  if (has_limit_end_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->limit_end_tick(), output);
  }
  
  // optional int32 start_tick = 5;
  if (has_start_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->start_tick(), output);
  }
  
  // repeated .ProtoTimeLimitInfo time_limit_info = 6;
  for (int i = 0; i < this->time_limit_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->time_limit_info(i), output);
  }
  
  // repeated .ProtoServerRecord server_record = 7;
  for (int i = 0; i < this->server_record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->server_record(i), output);
  }
  
  // optional int32 buy_times = 8;
  if (has_buy_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->buy_times(), output);
  }
  
  // repeated int32 reward_location = 9;
  for (int i = 0; i < this->reward_location_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      9, this->reward_location(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102006::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 left_tick = 2;
  if (has_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_tick(), target);
  }
  
  // optional int32 now_time_point = 3;
  if (has_now_time_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->now_time_point(), target);
  }
  
  // optional int32 limit_end_tick = 4;
  if (has_limit_end_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->limit_end_tick(), target);
  }
  
  // optional int32 start_tick = 5;
  if (has_start_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->start_tick(), target);
  }
  
  // repeated .ProtoTimeLimitInfo time_limit_info = 6;
  for (int i = 0; i < this->time_limit_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->time_limit_info(i), target);
  }
  
  // repeated .ProtoServerRecord server_record = 7;
  for (int i = 0; i < this->server_record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->server_record(i), target);
  }
  
  // optional int32 buy_times = 8;
  if (has_buy_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->buy_times(), target);
  }
  
  // repeated int32 reward_location = 9;
  for (int i = 0; i < this->reward_location_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(9, this->reward_location(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102006::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 left_tick = 2;
    if (has_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_tick());
    }
    
    // optional int32 now_time_point = 3;
    if (has_now_time_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->now_time_point());
    }
    
    // optional int32 limit_end_tick = 4;
    if (has_limit_end_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->limit_end_tick());
    }
    
    // optional int32 start_tick = 5;
    if (has_start_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->start_tick());
    }
    
    // optional int32 buy_times = 8;
    if (has_buy_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_times());
    }
    
  }
  // repeated .ProtoTimeLimitInfo time_limit_info = 6;
  total_size += 1 * this->time_limit_info_size();
  for (int i = 0; i < this->time_limit_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->time_limit_info(i));
  }
  
  // repeated .ProtoServerRecord server_record = 7;
  total_size += 1 * this->server_record_size();
  for (int i = 0; i < this->server_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->server_record(i));
  }
  
  // repeated int32 reward_location = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->reward_location_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->reward_location(i));
    }
    total_size += 1 * this->reward_location_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102006::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102006* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102006*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102006::MergeFrom(const Proto50102006& from) {
  GOOGLE_CHECK_NE(&from, this);
  time_limit_info_.MergeFrom(from.time_limit_info_);
  server_record_.MergeFrom(from.server_record_);
  reward_location_.MergeFrom(from.reward_location_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_left_tick()) {
      set_left_tick(from.left_tick());
    }
    if (from.has_now_time_point()) {
      set_now_time_point(from.now_time_point());
    }
    if (from.has_limit_end_tick()) {
      set_limit_end_tick(from.limit_end_tick());
    }
    if (from.has_start_tick()) {
      set_start_tick(from.start_tick());
    }
    if (from.has_buy_times()) {
      set_buy_times(from.buy_times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102006::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102006::CopyFrom(const Proto50102006& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102006::IsInitialized() const {
  
  return true;
}

void Proto50102006::Swap(Proto50102006* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(left_tick_, other->left_tick_);
    std::swap(now_time_point_, other->now_time_point_);
    std::swap(limit_end_tick_, other->limit_end_tick_);
    std::swap(start_tick_, other->start_tick_);
    time_limit_info_.Swap(&other->time_limit_info_);
    server_record_.Swap(&other->server_record_);
    std::swap(buy_times_, other->buy_times_);
    reward_location_.Swap(&other->reward_location_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102006::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102006_descriptor_;
  metadata.reflection = Proto50102006_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102007::kActivityIdFieldNumber;
const int Proto10102007::kSlotIdFieldNumber;
#endif  // !_MSC_VER

Proto10102007::Proto10102007()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102007::InitAsDefaultInstance() {
}

Proto10102007::Proto10102007(const Proto10102007& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102007::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  slot_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102007::~Proto10102007() {
  SharedDtor();
}

void Proto10102007::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102007::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102007::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102007_descriptor_;
}

const Proto10102007& Proto10102007::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10102007* Proto10102007::default_instance_ = NULL;

Proto10102007* Proto10102007::New() const {
  return new Proto10102007;
}

void Proto10102007::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    slot_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102007::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_slot_id;
        break;
      }
      
      // optional int32 slot_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_id_)));
          set_has_slot_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102007::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 slot_id = 2;
  if (has_slot_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->slot_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102007::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 slot_id = 2;
  if (has_slot_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->slot_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102007::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 slot_id = 2;
    if (has_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102007::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102007* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102007*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102007::MergeFrom(const Proto10102007& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_slot_id()) {
      set_slot_id(from.slot_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102007::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102007::CopyFrom(const Proto10102007& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102007::IsInitialized() const {
  
  return true;
}

void Proto10102007::Swap(Proto10102007* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(slot_id_, other->slot_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102007::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102007_descriptor_;
  metadata.reflection = Proto10102007_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102008::kLocationIdFieldNumber;
const int Proto10102008::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto10102008::Proto10102008()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102008::InitAsDefaultInstance() {
}

Proto10102008::Proto10102008(const Proto10102008& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102008::SharedCtor() {
  _cached_size_ = 0;
  location_id_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102008::~Proto10102008() {
  SharedDtor();
}

void Proto10102008::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102008::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102008::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102008_descriptor_;
}

const Proto10102008& Proto10102008::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10102008* Proto10102008::default_instance_ = NULL;

Proto10102008* Proto10102008::New() const {
  return new Proto10102008;
}

void Proto10102008::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    location_id_ = 0;
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102008::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 location_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &location_id_)));
          set_has_location_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_activity_id;
        break;
      }
      
      // optional int32 activity_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102008::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 location_id = 1;
  if (has_location_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->location_id(), output);
  }
  
  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102008::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 location_id = 1;
  if (has_location_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->location_id(), target);
  }
  
  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102008::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 location_id = 1;
    if (has_location_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->location_id());
    }
    
    // optional int32 activity_id = 2;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102008::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102008* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102008*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102008::MergeFrom(const Proto10102008& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_location_id()) {
      set_location_id(from.location_id());
    }
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102008::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102008::CopyFrom(const Proto10102008& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102008::IsInitialized() const {
  
  return true;
}

void Proto10102008::Swap(Proto10102008* other) {
  if (other != this) {
    std::swap(location_id_, other->location_id_);
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102008::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102008_descriptor_;
  metadata.reflection = Proto10102008_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102008::kLocationIdFieldNumber;
const int Proto50102008::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto50102008::Proto50102008()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102008::InitAsDefaultInstance() {
}

Proto50102008::Proto50102008(const Proto50102008& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102008::SharedCtor() {
  _cached_size_ = 0;
  location_id_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102008::~Proto50102008() {
  SharedDtor();
}

void Proto50102008::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102008::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102008::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102008_descriptor_;
}

const Proto50102008& Proto50102008::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto50102008* Proto50102008::default_instance_ = NULL;

Proto50102008* Proto50102008::New() const {
  return new Proto50102008;
}

void Proto50102008::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    location_id_ = 0;
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102008::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 location_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &location_id_)));
          set_has_location_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_activity_id;
        break;
      }
      
      // optional int32 activity_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102008::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 location_id = 1;
  if (has_location_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->location_id(), output);
  }
  
  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102008::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 location_id = 1;
  if (has_location_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->location_id(), target);
  }
  
  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102008::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 location_id = 1;
    if (has_location_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->location_id());
    }
    
    // optional int32 activity_id = 2;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102008::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102008* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102008*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102008::MergeFrom(const Proto50102008& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_location_id()) {
      set_location_id(from.location_id());
    }
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102008::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102008::CopyFrom(const Proto50102008& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102008::IsInitialized() const {
  
  return true;
}

void Proto50102008::Swap(Proto50102008* other) {
  if (other != this) {
    std::swap(location_id_, other->location_id_);
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102008::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102008_descriptor_;
  metadata.reflection = Proto50102008_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102011::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto10102011::Proto10102011()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102011::InitAsDefaultInstance() {
}

Proto10102011::Proto10102011(const Proto10102011& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102011::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102011::~Proto10102011() {
  SharedDtor();
}

void Proto10102011::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102011::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102011::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102011_descriptor_;
}

const Proto10102011& Proto10102011::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10102011* Proto10102011::default_instance_ = NULL;

Proto10102011* Proto10102011::New() const {
  return new Proto10102011;
}

void Proto10102011::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102011::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102011::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102011::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102011::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102011::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102011* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102011*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102011::MergeFrom(const Proto10102011& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102011::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102011::CopyFrom(const Proto10102011& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102011::IsInitialized() const {
  
  return true;
}

void Proto10102011::Swap(Proto10102011* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102011::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102011_descriptor_;
  metadata.reflection = Proto10102011_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102011::kActLeftTimeFieldNumber;
const int Proto50102011::kActRefreshTimesFieldNumber;
const int Proto50102011::kRefreshTimeFieldNumber;
const int Proto50102011::kRefreshCostFieldNumber;
const int Proto50102011::kItemListFieldNumber;
const int Proto50102011::kRefreshStatusListFieldNumber;
const int Proto50102011::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto50102011::Proto50102011()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102011::InitAsDefaultInstance() {
}

Proto50102011::Proto50102011(const Proto50102011& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102011::SharedCtor() {
  _cached_size_ = 0;
  act_left_time_ = GOOGLE_LONGLONG(0);
  act_refresh_times_ = 0;
  refresh_time_ = GOOGLE_LONGLONG(0);
  refresh_cost_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102011::~Proto50102011() {
  SharedDtor();
}

void Proto50102011::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102011::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102011::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102011_descriptor_;
}

const Proto50102011& Proto50102011::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto50102011* Proto50102011::default_instance_ = NULL;

Proto50102011* Proto50102011::New() const {
  return new Proto50102011;
}

void Proto50102011::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    act_left_time_ = GOOGLE_LONGLONG(0);
    act_refresh_times_ = 0;
    refresh_time_ = GOOGLE_LONGLONG(0);
    refresh_cost_ = 0;
    activity_id_ = 0;
  }
  item_list_.Clear();
  refresh_status_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102011::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 act_left_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &act_left_time_)));
          set_has_act_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_act_refresh_times;
        break;
      }
      
      // optional int32 act_refresh_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_refresh_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_refresh_times_)));
          set_has_act_refresh_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_refresh_time;
        break;
      }
      
      // optional int64 refresh_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &refresh_time_)));
          set_has_refresh_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_refresh_cost;
        break;
      }
      
      // optional int32 refresh_cost = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refresh_cost_)));
          set_has_refresh_cost();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoShopInfo item_list = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_item_list;
        if (input->ExpectTag(48)) goto parse_refresh_status_list;
        break;
      }
      
      // repeated int32 refresh_status_list = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh_status_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_refresh_status_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_refresh_status_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_refresh_status_list;
        if (input->ExpectTag(56)) goto parse_activity_id;
        break;
      }
      
      // optional int32 activity_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102011::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 act_left_time = 1;
  if (has_act_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->act_left_time(), output);
  }
  
  // optional int32 act_refresh_times = 2;
  if (has_act_refresh_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->act_refresh_times(), output);
  }
  
  // optional int64 refresh_time = 3;
  if (has_refresh_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->refresh_time(), output);
  }
  
  // optional int32 refresh_cost = 4;
  if (has_refresh_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->refresh_cost(), output);
  }
  
  // repeated .ProtoShopInfo item_list = 5;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->item_list(i), output);
  }
  
  // repeated int32 refresh_status_list = 6;
  for (int i = 0; i < this->refresh_status_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->refresh_status_list(i), output);
  }
  
  // optional int32 activity_id = 7;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102011::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 act_left_time = 1;
  if (has_act_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->act_left_time(), target);
  }
  
  // optional int32 act_refresh_times = 2;
  if (has_act_refresh_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->act_refresh_times(), target);
  }
  
  // optional int64 refresh_time = 3;
  if (has_refresh_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->refresh_time(), target);
  }
  
  // optional int32 refresh_cost = 4;
  if (has_refresh_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->refresh_cost(), target);
  }
  
  // repeated .ProtoShopInfo item_list = 5;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->item_list(i), target);
  }
  
  // repeated int32 refresh_status_list = 6;
  for (int i = 0; i < this->refresh_status_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->refresh_status_list(i), target);
  }
  
  // optional int32 activity_id = 7;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102011::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 act_left_time = 1;
    if (has_act_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->act_left_time());
    }
    
    // optional int32 act_refresh_times = 2;
    if (has_act_refresh_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_refresh_times());
    }
    
    // optional int64 refresh_time = 3;
    if (has_refresh_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->refresh_time());
    }
    
    // optional int32 refresh_cost = 4;
    if (has_refresh_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refresh_cost());
    }
    
    // optional int32 activity_id = 7;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  // repeated .ProtoShopInfo item_list = 5;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  // repeated int32 refresh_status_list = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->refresh_status_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->refresh_status_list(i));
    }
    total_size += 1 * this->refresh_status_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102011::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102011* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102011*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102011::MergeFrom(const Proto50102011& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  refresh_status_list_.MergeFrom(from.refresh_status_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_act_left_time()) {
      set_act_left_time(from.act_left_time());
    }
    if (from.has_act_refresh_times()) {
      set_act_refresh_times(from.act_refresh_times());
    }
    if (from.has_refresh_time()) {
      set_refresh_time(from.refresh_time());
    }
    if (from.has_refresh_cost()) {
      set_refresh_cost(from.refresh_cost());
    }
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102011::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102011::CopyFrom(const Proto50102011& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102011::IsInitialized() const {
  
  return true;
}

void Proto50102011::Swap(Proto50102011* other) {
  if (other != this) {
    std::swap(act_left_time_, other->act_left_time_);
    std::swap(act_refresh_times_, other->act_refresh_times_);
    std::swap(refresh_time_, other->refresh_time_);
    std::swap(refresh_cost_, other->refresh_cost_);
    item_list_.Swap(&other->item_list_);
    refresh_status_list_.Swap(&other->refresh_status_list_);
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102011::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102011_descriptor_;
  metadata.reflection = Proto50102011_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102012::kTimesFieldNumber;
const int Proto10102012::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto10102012::Proto10102012()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102012::InitAsDefaultInstance() {
}

Proto10102012::Proto10102012(const Proto10102012& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102012::SharedCtor() {
  _cached_size_ = 0;
  times_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102012::~Proto10102012() {
  SharedDtor();
}

void Proto10102012::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102012::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102012::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102012_descriptor_;
}

const Proto10102012& Proto10102012::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10102012* Proto10102012::default_instance_ = NULL;

Proto10102012* Proto10102012::New() const {
  return new Proto10102012;
}

void Proto10102012::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    times_ = 0;
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102012::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 times = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &times_)));
          set_has_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_activity_id;
        break;
      }
      
      // optional int32 activity_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102012::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 times = 1;
  if (has_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->times(), output);
  }
  
  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102012::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 times = 1;
  if (has_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->times(), target);
  }
  
  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102012::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 times = 1;
    if (has_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->times());
    }
    
    // optional int32 activity_id = 2;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102012::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102012* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102012*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102012::MergeFrom(const Proto10102012& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_times()) {
      set_times(from.times());
    }
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102012::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102012::CopyFrom(const Proto10102012& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102012::IsInitialized() const {
  
  return true;
}

void Proto10102012::Swap(Proto10102012* other) {
  if (other != this) {
    std::swap(times_, other->times_);
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102012::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102012_descriptor_;
  metadata.reflection = Proto10102012_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102012::kItemListFieldNumber;
const int Proto50102012::kActLeftTimeFieldNumber;
const int Proto50102012::kRefreshTimeFieldNumber;
const int Proto50102012::kActRefreshTimesFieldNumber;
const int Proto50102012::kRefreshCostFieldNumber;
const int Proto50102012::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto50102012::Proto50102012()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102012::InitAsDefaultInstance() {
}

Proto50102012::Proto50102012(const Proto50102012& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102012::SharedCtor() {
  _cached_size_ = 0;
  act_left_time_ = GOOGLE_LONGLONG(0);
  refresh_time_ = GOOGLE_LONGLONG(0);
  act_refresh_times_ = 0;
  refresh_cost_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102012::~Proto50102012() {
  SharedDtor();
}

void Proto50102012::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102012::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102012::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102012_descriptor_;
}

const Proto50102012& Proto50102012::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto50102012* Proto50102012::default_instance_ = NULL;

Proto50102012* Proto50102012::New() const {
  return new Proto50102012;
}

void Proto50102012::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    act_left_time_ = GOOGLE_LONGLONG(0);
    refresh_time_ = GOOGLE_LONGLONG(0);
    act_refresh_times_ = 0;
    refresh_cost_ = 0;
    activity_id_ = 0;
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102012::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoShopInfo item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_list;
        if (input->ExpectTag(16)) goto parse_act_left_time;
        break;
      }
      
      // optional int64 act_left_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &act_left_time_)));
          set_has_act_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_refresh_time;
        break;
      }
      
      // optional int64 refresh_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &refresh_time_)));
          set_has_refresh_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_act_refresh_times;
        break;
      }
      
      // optional int32 act_refresh_times = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_refresh_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_refresh_times_)));
          set_has_act_refresh_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_refresh_cost;
        break;
      }
      
      // optional int32 refresh_cost = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refresh_cost_)));
          set_has_refresh_cost();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_activity_id;
        break;
      }
      
      // optional int32 activity_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102012::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoShopInfo item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(i), output);
  }
  
  // optional int64 act_left_time = 2;
  if (has_act_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->act_left_time(), output);
  }
  
  // optional int64 refresh_time = 3;
  if (has_refresh_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->refresh_time(), output);
  }
  
  // optional int32 act_refresh_times = 4;
  if (has_act_refresh_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->act_refresh_times(), output);
  }
  
  // optional int32 refresh_cost = 5;
  if (has_refresh_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->refresh_cost(), output);
  }
  
  // optional int32 activity_id = 6;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102012::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoShopInfo item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_list(i), target);
  }
  
  // optional int64 act_left_time = 2;
  if (has_act_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->act_left_time(), target);
  }
  
  // optional int64 refresh_time = 3;
  if (has_refresh_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->refresh_time(), target);
  }
  
  // optional int32 act_refresh_times = 4;
  if (has_act_refresh_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->act_refresh_times(), target);
  }
  
  // optional int32 refresh_cost = 5;
  if (has_refresh_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->refresh_cost(), target);
  }
  
  // optional int32 activity_id = 6;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102012::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int64 act_left_time = 2;
    if (has_act_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->act_left_time());
    }
    
    // optional int64 refresh_time = 3;
    if (has_refresh_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->refresh_time());
    }
    
    // optional int32 act_refresh_times = 4;
    if (has_act_refresh_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_refresh_times());
    }
    
    // optional int32 refresh_cost = 5;
    if (has_refresh_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refresh_cost());
    }
    
    // optional int32 activity_id = 6;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  // repeated .ProtoShopInfo item_list = 1;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102012::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102012* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102012*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102012::MergeFrom(const Proto50102012& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_act_left_time()) {
      set_act_left_time(from.act_left_time());
    }
    if (from.has_refresh_time()) {
      set_refresh_time(from.refresh_time());
    }
    if (from.has_act_refresh_times()) {
      set_act_refresh_times(from.act_refresh_times());
    }
    if (from.has_refresh_cost()) {
      set_refresh_cost(from.refresh_cost());
    }
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102012::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102012::CopyFrom(const Proto50102012& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102012::IsInitialized() const {
  
  return true;
}

void Proto50102012::Swap(Proto50102012* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(act_left_time_, other->act_left_time_);
    std::swap(refresh_time_, other->refresh_time_);
    std::swap(act_refresh_times_, other->act_refresh_times_);
    std::swap(refresh_cost_, other->refresh_cost_);
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102012::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102012_descriptor_;
  metadata.reflection = Proto50102012_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102013::kIsAllFieldNumber;
const int Proto10102013::kSlotIdFieldNumber;
const int Proto10102013::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto10102013::Proto10102013()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102013::InitAsDefaultInstance() {
}

Proto10102013::Proto10102013(const Proto10102013& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102013::SharedCtor() {
  _cached_size_ = 0;
  is_all_ = 0;
  slot_id_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102013::~Proto10102013() {
  SharedDtor();
}

void Proto10102013::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102013::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102013::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102013_descriptor_;
}

const Proto10102013& Proto10102013::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10102013* Proto10102013::default_instance_ = NULL;

Proto10102013* Proto10102013::New() const {
  return new Proto10102013;
}

void Proto10102013::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_all_ = 0;
    slot_id_ = 0;
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102013::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 is_all = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_all_)));
          set_has_is_all();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_slot_id;
        break;
      }
      
      // optional int32 slot_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_id_)));
          set_has_slot_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_activity_id;
        break;
      }
      
      // optional int32 activity_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102013::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 is_all = 1;
  if (has_is_all()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->is_all(), output);
  }
  
  // optional int32 slot_id = 2;
  if (has_slot_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->slot_id(), output);
  }
  
  // optional int32 activity_id = 3;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102013::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 is_all = 1;
  if (has_is_all()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->is_all(), target);
  }
  
  // optional int32 slot_id = 2;
  if (has_slot_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->slot_id(), target);
  }
  
  // optional int32 activity_id = 3;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102013::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 is_all = 1;
    if (has_is_all()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_all());
    }
    
    // optional int32 slot_id = 2;
    if (has_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot_id());
    }
    
    // optional int32 activity_id = 3;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102013::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102013* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102013*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102013::MergeFrom(const Proto10102013& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_all()) {
      set_is_all(from.is_all());
    }
    if (from.has_slot_id()) {
      set_slot_id(from.slot_id());
    }
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102013::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102013::CopyFrom(const Proto10102013& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102013::IsInitialized() const {
  
  return true;
}

void Proto10102013::Swap(Proto10102013* other) {
  if (other != this) {
    std::swap(is_all_, other->is_all_);
    std::swap(slot_id_, other->slot_id_);
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102013::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102013_descriptor_;
  metadata.reflection = Proto10102013_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102013::kStatusFieldNumber;
const int Proto50102013::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto50102013::Proto50102013()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102013::InitAsDefaultInstance() {
}

Proto50102013::Proto50102013(const Proto50102013& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102013::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102013::~Proto50102013() {
  SharedDtor();
}

void Proto50102013::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102013::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102013::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102013_descriptor_;
}

const Proto50102013& Proto50102013::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto50102013* Proto50102013::default_instance_ = NULL;

Proto50102013* Proto50102013::New() const {
  return new Proto50102013;
}

void Proto50102013::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102013::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_activity_id;
        break;
      }
      
      // optional int32 activity_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102013::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102013::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102013::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int32 activity_id = 2;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102013::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102013* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102013*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102013::MergeFrom(const Proto50102013& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102013::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102013::CopyFrom(const Proto50102013& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102013::IsInitialized() const {
  
  return true;
}

void Proto50102013::Swap(Proto50102013* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102013::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102013_descriptor_;
  metadata.reflection = Proto50102013_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102014::kTypeFieldNumber;
const int Proto10102014::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto10102014::Proto10102014()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102014::InitAsDefaultInstance() {
}

Proto10102014::Proto10102014(const Proto10102014& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102014::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102014::~Proto10102014() {
  SharedDtor();
}

void Proto10102014::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102014::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102014::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102014_descriptor_;
}

const Proto10102014& Proto10102014::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10102014* Proto10102014::default_instance_ = NULL;

Proto10102014* Proto10102014::New() const {
  return new Proto10102014;
}

void Proto10102014::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102014::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_activity_id;
        break;
      }
      
      // optional int32 activity_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102014::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102014::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102014::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 activity_id = 2;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102014::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102014* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102014*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102014::MergeFrom(const Proto10102014& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102014::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102014::CopyFrom(const Proto10102014& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102014::IsInitialized() const {
  
  return true;
}

void Proto10102014::Swap(Proto10102014* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102014::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102014_descriptor_;
  metadata.reflection = Proto10102014_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102014::kTypeFieldNumber;
const int Proto50102014::kStatusFieldNumber;
const int Proto50102014::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto50102014::Proto50102014()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102014::InitAsDefaultInstance() {
}

Proto50102014::Proto50102014(const Proto50102014& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102014::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  status_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102014::~Proto50102014() {
  SharedDtor();
}

void Proto50102014::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102014::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102014::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102014_descriptor_;
}

const Proto50102014& Proto50102014::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto50102014* Proto50102014::default_instance_ = NULL;

Proto50102014* Proto50102014::New() const {
  return new Proto50102014;
}

void Proto50102014::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    status_ = 0;
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102014::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }
      
      // optional int32 status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_activity_id;
        break;
      }
      
      // optional int32 activity_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102014::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }
  
  // optional int32 activity_id = 3;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102014::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }
  
  // optional int32 activity_id = 3;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102014::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int32 activity_id = 3;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102014::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102014* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102014*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102014::MergeFrom(const Proto50102014& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102014::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102014::CopyFrom(const Proto50102014& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102014::IsInitialized() const {
  
  return true;
}

void Proto50102014::Swap(Proto50102014* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(status_, other->status_);
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102014::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102014_descriptor_;
  metadata.reflection = Proto50102014_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100215::kIconTypeFieldNumber;
const int Proto50100215::kActListFieldNumber;
#endif  // !_MSC_VER

Proto50100215::Proto50100215()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100215::InitAsDefaultInstance() {
}

Proto50100215::Proto50100215(const Proto50100215& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100215::SharedCtor() {
  _cached_size_ = 0;
  icon_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100215::~Proto50100215() {
  SharedDtor();
}

void Proto50100215::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100215::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100215::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100215_descriptor_;
}

const Proto50100215& Proto50100215::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto50100215* Proto50100215::default_instance_ = NULL;

Proto50100215* Proto50100215::New() const {
  return new Proto50100215;
}

void Proto50100215::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    icon_type_ = 0;
  }
  act_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100215::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 icon_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &icon_type_)));
          set_has_icon_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_act_list;
        break;
      }
      
      // repeated int32 act_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_act_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_act_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_act_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100215::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 icon_type = 1;
  if (has_icon_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->icon_type(), output);
  }
  
  // repeated int32 act_list = 2;
  for (int i = 0; i < this->act_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->act_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100215::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 icon_type = 1;
  if (has_icon_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->icon_type(), target);
  }
  
  // repeated int32 act_list = 2;
  for (int i = 0; i < this->act_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->act_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100215::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 icon_type = 1;
    if (has_icon_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->icon_type());
    }
    
  }
  // repeated int32 act_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->act_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->act_list(i));
    }
    total_size += 1 * this->act_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100215::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100215* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100215*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100215::MergeFrom(const Proto50100215& from) {
  GOOGLE_CHECK_NE(&from, this);
  act_list_.MergeFrom(from.act_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_icon_type()) {
      set_icon_type(from.icon_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100215::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100215::CopyFrom(const Proto50100215& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100215::IsInitialized() const {
  
  return true;
}

void Proto50100215::Swap(Proto50100215* other) {
  if (other != this) {
    std::swap(icon_type_, other->icon_type_);
    act_list_.Swap(&other->act_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100215::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100215_descriptor_;
  metadata.reflection = Proto50100215_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400122::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400122::Proto11400122()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400122::InitAsDefaultInstance() {
}

Proto11400122::Proto11400122(const Proto11400122& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400122::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400122::~Proto11400122() {
  SharedDtor();
}

void Proto11400122::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400122::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400122::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400122_descriptor_;
}

const Proto11400122& Proto11400122::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto11400122* Proto11400122::default_instance_ = NULL;

Proto11400122* Proto11400122::New() const {
  return new Proto11400122;
}

void Proto11400122::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400122::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400122::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400122::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400122::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400122::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400122* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400122*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400122::MergeFrom(const Proto11400122& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400122::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400122::CopyFrom(const Proto11400122& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400122::IsInitialized() const {
  
  return true;
}

void Proto11400122::Swap(Proto11400122* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400122::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400122_descriptor_;
  metadata.reflection = Proto11400122_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400113::kTypeFieldNumber;
const int Proto81400113::kItemFieldNumber;
const int Proto81400113::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto81400113::Proto81400113()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400113::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto81400113::Proto81400113(const Proto81400113& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400113::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400113::~Proto81400113() {
  SharedDtor();
}

void Proto81400113::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto81400113::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400113::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400113_descriptor_;
}

const Proto81400113& Proto81400113::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto81400113* Proto81400113::default_instance_ = NULL;

Proto81400113* Proto81400113::New() const {
  return new Proto81400113;
}

void Proto81400113::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400113::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item;
        break;
      }
      
      // repeated .ProtoItem item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item;
        if (input->ExpectTag(26)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400113::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // repeated .ProtoItem item = 2;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item(i), output);
  }
  
  // optional .ProtoThreeObj other_info = 3;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400113::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // repeated .ProtoItem item = 2;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item(i), target);
  }
  
  // optional .ProtoThreeObj other_info = 3;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400113::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional .ProtoThreeObj other_info = 3;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  // repeated .ProtoItem item = 2;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400113::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400113* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400113*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400113::MergeFrom(const Proto81400113& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400113::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400113::CopyFrom(const Proto81400113& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400113::IsInitialized() const {
  
  return true;
}

void Proto81400113::Swap(Proto81400113* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    item_.Swap(&other->item_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400113::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400113_descriptor_;
  metadata.reflection = Proto81400113_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51402601::kLevelFieldNumber;
const int Proto51402601::kExpFieldNumber;
const int Proto51402601::kFashionInfoFieldNumber;
const int Proto51402601::kFashionIdFieldNumber;
const int Proto51402601::kColorIdFieldNumber;
#endif  // !_MSC_VER

Proto51402601::Proto51402601()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51402601::InitAsDefaultInstance() {
}

Proto51402601::Proto51402601(const Proto51402601& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51402601::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  exp_ = 0;
  fashion_id_ = 0;
  color_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51402601::~Proto51402601() {
  SharedDtor();
}

void Proto51402601::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51402601::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51402601::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51402601_descriptor_;
}

const Proto51402601& Proto51402601::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto51402601* Proto51402601::default_instance_ = NULL;

Proto51402601* Proto51402601::New() const {
  return new Proto51402601;
}

void Proto51402601::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    exp_ = 0;
    fashion_id_ = 0;
    color_id_ = 0;
  }
  fashion_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51402601::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exp;
        break;
      }
      
      // optional int32 exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_fashion_info;
        break;
      }
      
      // repeated .ProtoFashionDetail fashion_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fashion_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fashion_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_fashion_info;
        if (input->ExpectTag(32)) goto parse_fashion_id;
        break;
      }
      
      // optional int32 fashion_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_color_id;
        break;
      }
      
      // optional int32 color_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_color_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &color_id_)));
          set_has_color_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51402601::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exp(), output);
  }
  
  // repeated .ProtoFashionDetail fashion_info = 3;
  for (int i = 0; i < this->fashion_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->fashion_info(i), output);
  }
  
  // optional int32 fashion_id = 4;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->fashion_id(), output);
  }
  
  // optional int32 color_id = 5;
  if (has_color_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->color_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51402601::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exp(), target);
  }
  
  // repeated .ProtoFashionDetail fashion_info = 3;
  for (int i = 0; i < this->fashion_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->fashion_info(i), target);
  }
  
  // optional int32 fashion_id = 4;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->fashion_id(), target);
  }
  
  // optional int32 color_id = 5;
  if (has_color_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->color_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51402601::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 exp = 2;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }
    
    // optional int32 fashion_id = 4;
    if (has_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
    // optional int32 color_id = 5;
    if (has_color_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->color_id());
    }
    
  }
  // repeated .ProtoFashionDetail fashion_info = 3;
  total_size += 1 * this->fashion_info_size();
  for (int i = 0; i < this->fashion_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fashion_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51402601::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51402601* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51402601*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51402601::MergeFrom(const Proto51402601& from) {
  GOOGLE_CHECK_NE(&from, this);
  fashion_info_.MergeFrom(from.fashion_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
    if (from.has_color_id()) {
      set_color_id(from.color_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51402601::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51402601::CopyFrom(const Proto51402601& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51402601::IsInitialized() const {
  
  return true;
}

void Proto51402601::Swap(Proto51402601* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(exp_, other->exp_);
    fashion_info_.Swap(&other->fashion_info_);
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(color_id_, other->color_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51402601::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51402601_descriptor_;
  metadata.reflection = Proto51402601_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11402602::kFashionIdFieldNumber;
const int Proto11402602::kColorIdFieldNumber;
const int Proto11402602::kActiveBuyFieldNumber;
#endif  // !_MSC_VER

Proto11402602::Proto11402602()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11402602::InitAsDefaultInstance() {
}

Proto11402602::Proto11402602(const Proto11402602& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11402602::SharedCtor() {
  _cached_size_ = 0;
  fashion_id_ = 0;
  color_id_ = 0;
  active_buy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11402602::~Proto11402602() {
  SharedDtor();
}

void Proto11402602::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11402602::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11402602::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11402602_descriptor_;
}

const Proto11402602& Proto11402602::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto11402602* Proto11402602::default_instance_ = NULL;

Proto11402602* Proto11402602::New() const {
  return new Proto11402602;
}

void Proto11402602::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fashion_id_ = 0;
    color_id_ = 0;
    active_buy_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11402602::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fashion_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_color_id;
        break;
      }
      
      // optional int32 color_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_color_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &color_id_)));
          set_has_color_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_active_buy;
        break;
      }
      
      // optional int32 active_buy = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_active_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &active_buy_)));
          set_has_active_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11402602::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fashion_id(), output);
  }
  
  // optional int32 color_id = 2;
  if (has_color_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->color_id(), output);
  }
  
  // optional int32 active_buy = 3;
  if (has_active_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->active_buy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11402602::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fashion_id(), target);
  }
  
  // optional int32 color_id = 2;
  if (has_color_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->color_id(), target);
  }
  
  // optional int32 active_buy = 3;
  if (has_active_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->active_buy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11402602::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fashion_id = 1;
    if (has_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
    // optional int32 color_id = 2;
    if (has_color_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->color_id());
    }
    
    // optional int32 active_buy = 3;
    if (has_active_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->active_buy());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11402602::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11402602* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11402602*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11402602::MergeFrom(const Proto11402602& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
    if (from.has_color_id()) {
      set_color_id(from.color_id());
    }
    if (from.has_active_buy()) {
      set_active_buy(from.active_buy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11402602::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11402602::CopyFrom(const Proto11402602& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11402602::IsInitialized() const {
  
  return true;
}

void Proto11402602::Swap(Proto11402602* other) {
  if (other != this) {
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(color_id_, other->color_id_);
    std::swap(active_buy_, other->active_buy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11402602::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11402602_descriptor_;
  metadata.reflection = Proto11402602_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51402603::kLevelFieldNumber;
const int Proto51402603::kExpFieldNumber;
#endif  // !_MSC_VER

Proto51402603::Proto51402603()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51402603::InitAsDefaultInstance() {
}

Proto51402603::Proto51402603(const Proto51402603& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51402603::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  exp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51402603::~Proto51402603() {
  SharedDtor();
}

void Proto51402603::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51402603::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51402603::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51402603_descriptor_;
}

const Proto51402603& Proto51402603::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto51402603* Proto51402603::default_instance_ = NULL;

Proto51402603* Proto51402603::New() const {
  return new Proto51402603;
}

void Proto51402603::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    exp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51402603::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exp;
        break;
      }
      
      // optional int32 exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51402603::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exp(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51402603::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exp(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51402603::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 exp = 2;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51402603::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51402603* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51402603*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51402603::MergeFrom(const Proto51402603& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51402603::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51402603::CopyFrom(const Proto51402603& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51402603::IsInitialized() const {
  
  return true;
}

void Proto51402603::Swap(Proto51402603* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(exp_, other->exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51402603::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51402603_descriptor_;
  metadata.reflection = Proto51402603_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11402605::kFashionIdFieldNumber;
#endif  // !_MSC_VER

Proto11402605::Proto11402605()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11402605::InitAsDefaultInstance() {
}

Proto11402605::Proto11402605(const Proto11402605& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11402605::SharedCtor() {
  _cached_size_ = 0;
  fashion_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11402605::~Proto11402605() {
  SharedDtor();
}

void Proto11402605::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11402605::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11402605::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11402605_descriptor_;
}

const Proto11402605& Proto11402605::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto11402605* Proto11402605::default_instance_ = NULL;

Proto11402605* Proto11402605::New() const {
  return new Proto11402605;
}

void Proto11402605::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fashion_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11402605::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fashion_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11402605::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fashion_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11402605::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fashion_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11402605::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fashion_id = 1;
    if (has_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11402605::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11402605* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11402605*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11402605::MergeFrom(const Proto11402605& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11402605::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11402605::CopyFrom(const Proto11402605& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11402605::IsInitialized() const {
  
  return true;
}

void Proto11402605::Swap(Proto11402605* other) {
  if (other != this) {
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11402605::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11402605_descriptor_;
  metadata.reflection = Proto11402605_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51402605::kFashionIdFieldNumber;
#endif  // !_MSC_VER

Proto51402605::Proto51402605()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51402605::InitAsDefaultInstance() {
}

Proto51402605::Proto51402605(const Proto51402605& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51402605::SharedCtor() {
  _cached_size_ = 0;
  fashion_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51402605::~Proto51402605() {
  SharedDtor();
}

void Proto51402605::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51402605::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51402605::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51402605_descriptor_;
}

const Proto51402605& Proto51402605::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto51402605* Proto51402605::default_instance_ = NULL;

Proto51402605* Proto51402605::New() const {
  return new Proto51402605;
}

void Proto51402605::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fashion_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51402605::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fashion_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51402605::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fashion_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51402605::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fashion_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51402605::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fashion_id = 1;
    if (has_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51402605::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51402605* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51402605*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51402605::MergeFrom(const Proto51402605& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51402605::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51402605::CopyFrom(const Proto51402605& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51402605::IsInitialized() const {
  
  return true;
}

void Proto51402605::Swap(Proto51402605* other) {
  if (other != this) {
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51402605::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51402605_descriptor_;
  metadata.reflection = Proto51402605_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11402606::kFashionIdFieldNumber;
const int Proto11402606::kSelColorIdFieldNumber;
#endif  // !_MSC_VER

Proto11402606::Proto11402606()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11402606::InitAsDefaultInstance() {
}

Proto11402606::Proto11402606(const Proto11402606& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11402606::SharedCtor() {
  _cached_size_ = 0;
  fashion_id_ = 0;
  sel_color_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11402606::~Proto11402606() {
  SharedDtor();
}

void Proto11402606::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11402606::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11402606::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11402606_descriptor_;
}

const Proto11402606& Proto11402606::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto11402606* Proto11402606::default_instance_ = NULL;

Proto11402606* Proto11402606::New() const {
  return new Proto11402606;
}

void Proto11402606::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fashion_id_ = 0;
    sel_color_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11402606::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fashion_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sel_color_id;
        break;
      }
      
      // optional int32 sel_color_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sel_color_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sel_color_id_)));
          set_has_sel_color_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11402606::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fashion_id(), output);
  }
  
  // optional int32 sel_color_id = 2;
  if (has_sel_color_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sel_color_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11402606::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fashion_id(), target);
  }
  
  // optional int32 sel_color_id = 2;
  if (has_sel_color_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sel_color_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11402606::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fashion_id = 1;
    if (has_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
    // optional int32 sel_color_id = 2;
    if (has_sel_color_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sel_color_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11402606::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11402606* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11402606*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11402606::MergeFrom(const Proto11402606& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
    if (from.has_sel_color_id()) {
      set_sel_color_id(from.sel_color_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11402606::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11402606::CopyFrom(const Proto11402606& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11402606::IsInitialized() const {
  
  return true;
}

void Proto11402606::Swap(Proto11402606* other) {
  if (other != this) {
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(sel_color_id_, other->sel_color_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11402606::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11402606_descriptor_;
  metadata.reflection = Proto11402606_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51402606::kFashionIdFieldNumber;
const int Proto51402606::kSelColorIdFieldNumber;
#endif  // !_MSC_VER

Proto51402606::Proto51402606()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51402606::InitAsDefaultInstance() {
}

Proto51402606::Proto51402606(const Proto51402606& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51402606::SharedCtor() {
  _cached_size_ = 0;
  fashion_id_ = 0;
  sel_color_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51402606::~Proto51402606() {
  SharedDtor();
}

void Proto51402606::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51402606::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51402606::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51402606_descriptor_;
}

const Proto51402606& Proto51402606::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto51402606* Proto51402606::default_instance_ = NULL;

Proto51402606* Proto51402606::New() const {
  return new Proto51402606;
}

void Proto51402606::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fashion_id_ = 0;
    sel_color_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51402606::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fashion_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sel_color_id;
        break;
      }
      
      // optional int32 sel_color_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sel_color_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sel_color_id_)));
          set_has_sel_color_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51402606::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fashion_id(), output);
  }
  
  // optional int32 sel_color_id = 2;
  if (has_sel_color_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sel_color_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51402606::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fashion_id(), target);
  }
  
  // optional int32 sel_color_id = 2;
  if (has_sel_color_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sel_color_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51402606::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fashion_id = 1;
    if (has_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
    // optional int32 sel_color_id = 2;
    if (has_sel_color_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sel_color_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51402606::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51402606* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51402606*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51402606::MergeFrom(const Proto51402606& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
    if (from.has_sel_color_id()) {
      set_sel_color_id(from.sel_color_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51402606::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51402606::CopyFrom(const Proto51402606& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51402606::IsInitialized() const {
  
  return true;
}

void Proto51402606::Swap(Proto51402606* other) {
  if (other != this) {
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(sel_color_id_, other->sel_color_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51402606::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51402606_descriptor_;
  metadata.reflection = Proto51402606_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101410::kItemIdFieldNumber;
const int Proto10101410::kItemNumFieldNumber;
const int Proto10101410::kItemListFieldNumber;
#endif  // !_MSC_VER

Proto10101410::Proto10101410()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101410::InitAsDefaultInstance() {
}

Proto10101410::Proto10101410(const Proto10101410& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101410::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101410::~Proto10101410() {
  SharedDtor();
}

void Proto10101410::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101410::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101410::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101410_descriptor_;
}

const Proto10101410& Proto10101410::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10101410* Proto10101410::default_instance_ = NULL;

Proto10101410* Proto10101410::New() const {
  return new Proto10101410;
}

void Proto10101410::Clear() {
  item_id_.Clear();
  item_num_.Clear();
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101410::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_item_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_item_id;
        if (input->ExpectTag(16)) goto parse_item_num;
        break;
      }
      
      // repeated int32 item_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_item_num())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item_num())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_num;
        if (input->ExpectTag(26)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoItem item_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101410::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 item_id = 1;
  for (int i = 0; i < this->item_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->item_id(i), output);
  }
  
  // repeated int32 item_num = 2;
  for (int i = 0; i < this->item_num_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->item_num(i), output);
  }
  
  // repeated .ProtoItem item_list = 3;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->item_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101410::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 item_id = 1;
  for (int i = 0; i < this->item_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->item_id(i), target);
  }
  
  // repeated int32 item_num = 2;
  for (int i = 0; i < this->item_num_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->item_num(i), target);
  }
  
  // repeated .ProtoItem item_list = 3;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->item_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101410::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 item_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item_id(i));
    }
    total_size += 1 * this->item_id_size() + data_size;
  }
  
  // repeated int32 item_num = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_num_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item_num(i));
    }
    total_size += 1 * this->item_num_size() + data_size;
  }
  
  // repeated .ProtoItem item_list = 3;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101410::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101410* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101410*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101410::MergeFrom(const Proto10101410& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_id_.MergeFrom(from.item_id_);
  item_num_.MergeFrom(from.item_num_);
  item_list_.MergeFrom(from.item_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101410::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101410::CopyFrom(const Proto10101410& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101410::IsInitialized() const {
  
  return true;
}

void Proto10101410::Swap(Proto10101410* other) {
  if (other != this) {
    item_id_.Swap(&other->item_id_);
    item_num_.Swap(&other->item_num_);
    item_list_.Swap(&other->item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101410::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101410_descriptor_;
  metadata.reflection = Proto10101410_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101411::kItemIdFieldNumber;
const int Proto10101411::kItemNumFieldNumber;
const int Proto10101411::kItemListFieldNumber;
#endif  // !_MSC_VER

Proto10101411::Proto10101411()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101411::InitAsDefaultInstance() {
}

Proto10101411::Proto10101411(const Proto10101411& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101411::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101411::~Proto10101411() {
  SharedDtor();
}

void Proto10101411::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101411::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101411::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101411_descriptor_;
}

const Proto10101411& Proto10101411::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10101411* Proto10101411::default_instance_ = NULL;

Proto10101411* Proto10101411::New() const {
  return new Proto10101411;
}

void Proto10101411::Clear() {
  item_id_.Clear();
  item_num_.Clear();
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101411::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_item_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_item_id;
        if (input->ExpectTag(16)) goto parse_item_num;
        break;
      }
      
      // repeated int32 item_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_item_num())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item_num())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_num;
        if (input->ExpectTag(26)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoItem item_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101411::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 item_id = 1;
  for (int i = 0; i < this->item_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->item_id(i), output);
  }
  
  // repeated int32 item_num = 2;
  for (int i = 0; i < this->item_num_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->item_num(i), output);
  }
  
  // repeated .ProtoItem item_list = 3;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->item_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101411::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 item_id = 1;
  for (int i = 0; i < this->item_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->item_id(i), target);
  }
  
  // repeated int32 item_num = 2;
  for (int i = 0; i < this->item_num_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->item_num(i), target);
  }
  
  // repeated .ProtoItem item_list = 3;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->item_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101411::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 item_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item_id(i));
    }
    total_size += 1 * this->item_id_size() + data_size;
  }
  
  // repeated int32 item_num = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_num_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item_num(i));
    }
    total_size += 1 * this->item_num_size() + data_size;
  }
  
  // repeated .ProtoItem item_list = 3;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101411::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101411* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101411*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101411::MergeFrom(const Proto10101411& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_id_.MergeFrom(from.item_id_);
  item_num_.MergeFrom(from.item_num_);
  item_list_.MergeFrom(from.item_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101411::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101411::CopyFrom(const Proto10101411& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101411::IsInitialized() const {
  
  return true;
}

void Proto10101411::Swap(Proto10101411* other) {
  if (other != this) {
    item_id_.Swap(&other->item_id_);
    item_num_.Swap(&other->item_num_);
    item_list_.Swap(&other->item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101411::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101411_descriptor_;
  metadata.reflection = Proto10101411_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101412::kItemIdFieldNumber;
const int Proto10101412::kItemNumFieldNumber;
const int Proto10101412::kItemListFieldNumber;
#endif  // !_MSC_VER

Proto10101412::Proto10101412()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101412::InitAsDefaultInstance() {
}

Proto10101412::Proto10101412(const Proto10101412& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101412::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101412::~Proto10101412() {
  SharedDtor();
}

void Proto10101412::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101412::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101412::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101412_descriptor_;
}

const Proto10101412& Proto10101412::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10101412* Proto10101412::default_instance_ = NULL;

Proto10101412* Proto10101412::New() const {
  return new Proto10101412;
}

void Proto10101412::Clear() {
  item_id_.Clear();
  item_num_.Clear();
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101412::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_item_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_item_id;
        if (input->ExpectTag(16)) goto parse_item_num;
        break;
      }
      
      // repeated int32 item_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_item_num())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item_num())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_num;
        if (input->ExpectTag(26)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoItem item_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101412::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 item_id = 1;
  for (int i = 0; i < this->item_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->item_id(i), output);
  }
  
  // repeated int32 item_num = 2;
  for (int i = 0; i < this->item_num_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->item_num(i), output);
  }
  
  // repeated .ProtoItem item_list = 3;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->item_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101412::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 item_id = 1;
  for (int i = 0; i < this->item_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->item_id(i), target);
  }
  
  // repeated int32 item_num = 2;
  for (int i = 0; i < this->item_num_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->item_num(i), target);
  }
  
  // repeated .ProtoItem item_list = 3;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->item_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101412::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 item_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item_id(i));
    }
    total_size += 1 * this->item_id_size() + data_size;
  }
  
  // repeated int32 item_num = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_num_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item_num(i));
    }
    total_size += 1 * this->item_num_size() + data_size;
  }
  
  // repeated .ProtoItem item_list = 3;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101412::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101412* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101412*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101412::MergeFrom(const Proto10101412& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_id_.MergeFrom(from.item_id_);
  item_num_.MergeFrom(from.item_num_);
  item_list_.MergeFrom(from.item_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101412::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101412::CopyFrom(const Proto10101412& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101412::IsInitialized() const {
  
  return true;
}

void Proto10101412::Swap(Proto10101412* other) {
  if (other != this) {
    item_id_.Swap(&other->item_id_);
    item_num_.Swap(&other->item_num_);
    item_list_.Swap(&other->item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101412::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101412_descriptor_;
  metadata.reflection = Proto10101412_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81402101::kFashionIdFieldNumber;
#endif  // !_MSC_VER

Proto81402101::Proto81402101()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81402101::InitAsDefaultInstance() {
}

Proto81402101::Proto81402101(const Proto81402101& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81402101::SharedCtor() {
  _cached_size_ = 0;
  fashion_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81402101::~Proto81402101() {
  SharedDtor();
}

void Proto81402101::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81402101::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81402101::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81402101_descriptor_;
}

const Proto81402101& Proto81402101::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto81402101* Proto81402101::default_instance_ = NULL;

Proto81402101* Proto81402101::New() const {
  return new Proto81402101;
}

void Proto81402101::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fashion_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81402101::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fashion_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81402101::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fashion_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81402101::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fashion_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81402101::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fashion_id = 1;
    if (has_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81402101::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81402101* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81402101*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81402101::MergeFrom(const Proto81402101& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81402101::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81402101::CopyFrom(const Proto81402101& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81402101::IsInitialized() const {
  
  return true;
}

void Proto81402101::Swap(Proto81402101* other) {
  if (other != this) {
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81402101::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81402101_descriptor_;
  metadata.reflection = Proto81402101_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100420::kStateFieldNumber;
#endif  // !_MSC_VER

Proto10100420::Proto10100420()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100420::InitAsDefaultInstance() {
}

Proto10100420::Proto10100420(const Proto10100420& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100420::SharedCtor() {
  _cached_size_ = 0;
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100420::~Proto10100420() {
  SharedDtor();
}

void Proto10100420::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100420::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100420::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100420_descriptor_;
}

const Proto10100420& Proto10100420::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10100420* Proto10100420::default_instance_ = NULL;

Proto10100420* Proto10100420::New() const {
  return new Proto10100420;
}

void Proto10100420::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100420::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100420::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100420::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100420::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 state = 1;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100420::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100420* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100420*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100420::MergeFrom(const Proto10100420& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100420::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100420::CopyFrom(const Proto10100420& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100420::IsInitialized() const {
  
  return true;
}

void Proto10100420::Swap(Proto10100420* other) {
  if (other != this) {
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100420::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100420_descriptor_;
  metadata.reflection = Proto10100420_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101420::kWeddingTypeFieldNumber;
const int Proto10101420::kOtherInfoFieldNumber;
const int Proto10101420::kLeadIdFieldNumber;
const int Proto10101420::kLeadNameFieldNumber;
const int Proto10101420::kTeamerIdFieldNumber;
const int Proto10101420::kTeamerNameFieldNumber;
#endif  // !_MSC_VER

Proto10101420::Proto10101420()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101420::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto10101420::Proto10101420(const Proto10101420& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101420::SharedCtor() {
  _cached_size_ = 0;
  wedding_type_ = 0;
  other_info_ = NULL;
  lead_id_ = GOOGLE_LONGLONG(0);
  lead_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  teamer_id_ = GOOGLE_LONGLONG(0);
  teamer_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101420::~Proto10101420() {
  SharedDtor();
}

void Proto10101420::SharedDtor() {
  if (lead_name_ != &::google::protobuf::internal::kEmptyString) {
    delete lead_name_;
  }
  if (teamer_name_ != &::google::protobuf::internal::kEmptyString) {
    delete teamer_name_;
  }
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto10101420::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101420::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101420_descriptor_;
}

const Proto10101420& Proto10101420::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10101420* Proto10101420::default_instance_ = NULL;

Proto10101420* Proto10101420::New() const {
  return new Proto10101420;
}

void Proto10101420::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    wedding_type_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
    lead_id_ = GOOGLE_LONGLONG(0);
    if (has_lead_name()) {
      if (lead_name_ != &::google::protobuf::internal::kEmptyString) {
        lead_name_->clear();
      }
    }
    teamer_id_ = GOOGLE_LONGLONG(0);
    if (has_teamer_name()) {
      if (teamer_name_ != &::google::protobuf::internal::kEmptyString) {
        teamer_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101420::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 wedding_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wedding_type_)));
          set_has_wedding_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_lead_id;
        break;
      }
      
      // optional int64 lead_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lead_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lead_id_)));
          set_has_lead_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_lead_name;
        break;
      }
      
      // optional string lead_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lead_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lead_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->lead_name().data(), this->lead_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_teamer_id;
        break;
      }
      
      // optional int64 teamer_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_teamer_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &teamer_id_)));
          set_has_teamer_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_teamer_name;
        break;
      }
      
      // optional string teamer_name = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_teamer_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_teamer_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->teamer_name().data(), this->teamer_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101420::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 wedding_type = 1;
  if (has_wedding_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wedding_type(), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  // optional int64 lead_id = 3;
  if (has_lead_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->lead_id(), output);
  }
  
  // optional string lead_name = 4;
  if (has_lead_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lead_name().data(), this->lead_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->lead_name(), output);
  }
  
  // optional int64 teamer_id = 5;
  if (has_teamer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->teamer_id(), output);
  }
  
  // optional string teamer_name = 6;
  if (has_teamer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->teamer_name().data(), this->teamer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->teamer_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101420::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 wedding_type = 1;
  if (has_wedding_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wedding_type(), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  // optional int64 lead_id = 3;
  if (has_lead_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->lead_id(), target);
  }
  
  // optional string lead_name = 4;
  if (has_lead_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lead_name().data(), this->lead_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->lead_name(), target);
  }
  
  // optional int64 teamer_id = 5;
  if (has_teamer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->teamer_id(), target);
  }
  
  // optional string teamer_name = 6;
  if (has_teamer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->teamer_name().data(), this->teamer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->teamer_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101420::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 wedding_type = 1;
    if (has_wedding_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wedding_type());
    }
    
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
    // optional int64 lead_id = 3;
    if (has_lead_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lead_id());
    }
    
    // optional string lead_name = 4;
    if (has_lead_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lead_name());
    }
    
    // optional int64 teamer_id = 5;
    if (has_teamer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->teamer_id());
    }
    
    // optional string teamer_name = 6;
    if (has_teamer_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->teamer_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101420::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101420* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101420*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101420::MergeFrom(const Proto10101420& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wedding_type()) {
      set_wedding_type(from.wedding_type());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
    if (from.has_lead_id()) {
      set_lead_id(from.lead_id());
    }
    if (from.has_lead_name()) {
      set_lead_name(from.lead_name());
    }
    if (from.has_teamer_id()) {
      set_teamer_id(from.teamer_id());
    }
    if (from.has_teamer_name()) {
      set_teamer_name(from.teamer_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101420::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101420::CopyFrom(const Proto10101420& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101420::IsInitialized() const {
  
  return true;
}

void Proto10101420::Swap(Proto10101420* other) {
  if (other != this) {
    std::swap(wedding_type_, other->wedding_type_);
    std::swap(other_info_, other->other_info_);
    std::swap(lead_id_, other->lead_id_);
    std::swap(lead_name_, other->lead_name_);
    std::swap(teamer_id_, other->teamer_id_);
    std::swap(teamer_name_, other->teamer_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101420::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101420_descriptor_;
  metadata.reflection = Proto10101420_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101421::kWeddingTypeFieldNumber;
const int Proto10101421::kIsOkFieldNumber;
const int Proto10101421::kOtherInfoFieldNumber;
const int Proto10101421::kLeadIdFieldNumber;
const int Proto10101421::kLeadNameFieldNumber;
const int Proto10101421::kTeamerIdFieldNumber;
const int Proto10101421::kTeamerNameFieldNumber;
#endif  // !_MSC_VER

Proto10101421::Proto10101421()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101421::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto10101421::Proto10101421(const Proto10101421& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101421::SharedCtor() {
  _cached_size_ = 0;
  wedding_type_ = 0;
  is_ok_ = 0;
  other_info_ = NULL;
  lead_id_ = GOOGLE_LONGLONG(0);
  lead_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  teamer_id_ = GOOGLE_LONGLONG(0);
  teamer_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101421::~Proto10101421() {
  SharedDtor();
}

void Proto10101421::SharedDtor() {
  if (lead_name_ != &::google::protobuf::internal::kEmptyString) {
    delete lead_name_;
  }
  if (teamer_name_ != &::google::protobuf::internal::kEmptyString) {
    delete teamer_name_;
  }
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto10101421::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101421::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101421_descriptor_;
}

const Proto10101421& Proto10101421::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10101421* Proto10101421::default_instance_ = NULL;

Proto10101421* Proto10101421::New() const {
  return new Proto10101421;
}

void Proto10101421::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    wedding_type_ = 0;
    is_ok_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
    lead_id_ = GOOGLE_LONGLONG(0);
    if (has_lead_name()) {
      if (lead_name_ != &::google::protobuf::internal::kEmptyString) {
        lead_name_->clear();
      }
    }
    teamer_id_ = GOOGLE_LONGLONG(0);
    if (has_teamer_name()) {
      if (teamer_name_ != &::google::protobuf::internal::kEmptyString) {
        teamer_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101421::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 wedding_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wedding_type_)));
          set_has_wedding_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_ok;
        break;
      }
      
      // optional int32 is_ok = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_ok:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_ok_)));
          set_has_is_ok();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_lead_id;
        break;
      }
      
      // optional int64 lead_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lead_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lead_id_)));
          set_has_lead_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_lead_name;
        break;
      }
      
      // optional string lead_name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lead_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lead_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->lead_name().data(), this->lead_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_teamer_id;
        break;
      }
      
      // optional int64 teamer_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_teamer_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &teamer_id_)));
          set_has_teamer_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_teamer_name;
        break;
      }
      
      // optional string teamer_name = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_teamer_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_teamer_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->teamer_name().data(), this->teamer_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101421::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 wedding_type = 1;
  if (has_wedding_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wedding_type(), output);
  }
  
  // optional int32 is_ok = 2;
  if (has_is_ok()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_ok(), output);
  }
  
  // optional .ProtoThreeObj other_info = 3;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->other_info(), output);
  }
  
  // optional int64 lead_id = 4;
  if (has_lead_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->lead_id(), output);
  }
  
  // optional string lead_name = 5;
  if (has_lead_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lead_name().data(), this->lead_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->lead_name(), output);
  }
  
  // optional int64 teamer_id = 6;
  if (has_teamer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->teamer_id(), output);
  }
  
  // optional string teamer_name = 7;
  if (has_teamer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->teamer_name().data(), this->teamer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->teamer_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101421::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 wedding_type = 1;
  if (has_wedding_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wedding_type(), target);
  }
  
  // optional int32 is_ok = 2;
  if (has_is_ok()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_ok(), target);
  }
  
  // optional .ProtoThreeObj other_info = 3;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->other_info(), target);
  }
  
  // optional int64 lead_id = 4;
  if (has_lead_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->lead_id(), target);
  }
  
  // optional string lead_name = 5;
  if (has_lead_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lead_name().data(), this->lead_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->lead_name(), target);
  }
  
  // optional int64 teamer_id = 6;
  if (has_teamer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->teamer_id(), target);
  }
  
  // optional string teamer_name = 7;
  if (has_teamer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->teamer_name().data(), this->teamer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->teamer_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101421::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 wedding_type = 1;
    if (has_wedding_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wedding_type());
    }
    
    // optional int32 is_ok = 2;
    if (has_is_ok()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_ok());
    }
    
    // optional .ProtoThreeObj other_info = 3;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
    // optional int64 lead_id = 4;
    if (has_lead_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lead_id());
    }
    
    // optional string lead_name = 5;
    if (has_lead_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lead_name());
    }
    
    // optional int64 teamer_id = 6;
    if (has_teamer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->teamer_id());
    }
    
    // optional string teamer_name = 7;
    if (has_teamer_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->teamer_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101421::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101421* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101421*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101421::MergeFrom(const Proto10101421& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wedding_type()) {
      set_wedding_type(from.wedding_type());
    }
    if (from.has_is_ok()) {
      set_is_ok(from.is_ok());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
    if (from.has_lead_id()) {
      set_lead_id(from.lead_id());
    }
    if (from.has_lead_name()) {
      set_lead_name(from.lead_name());
    }
    if (from.has_teamer_id()) {
      set_teamer_id(from.teamer_id());
    }
    if (from.has_teamer_name()) {
      set_teamer_name(from.teamer_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101421::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101421::CopyFrom(const Proto10101421& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101421::IsInitialized() const {
  
  return true;
}

void Proto10101421::Swap(Proto10101421* other) {
  if (other != this) {
    std::swap(wedding_type_, other->wedding_type_);
    std::swap(is_ok_, other->is_ok_);
    std::swap(other_info_, other->other_info_);
    std::swap(lead_id_, other->lead_id_);
    std::swap(lead_name_, other->lead_name_);
    std::swap(teamer_id_, other->teamer_id_);
    std::swap(teamer_name_, other->teamer_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101421::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101421_descriptor_;
  metadata.reflection = Proto10101421_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101421::kWeddingTypeFieldNumber;
const int Proto50101421::kIsOkFieldNumber;
const int Proto50101421::kOtherInfoFieldNumber;
const int Proto50101421::kLeadIdFieldNumber;
const int Proto50101421::kLeadNameFieldNumber;
const int Proto50101421::kTeamerIdFieldNumber;
const int Proto50101421::kTeamerNameFieldNumber;
#endif  // !_MSC_VER

Proto50101421::Proto50101421()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101421::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto50101421::Proto50101421(const Proto50101421& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101421::SharedCtor() {
  _cached_size_ = 0;
  wedding_type_ = 0;
  is_ok_ = 0;
  other_info_ = NULL;
  lead_id_ = GOOGLE_LONGLONG(0);
  lead_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  teamer_id_ = GOOGLE_LONGLONG(0);
  teamer_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101421::~Proto50101421() {
  SharedDtor();
}

void Proto50101421::SharedDtor() {
  if (lead_name_ != &::google::protobuf::internal::kEmptyString) {
    delete lead_name_;
  }
  if (teamer_name_ != &::google::protobuf::internal::kEmptyString) {
    delete teamer_name_;
  }
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto50101421::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101421::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101421_descriptor_;
}

const Proto50101421& Proto50101421::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto50101421* Proto50101421::default_instance_ = NULL;

Proto50101421* Proto50101421::New() const {
  return new Proto50101421;
}

void Proto50101421::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    wedding_type_ = 0;
    is_ok_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
    lead_id_ = GOOGLE_LONGLONG(0);
    if (has_lead_name()) {
      if (lead_name_ != &::google::protobuf::internal::kEmptyString) {
        lead_name_->clear();
      }
    }
    teamer_id_ = GOOGLE_LONGLONG(0);
    if (has_teamer_name()) {
      if (teamer_name_ != &::google::protobuf::internal::kEmptyString) {
        teamer_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101421::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 wedding_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wedding_type_)));
          set_has_wedding_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_ok;
        break;
      }
      
      // optional int32 is_ok = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_ok:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_ok_)));
          set_has_is_ok();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_lead_id;
        break;
      }
      
      // optional int64 lead_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lead_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lead_id_)));
          set_has_lead_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_lead_name;
        break;
      }
      
      // optional string lead_name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lead_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lead_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->lead_name().data(), this->lead_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_teamer_id;
        break;
      }
      
      // optional int64 teamer_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_teamer_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &teamer_id_)));
          set_has_teamer_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_teamer_name;
        break;
      }
      
      // optional string teamer_name = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_teamer_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_teamer_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->teamer_name().data(), this->teamer_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101421::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 wedding_type = 1;
  if (has_wedding_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wedding_type(), output);
  }
  
  // optional int32 is_ok = 2;
  if (has_is_ok()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_ok(), output);
  }
  
  // optional .ProtoThreeObj other_info = 3;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->other_info(), output);
  }
  
  // optional int64 lead_id = 4;
  if (has_lead_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->lead_id(), output);
  }
  
  // optional string lead_name = 5;
  if (has_lead_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lead_name().data(), this->lead_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->lead_name(), output);
  }
  
  // optional int64 teamer_id = 6;
  if (has_teamer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->teamer_id(), output);
  }
  
  // optional string teamer_name = 7;
  if (has_teamer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->teamer_name().data(), this->teamer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->teamer_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101421::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 wedding_type = 1;
  if (has_wedding_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wedding_type(), target);
  }
  
  // optional int32 is_ok = 2;
  if (has_is_ok()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_ok(), target);
  }
  
  // optional .ProtoThreeObj other_info = 3;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->other_info(), target);
  }
  
  // optional int64 lead_id = 4;
  if (has_lead_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->lead_id(), target);
  }
  
  // optional string lead_name = 5;
  if (has_lead_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lead_name().data(), this->lead_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->lead_name(), target);
  }
  
  // optional int64 teamer_id = 6;
  if (has_teamer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->teamer_id(), target);
  }
  
  // optional string teamer_name = 7;
  if (has_teamer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->teamer_name().data(), this->teamer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->teamer_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101421::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 wedding_type = 1;
    if (has_wedding_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wedding_type());
    }
    
    // optional int32 is_ok = 2;
    if (has_is_ok()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_ok());
    }
    
    // optional .ProtoThreeObj other_info = 3;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
    // optional int64 lead_id = 4;
    if (has_lead_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lead_id());
    }
    
    // optional string lead_name = 5;
    if (has_lead_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lead_name());
    }
    
    // optional int64 teamer_id = 6;
    if (has_teamer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->teamer_id());
    }
    
    // optional string teamer_name = 7;
    if (has_teamer_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->teamer_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101421::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101421* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101421*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101421::MergeFrom(const Proto50101421& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wedding_type()) {
      set_wedding_type(from.wedding_type());
    }
    if (from.has_is_ok()) {
      set_is_ok(from.is_ok());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
    if (from.has_lead_id()) {
      set_lead_id(from.lead_id());
    }
    if (from.has_lead_name()) {
      set_lead_name(from.lead_name());
    }
    if (from.has_teamer_id()) {
      set_teamer_id(from.teamer_id());
    }
    if (from.has_teamer_name()) {
      set_teamer_name(from.teamer_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101421::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101421::CopyFrom(const Proto50101421& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101421::IsInitialized() const {
  
  return true;
}

void Proto50101421::Swap(Proto50101421* other) {
  if (other != this) {
    std::swap(wedding_type_, other->wedding_type_);
    std::swap(is_ok_, other->is_ok_);
    std::swap(other_info_, other->other_info_);
    std::swap(lead_id_, other->lead_id_);
    std::swap(lead_name_, other->lead_name_);
    std::swap(teamer_id_, other->teamer_id_);
    std::swap(teamer_name_, other->teamer_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101421::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101421_descriptor_;
  metadata.reflection = Proto50101421_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101420::kWeddingTypeFieldNumber;
const int Proto50101420::kIsOkFieldNumber;
const int Proto50101420::kOtherInfoFieldNumber;
const int Proto50101420::kLeadIdFieldNumber;
const int Proto50101420::kLeadNameFieldNumber;
const int Proto50101420::kTeamerIdFieldNumber;
const int Proto50101420::kTeamerNameFieldNumber;
#endif  // !_MSC_VER

Proto50101420::Proto50101420()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101420::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto50101420::Proto50101420(const Proto50101420& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101420::SharedCtor() {
  _cached_size_ = 0;
  wedding_type_ = 0;
  is_ok_ = 0;
  other_info_ = NULL;
  lead_id_ = GOOGLE_LONGLONG(0);
  lead_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  teamer_id_ = GOOGLE_LONGLONG(0);
  teamer_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101420::~Proto50101420() {
  SharedDtor();
}

void Proto50101420::SharedDtor() {
  if (lead_name_ != &::google::protobuf::internal::kEmptyString) {
    delete lead_name_;
  }
  if (teamer_name_ != &::google::protobuf::internal::kEmptyString) {
    delete teamer_name_;
  }
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto50101420::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101420::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101420_descriptor_;
}

const Proto50101420& Proto50101420::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto50101420* Proto50101420::default_instance_ = NULL;

Proto50101420* Proto50101420::New() const {
  return new Proto50101420;
}

void Proto50101420::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    wedding_type_ = 0;
    is_ok_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
    lead_id_ = GOOGLE_LONGLONG(0);
    if (has_lead_name()) {
      if (lead_name_ != &::google::protobuf::internal::kEmptyString) {
        lead_name_->clear();
      }
    }
    teamer_id_ = GOOGLE_LONGLONG(0);
    if (has_teamer_name()) {
      if (teamer_name_ != &::google::protobuf::internal::kEmptyString) {
        teamer_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101420::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 wedding_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wedding_type_)));
          set_has_wedding_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_ok;
        break;
      }
      
      // optional int32 is_ok = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_ok:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_ok_)));
          set_has_is_ok();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_lead_id;
        break;
      }
      
      // optional int64 lead_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lead_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lead_id_)));
          set_has_lead_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_lead_name;
        break;
      }
      
      // optional string lead_name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lead_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lead_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->lead_name().data(), this->lead_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_teamer_id;
        break;
      }
      
      // optional int64 teamer_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_teamer_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &teamer_id_)));
          set_has_teamer_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_teamer_name;
        break;
      }
      
      // optional string teamer_name = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_teamer_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_teamer_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->teamer_name().data(), this->teamer_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101420::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 wedding_type = 1;
  if (has_wedding_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wedding_type(), output);
  }
  
  // optional int32 is_ok = 2;
  if (has_is_ok()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_ok(), output);
  }
  
  // optional .ProtoThreeObj other_info = 3;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->other_info(), output);
  }
  
  // optional int64 lead_id = 4;
  if (has_lead_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->lead_id(), output);
  }
  
  // optional string lead_name = 5;
  if (has_lead_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lead_name().data(), this->lead_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->lead_name(), output);
  }
  
  // optional int64 teamer_id = 6;
  if (has_teamer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->teamer_id(), output);
  }
  
  // optional string teamer_name = 7;
  if (has_teamer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->teamer_name().data(), this->teamer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->teamer_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101420::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 wedding_type = 1;
  if (has_wedding_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wedding_type(), target);
  }
  
  // optional int32 is_ok = 2;
  if (has_is_ok()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_ok(), target);
  }
  
  // optional .ProtoThreeObj other_info = 3;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->other_info(), target);
  }
  
  // optional int64 lead_id = 4;
  if (has_lead_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->lead_id(), target);
  }
  
  // optional string lead_name = 5;
  if (has_lead_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lead_name().data(), this->lead_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->lead_name(), target);
  }
  
  // optional int64 teamer_id = 6;
  if (has_teamer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->teamer_id(), target);
  }
  
  // optional string teamer_name = 7;
  if (has_teamer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->teamer_name().data(), this->teamer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->teamer_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101420::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 wedding_type = 1;
    if (has_wedding_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wedding_type());
    }
    
    // optional int32 is_ok = 2;
    if (has_is_ok()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_ok());
    }
    
    // optional .ProtoThreeObj other_info = 3;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
    // optional int64 lead_id = 4;
    if (has_lead_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lead_id());
    }
    
    // optional string lead_name = 5;
    if (has_lead_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lead_name());
    }
    
    // optional int64 teamer_id = 6;
    if (has_teamer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->teamer_id());
    }
    
    // optional string teamer_name = 7;
    if (has_teamer_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->teamer_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101420::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101420* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101420*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101420::MergeFrom(const Proto50101420& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wedding_type()) {
      set_wedding_type(from.wedding_type());
    }
    if (from.has_is_ok()) {
      set_is_ok(from.is_ok());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
    if (from.has_lead_id()) {
      set_lead_id(from.lead_id());
    }
    if (from.has_lead_name()) {
      set_lead_name(from.lead_name());
    }
    if (from.has_teamer_id()) {
      set_teamer_id(from.teamer_id());
    }
    if (from.has_teamer_name()) {
      set_teamer_name(from.teamer_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101420::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101420::CopyFrom(const Proto50101420& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101420::IsInitialized() const {
  
  return true;
}

void Proto50101420::Swap(Proto50101420* other) {
  if (other != this) {
    std::swap(wedding_type_, other->wedding_type_);
    std::swap(is_ok_, other->is_ok_);
    std::swap(other_info_, other->other_info_);
    std::swap(lead_id_, other->lead_id_);
    std::swap(lead_name_, other->lead_name_);
    std::swap(teamer_id_, other->teamer_id_);
    std::swap(teamer_name_, other->teamer_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101420::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101420_descriptor_;
  metadata.reflection = Proto50101420_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100410::kFbIdFieldNumber;
const int Proto80100410::kTeamStateFieldNumber;
#endif  // !_MSC_VER

Proto80100410::Proto80100410()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100410::InitAsDefaultInstance() {
}

Proto80100410::Proto80100410(const Proto80100410& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100410::SharedCtor() {
  _cached_size_ = 0;
  fb_id_ = 0;
  team_state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100410::~Proto80100410() {
  SharedDtor();
}

void Proto80100410::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80100410::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100410::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100410_descriptor_;
}

const Proto80100410& Proto80100410::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto80100410* Proto80100410::default_instance_ = NULL;

Proto80100410* Proto80100410::New() const {
  return new Proto80100410;
}

void Proto80100410::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fb_id_ = 0;
    team_state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100410::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fb_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fb_id_)));
          set_has_fb_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_team_state;
        break;
      }
      
      // optional int32 team_state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_team_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_state_)));
          set_has_team_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100410::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fb_id = 1;
  if (has_fb_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fb_id(), output);
  }
  
  // optional int32 team_state = 2;
  if (has_team_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->team_state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100410::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fb_id = 1;
  if (has_fb_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fb_id(), target);
  }
  
  // optional int32 team_state = 2;
  if (has_team_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->team_state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100410::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fb_id = 1;
    if (has_fb_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fb_id());
    }
    
    // optional int32 team_state = 2;
    if (has_team_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team_state());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100410::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100410* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100410*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100410::MergeFrom(const Proto80100410& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fb_id()) {
      set_fb_id(from.fb_id());
    }
    if (from.has_team_state()) {
      set_team_state(from.team_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100410::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100410::CopyFrom(const Proto80100410& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100410::IsInitialized() const {
  
  return true;
}

void Proto80100410::Swap(Proto80100410* other) {
  if (other != this) {
    std::swap(fb_id_, other->fb_id_);
    std::swap(team_state_, other->team_state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100410::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100410_descriptor_;
  metadata.reflection = Proto80100410_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400941::kSelectIdFieldNumber;
#endif  // !_MSC_VER

Proto10400941::Proto10400941()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400941::InitAsDefaultInstance() {
}

Proto10400941::Proto10400941(const Proto10400941& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400941::SharedCtor() {
  _cached_size_ = 0;
  select_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400941::~Proto10400941() {
  SharedDtor();
}

void Proto10400941::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400941::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400941::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400941_descriptor_;
}

const Proto10400941& Proto10400941::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10400941* Proto10400941::default_instance_ = NULL;

Proto10400941* Proto10400941::New() const {
  return new Proto10400941;
}

void Proto10400941::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    select_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400941::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 select_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &select_id_)));
          set_has_select_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400941::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 select_id = 1;
  if (has_select_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->select_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400941::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 select_id = 1;
  if (has_select_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->select_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400941::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 select_id = 1;
    if (has_select_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->select_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400941::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400941* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400941*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400941::MergeFrom(const Proto10400941& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_select_id()) {
      set_select_id(from.select_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400941::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400941::CopyFrom(const Proto10400941& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400941::IsInitialized() const {
  
  return true;
}

void Proto10400941::Swap(Proto10400941* other) {
  if (other != this) {
    std::swap(select_id_, other->select_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400941::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400941_descriptor_;
  metadata.reflection = Proto10400941_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101413::kTypeFieldNumber;
const int Proto10101413::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto10101413::Proto10101413()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101413::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto10101413::Proto10101413(const Proto10101413& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101413::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101413::~Proto10101413() {
  SharedDtor();
}

void Proto10101413::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto10101413::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101413::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101413_descriptor_;
}

const Proto10101413& Proto10101413::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10101413* Proto10101413::default_instance_ = NULL;

Proto10101413* Proto10101413::New() const {
  return new Proto10101413;
}

void Proto10101413::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101413::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101413::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101413::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101413::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101413::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101413* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101413*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101413::MergeFrom(const Proto10101413& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101413::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101413::CopyFrom(const Proto10101413& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101413::IsInitialized() const {
  
  return true;
}

void Proto10101413::Swap(Proto10101413* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101413::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101413_descriptor_;
  metadata.reflection = Proto10101413_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101413::kTypeFieldNumber;
const int Proto50101413::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto50101413::Proto50101413()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101413::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto50101413::Proto50101413(const Proto50101413& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101413::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101413::~Proto50101413() {
  SharedDtor();
}

void Proto50101413::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto50101413::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101413::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101413_descriptor_;
}

const Proto50101413& Proto50101413::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto50101413* Proto50101413::default_instance_ = NULL;

Proto50101413* Proto50101413::New() const {
  return new Proto50101413;
}

void Proto50101413::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101413::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101413::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101413::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101413::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101413::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101413* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101413*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101413::MergeFrom(const Proto50101413& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101413::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101413::CopyFrom(const Proto50101413& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101413::IsInitialized() const {
  
  return true;
}

void Proto50101413::Swap(Proto50101413* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101413::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101413_descriptor_;
  metadata.reflection = Proto50101413_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101414::kTypeFieldNumber;
const int Proto50101414::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto50101414::Proto50101414()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101414::InitAsDefaultInstance() {
}

Proto50101414::Proto50101414(const Proto50101414& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101414::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  other_info_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101414::~Proto50101414() {
  SharedDtor();
}

void Proto50101414::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50101414::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101414::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101414_descriptor_;
}

const Proto50101414& Proto50101414::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto50101414* Proto50101414::default_instance_ = NULL;

Proto50101414* Proto50101414::New() const {
  return new Proto50101414;
}

void Proto50101414::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    other_info_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101414::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_other_info;
        break;
      }
      
      // optional int32 other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_other_info:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &other_info_)));
          set_has_other_info();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101414::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101414::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101414::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101414::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101414* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101414*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101414::MergeFrom(const Proto50101414& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_other_info()) {
      set_other_info(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101414::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101414::CopyFrom(const Proto50101414& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101414::IsInitialized() const {
  
  return true;
}

void Proto50101414::Swap(Proto50101414* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101414::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101414_descriptor_;
  metadata.reflection = Proto50101414_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101414::kTypeFieldNumber;
const int Proto10101414::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto10101414::Proto10101414()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101414::InitAsDefaultInstance() {
}

Proto10101414::Proto10101414(const Proto10101414& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101414::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  other_info_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101414::~Proto10101414() {
  SharedDtor();
}

void Proto10101414::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101414::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101414::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101414_descriptor_;
}

const Proto10101414& Proto10101414::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10101414* Proto10101414::default_instance_ = NULL;

Proto10101414* Proto10101414::New() const {
  return new Proto10101414;
}

void Proto10101414::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    other_info_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101414::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_other_info;
        break;
      }
      
      // optional int32 other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_other_info:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &other_info_)));
          set_has_other_info();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101414::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101414::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101414::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101414::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101414* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101414*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101414::MergeFrom(const Proto10101414& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_other_info()) {
      set_other_info(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101414::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101414::CopyFrom(const Proto10101414& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101414::IsInitialized() const {
  
  return true;
}

void Proto10101414::Swap(Proto10101414* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101414::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101414_descriptor_;
  metadata.reflection = Proto10101414_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102009::kPageFieldNumber;
#endif  // !_MSC_VER

Proto10102009::Proto10102009()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102009::InitAsDefaultInstance() {
}

Proto10102009::Proto10102009(const Proto10102009& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102009::SharedCtor() {
  _cached_size_ = 0;
  page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102009::~Proto10102009() {
  SharedDtor();
}

void Proto10102009::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102009::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102009::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102009_descriptor_;
}

const Proto10102009& Proto10102009::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10102009* Proto10102009::default_instance_ = NULL;

Proto10102009* Proto10102009::New() const {
  return new Proto10102009;
}

void Proto10102009::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102009::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
          set_has_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102009::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page = 1;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102009::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page = 1;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102009::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page = 1;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102009::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102009* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102009*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102009::MergeFrom(const Proto10102009& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page()) {
      set_page(from.page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102009::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102009::CopyFrom(const Proto10102009& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102009::IsInitialized() const {
  
  return true;
}

void Proto10102009::Swap(Proto10102009* other) {
  if (other != this) {
    std::swap(page_, other->page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102009::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102009_descriptor_;
  metadata.reflection = Proto10102009_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102009::kRankInfoFieldNumber;
const int Proto50102009::kMyRankFieldNumber;
const int Proto50102009::kLabelGetFieldNumber;
const int Proto50102009::kRewardGetFieldNumber;
const int Proto50102009::kCurPageFieldNumber;
const int Proto50102009::kTotalPageFieldNumber;
const int Proto50102009::kLeftTickFieldNumber;
const int Proto50102009::kCouplesFieldNumber;
const int Proto50102009::kLabelRewardFieldNumber;
const int Proto50102009::kRankRewardFieldNumber;
#endif  // !_MSC_VER

Proto50102009::Proto50102009()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102009::InitAsDefaultInstance() {
  my_rank_ = const_cast< ::ProtoWeddingRank*>(&::ProtoWeddingRank::default_instance());
}

Proto50102009::Proto50102009(const Proto50102009& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102009::SharedCtor() {
  _cached_size_ = 0;
  my_rank_ = NULL;
  label_get_ = 0;
  reward_get_ = 0;
  cur_page_ = 0;
  total_page_ = 0;
  left_tick_ = 0;
  couples_ = 0;
  label_reward_ = 0;
  rank_reward_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102009::~Proto50102009() {
  SharedDtor();
}

void Proto50102009::SharedDtor() {
  if (this != default_instance_) {
    delete my_rank_;
  }
}

void Proto50102009::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102009::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102009_descriptor_;
}

const Proto50102009& Proto50102009::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto50102009* Proto50102009::default_instance_ = NULL;

Proto50102009* Proto50102009::New() const {
  return new Proto50102009;
}

void Proto50102009::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_my_rank()) {
      if (my_rank_ != NULL) my_rank_->::ProtoWeddingRank::Clear();
    }
    label_get_ = 0;
    reward_get_ = 0;
    cur_page_ = 0;
    total_page_ = 0;
    left_tick_ = 0;
    couples_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    label_reward_ = 0;
    rank_reward_ = 0;
  }
  rank_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102009::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoWeddingRank rank_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rank_info;
        if (input->ExpectTag(18)) goto parse_my_rank;
        break;
      }
      
      // optional .ProtoWeddingRank my_rank = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_my_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_my_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_label_get;
        break;
      }
      
      // optional int32 label_get = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_label_get:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_get_)));
          set_has_label_get();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_reward_get;
        break;
      }
      
      // optional int32 reward_get = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_get:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_get_)));
          set_has_reward_get();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_cur_page;
        break;
      }
      
      // optional int32 cur_page = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_page_)));
          set_has_cur_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_left_tick;
        break;
      }
      
      // optional int32 left_tick = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_tick_)));
          set_has_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_couples;
        break;
      }
      
      // optional int32 couples = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_couples:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &couples_)));
          set_has_couples();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_label_reward;
        break;
      }
      
      // optional int32 label_reward = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_label_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_reward_)));
          set_has_label_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_rank_reward;
        break;
      }
      
      // optional int32 rank_reward = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_reward_)));
          set_has_rank_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102009::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoWeddingRank rank_info = 1;
  for (int i = 0; i < this->rank_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rank_info(i), output);
  }
  
  // optional .ProtoWeddingRank my_rank = 2;
  if (has_my_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->my_rank(), output);
  }
  
  // optional int32 label_get = 3;
  if (has_label_get()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->label_get(), output);
  }
  
  // optional int32 reward_get = 4;
  if (has_reward_get()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->reward_get(), output);
  }
  
  // optional int32 cur_page = 5;
  if (has_cur_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cur_page(), output);
  }
  
  // optional int32 total_page = 6;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->total_page(), output);
  }
  
  // optional int32 left_tick = 7;
  if (has_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->left_tick(), output);
  }
  
  // optional int32 couples = 8;
  if (has_couples()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->couples(), output);
  }
  
  // optional int32 label_reward = 9;
  if (has_label_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->label_reward(), output);
  }
  
  // optional int32 rank_reward = 10;
  if (has_rank_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->rank_reward(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102009::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoWeddingRank rank_info = 1;
  for (int i = 0; i < this->rank_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rank_info(i), target);
  }
  
  // optional .ProtoWeddingRank my_rank = 2;
  if (has_my_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->my_rank(), target);
  }
  
  // optional int32 label_get = 3;
  if (has_label_get()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->label_get(), target);
  }
  
  // optional int32 reward_get = 4;
  if (has_reward_get()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->reward_get(), target);
  }
  
  // optional int32 cur_page = 5;
  if (has_cur_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cur_page(), target);
  }
  
  // optional int32 total_page = 6;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->total_page(), target);
  }
  
  // optional int32 left_tick = 7;
  if (has_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->left_tick(), target);
  }
  
  // optional int32 couples = 8;
  if (has_couples()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->couples(), target);
  }
  
  // optional int32 label_reward = 9;
  if (has_label_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->label_reward(), target);
  }
  
  // optional int32 rank_reward = 10;
  if (has_rank_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->rank_reward(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102009::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .ProtoWeddingRank my_rank = 2;
    if (has_my_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->my_rank());
    }
    
    // optional int32 label_get = 3;
    if (has_label_get()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_get());
    }
    
    // optional int32 reward_get = 4;
    if (has_reward_get()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_get());
    }
    
    // optional int32 cur_page = 5;
    if (has_cur_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_page());
    }
    
    // optional int32 total_page = 6;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
    // optional int32 left_tick = 7;
    if (has_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_tick());
    }
    
    // optional int32 couples = 8;
    if (has_couples()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->couples());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 label_reward = 9;
    if (has_label_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_reward());
    }
    
    // optional int32 rank_reward = 10;
    if (has_rank_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_reward());
    }
    
  }
  // repeated .ProtoWeddingRank rank_info = 1;
  total_size += 1 * this->rank_info_size();
  for (int i = 0; i < this->rank_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102009::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102009* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102009*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102009::MergeFrom(const Proto50102009& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_info_.MergeFrom(from.rank_info_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_my_rank()) {
      mutable_my_rank()->::ProtoWeddingRank::MergeFrom(from.my_rank());
    }
    if (from.has_label_get()) {
      set_label_get(from.label_get());
    }
    if (from.has_reward_get()) {
      set_reward_get(from.reward_get());
    }
    if (from.has_cur_page()) {
      set_cur_page(from.cur_page());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
    if (from.has_left_tick()) {
      set_left_tick(from.left_tick());
    }
    if (from.has_couples()) {
      set_couples(from.couples());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_label_reward()) {
      set_label_reward(from.label_reward());
    }
    if (from.has_rank_reward()) {
      set_rank_reward(from.rank_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102009::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102009::CopyFrom(const Proto50102009& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102009::IsInitialized() const {
  
  return true;
}

void Proto50102009::Swap(Proto50102009* other) {
  if (other != this) {
    rank_info_.Swap(&other->rank_info_);
    std::swap(my_rank_, other->my_rank_);
    std::swap(label_get_, other->label_get_);
    std::swap(reward_get_, other->reward_get_);
    std::swap(cur_page_, other->cur_page_);
    std::swap(total_page_, other->total_page_);
    std::swap(left_tick_, other->left_tick_);
    std::swap(couples_, other->couples_);
    std::swap(label_reward_, other->label_reward_);
    std::swap(rank_reward_, other->rank_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102009::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102009_descriptor_;
  metadata.reflection = Proto50102009_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102010::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto10102010::Proto10102010()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102010::InitAsDefaultInstance() {
}

Proto10102010::Proto10102010(const Proto10102010& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102010::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102010::~Proto10102010() {
  SharedDtor();
}

void Proto10102010::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102010::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102010::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102010_descriptor_;
}

const Proto10102010& Proto10102010::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10102010* Proto10102010::default_instance_ = NULL;

Proto10102010* Proto10102010::New() const {
  return new Proto10102010;
}

void Proto10102010::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102010::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102010::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102010::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102010::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102010::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102010* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102010*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102010::MergeFrom(const Proto10102010& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102010::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102010::CopyFrom(const Proto10102010& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102010::IsInitialized() const {
  
  return true;
}

void Proto10102010::Swap(Proto10102010* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102010::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102010_descriptor_;
  metadata.reflection = Proto10102010_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102010::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto50102010::Proto50102010()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102010::InitAsDefaultInstance() {
}

Proto50102010::Proto50102010(const Proto50102010& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102010::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102010::~Proto50102010() {
  SharedDtor();
}

void Proto50102010::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102010::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102010::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102010_descriptor_;
}

const Proto50102010& Proto50102010::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto50102010* Proto50102010::default_instance_ = NULL;

Proto50102010* Proto50102010::New() const {
  return new Proto50102010;
}

void Proto50102010::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102010::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102010::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102010::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102010::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102010::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102010* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102010*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102010::MergeFrom(const Proto50102010& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102010::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102010::CopyFrom(const Proto50102010& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102010::IsInitialized() const {
  
  return true;
}

void Proto50102010::Swap(Proto50102010* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102010::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102010_descriptor_;
  metadata.reflection = Proto50102010_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101415::kLabelListFieldNumber;
const int Proto50101415::kRingLevelFieldNumber;
const int Proto50101415::kSysLevelFieldNumber;
const int Proto50101415::kTreeLevelFieldNumber;
const int Proto50101415::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto50101415::Proto50101415()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101415::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto50101415::Proto50101415(const Proto50101415& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101415::SharedCtor() {
  _cached_size_ = 0;
  ring_level_ = 0;
  sys_level_ = 0;
  tree_level_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101415::~Proto50101415() {
  SharedDtor();
}

void Proto50101415::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto50101415::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101415::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101415_descriptor_;
}

const Proto50101415& Proto50101415::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto50101415* Proto50101415::default_instance_ = NULL;

Proto50101415* Proto50101415::New() const {
  return new Proto50101415;
}

void Proto50101415::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    ring_level_ = 0;
    sys_level_ = 0;
    tree_level_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  label_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101415::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoWedLabel label_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_label_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_label_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_label_list;
        if (input->ExpectTag(16)) goto parse_ring_level;
        break;
      }
      
      // optional int32 ring_level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ring_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ring_level_)));
          set_has_ring_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_sys_level;
        break;
      }
      
      // optional int32 sys_level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sys_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sys_level_)));
          set_has_sys_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_tree_level;
        break;
      }
      
      // optional int32 tree_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tree_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tree_level_)));
          set_has_tree_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101415::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoWedLabel label_list = 1;
  for (int i = 0; i < this->label_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->label_list(i), output);
  }
  
  // optional int32 ring_level = 2;
  if (has_ring_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ring_level(), output);
  }
  
  // optional int32 sys_level = 3;
  if (has_sys_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sys_level(), output);
  }
  
  // optional int32 tree_level = 4;
  if (has_tree_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->tree_level(), output);
  }
  
  // optional .ProtoThreeObj other_info = 5;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101415::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoWedLabel label_list = 1;
  for (int i = 0; i < this->label_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->label_list(i), target);
  }
  
  // optional int32 ring_level = 2;
  if (has_ring_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ring_level(), target);
  }
  
  // optional int32 sys_level = 3;
  if (has_sys_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sys_level(), target);
  }
  
  // optional int32 tree_level = 4;
  if (has_tree_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->tree_level(), target);
  }
  
  // optional .ProtoThreeObj other_info = 5;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101415::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 ring_level = 2;
    if (has_ring_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ring_level());
    }
    
    // optional int32 sys_level = 3;
    if (has_sys_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sys_level());
    }
    
    // optional int32 tree_level = 4;
    if (has_tree_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tree_level());
    }
    
    // optional .ProtoThreeObj other_info = 5;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  // repeated .ProtoWedLabel label_list = 1;
  total_size += 1 * this->label_list_size();
  for (int i = 0; i < this->label_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->label_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101415::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101415* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101415*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101415::MergeFrom(const Proto50101415& from) {
  GOOGLE_CHECK_NE(&from, this);
  label_list_.MergeFrom(from.label_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_ring_level()) {
      set_ring_level(from.ring_level());
    }
    if (from.has_sys_level()) {
      set_sys_level(from.sys_level());
    }
    if (from.has_tree_level()) {
      set_tree_level(from.tree_level());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101415::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101415::CopyFrom(const Proto50101415& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101415::IsInitialized() const {
  
  return true;
}

void Proto50101415::Swap(Proto50101415* other) {
  if (other != this) {
    label_list_.Swap(&other->label_list_);
    std::swap(ring_level_, other->ring_level_);
    std::swap(sys_level_, other->sys_level_);
    std::swap(tree_level_, other->tree_level_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101415::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101415_descriptor_;
  metadata.reflection = Proto50101415_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101416::kIdFieldNumber;
const int Proto10101416::kLabelIdFieldNumber;
#endif  // !_MSC_VER

Proto10101416::Proto10101416()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101416::InitAsDefaultInstance() {
}

Proto10101416::Proto10101416(const Proto10101416& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101416::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  label_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101416::~Proto10101416() {
  SharedDtor();
}

void Proto10101416::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101416::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101416::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101416_descriptor_;
}

const Proto10101416& Proto10101416::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10101416* Proto10101416::default_instance_ = NULL;

Proto10101416* Proto10101416::New() const {
  return new Proto10101416;
}

void Proto10101416::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    label_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101416::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_label_id;
        break;
      }
      
      // optional int32 label_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_label_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_id_)));
          set_has_label_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101416::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional int32 label_id = 2;
  if (has_label_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->label_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101416::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional int32 label_id = 2;
  if (has_label_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->label_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101416::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional int32 label_id = 2;
    if (has_label_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101416::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101416* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101416*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101416::MergeFrom(const Proto10101416& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_label_id()) {
      set_label_id(from.label_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101416::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101416::CopyFrom(const Proto10101416& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101416::IsInitialized() const {
  
  return true;
}

void Proto10101416::Swap(Proto10101416* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(label_id_, other->label_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101416::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101416_descriptor_;
  metadata.reflection = Proto10101416_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101416::kIdFieldNumber;
const int Proto50101416::kLabelIdFieldNumber;
const int Proto50101416::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto50101416::Proto50101416()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101416::InitAsDefaultInstance() {
}

Proto50101416::Proto50101416(const Proto50101416& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101416::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  label_id_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101416::~Proto50101416() {
  SharedDtor();
}

void Proto50101416::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50101416::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101416::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101416_descriptor_;
}

const Proto50101416& Proto50101416::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto50101416* Proto50101416::default_instance_ = NULL;

Proto50101416* Proto50101416::New() const {
  return new Proto50101416;
}

void Proto50101416::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    label_id_ = 0;
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101416::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_label_id;
        break;
      }
      
      // optional int32 label_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_label_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_id_)));
          set_has_label_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_status;
        break;
      }
      
      // optional int32 status = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101416::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional int32 label_id = 2;
  if (has_label_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->label_id(), output);
  }
  
  // optional int32 status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101416::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional int32 label_id = 2;
  if (has_label_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->label_id(), target);
  }
  
  // optional int32 status = 3;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101416::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional int32 label_id = 2;
    if (has_label_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_id());
    }
    
    // optional int32 status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101416::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101416* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101416*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101416::MergeFrom(const Proto50101416& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_label_id()) {
      set_label_id(from.label_id());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101416::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101416::CopyFrom(const Proto50101416& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101416::IsInitialized() const {
  
  return true;
}

void Proto50101416::Swap(Proto50101416* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(label_id_, other->label_id_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101416::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101416_descriptor_;
  metadata.reflection = Proto50101416_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102015::kActivitySetFieldNumber;
#endif  // !_MSC_VER

Proto50102015::Proto50102015()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102015::InitAsDefaultInstance() {
}

Proto50102015::Proto50102015(const Proto50102015& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102015::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102015::~Proto50102015() {
  SharedDtor();
}

void Proto50102015::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102015::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102015::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102015_descriptor_;
}

const Proto50102015& Proto50102015::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto50102015* Proto50102015::default_instance_ = NULL;

Proto50102015* Proto50102015::New() const {
  return new Proto50102015;
}

void Proto50102015::Clear() {
  activity_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102015::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 activity_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_activity_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_activity_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_activity_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102015::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 activity_set = 1;
  for (int i = 0; i < this->activity_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->activity_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102015::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 activity_set = 1;
  for (int i = 0; i < this->activity_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->activity_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102015::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 activity_set = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->activity_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->activity_set(i));
    }
    total_size += 1 * this->activity_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102015::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102015* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102015*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102015::MergeFrom(const Proto50102015& from) {
  GOOGLE_CHECK_NE(&from, this);
  activity_set_.MergeFrom(from.activity_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102015::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102015::CopyFrom(const Proto50102015& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102015::IsInitialized() const {
  
  return true;
}

void Proto50102015::Swap(Proto50102015* other) {
  if (other != this) {
    activity_set_.Swap(&other->activity_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102015::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102015_descriptor_;
  metadata.reflection = Proto50102015_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102021::kActivityIdFieldNumber;
const int Proto50102021::kLeftTickFieldNumber;
const int Proto50102021::kPersonRecordFieldNumber;
const int Proto50102021::kServerRecordFieldNumber;
const int Proto50102021::kSlotInfoFieldNumber;
const int Proto50102021::kNowSlotIdFieldNumber;
const int Proto50102021::kActFinishTimeFieldNumber;
const int Proto50102021::kLeftFreeTimesFieldNumber;
const int Proto50102021::kFreeTimesFieldNumber;
const int Proto50102021::kOtherInfoFieldNumber;
const int Proto50102021::kBlessFieldNumber;
const int Proto50102021::kMaxBlessFieldNumber;
const int Proto50102021::kOneCostFieldNumber;
const int Proto50102021::kTotalCostFieldNumber;
#endif  // !_MSC_VER

Proto50102021::Proto50102021()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102021::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto50102021::Proto50102021(const Proto50102021& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102021::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  left_tick_ = 0;
  now_slot_id_ = 0;
  act_finish_time_ = 0;
  left_free_times_ = 0;
  free_times_ = 0;
  other_info_ = NULL;
  bless_ = 0;
  max_bless_ = 0;
  one_cost_ = 0;
  total_cost_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102021::~Proto50102021() {
  SharedDtor();
}

void Proto50102021::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto50102021::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102021::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102021_descriptor_;
}

const Proto50102021& Proto50102021::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto50102021* Proto50102021::default_instance_ = NULL;

Proto50102021* Proto50102021::New() const {
  return new Proto50102021;
}

void Proto50102021::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    left_tick_ = 0;
    now_slot_id_ = 0;
    act_finish_time_ = 0;
    left_free_times_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    free_times_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
    bless_ = 0;
    max_bless_ = 0;
    one_cost_ = 0;
    total_cost_ = 0;
  }
  person_record_.Clear();
  server_record_.Clear();
  slot_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102021::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_left_tick;
        break;
      }
      
      // optional int32 left_tick = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_tick_)));
          set_has_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_person_record;
        break;
      }
      
      // repeated .ProtoPersonRecord person_record = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_person_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_person_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_person_record;
        if (input->ExpectTag(34)) goto parse_server_record;
        break;
      }
      
      // repeated .ProtoServerRecord server_record = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_server_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_server_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_server_record;
        if (input->ExpectTag(42)) goto parse_slot_info;
        break;
      }
      
      // repeated .ProtoSlotInfo slot_info = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_slot_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_slot_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_slot_info;
        if (input->ExpectTag(48)) goto parse_now_slot_id;
        break;
      }
      
      // optional int32 now_slot_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_now_slot_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &now_slot_id_)));
          set_has_now_slot_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_act_finish_time;
        break;
      }
      
      // optional int32 act_finish_time = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_finish_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_finish_time_)));
          set_has_act_finish_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_left_free_times;
        break;
      }
      
      // optional int32 left_free_times = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_free_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_free_times_)));
          set_has_left_free_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_free_times;
        break;
      }
      
      // optional int32 free_times = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_free_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &free_times_)));
          set_has_free_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_bless;
        break;
      }
      
      // optional int32 bless = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bless:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bless_)));
          set_has_bless();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_max_bless;
        break;
      }
      
      // optional int32 max_bless = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_bless:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_bless_)));
          set_has_max_bless();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_one_cost;
        break;
      }
      
      // optional int32 one_cost = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_one_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &one_cost_)));
          set_has_one_cost();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_total_cost;
        break;
      }
      
      // optional int32 total_cost = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_cost_)));
          set_has_total_cost();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102021::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 left_tick = 2;
  if (has_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_tick(), output);
  }
  
  // repeated .ProtoPersonRecord person_record = 3;
  for (int i = 0; i < this->person_record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->person_record(i), output);
  }
  
  // repeated .ProtoServerRecord server_record = 4;
  for (int i = 0; i < this->server_record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->server_record(i), output);
  }
  
  // repeated .ProtoSlotInfo slot_info = 5;
  for (int i = 0; i < this->slot_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->slot_info(i), output);
  }
  
  // optional int32 now_slot_id = 6;
  if (has_now_slot_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->now_slot_id(), output);
  }
  
  // optional int32 act_finish_time = 7;
  if (has_act_finish_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->act_finish_time(), output);
  }
  
  // optional int32 left_free_times = 8;
  if (has_left_free_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->left_free_times(), output);
  }
  
  // optional int32 free_times = 9;
  if (has_free_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->free_times(), output);
  }
  
  // optional .ProtoThreeObj other_info = 10;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->other_info(), output);
  }
  
  // optional int32 bless = 11;
  if (has_bless()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->bless(), output);
  }
  
  // optional int32 max_bless = 12;
  if (has_max_bless()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->max_bless(), output);
  }
  
  // optional int32 one_cost = 13;
  if (has_one_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->one_cost(), output);
  }
  
  // optional int32 total_cost = 14;
  if (has_total_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->total_cost(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102021::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 left_tick = 2;
  if (has_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_tick(), target);
  }
  
  // repeated .ProtoPersonRecord person_record = 3;
  for (int i = 0; i < this->person_record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->person_record(i), target);
  }
  
  // repeated .ProtoServerRecord server_record = 4;
  for (int i = 0; i < this->server_record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->server_record(i), target);
  }
  
  // repeated .ProtoSlotInfo slot_info = 5;
  for (int i = 0; i < this->slot_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->slot_info(i), target);
  }
  
  // optional int32 now_slot_id = 6;
  if (has_now_slot_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->now_slot_id(), target);
  }
  
  // optional int32 act_finish_time = 7;
  if (has_act_finish_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->act_finish_time(), target);
  }
  
  // optional int32 left_free_times = 8;
  if (has_left_free_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->left_free_times(), target);
  }
  
  // optional int32 free_times = 9;
  if (has_free_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->free_times(), target);
  }
  
  // optional .ProtoThreeObj other_info = 10;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->other_info(), target);
  }
  
  // optional int32 bless = 11;
  if (has_bless()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->bless(), target);
  }
  
  // optional int32 max_bless = 12;
  if (has_max_bless()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->max_bless(), target);
  }
  
  // optional int32 one_cost = 13;
  if (has_one_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->one_cost(), target);
  }
  
  // optional int32 total_cost = 14;
  if (has_total_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->total_cost(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102021::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 left_tick = 2;
    if (has_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_tick());
    }
    
    // optional int32 now_slot_id = 6;
    if (has_now_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->now_slot_id());
    }
    
    // optional int32 act_finish_time = 7;
    if (has_act_finish_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_finish_time());
    }
    
    // optional int32 left_free_times = 8;
    if (has_left_free_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_free_times());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 free_times = 9;
    if (has_free_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->free_times());
    }
    
    // optional .ProtoThreeObj other_info = 10;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
    // optional int32 bless = 11;
    if (has_bless()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bless());
    }
    
    // optional int32 max_bless = 12;
    if (has_max_bless()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_bless());
    }
    
    // optional int32 one_cost = 13;
    if (has_one_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->one_cost());
    }
    
    // optional int32 total_cost = 14;
    if (has_total_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_cost());
    }
    
  }
  // repeated .ProtoPersonRecord person_record = 3;
  total_size += 1 * this->person_record_size();
  for (int i = 0; i < this->person_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->person_record(i));
  }
  
  // repeated .ProtoServerRecord server_record = 4;
  total_size += 1 * this->server_record_size();
  for (int i = 0; i < this->server_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->server_record(i));
  }
  
  // repeated .ProtoSlotInfo slot_info = 5;
  total_size += 1 * this->slot_info_size();
  for (int i = 0; i < this->slot_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->slot_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102021::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102021* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102021*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102021::MergeFrom(const Proto50102021& from) {
  GOOGLE_CHECK_NE(&from, this);
  person_record_.MergeFrom(from.person_record_);
  server_record_.MergeFrom(from.server_record_);
  slot_info_.MergeFrom(from.slot_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_left_tick()) {
      set_left_tick(from.left_tick());
    }
    if (from.has_now_slot_id()) {
      set_now_slot_id(from.now_slot_id());
    }
    if (from.has_act_finish_time()) {
      set_act_finish_time(from.act_finish_time());
    }
    if (from.has_left_free_times()) {
      set_left_free_times(from.left_free_times());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_free_times()) {
      set_free_times(from.free_times());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
    if (from.has_bless()) {
      set_bless(from.bless());
    }
    if (from.has_max_bless()) {
      set_max_bless(from.max_bless());
    }
    if (from.has_one_cost()) {
      set_one_cost(from.one_cost());
    }
    if (from.has_total_cost()) {
      set_total_cost(from.total_cost());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102021::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102021::CopyFrom(const Proto50102021& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102021::IsInitialized() const {
  
  return true;
}

void Proto50102021::Swap(Proto50102021* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(left_tick_, other->left_tick_);
    person_record_.Swap(&other->person_record_);
    server_record_.Swap(&other->server_record_);
    slot_info_.Swap(&other->slot_info_);
    std::swap(now_slot_id_, other->now_slot_id_);
    std::swap(act_finish_time_, other->act_finish_time_);
    std::swap(left_free_times_, other->left_free_times_);
    std::swap(free_times_, other->free_times_);
    std::swap(other_info_, other->other_info_);
    std::swap(bless_, other->bless_);
    std::swap(max_bless_, other->max_bless_);
    std::swap(one_cost_, other->one_cost_);
    std::swap(total_cost_, other->total_cost_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102021::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102021_descriptor_;
  metadata.reflection = Proto50102021_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102021::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto10102021::Proto10102021()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102021::InitAsDefaultInstance() {
}

Proto10102021::Proto10102021(const Proto10102021& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102021::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102021::~Proto10102021() {
  SharedDtor();
}

void Proto10102021::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102021::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102021::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102021_descriptor_;
}

const Proto10102021& Proto10102021::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10102021* Proto10102021::default_instance_ = NULL;

Proto10102021* Proto10102021::New() const {
  return new Proto10102021;
}

void Proto10102021::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102021::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102021::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102021::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102021::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102021::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102021* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102021*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102021::MergeFrom(const Proto10102021& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102021::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102021::CopyFrom(const Proto10102021& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102021::IsInitialized() const {
  
  return true;
}

void Proto10102021::Swap(Proto10102021* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102021::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102021_descriptor_;
  metadata.reflection = Proto10102021_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102022::kActivityIdFieldNumber;
const int Proto10102022::kIsTotalFieldNumber;
#endif  // !_MSC_VER

Proto10102022::Proto10102022()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102022::InitAsDefaultInstance() {
}

Proto10102022::Proto10102022(const Proto10102022& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102022::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  is_total_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102022::~Proto10102022() {
  SharedDtor();
}

void Proto10102022::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102022::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102022::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102022_descriptor_;
}

const Proto10102022& Proto10102022::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10102022* Proto10102022::default_instance_ = NULL;

Proto10102022* Proto10102022::New() const {
  return new Proto10102022;
}

void Proto10102022::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    is_total_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102022::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_total;
        break;
      }
      
      // optional int32 is_total = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_total_)));
          set_has_is_total();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102022::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 is_total = 2;
  if (has_is_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_total(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102022::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 is_total = 2;
  if (has_is_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_total(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102022::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 is_total = 2;
    if (has_is_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_total());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102022::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102022* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102022*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102022::MergeFrom(const Proto10102022& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_is_total()) {
      set_is_total(from.is_total());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102022::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102022::CopyFrom(const Proto10102022& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102022::IsInitialized() const {
  
  return true;
}

void Proto10102022::Swap(Proto10102022* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(is_total_, other->is_total_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102022::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102022_descriptor_;
  metadata.reflection = Proto10102022_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102022::kActivityIdFieldNumber;
const int Proto50102022::kRandNumFieldNumber;
const int Proto50102022::kSlotInfoFieldNumber;
const int Proto50102022::kPreSlotIdFieldNumber;
const int Proto50102022::kNowSlotIdFieldNumber;
const int Proto50102022::kRecordFieldNumber;
const int Proto50102022::kOtherInfoFieldNumber;
const int Proto50102022::kIsTotalFieldNumber;
const int Proto50102022::kMultFieldNumber;
const int Proto50102022::kBlessFieldNumber;
#endif  // !_MSC_VER

Proto50102022::Proto50102022()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102022::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto50102022::Proto50102022(const Proto50102022& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102022::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  rand_num_ = 0;
  pre_slot_id_ = 0;
  now_slot_id_ = 0;
  other_info_ = NULL;
  is_total_ = 0;
  mult_ = 0;
  bless_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102022::~Proto50102022() {
  SharedDtor();
}

void Proto50102022::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto50102022::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102022::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102022_descriptor_;
}

const Proto50102022& Proto50102022::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto50102022* Proto50102022::default_instance_ = NULL;

Proto50102022* Proto50102022::New() const {
  return new Proto50102022;
}

void Proto50102022::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    rand_num_ = 0;
    pre_slot_id_ = 0;
    now_slot_id_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
    is_total_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    mult_ = 0;
    bless_ = 0;
  }
  slot_info_.Clear();
  record_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102022::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_rand_num;
        break;
      }
      
      // optional int32 rand_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rand_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rand_num_)));
          set_has_rand_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_slot_info;
        break;
      }
      
      // repeated .ProtoSlotInfo slot_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_slot_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_slot_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_slot_info;
        if (input->ExpectTag(32)) goto parse_pre_slot_id;
        break;
      }
      
      // optional int32 pre_slot_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pre_slot_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pre_slot_id_)));
          set_has_pre_slot_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_now_slot_id;
        break;
      }
      
      // optional int32 now_slot_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_now_slot_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &now_slot_id_)));
          set_has_now_slot_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_record;
        break;
      }
      
      // repeated .ProtoPersonRecord record = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_record;
        if (input->ExpectTag(58)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_is_total;
        break;
      }
      
      // optional int32 is_total = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_total_)));
          set_has_is_total();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_mult;
        break;
      }
      
      // optional int32 mult = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mult_)));
          set_has_mult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_bless;
        break;
      }
      
      // optional int32 bless = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bless:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bless_)));
          set_has_bless();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102022::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 rand_num = 2;
  if (has_rand_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rand_num(), output);
  }
  
  // repeated .ProtoSlotInfo slot_info = 3;
  for (int i = 0; i < this->slot_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->slot_info(i), output);
  }
  
  // optional int32 pre_slot_id = 4;
  if (has_pre_slot_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pre_slot_id(), output);
  }
  
  // optional int32 now_slot_id = 5;
  if (has_now_slot_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->now_slot_id(), output);
  }
  
  // repeated .ProtoPersonRecord record = 6;
  for (int i = 0; i < this->record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->record(i), output);
  }
  
  // optional .ProtoThreeObj other_info = 7;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->other_info(), output);
  }
  
  // optional int32 is_total = 8;
  if (has_is_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->is_total(), output);
  }
  
  // optional int32 mult = 9;
  if (has_mult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->mult(), output);
  }
  
  // optional int32 bless = 10;
  if (has_bless()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->bless(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102022::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 rand_num = 2;
  if (has_rand_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rand_num(), target);
  }
  
  // repeated .ProtoSlotInfo slot_info = 3;
  for (int i = 0; i < this->slot_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->slot_info(i), target);
  }
  
  // optional int32 pre_slot_id = 4;
  if (has_pre_slot_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pre_slot_id(), target);
  }
  
  // optional int32 now_slot_id = 5;
  if (has_now_slot_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->now_slot_id(), target);
  }
  
  // repeated .ProtoPersonRecord record = 6;
  for (int i = 0; i < this->record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->record(i), target);
  }
  
  // optional .ProtoThreeObj other_info = 7;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->other_info(), target);
  }
  
  // optional int32 is_total = 8;
  if (has_is_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->is_total(), target);
  }
  
  // optional int32 mult = 9;
  if (has_mult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->mult(), target);
  }
  
  // optional int32 bless = 10;
  if (has_bless()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->bless(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102022::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 rand_num = 2;
    if (has_rand_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rand_num());
    }
    
    // optional int32 pre_slot_id = 4;
    if (has_pre_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pre_slot_id());
    }
    
    // optional int32 now_slot_id = 5;
    if (has_now_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->now_slot_id());
    }
    
    // optional .ProtoThreeObj other_info = 7;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
    // optional int32 is_total = 8;
    if (has_is_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_total());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 mult = 9;
    if (has_mult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mult());
    }
    
    // optional int32 bless = 10;
    if (has_bless()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bless());
    }
    
  }
  // repeated .ProtoSlotInfo slot_info = 3;
  total_size += 1 * this->slot_info_size();
  for (int i = 0; i < this->slot_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->slot_info(i));
  }
  
  // repeated .ProtoPersonRecord record = 6;
  total_size += 1 * this->record_size();
  for (int i = 0; i < this->record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102022::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102022* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102022*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102022::MergeFrom(const Proto50102022& from) {
  GOOGLE_CHECK_NE(&from, this);
  slot_info_.MergeFrom(from.slot_info_);
  record_.MergeFrom(from.record_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_rand_num()) {
      set_rand_num(from.rand_num());
    }
    if (from.has_pre_slot_id()) {
      set_pre_slot_id(from.pre_slot_id());
    }
    if (from.has_now_slot_id()) {
      set_now_slot_id(from.now_slot_id());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
    if (from.has_is_total()) {
      set_is_total(from.is_total());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_mult()) {
      set_mult(from.mult());
    }
    if (from.has_bless()) {
      set_bless(from.bless());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102022::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102022::CopyFrom(const Proto50102022& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102022::IsInitialized() const {
  
  return true;
}

void Proto50102022::Swap(Proto50102022* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(rand_num_, other->rand_num_);
    slot_info_.Swap(&other->slot_info_);
    std::swap(pre_slot_id_, other->pre_slot_id_);
    std::swap(now_slot_id_, other->now_slot_id_);
    record_.Swap(&other->record_);
    std::swap(other_info_, other->other_info_);
    std::swap(is_total_, other->is_total_);
    std::swap(mult_, other->mult_);
    std::swap(bless_, other->bless_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102022::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102022_descriptor_;
  metadata.reflection = Proto50102022_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102016::kColumnFieldNumber;
const int Proto10102016::kNumFieldNumber;
const int Proto10102016::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto10102016::Proto10102016()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102016::InitAsDefaultInstance() {
}

Proto10102016::Proto10102016(const Proto10102016& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102016::SharedCtor() {
  _cached_size_ = 0;
  column_ = 0;
  num_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102016::~Proto10102016() {
  SharedDtor();
}

void Proto10102016::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102016::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102016::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102016_descriptor_;
}

const Proto10102016& Proto10102016::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient019_2eproto();  return *default_instance_;
}

Proto10102016* Proto10102016::default_instance_ = NULL;

Proto10102016* Proto10102016::New() const {
  return new Proto10102016;
}

void Proto10102016::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    column_ = 0;
    num_ = 0;
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102016::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 column = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &column_)));
          set_has_column();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }
      
      // optional int32 num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }
      
      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102016::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 column = 1;
  if (has_column()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->column(), output);
  }
  
  // optional int32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102016::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 column = 1;
  if (has_column()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->column(), target);
  }
  
  // optional int32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102016::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 column = 1;
    if (has_column()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->column());
    }
    
    // optional int32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }
    
    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102016::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102016* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102016*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102016::MergeFrom(const Proto10102016& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_column()) {
      set_column(from.column());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102016::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102016::CopyFrom(const Proto10102016& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102016::IsInitialized() const {
  
  return true;
}

void Proto10102016::Swap(Proto10102016* other) {
  if (other != this) {
    std::swap(column_, other->column_);
    std::swap(num_, other->num_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102016::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102016_descriptor_;
  metadata.reflection = Proto10102016_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
