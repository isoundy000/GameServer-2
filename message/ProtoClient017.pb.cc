// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient017.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto50101010_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101010_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400386_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400386_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400350_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400350_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400350_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400350_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100656_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100656_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100656_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100656_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51406001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51406001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51406002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51406002_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11406003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11406003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51406003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51406003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51406004_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51406004_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100211_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100211_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100211_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100211_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100212_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100212_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100212_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100212_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10401524_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10401524_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401524_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401524_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401525_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401525_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11406005_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11406005_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51406005_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51406005_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10401526_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10401526_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401526_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401526_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100213_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100213_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400940_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400940_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400940_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400940_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401528_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401528_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100164_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100164_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100165_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100165_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100165_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100165_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100109_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100109_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100166_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100166_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100166_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100166_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100167_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100167_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100110_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100110_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401701_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401701_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400408_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400408_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400409_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400409_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401529_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401529_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400012_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400012_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400013_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400013_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400702_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400702_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400705_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400705_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400705_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400705_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400651_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400651_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80401026_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80401026_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10405035_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10405035_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50405035_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50405035_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100158_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100158_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100158_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100158_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100635_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100635_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient017_2eproto() {
  protobuf_AddDesc_ProtoClient017_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient017.proto");
  GOOGLE_CHECK(file != NULL);
  Proto50101010_descriptor_ = file->message_type(0);
  static const int Proto50101010_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101010, cur_status_),
  };
  Proto50101010_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101010_descriptor_,
      Proto50101010::default_instance_,
      Proto50101010_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101010, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101010, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101010));
  Proto80400386_descriptor_ = file->message_type(1);
  static const int Proto80400386_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400386, win_league_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400386, win_league_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400386, win_league_leader_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400386, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400386, space_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400386, league_rank_),
  };
  Proto80400386_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400386_descriptor_,
      Proto80400386::default_instance_,
      Proto80400386_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400386, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400386, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400386));
  Proto11400350_descriptor_ = file->message_type(2);
  static const int Proto11400350_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400350, task_id_),
  };
  Proto11400350_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400350_descriptor_,
      Proto11400350::default_instance_,
      Proto11400350_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400350, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400350, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400350));
  Proto51400350_descriptor_ = file->message_type(3);
  static const int Proto51400350_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400350, status_),
  };
  Proto51400350_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400350_descriptor_,
      Proto51400350::default_instance_,
      Proto51400350_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400350, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400350, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400350));
  Proto10100656_descriptor_ = file->message_type(4);
  static const int Proto10100656_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100656, cur_quality_),
  };
  Proto10100656_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100656_descriptor_,
      Proto10100656::default_instance_,
      Proto10100656_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100656, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100656, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100656));
  Proto50100656_descriptor_ = file->message_type(5);
  static const int Proto50100656_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100656, cur_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100656, status_),
  };
  Proto50100656_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100656_descriptor_,
      Proto50100656::default_instance_,
      Proto50100656_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100656, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100656, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100656));
  Proto51406001_descriptor_ = file->message_type(6);
  static const int Proto51406001_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406001, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406001, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406001, style_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406001, task_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406001, find_task_),
  };
  Proto51406001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51406001_descriptor_,
      Proto51406001::default_instance_,
      Proto51406001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51406001));
  Proto51406002_descriptor_ = file->message_type(7);
  static const int Proto51406002_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406002, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406002, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406002, style_lv_),
  };
  Proto51406002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51406002_descriptor_,
      Proto51406002::default_instance_,
      Proto51406002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51406002));
  Proto11406003_descriptor_ = file->message_type(8);
  static const int Proto11406003_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11406003, task_id_),
  };
  Proto11406003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11406003_descriptor_,
      Proto11406003::default_instance_,
      Proto11406003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11406003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11406003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11406003));
  Proto51406003_descriptor_ = file->message_type(9);
  static const int Proto51406003_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406003, add_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406003, task_id_),
  };
  Proto51406003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51406003_descriptor_,
      Proto51406003::default_instance_,
      Proto51406003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51406003));
  Proto51406004_descriptor_ = file->message_type(10);
  static const int Proto51406004_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406004, add_exp_),
  };
  Proto51406004_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51406004_descriptor_,
      Proto51406004::default_instance_,
      Proto51406004_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406004, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406004, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51406004));
  Proto10100211_descriptor_ = file->message_type(11);
  static const int Proto10100211_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100211, index_),
  };
  Proto10100211_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100211_descriptor_,
      Proto10100211::default_instance_,
      Proto10100211_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100211, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100211, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100211));
  Proto50100211_descriptor_ = file->message_type(12);
  static const int Proto50100211_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100211, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100211, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100211, act_detail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100211, first_role_),
  };
  Proto50100211_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100211_descriptor_,
      Proto50100211::default_instance_,
      Proto50100211_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100211, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100211, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100211));
  Proto10100212_descriptor_ = file->message_type(13);
  static const int Proto10100212_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100212, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100212, reward_index_),
  };
  Proto10100212_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100212_descriptor_,
      Proto10100212::default_instance_,
      Proto10100212_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100212, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100212, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100212));
  Proto50100212_descriptor_ = file->message_type(14);
  static const int Proto50100212_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100212, type_),
  };
  Proto50100212_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100212_descriptor_,
      Proto50100212::default_instance_,
      Proto50100212_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100212, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100212, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100212));
  Proto10401524_descriptor_ = file->message_type(15);
  static const int Proto10401524_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401524, cur_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401524, till_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401524, target_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401524, auto_buy_),
  };
  Proto10401524_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10401524_descriptor_,
      Proto10401524::default_instance_,
      Proto10401524_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401524, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401524, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10401524));
  Proto50401524_descriptor_ = file->message_type(16);
  static const int Proto50401524_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401524, cur_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401524, status_),
  };
  Proto50401524_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401524_descriptor_,
      Proto50401524::default_instance_,
      Proto50401524_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401524, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401524, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401524));
  Proto50401525_descriptor_ = file->message_type(17);
  static const int Proto50401525_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401525, convoy_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401525, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401525, convoy_scale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401525, is_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401525, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401525, rob_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401525, rob_name_),
  };
  Proto50401525_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401525_descriptor_,
      Proto50401525::default_instance_,
      Proto50401525_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401525, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401525, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401525));
  Proto11406005_descriptor_ = file->message_type(18);
  static const int Proto11406005_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11406005, target_lv_),
  };
  Proto11406005_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11406005_descriptor_,
      Proto11406005::default_instance_,
      Proto11406005_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11406005, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11406005, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11406005));
  Proto51406005_descriptor_ = file->message_type(19);
  static const int Proto51406005_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406005, style_lv_),
  };
  Proto51406005_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51406005_descriptor_,
      Proto51406005::default_instance_,
      Proto51406005_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406005, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51406005, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51406005));
  Proto10401526_descriptor_ = file->message_type(20);
  static const int Proto10401526_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401526, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401526, ai_id_),
  };
  Proto10401526_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10401526_descriptor_,
      Proto10401526::default_instance_,
      Proto10401526_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401526, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401526, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10401526));
  Proto50401526_descriptor_ = file->message_type(21);
  static const int Proto50401526_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401526, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401526, coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401526, status_),
  };
  Proto50401526_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401526_descriptor_,
      Proto50401526::default_instance_,
      Proto50401526_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401526, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401526, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401526));
  Proto50100213_descriptor_ = file->message_type(22);
  static const int Proto50100213_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100213, act_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100213, main_act_),
  };
  Proto50100213_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100213_descriptor_,
      Proto50100213::default_instance_,
      Proto50100213_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100213, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100213, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100213));
  Proto10400940_descriptor_ = file->message_type(23);
  static const int Proto10400940_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400940, num1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400940, num2_),
  };
  Proto10400940_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400940_descriptor_,
      Proto10400940::default_instance_,
      Proto10400940_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400940, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400940, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400940));
  Proto50400940_descriptor_ = file->message_type(24);
  static const int Proto50400940_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400940, legend_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400940, my_rank_),
  };
  Proto50400940_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400940_descriptor_,
      Proto50400940::default_instance_,
      Proto50400940_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400940, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400940, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400940));
  Proto50401528_descriptor_ = file->message_type(25);
  static const int Proto50401528_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401528, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401528, player_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401528, protect_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401528, protect_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401528, player_type_),
  };
  Proto50401528_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401528_descriptor_,
      Proto50401528::default_instance_,
      Proto50401528_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401528, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401528, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401528));
  Proto10100164_descriptor_ = file->message_type(26);
  static const int Proto10100164_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100164, friend_id_),
  };
  Proto10100164_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100164_descriptor_,
      Proto10100164::default_instance_,
      Proto10100164_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100164, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100164, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100164));
  Proto10100165_descriptor_ = file->message_type(27);
  static const int Proto10100165_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100165, friend_id_set_),
  };
  Proto10100165_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100165_descriptor_,
      Proto10100165::default_instance_,
      Proto10100165_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100165, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100165, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100165));
  Proto50100165_descriptor_ = file->message_type(28);
  static const int Proto50100165_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100165, friend_list_),
  };
  Proto50100165_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100165_descriptor_,
      Proto50100165::default_instance_,
      Proto50100165_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100165, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100165, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100165));
  Proto80100109_descriptor_ = file->message_type(29);
  static const int Proto80100109_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100109, friend_info_),
  };
  Proto80100109_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100109_descriptor_,
      Proto80100109::default_instance_,
      Proto80100109_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100109, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100109, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100109));
  Proto10100166_descriptor_ = file->message_type(30);
  static const int Proto10100166_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100166, friend_id_set_),
  };
  Proto10100166_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100166_descriptor_,
      Proto10100166::default_instance_,
      Proto10100166_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100166, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100166, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100166));
  Proto50100166_descriptor_ = file->message_type(31);
  static const int Proto50100166_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100166, role_set_),
  };
  Proto50100166_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100166_descriptor_,
      Proto50100166::default_instance_,
      Proto50100166_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100166, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100166, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100166));
  Proto50100167_descriptor_ = file->message_type(32);
  static const int Proto50100167_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100167, apply_list_),
  };
  Proto50100167_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100167_descriptor_,
      Proto50100167::default_instance_,
      Proto50100167_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100167, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100167, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100167));
  Proto80100110_descriptor_ = file->message_type(33);
  static const int Proto80100110_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100110, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100110, role_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100110, level_),
  };
  Proto80100110_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100110_descriptor_,
      Proto80100110::default_instance_,
      Proto80100110_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100110, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100110, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100110));
  Proto11401701_descriptor_ = file->message_type(34);
  static const int Proto11401701_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401701, event_id_),
  };
  Proto11401701_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401701_descriptor_,
      Proto11401701::default_instance_,
      Proto11401701_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401701, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401701, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401701));
  Proto80400408_descriptor_ = file->message_type(35);
  static const int Proto80400408_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400408, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400408, space_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400408, coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400408, start_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400408, car_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400408, protect_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400408, escort_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400408, rob_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400408, protect_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400408, protect_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400408, other_protect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400408, other_protect_name_),
  };
  Proto80400408_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400408_descriptor_,
      Proto80400408::default_instance_,
      Proto80400408_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400408, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400408, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400408));
  Proto80400409_descriptor_ = file->message_type(36);
  static const int Proto80400409_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400409, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400409, award_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400409, exp_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400409, escort_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400409, protect_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400409, rob_times_),
  };
  Proto80400409_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400409_descriptor_,
      Proto80400409::default_instance_,
      Proto80400409_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400409, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400409, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400409));
  Proto50401529_descriptor_ = file->message_type(37);
  static const int Proto50401529_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401529, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401529, role_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401529, escort_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401529, start_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401529, coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401529, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401529, space_id_),
  };
  Proto50401529_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401529_descriptor_,
      Proto50401529::default_instance_,
      Proto50401529_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401529, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401529, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401529));
  Proto51400012_descriptor_ = file->message_type(38);
  static const int Proto51400012_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400012, guide_list_),
  };
  Proto51400012_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400012_descriptor_,
      Proto51400012::default_instance_,
      Proto51400012_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400012, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400012, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400012));
  Proto11400013_descriptor_ = file->message_type(39);
  static const int Proto11400013_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400013, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400013, times_),
  };
  Proto11400013_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400013_descriptor_,
      Proto11400013::default_instance_,
      Proto11400013_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400013, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400013, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400013));
  Proto81400702_descriptor_ = file->message_type(40);
  static const int Proto81400702_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400702, new_list_),
  };
  Proto81400702_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400702_descriptor_,
      Proto81400702::default_instance_,
      Proto81400702_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400702, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400702, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400702));
  Proto11400705_descriptor_ = file->message_type(41);
  static const int Proto11400705_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400705, label_id_),
  };
  Proto11400705_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400705_descriptor_,
      Proto11400705::default_instance_,
      Proto11400705_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400705, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400705, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400705));
  Proto51400705_descriptor_ = file->message_type(42);
  static const int Proto51400705_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400705, label_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400705, status_),
  };
  Proto51400705_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400705_descriptor_,
      Proto51400705::default_instance_,
      Proto51400705_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400705, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400705, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400705));
  Proto81400651_descriptor_ = file->message_type(43);
  static const int Proto81400651_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400651, add_exp_),
  };
  Proto81400651_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400651_descriptor_,
      Proto81400651::default_instance_,
      Proto81400651_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400651, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400651, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400651));
  Proto80401026_descriptor_ = file->message_type(44);
  static const int Proto80401026_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401026, value_),
  };
  Proto80401026_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80401026_descriptor_,
      Proto80401026::default_instance_,
      Proto80401026_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401026, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401026, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80401026));
  Proto10405035_descriptor_ = file->message_type(45);
  static const int Proto10405035_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405035, role_id_),
  };
  Proto10405035_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10405035_descriptor_,
      Proto10405035::default_instance_,
      Proto10405035_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405035, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405035, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10405035));
  Proto50405035_descriptor_ = file->message_type(46);
  static const int Proto50405035_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405035, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405035, coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405035, player_name_),
  };
  Proto50405035_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50405035_descriptor_,
      Proto50405035::default_instance_,
      Proto50405035_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405035, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405035, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50405035));
  Proto10100158_descriptor_ = file->message_type(47);
  static const int Proto10100158_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100158, role_id_),
  };
  Proto10100158_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100158_descriptor_,
      Proto10100158::default_instance_,
      Proto10100158_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100158, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100158, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100158));
  Proto50100158_descriptor_ = file->message_type(48);
  static const int Proto50100158_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100158, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100158, src_friend_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100158, des_friend_type_),
  };
  Proto50100158_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100158_descriptor_,
      Proto50100158::default_instance_,
      Proto50100158_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100158, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100158, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100158));
  Proto10100635_descriptor_ = file->message_type(49);
  static const int Proto10100635_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100635, vote_type_),
  };
  Proto10100635_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100635_descriptor_,
      Proto10100635::default_instance_,
      Proto10100635_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100635, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100635, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100635));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient017_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101010_descriptor_, &Proto50101010::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400386_descriptor_, &Proto80400386::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400350_descriptor_, &Proto11400350::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400350_descriptor_, &Proto51400350::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100656_descriptor_, &Proto10100656::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100656_descriptor_, &Proto50100656::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51406001_descriptor_, &Proto51406001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51406002_descriptor_, &Proto51406002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11406003_descriptor_, &Proto11406003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51406003_descriptor_, &Proto51406003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51406004_descriptor_, &Proto51406004::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100211_descriptor_, &Proto10100211::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100211_descriptor_, &Proto50100211::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100212_descriptor_, &Proto10100212::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100212_descriptor_, &Proto50100212::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10401524_descriptor_, &Proto10401524::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401524_descriptor_, &Proto50401524::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401525_descriptor_, &Proto50401525::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11406005_descriptor_, &Proto11406005::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51406005_descriptor_, &Proto51406005::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10401526_descriptor_, &Proto10401526::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401526_descriptor_, &Proto50401526::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100213_descriptor_, &Proto50100213::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400940_descriptor_, &Proto10400940::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400940_descriptor_, &Proto50400940::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401528_descriptor_, &Proto50401528::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100164_descriptor_, &Proto10100164::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100165_descriptor_, &Proto10100165::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100165_descriptor_, &Proto50100165::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100109_descriptor_, &Proto80100109::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100166_descriptor_, &Proto10100166::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100166_descriptor_, &Proto50100166::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100167_descriptor_, &Proto50100167::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100110_descriptor_, &Proto80100110::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401701_descriptor_, &Proto11401701::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400408_descriptor_, &Proto80400408::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400409_descriptor_, &Proto80400409::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401529_descriptor_, &Proto50401529::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400012_descriptor_, &Proto51400012::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400013_descriptor_, &Proto11400013::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400702_descriptor_, &Proto81400702::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400705_descriptor_, &Proto11400705::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400705_descriptor_, &Proto51400705::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400651_descriptor_, &Proto81400651::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80401026_descriptor_, &Proto80401026::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10405035_descriptor_, &Proto10405035::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50405035_descriptor_, &Proto50405035::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100158_descriptor_, &Proto10100158::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100158_descriptor_, &Proto50100158::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100635_descriptor_, &Proto10100635::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient017_2eproto() {
  delete Proto50101010::default_instance_;
  delete Proto50101010_reflection_;
  delete Proto80400386::default_instance_;
  delete Proto80400386_reflection_;
  delete Proto11400350::default_instance_;
  delete Proto11400350_reflection_;
  delete Proto51400350::default_instance_;
  delete Proto51400350_reflection_;
  delete Proto10100656::default_instance_;
  delete Proto10100656_reflection_;
  delete Proto50100656::default_instance_;
  delete Proto50100656_reflection_;
  delete Proto51406001::default_instance_;
  delete Proto51406001_reflection_;
  delete Proto51406002::default_instance_;
  delete Proto51406002_reflection_;
  delete Proto11406003::default_instance_;
  delete Proto11406003_reflection_;
  delete Proto51406003::default_instance_;
  delete Proto51406003_reflection_;
  delete Proto51406004::default_instance_;
  delete Proto51406004_reflection_;
  delete Proto10100211::default_instance_;
  delete Proto10100211_reflection_;
  delete Proto50100211::default_instance_;
  delete Proto50100211_reflection_;
  delete Proto10100212::default_instance_;
  delete Proto10100212_reflection_;
  delete Proto50100212::default_instance_;
  delete Proto50100212_reflection_;
  delete Proto10401524::default_instance_;
  delete Proto10401524_reflection_;
  delete Proto50401524::default_instance_;
  delete Proto50401524_reflection_;
  delete Proto50401525::default_instance_;
  delete Proto50401525_reflection_;
  delete Proto11406005::default_instance_;
  delete Proto11406005_reflection_;
  delete Proto51406005::default_instance_;
  delete Proto51406005_reflection_;
  delete Proto10401526::default_instance_;
  delete Proto10401526_reflection_;
  delete Proto50401526::default_instance_;
  delete Proto50401526_reflection_;
  delete Proto50100213::default_instance_;
  delete Proto50100213_reflection_;
  delete Proto10400940::default_instance_;
  delete Proto10400940_reflection_;
  delete Proto50400940::default_instance_;
  delete Proto50400940_reflection_;
  delete Proto50401528::default_instance_;
  delete Proto50401528_reflection_;
  delete Proto10100164::default_instance_;
  delete Proto10100164_reflection_;
  delete Proto10100165::default_instance_;
  delete Proto10100165_reflection_;
  delete Proto50100165::default_instance_;
  delete Proto50100165_reflection_;
  delete Proto80100109::default_instance_;
  delete Proto80100109_reflection_;
  delete Proto10100166::default_instance_;
  delete Proto10100166_reflection_;
  delete Proto50100166::default_instance_;
  delete Proto50100166_reflection_;
  delete Proto50100167::default_instance_;
  delete Proto50100167_reflection_;
  delete Proto80100110::default_instance_;
  delete Proto80100110_reflection_;
  delete Proto11401701::default_instance_;
  delete Proto11401701_reflection_;
  delete Proto80400408::default_instance_;
  delete Proto80400408_reflection_;
  delete Proto80400409::default_instance_;
  delete Proto80400409_reflection_;
  delete Proto50401529::default_instance_;
  delete Proto50401529_reflection_;
  delete Proto51400012::default_instance_;
  delete Proto51400012_reflection_;
  delete Proto11400013::default_instance_;
  delete Proto11400013_reflection_;
  delete Proto81400702::default_instance_;
  delete Proto81400702_reflection_;
  delete Proto11400705::default_instance_;
  delete Proto11400705_reflection_;
  delete Proto51400705::default_instance_;
  delete Proto51400705_reflection_;
  delete Proto81400651::default_instance_;
  delete Proto81400651_reflection_;
  delete Proto80401026::default_instance_;
  delete Proto80401026_reflection_;
  delete Proto10405035::default_instance_;
  delete Proto10405035_reflection_;
  delete Proto50405035::default_instance_;
  delete Proto50405035_reflection_;
  delete Proto10100158::default_instance_;
  delete Proto10100158_reflection_;
  delete Proto50100158::default_instance_;
  delete Proto50100158_reflection_;
  delete Proto10100635::default_instance_;
  delete Proto10100635_reflection_;
}

void protobuf_AddDesc_ProtoClient017_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient017.proto\032\021ProtoPublic.prot"
    "o\"#\n\rProto50101010\022\022\n\ncur_status\030\001 \001(\005\"\270"
    "\001\n\rProto80400386\022\025\n\rwin_league_id\030\001 \001(\003\022"
    "\027\n\017win_league_name\030\002 \001(\t\022\031\n\021win_league_l"
    "eader\030\003 \001(\t\022\037\n\titem_list\030\004 \003(\0132\014.ProtoIt"
    "emId\022\020\n\010space_id\030\005 \001(\005\022)\n\013league_rank\030\006 "
    "\003(\0132\024.ProtoLeagueRankInfo\" \n\rProto114003"
    "50\022\017\n\007task_id\030\001 \001(\005\"\037\n\rProto51400350\022\016\n\006"
    "status\030\001 \001(\005\"$\n\rProto10100656\022\023\n\013cur_qua"
    "lity\030\001 \001(\005\"4\n\rProto50100656\022\023\n\013cur_quali"
    "ty\030\001 \001(\005\022\016\n\006status\030\002 \001(\005\"\215\001\n\rProto514060"
    "01\022\r\n\005level\030\001 \001(\005\022\013\n\003exp\030\002 \001(\005\022\020\n\010style_"
    "lv\030\003 \001(\005\022&\n\ttask_info\030\004 \003(\0132\023.ProtoSword"
    "PoolTask\022&\n\tfind_task\030\005 \003(\0132\023.ProtoSword"
    "PoolTask\"=\n\rProto51406002\022\r\n\005level\030\001 \001(\005"
    "\022\013\n\003exp\030\002 \001(\005\022\020\n\010style_lv\030\003 \001(\005\" \n\rProto"
    "11406003\022\017\n\007task_id\030\001 \001(\005\"1\n\rProto514060"
    "03\022\017\n\007add_exp\030\001 \001(\005\022\017\n\007task_id\030\002 \001(\005\" \n\r"
    "Proto51406004\022\017\n\007add_exp\030\001 \001(\005\"\036\n\rProto1"
    "0100211\022\r\n\005index\030\001 \001(\005\"u\n\rProto50100211\022"
    "\014\n\004type\030\001 \001(\005\022\021\n\tleft_time\030\002 \001(\005\022!\n\nact_"
    "detail\030\003 \001(\0132\r.PActTypeItem\022 \n\nfirst_rol"
    "e\030\004 \001(\0132\014.ProtoTeamer\"4\n\rProto10100212\022\r"
    "\n\005index\030\001 \001(\005\022\024\n\014reward_index\030\002 \001(\005\"\035\n\rP"
    "roto50100212\022\014\n\004type\030\001 \001(\005\"X\n\rProto10401"
    "524\022\021\n\tcur_level\030\001 \001(\005\022\014\n\004till\030\002 \001(\005\022\024\n\014"
    "target_level\030\003 \001(\005\022\020\n\010auto_buy\030\004 \001(\005\"2\n\r"
    "Proto50401524\022\021\n\tcur_level\030\001 \001(\005\022\016\n\006stat"
    "us\030\002 \001(\005\"\221\001\n\rProto50401525\022\022\n\nconvoy_exp"
    "\030\001 \001(\003\022\016\n\006status\030\002 \001(\005\022\024\n\014convoy_scale\030\003"
    " \001(\005\022\021\n\tis_double\030\004 \001(\005\022\021\n\tleft_time\030\005 \001"
    "(\005\022\016\n\006rob_id\030\006 \001(\003\022\020\n\010rob_name\030\007 \001(\t\"\"\n\r"
    "Proto11406005\022\021\n\ttarget_lv\030\001 \001(\005\"!\n\rProt"
    "o51406005\022\020\n\010style_lv\030\001 \001(\005\"1\n\rProto1040"
    "1526\022\021\n\tplayer_id\030\001 \001(\003\022\r\n\005ai_id\030\002 \001(\003\"M"
    "\n\rProto50401526\022\020\n\010scene_id\030\001 \001(\005\022\032\n\005coo"
    "rd\030\002 \001(\0132\013.ProtoCoord\022\016\n\006status\030\003 \001(\005\"3\n"
    "\rProto50100213\022\020\n\010act_list\030\001 \003(\005\022\020\n\010main"
    "_act\030\002 \001(\005\"+\n\rProto10400940\022\014\n\004num1\030\001 \001("
    "\005\022\014\n\004num2\030\002 \001(\005\"_\n\rProto50400940\022(\n\013lege"
    "nd_rank\030\001 \003(\0132\023.ProtoLegendTopRank\022$\n\007my"
    "_rank\030\002 \001(\0132\023.ProtoLegendTopRank\"v\n\rProt"
    "o50401528\022\021\n\tplayer_id\030\001 \001(\003\022\023\n\013player_n"
    "ame\030\002 \001(\t\022\022\n\nprotect_id\030\003 \001(\003\022\024\n\014protect"
    "_name\030\004 \001(\t\022\023\n\013player_type\030\005 \001(\005\"\"\n\rProt"
    "o10100164\022\021\n\tfriend_id\030\001 \001(\003\"&\n\rProto101"
    "00165\022\025\n\rfriend_id_set\030\001 \003(\003\"6\n\rProto501"
    "00165\022%\n\013friend_list\030\001 \003(\0132\020.ProtoFriend"
    "Info\"5\n\rProto80100109\022$\n\013friend_info\030\001 \001"
    "(\0132\017.ProtoApplyInfo\"&\n\rProto10100166\022\025\n\r"
    "friend_id_set\030\001 \003(\003\"!\n\rProto50100166\022\020\n\010"
    "role_set\030\001 \003(\003\"4\n\rProto50100167\022#\n\napply"
    "_list\030\001 \003(\0132\017.ProtoApplyInfo\"B\n\rProto801"
    "00110\022\017\n\007role_id\030\001 \001(\003\022\021\n\trole_name\030\002 \001("
    "\t\022\r\n\005level\030\003 \001(\005\"!\n\rProto11401701\022\020\n\010eve"
    "nt_id\030\001 \001(\005\"\220\002\n\rProto80400408\022\020\n\010scene_i"
    "d\030\001 \001(\005\022\020\n\010space_id\030\002 \001(\005\022\032\n\005coord\030\003 \001(\013"
    "2\013.ProtoCoord\022\022\n\nstart_tick\030\004 \001(\003\022\016\n\006car"
    "_id\030\005 \001(\003\022\025\n\rprotect_times\030\006 \001(\005\022\024\n\014esco"
    "rt_times\030\007 \001(\005\022\021\n\trob_times\030\010 \001(\005\022\022\n\npro"
    "tect_id\030\t \001(\003\022\024\n\014protect_name\030\n \001(\t\022\025\n\ro"
    "ther_protect\030\013 \003(\003\022\032\n\022other_protect_name"
    "\030\014 \003(\t\"\202\001\n\rProto80400409\022\016\n\006status\030\001 \001(\005"
    "\022\020\n\010award_id\030\002 \001(\005\022\017\n\007exp_num\030\003 \001(\003\022\024\n\014e"
    "scort_times\030\004 \001(\005\022\025\n\rprotect_times\030\005 \001(\005"
    "\022\021\n\trob_times\030\006 \001(\005\"\235\001\n\rProto50401529\022\017\n"
    "\007role_id\030\001 \001(\003\022\021\n\trole_name\030\002 \001(\t\022\024\n\014esc"
    "ort_level\030\003 \001(\005\022\022\n\nstart_tick\030\004 \001(\003\022\032\n\005c"
    "oord\030\005 \001(\0132\013.ProtoCoord\022\020\n\010scene_id\030\006 \001("
    "\005\022\020\n\010space_id\030\007 \001(\005\"2\n\rProto51400012\022!\n\n"
    "guide_list\030\001 \003(\0132\r.ProtoPairObj\"*\n\rProto"
    "11400013\022\n\n\002id\030\001 \001(\005\022\r\n\005times\030\002 \001(\005\"!\n\rP"
    "roto81400702\022\020\n\010new_list\030\001 \003(\005\"!\n\rProto1"
    "1400705\022\020\n\010label_id\030\001 \001(\005\"1\n\rProto514007"
    "05\022\020\n\010label_id\030\001 \001(\005\022\016\n\006status\030\002 \001(\005\" \n\r"
    "Proto81400651\022\017\n\007add_exp\030\001 \001(\005\"\036\n\rProto8"
    "0401026\022\r\n\005value\030\001 \001(\005\" \n\rProto10405035\022"
    "\017\n\007role_id\030\001 \001(\003\"S\n\rProto50405035\022\021\n\tpla"
    "yer_id\030\001 \001(\003\022\032\n\005coord\030\002 \001(\0132\013.ProtoCoord"
    "\022\023\n\013player_name\030\003 \001(\t\" \n\rProto10100158\022\017"
    "\n\007role_id\030\001 \001(\003\"R\n\rProto50100158\022\017\n\007role"
    "_id\030\001 \001(\003\022\027\n\017src_friend_type\030\002 \001(\005\022\027\n\017de"
    "s_friend_type\030\003 \001(\005\"\"\n\rProto10100635\022\021\n\t"
    "vote_type\030\001 \001(\005", 3335);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient017.proto", &protobuf_RegisterTypes);
  Proto50101010::default_instance_ = new Proto50101010();
  Proto80400386::default_instance_ = new Proto80400386();
  Proto11400350::default_instance_ = new Proto11400350();
  Proto51400350::default_instance_ = new Proto51400350();
  Proto10100656::default_instance_ = new Proto10100656();
  Proto50100656::default_instance_ = new Proto50100656();
  Proto51406001::default_instance_ = new Proto51406001();
  Proto51406002::default_instance_ = new Proto51406002();
  Proto11406003::default_instance_ = new Proto11406003();
  Proto51406003::default_instance_ = new Proto51406003();
  Proto51406004::default_instance_ = new Proto51406004();
  Proto10100211::default_instance_ = new Proto10100211();
  Proto50100211::default_instance_ = new Proto50100211();
  Proto10100212::default_instance_ = new Proto10100212();
  Proto50100212::default_instance_ = new Proto50100212();
  Proto10401524::default_instance_ = new Proto10401524();
  Proto50401524::default_instance_ = new Proto50401524();
  Proto50401525::default_instance_ = new Proto50401525();
  Proto11406005::default_instance_ = new Proto11406005();
  Proto51406005::default_instance_ = new Proto51406005();
  Proto10401526::default_instance_ = new Proto10401526();
  Proto50401526::default_instance_ = new Proto50401526();
  Proto50100213::default_instance_ = new Proto50100213();
  Proto10400940::default_instance_ = new Proto10400940();
  Proto50400940::default_instance_ = new Proto50400940();
  Proto50401528::default_instance_ = new Proto50401528();
  Proto10100164::default_instance_ = new Proto10100164();
  Proto10100165::default_instance_ = new Proto10100165();
  Proto50100165::default_instance_ = new Proto50100165();
  Proto80100109::default_instance_ = new Proto80100109();
  Proto10100166::default_instance_ = new Proto10100166();
  Proto50100166::default_instance_ = new Proto50100166();
  Proto50100167::default_instance_ = new Proto50100167();
  Proto80100110::default_instance_ = new Proto80100110();
  Proto11401701::default_instance_ = new Proto11401701();
  Proto80400408::default_instance_ = new Proto80400408();
  Proto80400409::default_instance_ = new Proto80400409();
  Proto50401529::default_instance_ = new Proto50401529();
  Proto51400012::default_instance_ = new Proto51400012();
  Proto11400013::default_instance_ = new Proto11400013();
  Proto81400702::default_instance_ = new Proto81400702();
  Proto11400705::default_instance_ = new Proto11400705();
  Proto51400705::default_instance_ = new Proto51400705();
  Proto81400651::default_instance_ = new Proto81400651();
  Proto80401026::default_instance_ = new Proto80401026();
  Proto10405035::default_instance_ = new Proto10405035();
  Proto50405035::default_instance_ = new Proto50405035();
  Proto10100158::default_instance_ = new Proto10100158();
  Proto50100158::default_instance_ = new Proto50100158();
  Proto10100635::default_instance_ = new Proto10100635();
  Proto50101010::default_instance_->InitAsDefaultInstance();
  Proto80400386::default_instance_->InitAsDefaultInstance();
  Proto11400350::default_instance_->InitAsDefaultInstance();
  Proto51400350::default_instance_->InitAsDefaultInstance();
  Proto10100656::default_instance_->InitAsDefaultInstance();
  Proto50100656::default_instance_->InitAsDefaultInstance();
  Proto51406001::default_instance_->InitAsDefaultInstance();
  Proto51406002::default_instance_->InitAsDefaultInstance();
  Proto11406003::default_instance_->InitAsDefaultInstance();
  Proto51406003::default_instance_->InitAsDefaultInstance();
  Proto51406004::default_instance_->InitAsDefaultInstance();
  Proto10100211::default_instance_->InitAsDefaultInstance();
  Proto50100211::default_instance_->InitAsDefaultInstance();
  Proto10100212::default_instance_->InitAsDefaultInstance();
  Proto50100212::default_instance_->InitAsDefaultInstance();
  Proto10401524::default_instance_->InitAsDefaultInstance();
  Proto50401524::default_instance_->InitAsDefaultInstance();
  Proto50401525::default_instance_->InitAsDefaultInstance();
  Proto11406005::default_instance_->InitAsDefaultInstance();
  Proto51406005::default_instance_->InitAsDefaultInstance();
  Proto10401526::default_instance_->InitAsDefaultInstance();
  Proto50401526::default_instance_->InitAsDefaultInstance();
  Proto50100213::default_instance_->InitAsDefaultInstance();
  Proto10400940::default_instance_->InitAsDefaultInstance();
  Proto50400940::default_instance_->InitAsDefaultInstance();
  Proto50401528::default_instance_->InitAsDefaultInstance();
  Proto10100164::default_instance_->InitAsDefaultInstance();
  Proto10100165::default_instance_->InitAsDefaultInstance();
  Proto50100165::default_instance_->InitAsDefaultInstance();
  Proto80100109::default_instance_->InitAsDefaultInstance();
  Proto10100166::default_instance_->InitAsDefaultInstance();
  Proto50100166::default_instance_->InitAsDefaultInstance();
  Proto50100167::default_instance_->InitAsDefaultInstance();
  Proto80100110::default_instance_->InitAsDefaultInstance();
  Proto11401701::default_instance_->InitAsDefaultInstance();
  Proto80400408::default_instance_->InitAsDefaultInstance();
  Proto80400409::default_instance_->InitAsDefaultInstance();
  Proto50401529::default_instance_->InitAsDefaultInstance();
  Proto51400012::default_instance_->InitAsDefaultInstance();
  Proto11400013::default_instance_->InitAsDefaultInstance();
  Proto81400702::default_instance_->InitAsDefaultInstance();
  Proto11400705::default_instance_->InitAsDefaultInstance();
  Proto51400705::default_instance_->InitAsDefaultInstance();
  Proto81400651::default_instance_->InitAsDefaultInstance();
  Proto80401026::default_instance_->InitAsDefaultInstance();
  Proto10405035::default_instance_->InitAsDefaultInstance();
  Proto50405035::default_instance_->InitAsDefaultInstance();
  Proto10100158::default_instance_->InitAsDefaultInstance();
  Proto50100158::default_instance_->InitAsDefaultInstance();
  Proto10100635::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient017_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient017_2eproto {
  StaticDescriptorInitializer_ProtoClient017_2eproto() {
    protobuf_AddDesc_ProtoClient017_2eproto();
  }
} static_descriptor_initializer_ProtoClient017_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto50101010::kCurStatusFieldNumber;
#endif  // !_MSC_VER

Proto50101010::Proto50101010()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101010::InitAsDefaultInstance() {
}

Proto50101010::Proto50101010(const Proto50101010& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101010::SharedCtor() {
  _cached_size_ = 0;
  cur_status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101010::~Proto50101010() {
  SharedDtor();
}

void Proto50101010::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50101010::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101010::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101010_descriptor_;
}

const Proto50101010& Proto50101010::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto50101010* Proto50101010::default_instance_ = NULL;

Proto50101010* Proto50101010::New() const {
  return new Proto50101010;
}

void Proto50101010::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101010::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_status_)));
          set_has_cur_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101010::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_status = 1;
  if (has_cur_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101010::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_status = 1;
  if (has_cur_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101010::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_status = 1;
    if (has_cur_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101010::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101010* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101010*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101010::MergeFrom(const Proto50101010& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_status()) {
      set_cur_status(from.cur_status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101010::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101010::CopyFrom(const Proto50101010& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101010::IsInitialized() const {
  
  return true;
}

void Proto50101010::Swap(Proto50101010* other) {
  if (other != this) {
    std::swap(cur_status_, other->cur_status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101010::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101010_descriptor_;
  metadata.reflection = Proto50101010_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400386::kWinLeagueIdFieldNumber;
const int Proto80400386::kWinLeagueNameFieldNumber;
const int Proto80400386::kWinLeagueLeaderFieldNumber;
const int Proto80400386::kItemListFieldNumber;
const int Proto80400386::kSpaceIdFieldNumber;
const int Proto80400386::kLeagueRankFieldNumber;
#endif  // !_MSC_VER

Proto80400386::Proto80400386()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400386::InitAsDefaultInstance() {
}

Proto80400386::Proto80400386(const Proto80400386& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400386::SharedCtor() {
  _cached_size_ = 0;
  win_league_id_ = GOOGLE_LONGLONG(0);
  win_league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  win_league_leader_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  space_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400386::~Proto80400386() {
  SharedDtor();
}

void Proto80400386::SharedDtor() {
  if (win_league_name_ != &::google::protobuf::internal::kEmptyString) {
    delete win_league_name_;
  }
  if (win_league_leader_ != &::google::protobuf::internal::kEmptyString) {
    delete win_league_leader_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400386::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400386::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400386_descriptor_;
}

const Proto80400386& Proto80400386::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto80400386* Proto80400386::default_instance_ = NULL;

Proto80400386* Proto80400386::New() const {
  return new Proto80400386;
}

void Proto80400386::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    win_league_id_ = GOOGLE_LONGLONG(0);
    if (has_win_league_name()) {
      if (win_league_name_ != &::google::protobuf::internal::kEmptyString) {
        win_league_name_->clear();
      }
    }
    if (has_win_league_leader()) {
      if (win_league_leader_ != &::google::protobuf::internal::kEmptyString) {
        win_league_leader_->clear();
      }
    }
    space_id_ = 0;
  }
  item_list_.Clear();
  league_rank_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400386::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 win_league_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &win_league_id_)));
          set_has_win_league_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_win_league_name;
        break;
      }
      
      // optional string win_league_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_win_league_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_win_league_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->win_league_name().data(), this->win_league_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_win_league_leader;
        break;
      }
      
      // optional string win_league_leader = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_win_league_leader:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_win_league_leader()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->win_league_leader().data(), this->win_league_leader().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoItemId item_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_item_list;
        if (input->ExpectTag(40)) goto parse_space_id;
        break;
      }
      
      // optional int32 space_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_space_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &space_id_)));
          set_has_space_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_league_rank;
        break;
      }
      
      // repeated .ProtoLeagueRankInfo league_rank = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_league_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_league_rank;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400386::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 win_league_id = 1;
  if (has_win_league_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->win_league_id(), output);
  }
  
  // optional string win_league_name = 2;
  if (has_win_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->win_league_name().data(), this->win_league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->win_league_name(), output);
  }
  
  // optional string win_league_leader = 3;
  if (has_win_league_leader()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->win_league_leader().data(), this->win_league_leader().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->win_league_leader(), output);
  }
  
  // repeated .ProtoItemId item_list = 4;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->item_list(i), output);
  }
  
  // optional int32 space_id = 5;
  if (has_space_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->space_id(), output);
  }
  
  // repeated .ProtoLeagueRankInfo league_rank = 6;
  for (int i = 0; i < this->league_rank_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->league_rank(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400386::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 win_league_id = 1;
  if (has_win_league_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->win_league_id(), target);
  }
  
  // optional string win_league_name = 2;
  if (has_win_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->win_league_name().data(), this->win_league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->win_league_name(), target);
  }
  
  // optional string win_league_leader = 3;
  if (has_win_league_leader()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->win_league_leader().data(), this->win_league_leader().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->win_league_leader(), target);
  }
  
  // repeated .ProtoItemId item_list = 4;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->item_list(i), target);
  }
  
  // optional int32 space_id = 5;
  if (has_space_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->space_id(), target);
  }
  
  // repeated .ProtoLeagueRankInfo league_rank = 6;
  for (int i = 0; i < this->league_rank_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->league_rank(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400386::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 win_league_id = 1;
    if (has_win_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->win_league_id());
    }
    
    // optional string win_league_name = 2;
    if (has_win_league_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->win_league_name());
    }
    
    // optional string win_league_leader = 3;
    if (has_win_league_leader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->win_league_leader());
    }
    
    // optional int32 space_id = 5;
    if (has_space_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->space_id());
    }
    
  }
  // repeated .ProtoItemId item_list = 4;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  // repeated .ProtoLeagueRankInfo league_rank = 6;
  total_size += 1 * this->league_rank_size();
  for (int i = 0; i < this->league_rank_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->league_rank(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400386::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400386* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400386*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400386::MergeFrom(const Proto80400386& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  league_rank_.MergeFrom(from.league_rank_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_win_league_id()) {
      set_win_league_id(from.win_league_id());
    }
    if (from.has_win_league_name()) {
      set_win_league_name(from.win_league_name());
    }
    if (from.has_win_league_leader()) {
      set_win_league_leader(from.win_league_leader());
    }
    if (from.has_space_id()) {
      set_space_id(from.space_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400386::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400386::CopyFrom(const Proto80400386& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400386::IsInitialized() const {
  
  return true;
}

void Proto80400386::Swap(Proto80400386* other) {
  if (other != this) {
    std::swap(win_league_id_, other->win_league_id_);
    std::swap(win_league_name_, other->win_league_name_);
    std::swap(win_league_leader_, other->win_league_leader_);
    item_list_.Swap(&other->item_list_);
    std::swap(space_id_, other->space_id_);
    league_rank_.Swap(&other->league_rank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400386::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400386_descriptor_;
  metadata.reflection = Proto80400386_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400350::kTaskIdFieldNumber;
#endif  // !_MSC_VER

Proto11400350::Proto11400350()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400350::InitAsDefaultInstance() {
}

Proto11400350::Proto11400350(const Proto11400350& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400350::SharedCtor() {
  _cached_size_ = 0;
  task_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400350::~Proto11400350() {
  SharedDtor();
}

void Proto11400350::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400350::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400350::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400350_descriptor_;
}

const Proto11400350& Proto11400350::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto11400350* Proto11400350::default_instance_ = NULL;

Proto11400350* Proto11400350::New() const {
  return new Proto11400350;
}

void Proto11400350::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    task_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400350::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 task_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
          set_has_task_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400350::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->task_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400350::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->task_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400350::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 task_id = 1;
    if (has_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400350::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400350* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400350*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400350::MergeFrom(const Proto11400350& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_task_id()) {
      set_task_id(from.task_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400350::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400350::CopyFrom(const Proto11400350& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400350::IsInitialized() const {
  
  return true;
}

void Proto11400350::Swap(Proto11400350* other) {
  if (other != this) {
    std::swap(task_id_, other->task_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400350::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400350_descriptor_;
  metadata.reflection = Proto11400350_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400350::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto51400350::Proto51400350()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400350::InitAsDefaultInstance() {
}

Proto51400350::Proto51400350(const Proto51400350& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400350::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400350::~Proto51400350() {
  SharedDtor();
}

void Proto51400350::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400350::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400350::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400350_descriptor_;
}

const Proto51400350& Proto51400350::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto51400350* Proto51400350::default_instance_ = NULL;

Proto51400350* Proto51400350::New() const {
  return new Proto51400350;
}

void Proto51400350::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400350::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400350::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400350::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400350::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400350::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400350* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400350*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400350::MergeFrom(const Proto51400350& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400350::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400350::CopyFrom(const Proto51400350& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400350::IsInitialized() const {
  
  return true;
}

void Proto51400350::Swap(Proto51400350* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400350::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400350_descriptor_;
  metadata.reflection = Proto51400350_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100656::kCurQualityFieldNumber;
#endif  // !_MSC_VER

Proto10100656::Proto10100656()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100656::InitAsDefaultInstance() {
}

Proto10100656::Proto10100656(const Proto10100656& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100656::SharedCtor() {
  _cached_size_ = 0;
  cur_quality_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100656::~Proto10100656() {
  SharedDtor();
}

void Proto10100656::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100656::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100656::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100656_descriptor_;
}

const Proto10100656& Proto10100656::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto10100656* Proto10100656::default_instance_ = NULL;

Proto10100656* Proto10100656::New() const {
  return new Proto10100656;
}

void Proto10100656::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_quality_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100656::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_quality = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_quality_)));
          set_has_cur_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100656::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_quality = 1;
  if (has_cur_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_quality(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100656::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_quality = 1;
  if (has_cur_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_quality(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100656::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_quality = 1;
    if (has_cur_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_quality());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100656::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100656* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100656*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100656::MergeFrom(const Proto10100656& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_quality()) {
      set_cur_quality(from.cur_quality());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100656::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100656::CopyFrom(const Proto10100656& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100656::IsInitialized() const {
  
  return true;
}

void Proto10100656::Swap(Proto10100656* other) {
  if (other != this) {
    std::swap(cur_quality_, other->cur_quality_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100656::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100656_descriptor_;
  metadata.reflection = Proto10100656_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100656::kCurQualityFieldNumber;
const int Proto50100656::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto50100656::Proto50100656()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100656::InitAsDefaultInstance() {
}

Proto50100656::Proto50100656(const Proto50100656& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100656::SharedCtor() {
  _cached_size_ = 0;
  cur_quality_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100656::~Proto50100656() {
  SharedDtor();
}

void Proto50100656::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100656::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100656::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100656_descriptor_;
}

const Proto50100656& Proto50100656::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto50100656* Proto50100656::default_instance_ = NULL;

Proto50100656* Proto50100656::New() const {
  return new Proto50100656;
}

void Proto50100656::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_quality_ = 0;
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100656::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_quality = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_quality_)));
          set_has_cur_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }
      
      // optional int32 status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100656::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_quality = 1;
  if (has_cur_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_quality(), output);
  }
  
  // optional int32 status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100656::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_quality = 1;
  if (has_cur_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_quality(), target);
  }
  
  // optional int32 status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100656::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_quality = 1;
    if (has_cur_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_quality());
    }
    
    // optional int32 status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100656::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100656* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100656*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100656::MergeFrom(const Proto50100656& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_quality()) {
      set_cur_quality(from.cur_quality());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100656::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100656::CopyFrom(const Proto50100656& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100656::IsInitialized() const {
  
  return true;
}

void Proto50100656::Swap(Proto50100656* other) {
  if (other != this) {
    std::swap(cur_quality_, other->cur_quality_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100656::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100656_descriptor_;
  metadata.reflection = Proto50100656_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51406001::kLevelFieldNumber;
const int Proto51406001::kExpFieldNumber;
const int Proto51406001::kStyleLvFieldNumber;
const int Proto51406001::kTaskInfoFieldNumber;
const int Proto51406001::kFindTaskFieldNumber;
#endif  // !_MSC_VER

Proto51406001::Proto51406001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51406001::InitAsDefaultInstance() {
}

Proto51406001::Proto51406001(const Proto51406001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51406001::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  exp_ = 0;
  style_lv_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51406001::~Proto51406001() {
  SharedDtor();
}

void Proto51406001::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51406001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51406001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51406001_descriptor_;
}

const Proto51406001& Proto51406001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto51406001* Proto51406001::default_instance_ = NULL;

Proto51406001* Proto51406001::New() const {
  return new Proto51406001;
}

void Proto51406001::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    exp_ = 0;
    style_lv_ = 0;
  }
  task_info_.Clear();
  find_task_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51406001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exp;
        break;
      }
      
      // optional int32 exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_style_lv;
        break;
      }
      
      // optional int32 style_lv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_style_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &style_lv_)));
          set_has_style_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_task_info;
        break;
      }
      
      // repeated .ProtoSwordPoolTask task_info = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_task_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_task_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_task_info;
        if (input->ExpectTag(42)) goto parse_find_task;
        break;
      }
      
      // repeated .ProtoSwordPoolTask find_task = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_find_task:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_find_task()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_find_task;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51406001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exp(), output);
  }
  
  // optional int32 style_lv = 3;
  if (has_style_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->style_lv(), output);
  }
  
  // repeated .ProtoSwordPoolTask task_info = 4;
  for (int i = 0; i < this->task_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->task_info(i), output);
  }
  
  // repeated .ProtoSwordPoolTask find_task = 5;
  for (int i = 0; i < this->find_task_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->find_task(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51406001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exp(), target);
  }
  
  // optional int32 style_lv = 3;
  if (has_style_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->style_lv(), target);
  }
  
  // repeated .ProtoSwordPoolTask task_info = 4;
  for (int i = 0; i < this->task_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->task_info(i), target);
  }
  
  // repeated .ProtoSwordPoolTask find_task = 5;
  for (int i = 0; i < this->find_task_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->find_task(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51406001::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 exp = 2;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }
    
    // optional int32 style_lv = 3;
    if (has_style_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->style_lv());
    }
    
  }
  // repeated .ProtoSwordPoolTask task_info = 4;
  total_size += 1 * this->task_info_size();
  for (int i = 0; i < this->task_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->task_info(i));
  }
  
  // repeated .ProtoSwordPoolTask find_task = 5;
  total_size += 1 * this->find_task_size();
  for (int i = 0; i < this->find_task_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->find_task(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51406001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51406001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51406001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51406001::MergeFrom(const Proto51406001& from) {
  GOOGLE_CHECK_NE(&from, this);
  task_info_.MergeFrom(from.task_info_);
  find_task_.MergeFrom(from.find_task_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_style_lv()) {
      set_style_lv(from.style_lv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51406001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51406001::CopyFrom(const Proto51406001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51406001::IsInitialized() const {
  
  return true;
}

void Proto51406001::Swap(Proto51406001* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(exp_, other->exp_);
    std::swap(style_lv_, other->style_lv_);
    task_info_.Swap(&other->task_info_);
    find_task_.Swap(&other->find_task_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51406001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51406001_descriptor_;
  metadata.reflection = Proto51406001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51406002::kLevelFieldNumber;
const int Proto51406002::kExpFieldNumber;
const int Proto51406002::kStyleLvFieldNumber;
#endif  // !_MSC_VER

Proto51406002::Proto51406002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51406002::InitAsDefaultInstance() {
}

Proto51406002::Proto51406002(const Proto51406002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51406002::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  exp_ = 0;
  style_lv_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51406002::~Proto51406002() {
  SharedDtor();
}

void Proto51406002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51406002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51406002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51406002_descriptor_;
}

const Proto51406002& Proto51406002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto51406002* Proto51406002::default_instance_ = NULL;

Proto51406002* Proto51406002::New() const {
  return new Proto51406002;
}

void Proto51406002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    exp_ = 0;
    style_lv_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51406002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exp;
        break;
      }
      
      // optional int32 exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_style_lv;
        break;
      }
      
      // optional int32 style_lv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_style_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &style_lv_)));
          set_has_style_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51406002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exp(), output);
  }
  
  // optional int32 style_lv = 3;
  if (has_style_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->style_lv(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51406002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exp(), target);
  }
  
  // optional int32 style_lv = 3;
  if (has_style_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->style_lv(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51406002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 exp = 2;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }
    
    // optional int32 style_lv = 3;
    if (has_style_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->style_lv());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51406002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51406002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51406002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51406002::MergeFrom(const Proto51406002& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_style_lv()) {
      set_style_lv(from.style_lv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51406002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51406002::CopyFrom(const Proto51406002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51406002::IsInitialized() const {
  
  return true;
}

void Proto51406002::Swap(Proto51406002* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(exp_, other->exp_);
    std::swap(style_lv_, other->style_lv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51406002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51406002_descriptor_;
  metadata.reflection = Proto51406002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11406003::kTaskIdFieldNumber;
#endif  // !_MSC_VER

Proto11406003::Proto11406003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11406003::InitAsDefaultInstance() {
}

Proto11406003::Proto11406003(const Proto11406003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11406003::SharedCtor() {
  _cached_size_ = 0;
  task_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11406003::~Proto11406003() {
  SharedDtor();
}

void Proto11406003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11406003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11406003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11406003_descriptor_;
}

const Proto11406003& Proto11406003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto11406003* Proto11406003::default_instance_ = NULL;

Proto11406003* Proto11406003::New() const {
  return new Proto11406003;
}

void Proto11406003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    task_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11406003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 task_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
          set_has_task_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11406003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->task_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11406003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->task_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11406003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 task_id = 1;
    if (has_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11406003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11406003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11406003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11406003::MergeFrom(const Proto11406003& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_task_id()) {
      set_task_id(from.task_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11406003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11406003::CopyFrom(const Proto11406003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11406003::IsInitialized() const {
  
  return true;
}

void Proto11406003::Swap(Proto11406003* other) {
  if (other != this) {
    std::swap(task_id_, other->task_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11406003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11406003_descriptor_;
  metadata.reflection = Proto11406003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51406003::kAddExpFieldNumber;
const int Proto51406003::kTaskIdFieldNumber;
#endif  // !_MSC_VER

Proto51406003::Proto51406003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51406003::InitAsDefaultInstance() {
}

Proto51406003::Proto51406003(const Proto51406003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51406003::SharedCtor() {
  _cached_size_ = 0;
  add_exp_ = 0;
  task_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51406003::~Proto51406003() {
  SharedDtor();
}

void Proto51406003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51406003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51406003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51406003_descriptor_;
}

const Proto51406003& Proto51406003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto51406003* Proto51406003::default_instance_ = NULL;

Proto51406003* Proto51406003::New() const {
  return new Proto51406003;
}

void Proto51406003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    add_exp_ = 0;
    task_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51406003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 add_exp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_exp_)));
          set_has_add_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_task_id;
        break;
      }
      
      // optional int32 task_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_task_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
          set_has_task_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51406003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 add_exp = 1;
  if (has_add_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->add_exp(), output);
  }
  
  // optional int32 task_id = 2;
  if (has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->task_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51406003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 add_exp = 1;
  if (has_add_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->add_exp(), target);
  }
  
  // optional int32 task_id = 2;
  if (has_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->task_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51406003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 add_exp = 1;
    if (has_add_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_exp());
    }
    
    // optional int32 task_id = 2;
    if (has_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51406003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51406003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51406003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51406003::MergeFrom(const Proto51406003& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_add_exp()) {
      set_add_exp(from.add_exp());
    }
    if (from.has_task_id()) {
      set_task_id(from.task_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51406003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51406003::CopyFrom(const Proto51406003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51406003::IsInitialized() const {
  
  return true;
}

void Proto51406003::Swap(Proto51406003* other) {
  if (other != this) {
    std::swap(add_exp_, other->add_exp_);
    std::swap(task_id_, other->task_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51406003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51406003_descriptor_;
  metadata.reflection = Proto51406003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51406004::kAddExpFieldNumber;
#endif  // !_MSC_VER

Proto51406004::Proto51406004()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51406004::InitAsDefaultInstance() {
}

Proto51406004::Proto51406004(const Proto51406004& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51406004::SharedCtor() {
  _cached_size_ = 0;
  add_exp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51406004::~Proto51406004() {
  SharedDtor();
}

void Proto51406004::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51406004::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51406004::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51406004_descriptor_;
}

const Proto51406004& Proto51406004::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto51406004* Proto51406004::default_instance_ = NULL;

Proto51406004* Proto51406004::New() const {
  return new Proto51406004;
}

void Proto51406004::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    add_exp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51406004::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 add_exp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_exp_)));
          set_has_add_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51406004::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 add_exp = 1;
  if (has_add_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->add_exp(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51406004::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 add_exp = 1;
  if (has_add_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->add_exp(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51406004::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 add_exp = 1;
    if (has_add_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_exp());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51406004::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51406004* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51406004*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51406004::MergeFrom(const Proto51406004& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_add_exp()) {
      set_add_exp(from.add_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51406004::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51406004::CopyFrom(const Proto51406004& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51406004::IsInitialized() const {
  
  return true;
}

void Proto51406004::Swap(Proto51406004* other) {
  if (other != this) {
    std::swap(add_exp_, other->add_exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51406004::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51406004_descriptor_;
  metadata.reflection = Proto51406004_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100211::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100211::Proto10100211()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100211::InitAsDefaultInstance() {
}

Proto10100211::Proto10100211(const Proto10100211& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100211::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100211::~Proto10100211() {
  SharedDtor();
}

void Proto10100211::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100211::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100211::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100211_descriptor_;
}

const Proto10100211& Proto10100211::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto10100211* Proto10100211::default_instance_ = NULL;

Proto10100211* Proto10100211::New() const {
  return new Proto10100211;
}

void Proto10100211::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100211::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100211::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100211::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100211::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100211::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100211* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100211*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100211::MergeFrom(const Proto10100211& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100211::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100211::CopyFrom(const Proto10100211& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100211::IsInitialized() const {
  
  return true;
}

void Proto10100211::Swap(Proto10100211* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100211::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100211_descriptor_;
  metadata.reflection = Proto10100211_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100211::kTypeFieldNumber;
const int Proto50100211::kLeftTimeFieldNumber;
const int Proto50100211::kActDetailFieldNumber;
const int Proto50100211::kFirstRoleFieldNumber;
#endif  // !_MSC_VER

Proto50100211::Proto50100211()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100211::InitAsDefaultInstance() {
  act_detail_ = const_cast< ::PActTypeItem*>(&::PActTypeItem::default_instance());
  first_role_ = const_cast< ::ProtoTeamer*>(&::ProtoTeamer::default_instance());
}

Proto50100211::Proto50100211(const Proto50100211& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100211::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  left_time_ = 0;
  act_detail_ = NULL;
  first_role_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100211::~Proto50100211() {
  SharedDtor();
}

void Proto50100211::SharedDtor() {
  if (this != default_instance_) {
    delete act_detail_;
    delete first_role_;
  }
}

void Proto50100211::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100211::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100211_descriptor_;
}

const Proto50100211& Proto50100211::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto50100211* Proto50100211::default_instance_ = NULL;

Proto50100211* Proto50100211::New() const {
  return new Proto50100211;
}

void Proto50100211::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    left_time_ = 0;
    if (has_act_detail()) {
      if (act_detail_ != NULL) act_detail_->::PActTypeItem::Clear();
    }
    if (has_first_role()) {
      if (first_role_ != NULL) first_role_->::ProtoTeamer::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100211::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_act_detail;
        break;
      }
      
      // optional .PActTypeItem act_detail = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_act_detail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_first_role;
        break;
      }
      
      // optional .ProtoTeamer first_role = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_first_role:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_first_role()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100211::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 left_time = 2;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_time(), output);
  }
  
  // optional .PActTypeItem act_detail = 3;
  if (has_act_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->act_detail(), output);
  }
  
  // optional .ProtoTeamer first_role = 4;
  if (has_first_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->first_role(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100211::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 left_time = 2;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_time(), target);
  }
  
  // optional .PActTypeItem act_detail = 3;
  if (has_act_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->act_detail(), target);
  }
  
  // optional .ProtoTeamer first_role = 4;
  if (has_first_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->first_role(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100211::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 left_time = 2;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional .PActTypeItem act_detail = 3;
    if (has_act_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->act_detail());
    }
    
    // optional .ProtoTeamer first_role = 4;
    if (has_first_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->first_role());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100211::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100211* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100211*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100211::MergeFrom(const Proto50100211& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_act_detail()) {
      mutable_act_detail()->::PActTypeItem::MergeFrom(from.act_detail());
    }
    if (from.has_first_role()) {
      mutable_first_role()->::ProtoTeamer::MergeFrom(from.first_role());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100211::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100211::CopyFrom(const Proto50100211& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100211::IsInitialized() const {
  
  return true;
}

void Proto50100211::Swap(Proto50100211* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(left_time_, other->left_time_);
    std::swap(act_detail_, other->act_detail_);
    std::swap(first_role_, other->first_role_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100211::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100211_descriptor_;
  metadata.reflection = Proto50100211_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100212::kIndexFieldNumber;
const int Proto10100212::kRewardIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100212::Proto10100212()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100212::InitAsDefaultInstance() {
}

Proto10100212::Proto10100212(const Proto10100212& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100212::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  reward_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100212::~Proto10100212() {
  SharedDtor();
}

void Proto10100212::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100212::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100212::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100212_descriptor_;
}

const Proto10100212& Proto10100212::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto10100212* Proto10100212::default_instance_ = NULL;

Proto10100212* Proto10100212::New() const {
  return new Proto10100212;
}

void Proto10100212::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    reward_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100212::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_reward_index;
        break;
      }
      
      // optional int32 reward_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_index_)));
          set_has_reward_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100212::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional int32 reward_index = 2;
  if (has_reward_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reward_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100212::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional int32 reward_index = 2;
  if (has_reward_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reward_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100212::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 reward_index = 2;
    if (has_reward_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100212::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100212* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100212*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100212::MergeFrom(const Proto10100212& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_reward_index()) {
      set_reward_index(from.reward_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100212::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100212::CopyFrom(const Proto10100212& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100212::IsInitialized() const {
  
  return true;
}

void Proto10100212::Swap(Proto10100212* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(reward_index_, other->reward_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100212::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100212_descriptor_;
  metadata.reflection = Proto10100212_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100212::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto50100212::Proto50100212()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100212::InitAsDefaultInstance() {
}

Proto50100212::Proto50100212(const Proto50100212& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100212::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100212::~Proto50100212() {
  SharedDtor();
}

void Proto50100212::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100212::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100212::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100212_descriptor_;
}

const Proto50100212& Proto50100212::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto50100212* Proto50100212::default_instance_ = NULL;

Proto50100212* Proto50100212::New() const {
  return new Proto50100212;
}

void Proto50100212::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100212::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100212::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100212::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100212::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100212::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100212* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100212*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100212::MergeFrom(const Proto50100212& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100212::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100212::CopyFrom(const Proto50100212& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100212::IsInitialized() const {
  
  return true;
}

void Proto50100212::Swap(Proto50100212* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100212::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100212_descriptor_;
  metadata.reflection = Proto50100212_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10401524::kCurLevelFieldNumber;
const int Proto10401524::kTillFieldNumber;
const int Proto10401524::kTargetLevelFieldNumber;
const int Proto10401524::kAutoBuyFieldNumber;
#endif  // !_MSC_VER

Proto10401524::Proto10401524()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10401524::InitAsDefaultInstance() {
}

Proto10401524::Proto10401524(const Proto10401524& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10401524::SharedCtor() {
  _cached_size_ = 0;
  cur_level_ = 0;
  till_ = 0;
  target_level_ = 0;
  auto_buy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10401524::~Proto10401524() {
  SharedDtor();
}

void Proto10401524::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10401524::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10401524::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10401524_descriptor_;
}

const Proto10401524& Proto10401524::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto10401524* Proto10401524::default_instance_ = NULL;

Proto10401524* Proto10401524::New() const {
  return new Proto10401524;
}

void Proto10401524::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_level_ = 0;
    till_ = 0;
    target_level_ = 0;
    auto_buy_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10401524::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_level_)));
          set_has_cur_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_till;
        break;
      }
      
      // optional int32 till = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_till:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &till_)));
          set_has_till();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_target_level;
        break;
      }
      
      // optional int32 target_level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_target_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_level_)));
          set_has_target_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_auto_buy;
        break;
      }
      
      // optional int32 auto_buy = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_buy_)));
          set_has_auto_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10401524::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_level = 1;
  if (has_cur_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_level(), output);
  }
  
  // optional int32 till = 2;
  if (has_till()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->till(), output);
  }
  
  // optional int32 target_level = 3;
  if (has_target_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->target_level(), output);
  }
  
  // optional int32 auto_buy = 4;
  if (has_auto_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->auto_buy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10401524::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_level = 1;
  if (has_cur_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_level(), target);
  }
  
  // optional int32 till = 2;
  if (has_till()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->till(), target);
  }
  
  // optional int32 target_level = 3;
  if (has_target_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->target_level(), target);
  }
  
  // optional int32 auto_buy = 4;
  if (has_auto_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->auto_buy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10401524::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_level = 1;
    if (has_cur_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_level());
    }
    
    // optional int32 till = 2;
    if (has_till()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->till());
    }
    
    // optional int32 target_level = 3;
    if (has_target_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_level());
    }
    
    // optional int32 auto_buy = 4;
    if (has_auto_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_buy());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10401524::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10401524* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10401524*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10401524::MergeFrom(const Proto10401524& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_level()) {
      set_cur_level(from.cur_level());
    }
    if (from.has_till()) {
      set_till(from.till());
    }
    if (from.has_target_level()) {
      set_target_level(from.target_level());
    }
    if (from.has_auto_buy()) {
      set_auto_buy(from.auto_buy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10401524::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10401524::CopyFrom(const Proto10401524& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10401524::IsInitialized() const {
  
  return true;
}

void Proto10401524::Swap(Proto10401524* other) {
  if (other != this) {
    std::swap(cur_level_, other->cur_level_);
    std::swap(till_, other->till_);
    std::swap(target_level_, other->target_level_);
    std::swap(auto_buy_, other->auto_buy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10401524::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10401524_descriptor_;
  metadata.reflection = Proto10401524_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401524::kCurLevelFieldNumber;
const int Proto50401524::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto50401524::Proto50401524()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401524::InitAsDefaultInstance() {
}

Proto50401524::Proto50401524(const Proto50401524& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401524::SharedCtor() {
  _cached_size_ = 0;
  cur_level_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401524::~Proto50401524() {
  SharedDtor();
}

void Proto50401524::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50401524::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401524::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401524_descriptor_;
}

const Proto50401524& Proto50401524::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto50401524* Proto50401524::default_instance_ = NULL;

Proto50401524* Proto50401524::New() const {
  return new Proto50401524;
}

void Proto50401524::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_level_ = 0;
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401524::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_level_)));
          set_has_cur_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }
      
      // optional int32 status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401524::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_level = 1;
  if (has_cur_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_level(), output);
  }
  
  // optional int32 status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401524::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_level = 1;
  if (has_cur_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_level(), target);
  }
  
  // optional int32 status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401524::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_level = 1;
    if (has_cur_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_level());
    }
    
    // optional int32 status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401524::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401524* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401524*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401524::MergeFrom(const Proto50401524& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_level()) {
      set_cur_level(from.cur_level());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401524::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401524::CopyFrom(const Proto50401524& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401524::IsInitialized() const {
  
  return true;
}

void Proto50401524::Swap(Proto50401524* other) {
  if (other != this) {
    std::swap(cur_level_, other->cur_level_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401524::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401524_descriptor_;
  metadata.reflection = Proto50401524_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401525::kConvoyExpFieldNumber;
const int Proto50401525::kStatusFieldNumber;
const int Proto50401525::kConvoyScaleFieldNumber;
const int Proto50401525::kIsDoubleFieldNumber;
const int Proto50401525::kLeftTimeFieldNumber;
const int Proto50401525::kRobIdFieldNumber;
const int Proto50401525::kRobNameFieldNumber;
#endif  // !_MSC_VER

Proto50401525::Proto50401525()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401525::InitAsDefaultInstance() {
}

Proto50401525::Proto50401525(const Proto50401525& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401525::SharedCtor() {
  _cached_size_ = 0;
  convoy_exp_ = GOOGLE_LONGLONG(0);
  status_ = 0;
  convoy_scale_ = 0;
  is_double_ = 0;
  left_time_ = 0;
  rob_id_ = GOOGLE_LONGLONG(0);
  rob_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401525::~Proto50401525() {
  SharedDtor();
}

void Proto50401525::SharedDtor() {
  if (rob_name_ != &::google::protobuf::internal::kEmptyString) {
    delete rob_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto50401525::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401525::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401525_descriptor_;
}

const Proto50401525& Proto50401525::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto50401525* Proto50401525::default_instance_ = NULL;

Proto50401525* Proto50401525::New() const {
  return new Proto50401525;
}

void Proto50401525::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    convoy_exp_ = GOOGLE_LONGLONG(0);
    status_ = 0;
    convoy_scale_ = 0;
    is_double_ = 0;
    left_time_ = 0;
    rob_id_ = GOOGLE_LONGLONG(0);
    if (has_rob_name()) {
      if (rob_name_ != &::google::protobuf::internal::kEmptyString) {
        rob_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401525::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 convoy_exp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &convoy_exp_)));
          set_has_convoy_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }
      
      // optional int32 status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_convoy_scale;
        break;
      }
      
      // optional int32 convoy_scale = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_convoy_scale:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &convoy_scale_)));
          set_has_convoy_scale();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_is_double;
        break;
      }
      
      // optional int32 is_double = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_double_)));
          set_has_is_double();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_rob_id;
        break;
      }
      
      // optional int64 rob_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rob_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rob_id_)));
          set_has_rob_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_rob_name;
        break;
      }
      
      // optional string rob_name = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rob_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rob_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rob_name().data(), this->rob_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401525::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 convoy_exp = 1;
  if (has_convoy_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->convoy_exp(), output);
  }
  
  // optional int32 status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }
  
  // optional int32 convoy_scale = 3;
  if (has_convoy_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->convoy_scale(), output);
  }
  
  // optional int32 is_double = 4;
  if (has_is_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->is_double(), output);
  }
  
  // optional int32 left_time = 5;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->left_time(), output);
  }
  
  // optional int64 rob_id = 6;
  if (has_rob_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->rob_id(), output);
  }
  
  // optional string rob_name = 7;
  if (has_rob_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rob_name().data(), this->rob_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->rob_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401525::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 convoy_exp = 1;
  if (has_convoy_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->convoy_exp(), target);
  }
  
  // optional int32 status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }
  
  // optional int32 convoy_scale = 3;
  if (has_convoy_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->convoy_scale(), target);
  }
  
  // optional int32 is_double = 4;
  if (has_is_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->is_double(), target);
  }
  
  // optional int32 left_time = 5;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->left_time(), target);
  }
  
  // optional int64 rob_id = 6;
  if (has_rob_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->rob_id(), target);
  }
  
  // optional string rob_name = 7;
  if (has_rob_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rob_name().data(), this->rob_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rob_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401525::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 convoy_exp = 1;
    if (has_convoy_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->convoy_exp());
    }
    
    // optional int32 status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int32 convoy_scale = 3;
    if (has_convoy_scale()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->convoy_scale());
    }
    
    // optional int32 is_double = 4;
    if (has_is_double()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_double());
    }
    
    // optional int32 left_time = 5;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int64 rob_id = 6;
    if (has_rob_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rob_id());
    }
    
    // optional string rob_name = 7;
    if (has_rob_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rob_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401525::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401525* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401525*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401525::MergeFrom(const Proto50401525& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_convoy_exp()) {
      set_convoy_exp(from.convoy_exp());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_convoy_scale()) {
      set_convoy_scale(from.convoy_scale());
    }
    if (from.has_is_double()) {
      set_is_double(from.is_double());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_rob_id()) {
      set_rob_id(from.rob_id());
    }
    if (from.has_rob_name()) {
      set_rob_name(from.rob_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401525::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401525::CopyFrom(const Proto50401525& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401525::IsInitialized() const {
  
  return true;
}

void Proto50401525::Swap(Proto50401525* other) {
  if (other != this) {
    std::swap(convoy_exp_, other->convoy_exp_);
    std::swap(status_, other->status_);
    std::swap(convoy_scale_, other->convoy_scale_);
    std::swap(is_double_, other->is_double_);
    std::swap(left_time_, other->left_time_);
    std::swap(rob_id_, other->rob_id_);
    std::swap(rob_name_, other->rob_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401525::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401525_descriptor_;
  metadata.reflection = Proto50401525_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11406005::kTargetLvFieldNumber;
#endif  // !_MSC_VER

Proto11406005::Proto11406005()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11406005::InitAsDefaultInstance() {
}

Proto11406005::Proto11406005(const Proto11406005& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11406005::SharedCtor() {
  _cached_size_ = 0;
  target_lv_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11406005::~Proto11406005() {
  SharedDtor();
}

void Proto11406005::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11406005::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11406005::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11406005_descriptor_;
}

const Proto11406005& Proto11406005::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto11406005* Proto11406005::default_instance_ = NULL;

Proto11406005* Proto11406005::New() const {
  return new Proto11406005;
}

void Proto11406005::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    target_lv_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11406005::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 target_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_lv_)));
          set_has_target_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11406005::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 target_lv = 1;
  if (has_target_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->target_lv(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11406005::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 target_lv = 1;
  if (has_target_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->target_lv(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11406005::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 target_lv = 1;
    if (has_target_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_lv());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11406005::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11406005* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11406005*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11406005::MergeFrom(const Proto11406005& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_target_lv()) {
      set_target_lv(from.target_lv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11406005::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11406005::CopyFrom(const Proto11406005& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11406005::IsInitialized() const {
  
  return true;
}

void Proto11406005::Swap(Proto11406005* other) {
  if (other != this) {
    std::swap(target_lv_, other->target_lv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11406005::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11406005_descriptor_;
  metadata.reflection = Proto11406005_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51406005::kStyleLvFieldNumber;
#endif  // !_MSC_VER

Proto51406005::Proto51406005()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51406005::InitAsDefaultInstance() {
}

Proto51406005::Proto51406005(const Proto51406005& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51406005::SharedCtor() {
  _cached_size_ = 0;
  style_lv_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51406005::~Proto51406005() {
  SharedDtor();
}

void Proto51406005::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51406005::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51406005::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51406005_descriptor_;
}

const Proto51406005& Proto51406005::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto51406005* Proto51406005::default_instance_ = NULL;

Proto51406005* Proto51406005::New() const {
  return new Proto51406005;
}

void Proto51406005::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    style_lv_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51406005::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 style_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &style_lv_)));
          set_has_style_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51406005::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 style_lv = 1;
  if (has_style_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->style_lv(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51406005::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 style_lv = 1;
  if (has_style_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->style_lv(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51406005::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 style_lv = 1;
    if (has_style_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->style_lv());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51406005::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51406005* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51406005*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51406005::MergeFrom(const Proto51406005& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_style_lv()) {
      set_style_lv(from.style_lv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51406005::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51406005::CopyFrom(const Proto51406005& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51406005::IsInitialized() const {
  
  return true;
}

void Proto51406005::Swap(Proto51406005* other) {
  if (other != this) {
    std::swap(style_lv_, other->style_lv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51406005::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51406005_descriptor_;
  metadata.reflection = Proto51406005_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10401526::kPlayerIdFieldNumber;
const int Proto10401526::kAiIdFieldNumber;
#endif  // !_MSC_VER

Proto10401526::Proto10401526()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10401526::InitAsDefaultInstance() {
}

Proto10401526::Proto10401526(const Proto10401526& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10401526::SharedCtor() {
  _cached_size_ = 0;
  player_id_ = GOOGLE_LONGLONG(0);
  ai_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10401526::~Proto10401526() {
  SharedDtor();
}

void Proto10401526::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10401526::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10401526::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10401526_descriptor_;
}

const Proto10401526& Proto10401526::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto10401526* Proto10401526::default_instance_ = NULL;

Proto10401526* Proto10401526::New() const {
  return new Proto10401526;
}

void Proto10401526::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    player_id_ = GOOGLE_LONGLONG(0);
    ai_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10401526::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 player_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
          set_has_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ai_id;
        break;
      }
      
      // optional int64 ai_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ai_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ai_id_)));
          set_has_ai_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10401526::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->player_id(), output);
  }
  
  // optional int64 ai_id = 2;
  if (has_ai_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ai_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10401526::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->player_id(), target);
  }
  
  // optional int64 ai_id = 2;
  if (has_ai_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ai_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10401526::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_id());
    }
    
    // optional int64 ai_id = 2;
    if (has_ai_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ai_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10401526::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10401526* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10401526*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10401526::MergeFrom(const Proto10401526& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
    if (from.has_ai_id()) {
      set_ai_id(from.ai_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10401526::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10401526::CopyFrom(const Proto10401526& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10401526::IsInitialized() const {
  
  return true;
}

void Proto10401526::Swap(Proto10401526* other) {
  if (other != this) {
    std::swap(player_id_, other->player_id_);
    std::swap(ai_id_, other->ai_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10401526::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10401526_descriptor_;
  metadata.reflection = Proto10401526_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401526::kSceneIdFieldNumber;
const int Proto50401526::kCoordFieldNumber;
const int Proto50401526::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto50401526::Proto50401526()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401526::InitAsDefaultInstance() {
  coord_ = const_cast< ::ProtoCoord*>(&::ProtoCoord::default_instance());
}

Proto50401526::Proto50401526(const Proto50401526& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401526::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  coord_ = NULL;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401526::~Proto50401526() {
  SharedDtor();
}

void Proto50401526::SharedDtor() {
  if (this != default_instance_) {
    delete coord_;
  }
}

void Proto50401526::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401526::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401526_descriptor_;
}

const Proto50401526& Proto50401526::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto50401526* Proto50401526::default_instance_ = NULL;

Proto50401526* Proto50401526::New() const {
  return new Proto50401526;
}

void Proto50401526::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    if (has_coord()) {
      if (coord_ != NULL) coord_->::ProtoCoord::Clear();
    }
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401526::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_coord;
        break;
      }
      
      // optional .ProtoCoord coord = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_status;
        break;
      }
      
      // optional int32 status = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401526::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional .ProtoCoord coord = 2;
  if (has_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->coord(), output);
  }
  
  // optional int32 status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401526::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional .ProtoCoord coord = 2;
  if (has_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->coord(), target);
  }
  
  // optional int32 status = 3;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401526::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional .ProtoCoord coord = 2;
    if (has_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->coord());
    }
    
    // optional int32 status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401526::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401526* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401526*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401526::MergeFrom(const Proto50401526& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_coord()) {
      mutable_coord()->::ProtoCoord::MergeFrom(from.coord());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401526::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401526::CopyFrom(const Proto50401526& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401526::IsInitialized() const {
  
  return true;
}

void Proto50401526::Swap(Proto50401526* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(coord_, other->coord_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401526::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401526_descriptor_;
  metadata.reflection = Proto50401526_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100213::kActListFieldNumber;
const int Proto50100213::kMainActFieldNumber;
#endif  // !_MSC_VER

Proto50100213::Proto50100213()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100213::InitAsDefaultInstance() {
}

Proto50100213::Proto50100213(const Proto50100213& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100213::SharedCtor() {
  _cached_size_ = 0;
  main_act_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100213::~Proto50100213() {
  SharedDtor();
}

void Proto50100213::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100213::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100213::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100213_descriptor_;
}

const Proto50100213& Proto50100213::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto50100213* Proto50100213::default_instance_ = NULL;

Proto50100213* Proto50100213::New() const {
  return new Proto50100213;
}

void Proto50100213::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    main_act_ = 0;
  }
  act_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100213::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 act_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_act_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_act_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_act_list;
        if (input->ExpectTag(16)) goto parse_main_act;
        break;
      }
      
      // optional int32 main_act = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_main_act:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &main_act_)));
          set_has_main_act();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100213::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 act_list = 1;
  for (int i = 0; i < this->act_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->act_list(i), output);
  }
  
  // optional int32 main_act = 2;
  if (has_main_act()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->main_act(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100213::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 act_list = 1;
  for (int i = 0; i < this->act_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->act_list(i), target);
  }
  
  // optional int32 main_act = 2;
  if (has_main_act()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->main_act(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100213::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 main_act = 2;
    if (has_main_act()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->main_act());
    }
    
  }
  // repeated int32 act_list = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->act_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->act_list(i));
    }
    total_size += 1 * this->act_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100213::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100213* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100213*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100213::MergeFrom(const Proto50100213& from) {
  GOOGLE_CHECK_NE(&from, this);
  act_list_.MergeFrom(from.act_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_main_act()) {
      set_main_act(from.main_act());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100213::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100213::CopyFrom(const Proto50100213& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100213::IsInitialized() const {
  
  return true;
}

void Proto50100213::Swap(Proto50100213* other) {
  if (other != this) {
    act_list_.Swap(&other->act_list_);
    std::swap(main_act_, other->main_act_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100213::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100213_descriptor_;
  metadata.reflection = Proto50100213_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400940::kNum1FieldNumber;
const int Proto10400940::kNum2FieldNumber;
#endif  // !_MSC_VER

Proto10400940::Proto10400940()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400940::InitAsDefaultInstance() {
}

Proto10400940::Proto10400940(const Proto10400940& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400940::SharedCtor() {
  _cached_size_ = 0;
  num1_ = 0;
  num2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400940::~Proto10400940() {
  SharedDtor();
}

void Proto10400940::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400940::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400940::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400940_descriptor_;
}

const Proto10400940& Proto10400940::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto10400940* Proto10400940::default_instance_ = NULL;

Proto10400940* Proto10400940::New() const {
  return new Proto10400940;
}

void Proto10400940::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    num1_ = 0;
    num2_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400940::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num1 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num1_)));
          set_has_num1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_num2;
        break;
      }
      
      // optional int32 num2 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num2_)));
          set_has_num2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400940::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 num1 = 1;
  if (has_num1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num1(), output);
  }
  
  // optional int32 num2 = 2;
  if (has_num2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num2(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400940::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 num1 = 1;
  if (has_num1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num1(), target);
  }
  
  // optional int32 num2 = 2;
  if (has_num2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num2(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400940::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 num1 = 1;
    if (has_num1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num1());
    }
    
    // optional int32 num2 = 2;
    if (has_num2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num2());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400940::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400940* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400940*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400940::MergeFrom(const Proto10400940& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num1()) {
      set_num1(from.num1());
    }
    if (from.has_num2()) {
      set_num2(from.num2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400940::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400940::CopyFrom(const Proto10400940& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400940::IsInitialized() const {
  
  return true;
}

void Proto10400940::Swap(Proto10400940* other) {
  if (other != this) {
    std::swap(num1_, other->num1_);
    std::swap(num2_, other->num2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400940::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400940_descriptor_;
  metadata.reflection = Proto10400940_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400940::kLegendRankFieldNumber;
const int Proto50400940::kMyRankFieldNumber;
#endif  // !_MSC_VER

Proto50400940::Proto50400940()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400940::InitAsDefaultInstance() {
  my_rank_ = const_cast< ::ProtoLegendTopRank*>(&::ProtoLegendTopRank::default_instance());
}

Proto50400940::Proto50400940(const Proto50400940& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400940::SharedCtor() {
  _cached_size_ = 0;
  my_rank_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400940::~Proto50400940() {
  SharedDtor();
}

void Proto50400940::SharedDtor() {
  if (this != default_instance_) {
    delete my_rank_;
  }
}

void Proto50400940::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400940::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400940_descriptor_;
}

const Proto50400940& Proto50400940::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto50400940* Proto50400940::default_instance_ = NULL;

Proto50400940* Proto50400940::New() const {
  return new Proto50400940;
}

void Proto50400940::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_my_rank()) {
      if (my_rank_ != NULL) my_rank_->::ProtoLegendTopRank::Clear();
    }
  }
  legend_rank_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400940::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoLegendTopRank legend_rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_legend_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_legend_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_legend_rank;
        if (input->ExpectTag(18)) goto parse_my_rank;
        break;
      }
      
      // optional .ProtoLegendTopRank my_rank = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_my_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_my_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400940::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoLegendTopRank legend_rank = 1;
  for (int i = 0; i < this->legend_rank_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->legend_rank(i), output);
  }
  
  // optional .ProtoLegendTopRank my_rank = 2;
  if (has_my_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->my_rank(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400940::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoLegendTopRank legend_rank = 1;
  for (int i = 0; i < this->legend_rank_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->legend_rank(i), target);
  }
  
  // optional .ProtoLegendTopRank my_rank = 2;
  if (has_my_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->my_rank(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400940::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .ProtoLegendTopRank my_rank = 2;
    if (has_my_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->my_rank());
    }
    
  }
  // repeated .ProtoLegendTopRank legend_rank = 1;
  total_size += 1 * this->legend_rank_size();
  for (int i = 0; i < this->legend_rank_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->legend_rank(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400940::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400940* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400940*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400940::MergeFrom(const Proto50400940& from) {
  GOOGLE_CHECK_NE(&from, this);
  legend_rank_.MergeFrom(from.legend_rank_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_my_rank()) {
      mutable_my_rank()->::ProtoLegendTopRank::MergeFrom(from.my_rank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400940::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400940::CopyFrom(const Proto50400940& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400940::IsInitialized() const {
  
  return true;
}

void Proto50400940::Swap(Proto50400940* other) {
  if (other != this) {
    legend_rank_.Swap(&other->legend_rank_);
    std::swap(my_rank_, other->my_rank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400940::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400940_descriptor_;
  metadata.reflection = Proto50400940_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401528::kPlayerIdFieldNumber;
const int Proto50401528::kPlayerNameFieldNumber;
const int Proto50401528::kProtectIdFieldNumber;
const int Proto50401528::kProtectNameFieldNumber;
const int Proto50401528::kPlayerTypeFieldNumber;
#endif  // !_MSC_VER

Proto50401528::Proto50401528()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401528::InitAsDefaultInstance() {
}

Proto50401528::Proto50401528(const Proto50401528& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401528::SharedCtor() {
  _cached_size_ = 0;
  player_id_ = GOOGLE_LONGLONG(0);
  player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  protect_id_ = GOOGLE_LONGLONG(0);
  protect_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  player_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401528::~Proto50401528() {
  SharedDtor();
}

void Proto50401528::SharedDtor() {
  if (player_name_ != &::google::protobuf::internal::kEmptyString) {
    delete player_name_;
  }
  if (protect_name_ != &::google::protobuf::internal::kEmptyString) {
    delete protect_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto50401528::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401528::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401528_descriptor_;
}

const Proto50401528& Proto50401528::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto50401528* Proto50401528::default_instance_ = NULL;

Proto50401528* Proto50401528::New() const {
  return new Proto50401528;
}

void Proto50401528::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    player_id_ = GOOGLE_LONGLONG(0);
    if (has_player_name()) {
      if (player_name_ != &::google::protobuf::internal::kEmptyString) {
        player_name_->clear();
      }
    }
    protect_id_ = GOOGLE_LONGLONG(0);
    if (has_protect_name()) {
      if (protect_name_ != &::google::protobuf::internal::kEmptyString) {
        protect_name_->clear();
      }
    }
    player_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401528::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 player_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
          set_has_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_player_name;
        break;
      }
      
      // optional string player_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_player_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_player_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->player_name().data(), this->player_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_protect_id;
        break;
      }
      
      // optional int64 protect_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_protect_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &protect_id_)));
          set_has_protect_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_protect_name;
        break;
      }
      
      // optional string protect_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_protect_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protect_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->protect_name().data(), this->protect_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_player_type;
        break;
      }
      
      // optional int32 player_type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_type_)));
          set_has_player_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401528::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->player_id(), output);
  }
  
  // optional string player_name = 2;
  if (has_player_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->player_name().data(), this->player_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->player_name(), output);
  }
  
  // optional int64 protect_id = 3;
  if (has_protect_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->protect_id(), output);
  }
  
  // optional string protect_name = 4;
  if (has_protect_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->protect_name().data(), this->protect_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->protect_name(), output);
  }
  
  // optional int32 player_type = 5;
  if (has_player_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->player_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401528::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->player_id(), target);
  }
  
  // optional string player_name = 2;
  if (has_player_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->player_name().data(), this->player_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->player_name(), target);
  }
  
  // optional int64 protect_id = 3;
  if (has_protect_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->protect_id(), target);
  }
  
  // optional string protect_name = 4;
  if (has_protect_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->protect_name().data(), this->protect_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->protect_name(), target);
  }
  
  // optional int32 player_type = 5;
  if (has_player_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->player_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401528::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_id());
    }
    
    // optional string player_name = 2;
    if (has_player_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->player_name());
    }
    
    // optional int64 protect_id = 3;
    if (has_protect_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->protect_id());
    }
    
    // optional string protect_name = 4;
    if (has_protect_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->protect_name());
    }
    
    // optional int32 player_type = 5;
    if (has_player_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401528::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401528* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401528*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401528::MergeFrom(const Proto50401528& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
    if (from.has_player_name()) {
      set_player_name(from.player_name());
    }
    if (from.has_protect_id()) {
      set_protect_id(from.protect_id());
    }
    if (from.has_protect_name()) {
      set_protect_name(from.protect_name());
    }
    if (from.has_player_type()) {
      set_player_type(from.player_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401528::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401528::CopyFrom(const Proto50401528& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401528::IsInitialized() const {
  
  return true;
}

void Proto50401528::Swap(Proto50401528* other) {
  if (other != this) {
    std::swap(player_id_, other->player_id_);
    std::swap(player_name_, other->player_name_);
    std::swap(protect_id_, other->protect_id_);
    std::swap(protect_name_, other->protect_name_);
    std::swap(player_type_, other->player_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401528::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401528_descriptor_;
  metadata.reflection = Proto50401528_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100164::kFriendIdFieldNumber;
#endif  // !_MSC_VER

Proto10100164::Proto10100164()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100164::InitAsDefaultInstance() {
}

Proto10100164::Proto10100164(const Proto10100164& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100164::SharedCtor() {
  _cached_size_ = 0;
  friend_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100164::~Proto10100164() {
  SharedDtor();
}

void Proto10100164::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100164::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100164::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100164_descriptor_;
}

const Proto10100164& Proto10100164::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto10100164* Proto10100164::default_instance_ = NULL;

Proto10100164* Proto10100164::New() const {
  return new Proto10100164;
}

void Proto10100164::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    friend_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100164::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 friend_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &friend_id_)));
          set_has_friend_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100164::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 friend_id = 1;
  if (has_friend_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->friend_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100164::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 friend_id = 1;
  if (has_friend_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->friend_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100164::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 friend_id = 1;
    if (has_friend_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->friend_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100164::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100164* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100164*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100164::MergeFrom(const Proto10100164& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_friend_id()) {
      set_friend_id(from.friend_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100164::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100164::CopyFrom(const Proto10100164& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100164::IsInitialized() const {
  
  return true;
}

void Proto10100164::Swap(Proto10100164* other) {
  if (other != this) {
    std::swap(friend_id_, other->friend_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100164::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100164_descriptor_;
  metadata.reflection = Proto10100164_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100165::kFriendIdSetFieldNumber;
#endif  // !_MSC_VER

Proto10100165::Proto10100165()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100165::InitAsDefaultInstance() {
}

Proto10100165::Proto10100165(const Proto10100165& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100165::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100165::~Proto10100165() {
  SharedDtor();
}

void Proto10100165::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100165::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100165::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100165_descriptor_;
}

const Proto10100165& Proto10100165::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto10100165* Proto10100165::default_instance_ = NULL;

Proto10100165* Proto10100165::New() const {
  return new Proto10100165;
}

void Proto10100165::Clear() {
  friend_id_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100165::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 friend_id_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_friend_id_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_friend_id_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_friend_id_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_friend_id_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100165::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 friend_id_set = 1;
  for (int i = 0; i < this->friend_id_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->friend_id_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100165::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 friend_id_set = 1;
  for (int i = 0; i < this->friend_id_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->friend_id_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100165::ByteSize() const {
  int total_size = 0;
  
  // repeated int64 friend_id_set = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->friend_id_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->friend_id_set(i));
    }
    total_size += 1 * this->friend_id_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100165::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100165* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100165*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100165::MergeFrom(const Proto10100165& from) {
  GOOGLE_CHECK_NE(&from, this);
  friend_id_set_.MergeFrom(from.friend_id_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100165::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100165::CopyFrom(const Proto10100165& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100165::IsInitialized() const {
  
  return true;
}

void Proto10100165::Swap(Proto10100165* other) {
  if (other != this) {
    friend_id_set_.Swap(&other->friend_id_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100165::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100165_descriptor_;
  metadata.reflection = Proto10100165_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100165::kFriendListFieldNumber;
#endif  // !_MSC_VER

Proto50100165::Proto50100165()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100165::InitAsDefaultInstance() {
}

Proto50100165::Proto50100165(const Proto50100165& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100165::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100165::~Proto50100165() {
  SharedDtor();
}

void Proto50100165::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100165::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100165::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100165_descriptor_;
}

const Proto50100165& Proto50100165::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto50100165* Proto50100165::default_instance_ = NULL;

Proto50100165* Proto50100165::New() const {
  return new Proto50100165;
}

void Proto50100165::Clear() {
  friend_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100165::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoFriendInfo friend_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_friend_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friend_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_friend_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100165::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoFriendInfo friend_list = 1;
  for (int i = 0; i < this->friend_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friend_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100165::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoFriendInfo friend_list = 1;
  for (int i = 0; i < this->friend_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->friend_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100165::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoFriendInfo friend_list = 1;
  total_size += 1 * this->friend_list_size();
  for (int i = 0; i < this->friend_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->friend_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100165::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100165* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100165*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100165::MergeFrom(const Proto50100165& from) {
  GOOGLE_CHECK_NE(&from, this);
  friend_list_.MergeFrom(from.friend_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100165::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100165::CopyFrom(const Proto50100165& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100165::IsInitialized() const {
  
  return true;
}

void Proto50100165::Swap(Proto50100165* other) {
  if (other != this) {
    friend_list_.Swap(&other->friend_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100165::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100165_descriptor_;
  metadata.reflection = Proto50100165_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100109::kFriendInfoFieldNumber;
#endif  // !_MSC_VER

Proto80100109::Proto80100109()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100109::InitAsDefaultInstance() {
  friend_info_ = const_cast< ::ProtoApplyInfo*>(&::ProtoApplyInfo::default_instance());
}

Proto80100109::Proto80100109(const Proto80100109& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100109::SharedCtor() {
  _cached_size_ = 0;
  friend_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100109::~Proto80100109() {
  SharedDtor();
}

void Proto80100109::SharedDtor() {
  if (this != default_instance_) {
    delete friend_info_;
  }
}

void Proto80100109::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100109::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100109_descriptor_;
}

const Proto80100109& Proto80100109::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto80100109* Proto80100109::default_instance_ = NULL;

Proto80100109* Proto80100109::New() const {
  return new Proto80100109;
}

void Proto80100109::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_friend_info()) {
      if (friend_info_ != NULL) friend_info_->::ProtoApplyInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100109::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoApplyInfo friend_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_friend_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100109::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoApplyInfo friend_info = 1;
  if (has_friend_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friend_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100109::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoApplyInfo friend_info = 1;
  if (has_friend_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->friend_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100109::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoApplyInfo friend_info = 1;
    if (has_friend_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friend_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100109::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100109* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100109*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100109::MergeFrom(const Proto80100109& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_friend_info()) {
      mutable_friend_info()->::ProtoApplyInfo::MergeFrom(from.friend_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100109::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100109::CopyFrom(const Proto80100109& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100109::IsInitialized() const {
  
  return true;
}

void Proto80100109::Swap(Proto80100109* other) {
  if (other != this) {
    std::swap(friend_info_, other->friend_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100109::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100109_descriptor_;
  metadata.reflection = Proto80100109_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100166::kFriendIdSetFieldNumber;
#endif  // !_MSC_VER

Proto10100166::Proto10100166()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100166::InitAsDefaultInstance() {
}

Proto10100166::Proto10100166(const Proto10100166& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100166::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100166::~Proto10100166() {
  SharedDtor();
}

void Proto10100166::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100166::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100166::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100166_descriptor_;
}

const Proto10100166& Proto10100166::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto10100166* Proto10100166::default_instance_ = NULL;

Proto10100166* Proto10100166::New() const {
  return new Proto10100166;
}

void Proto10100166::Clear() {
  friend_id_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100166::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 friend_id_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_friend_id_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_friend_id_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_friend_id_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_friend_id_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100166::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 friend_id_set = 1;
  for (int i = 0; i < this->friend_id_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->friend_id_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100166::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 friend_id_set = 1;
  for (int i = 0; i < this->friend_id_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->friend_id_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100166::ByteSize() const {
  int total_size = 0;
  
  // repeated int64 friend_id_set = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->friend_id_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->friend_id_set(i));
    }
    total_size += 1 * this->friend_id_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100166::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100166* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100166*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100166::MergeFrom(const Proto10100166& from) {
  GOOGLE_CHECK_NE(&from, this);
  friend_id_set_.MergeFrom(from.friend_id_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100166::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100166::CopyFrom(const Proto10100166& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100166::IsInitialized() const {
  
  return true;
}

void Proto10100166::Swap(Proto10100166* other) {
  if (other != this) {
    friend_id_set_.Swap(&other->friend_id_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100166::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100166_descriptor_;
  metadata.reflection = Proto10100166_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100166::kRoleSetFieldNumber;
#endif  // !_MSC_VER

Proto50100166::Proto50100166()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100166::InitAsDefaultInstance() {
}

Proto50100166::Proto50100166(const Proto50100166& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100166::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100166::~Proto50100166() {
  SharedDtor();
}

void Proto50100166::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100166::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100166::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100166_descriptor_;
}

const Proto50100166& Proto50100166::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto50100166* Proto50100166::default_instance_ = NULL;

Proto50100166* Proto50100166::New() const {
  return new Proto50100166;
}

void Proto50100166::Clear() {
  role_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100166::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 role_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_role_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_role_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100166::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 role_set = 1;
  for (int i = 0; i < this->role_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->role_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100166::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 role_set = 1;
  for (int i = 0; i < this->role_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->role_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100166::ByteSize() const {
  int total_size = 0;
  
  // repeated int64 role_set = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_set(i));
    }
    total_size += 1 * this->role_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100166::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100166* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100166*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100166::MergeFrom(const Proto50100166& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_set_.MergeFrom(from.role_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100166::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100166::CopyFrom(const Proto50100166& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100166::IsInitialized() const {
  
  return true;
}

void Proto50100166::Swap(Proto50100166* other) {
  if (other != this) {
    role_set_.Swap(&other->role_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100166::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100166_descriptor_;
  metadata.reflection = Proto50100166_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100167::kApplyListFieldNumber;
#endif  // !_MSC_VER

Proto50100167::Proto50100167()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100167::InitAsDefaultInstance() {
}

Proto50100167::Proto50100167(const Proto50100167& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100167::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100167::~Proto50100167() {
  SharedDtor();
}

void Proto50100167::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100167::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100167::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100167_descriptor_;
}

const Proto50100167& Proto50100167::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto50100167* Proto50100167::default_instance_ = NULL;

Proto50100167* Proto50100167::New() const {
  return new Proto50100167;
}

void Proto50100167::Clear() {
  apply_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100167::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoApplyInfo apply_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_apply_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_apply_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_apply_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100167::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoApplyInfo apply_list = 1;
  for (int i = 0; i < this->apply_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->apply_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100167::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoApplyInfo apply_list = 1;
  for (int i = 0; i < this->apply_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->apply_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100167::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoApplyInfo apply_list = 1;
  total_size += 1 * this->apply_list_size();
  for (int i = 0; i < this->apply_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->apply_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100167::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100167* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100167*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100167::MergeFrom(const Proto50100167& from) {
  GOOGLE_CHECK_NE(&from, this);
  apply_list_.MergeFrom(from.apply_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100167::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100167::CopyFrom(const Proto50100167& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100167::IsInitialized() const {
  
  return true;
}

void Proto50100167::Swap(Proto50100167* other) {
  if (other != this) {
    apply_list_.Swap(&other->apply_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100167::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100167_descriptor_;
  metadata.reflection = Proto50100167_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100110::kRoleIdFieldNumber;
const int Proto80100110::kRoleNameFieldNumber;
const int Proto80100110::kLevelFieldNumber;
#endif  // !_MSC_VER

Proto80100110::Proto80100110()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100110::InitAsDefaultInstance() {
}

Proto80100110::Proto80100110(const Proto80100110& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100110::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100110::~Proto80100110() {
  SharedDtor();
}

void Proto80100110::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80100110::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100110::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100110_descriptor_;
}

const Proto80100110& Proto80100110::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto80100110* Proto80100110::default_instance_ = NULL;

Proto80100110* Proto80100110::New() const {
  return new Proto80100110;
}

void Proto80100110::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
    level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100110::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_role_name;
        break;
      }
      
      // optional string role_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }
      
      // optional int32 level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100110::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional string role_name = 2;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->role_name(), output);
  }
  
  // optional int32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100110::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional string role_name = 2;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->role_name(), target);
  }
  
  // optional int32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100110::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional string role_name = 2;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
    // optional int32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100110::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100110* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100110*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100110::MergeFrom(const Proto80100110& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100110::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100110::CopyFrom(const Proto80100110& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100110::IsInitialized() const {
  
  return true;
}

void Proto80100110::Swap(Proto80100110* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(role_name_, other->role_name_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100110::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100110_descriptor_;
  metadata.reflection = Proto80100110_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401701::kEventIdFieldNumber;
#endif  // !_MSC_VER

Proto11401701::Proto11401701()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401701::InitAsDefaultInstance() {
}

Proto11401701::Proto11401701(const Proto11401701& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401701::SharedCtor() {
  _cached_size_ = 0;
  event_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401701::~Proto11401701() {
  SharedDtor();
}

void Proto11401701::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401701::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401701::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401701_descriptor_;
}

const Proto11401701& Proto11401701::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto11401701* Proto11401701::default_instance_ = NULL;

Proto11401701* Proto11401701::New() const {
  return new Proto11401701;
}

void Proto11401701::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    event_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401701::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 event_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &event_id_)));
          set_has_event_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401701::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 event_id = 1;
  if (has_event_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->event_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401701::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 event_id = 1;
  if (has_event_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->event_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401701::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 event_id = 1;
    if (has_event_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->event_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401701::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401701* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401701*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401701::MergeFrom(const Proto11401701& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_event_id()) {
      set_event_id(from.event_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401701::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401701::CopyFrom(const Proto11401701& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401701::IsInitialized() const {
  
  return true;
}

void Proto11401701::Swap(Proto11401701* other) {
  if (other != this) {
    std::swap(event_id_, other->event_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401701::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401701_descriptor_;
  metadata.reflection = Proto11401701_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400408::kSceneIdFieldNumber;
const int Proto80400408::kSpaceIdFieldNumber;
const int Proto80400408::kCoordFieldNumber;
const int Proto80400408::kStartTickFieldNumber;
const int Proto80400408::kCarIdFieldNumber;
const int Proto80400408::kProtectTimesFieldNumber;
const int Proto80400408::kEscortTimesFieldNumber;
const int Proto80400408::kRobTimesFieldNumber;
const int Proto80400408::kProtectIdFieldNumber;
const int Proto80400408::kProtectNameFieldNumber;
const int Proto80400408::kOtherProtectFieldNumber;
const int Proto80400408::kOtherProtectNameFieldNumber;
#endif  // !_MSC_VER

Proto80400408::Proto80400408()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400408::InitAsDefaultInstance() {
  coord_ = const_cast< ::ProtoCoord*>(&::ProtoCoord::default_instance());
}

Proto80400408::Proto80400408(const Proto80400408& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400408::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  space_id_ = 0;
  coord_ = NULL;
  start_tick_ = GOOGLE_LONGLONG(0);
  car_id_ = GOOGLE_LONGLONG(0);
  protect_times_ = 0;
  escort_times_ = 0;
  rob_times_ = 0;
  protect_id_ = GOOGLE_LONGLONG(0);
  protect_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400408::~Proto80400408() {
  SharedDtor();
}

void Proto80400408::SharedDtor() {
  if (protect_name_ != &::google::protobuf::internal::kEmptyString) {
    delete protect_name_;
  }
  if (this != default_instance_) {
    delete coord_;
  }
}

void Proto80400408::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400408::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400408_descriptor_;
}

const Proto80400408& Proto80400408::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto80400408* Proto80400408::default_instance_ = NULL;

Proto80400408* Proto80400408::New() const {
  return new Proto80400408;
}

void Proto80400408::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    space_id_ = 0;
    if (has_coord()) {
      if (coord_ != NULL) coord_->::ProtoCoord::Clear();
    }
    start_tick_ = GOOGLE_LONGLONG(0);
    car_id_ = GOOGLE_LONGLONG(0);
    protect_times_ = 0;
    escort_times_ = 0;
    rob_times_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    protect_id_ = GOOGLE_LONGLONG(0);
    if (has_protect_name()) {
      if (protect_name_ != &::google::protobuf::internal::kEmptyString) {
        protect_name_->clear();
      }
    }
  }
  other_protect_.Clear();
  other_protect_name_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400408::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_space_id;
        break;
      }
      
      // optional int32 space_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_space_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &space_id_)));
          set_has_space_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_coord;
        break;
      }
      
      // optional .ProtoCoord coord = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_start_tick;
        break;
      }
      
      // optional int64 start_tick = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_tick_)));
          set_has_start_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_car_id;
        break;
      }
      
      // optional int64 car_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_car_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &car_id_)));
          set_has_car_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_protect_times;
        break;
      }
      
      // optional int32 protect_times = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_protect_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &protect_times_)));
          set_has_protect_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_escort_times;
        break;
      }
      
      // optional int32 escort_times = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_escort_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &escort_times_)));
          set_has_escort_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_rob_times;
        break;
      }
      
      // optional int32 rob_times = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rob_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rob_times_)));
          set_has_rob_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_protect_id;
        break;
      }
      
      // optional int64 protect_id = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_protect_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &protect_id_)));
          set_has_protect_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_protect_name;
        break;
      }
      
      // optional string protect_name = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_protect_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protect_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->protect_name().data(), this->protect_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_other_protect;
        break;
      }
      
      // repeated int64 other_protect = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_other_protect:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 88, input, this->mutable_other_protect())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_other_protect())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_other_protect;
        if (input->ExpectTag(98)) goto parse_other_protect_name;
        break;
      }
      
      // repeated string other_protect_name = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_protect_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_other_protect_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->other_protect_name(0).data(), this->other_protect_name(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_other_protect_name;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400408::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 space_id = 2;
  if (has_space_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->space_id(), output);
  }
  
  // optional .ProtoCoord coord = 3;
  if (has_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->coord(), output);
  }
  
  // optional int64 start_tick = 4;
  if (has_start_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->start_tick(), output);
  }
  
  // optional int64 car_id = 5;
  if (has_car_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->car_id(), output);
  }
  
  // optional int32 protect_times = 6;
  if (has_protect_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->protect_times(), output);
  }
  
  // optional int32 escort_times = 7;
  if (has_escort_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->escort_times(), output);
  }
  
  // optional int32 rob_times = 8;
  if (has_rob_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->rob_times(), output);
  }
  
  // optional int64 protect_id = 9;
  if (has_protect_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->protect_id(), output);
  }
  
  // optional string protect_name = 10;
  if (has_protect_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->protect_name().data(), this->protect_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->protect_name(), output);
  }
  
  // repeated int64 other_protect = 11;
  for (int i = 0; i < this->other_protect_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      11, this->other_protect(i), output);
  }
  
  // repeated string other_protect_name = 12;
  for (int i = 0; i < this->other_protect_name_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->other_protect_name(i).data(), this->other_protect_name(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->other_protect_name(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400408::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 space_id = 2;
  if (has_space_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->space_id(), target);
  }
  
  // optional .ProtoCoord coord = 3;
  if (has_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->coord(), target);
  }
  
  // optional int64 start_tick = 4;
  if (has_start_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->start_tick(), target);
  }
  
  // optional int64 car_id = 5;
  if (has_car_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->car_id(), target);
  }
  
  // optional int32 protect_times = 6;
  if (has_protect_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->protect_times(), target);
  }
  
  // optional int32 escort_times = 7;
  if (has_escort_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->escort_times(), target);
  }
  
  // optional int32 rob_times = 8;
  if (has_rob_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->rob_times(), target);
  }
  
  // optional int64 protect_id = 9;
  if (has_protect_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->protect_id(), target);
  }
  
  // optional string protect_name = 10;
  if (has_protect_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->protect_name().data(), this->protect_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->protect_name(), target);
  }
  
  // repeated int64 other_protect = 11;
  for (int i = 0; i < this->other_protect_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(11, this->other_protect(i), target);
  }
  
  // repeated string other_protect_name = 12;
  for (int i = 0; i < this->other_protect_name_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->other_protect_name(i).data(), this->other_protect_name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(12, this->other_protect_name(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400408::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 space_id = 2;
    if (has_space_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->space_id());
    }
    
    // optional .ProtoCoord coord = 3;
    if (has_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->coord());
    }
    
    // optional int64 start_tick = 4;
    if (has_start_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_tick());
    }
    
    // optional int64 car_id = 5;
    if (has_car_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->car_id());
    }
    
    // optional int32 protect_times = 6;
    if (has_protect_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->protect_times());
    }
    
    // optional int32 escort_times = 7;
    if (has_escort_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->escort_times());
    }
    
    // optional int32 rob_times = 8;
    if (has_rob_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rob_times());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 protect_id = 9;
    if (has_protect_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->protect_id());
    }
    
    // optional string protect_name = 10;
    if (has_protect_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->protect_name());
    }
    
  }
  // repeated int64 other_protect = 11;
  {
    int data_size = 0;
    for (int i = 0; i < this->other_protect_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->other_protect(i));
    }
    total_size += 1 * this->other_protect_size() + data_size;
  }
  
  // repeated string other_protect_name = 12;
  total_size += 1 * this->other_protect_name_size();
  for (int i = 0; i < this->other_protect_name_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->other_protect_name(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400408::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400408* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400408*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400408::MergeFrom(const Proto80400408& from) {
  GOOGLE_CHECK_NE(&from, this);
  other_protect_.MergeFrom(from.other_protect_);
  other_protect_name_.MergeFrom(from.other_protect_name_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_space_id()) {
      set_space_id(from.space_id());
    }
    if (from.has_coord()) {
      mutable_coord()->::ProtoCoord::MergeFrom(from.coord());
    }
    if (from.has_start_tick()) {
      set_start_tick(from.start_tick());
    }
    if (from.has_car_id()) {
      set_car_id(from.car_id());
    }
    if (from.has_protect_times()) {
      set_protect_times(from.protect_times());
    }
    if (from.has_escort_times()) {
      set_escort_times(from.escort_times());
    }
    if (from.has_rob_times()) {
      set_rob_times(from.rob_times());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_protect_id()) {
      set_protect_id(from.protect_id());
    }
    if (from.has_protect_name()) {
      set_protect_name(from.protect_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400408::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400408::CopyFrom(const Proto80400408& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400408::IsInitialized() const {
  
  return true;
}

void Proto80400408::Swap(Proto80400408* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(space_id_, other->space_id_);
    std::swap(coord_, other->coord_);
    std::swap(start_tick_, other->start_tick_);
    std::swap(car_id_, other->car_id_);
    std::swap(protect_times_, other->protect_times_);
    std::swap(escort_times_, other->escort_times_);
    std::swap(rob_times_, other->rob_times_);
    std::swap(protect_id_, other->protect_id_);
    std::swap(protect_name_, other->protect_name_);
    other_protect_.Swap(&other->other_protect_);
    other_protect_name_.Swap(&other->other_protect_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400408::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400408_descriptor_;
  metadata.reflection = Proto80400408_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400409::kStatusFieldNumber;
const int Proto80400409::kAwardIdFieldNumber;
const int Proto80400409::kExpNumFieldNumber;
const int Proto80400409::kEscortTimesFieldNumber;
const int Proto80400409::kProtectTimesFieldNumber;
const int Proto80400409::kRobTimesFieldNumber;
#endif  // !_MSC_VER

Proto80400409::Proto80400409()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400409::InitAsDefaultInstance() {
}

Proto80400409::Proto80400409(const Proto80400409& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400409::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  award_id_ = 0;
  exp_num_ = GOOGLE_LONGLONG(0);
  escort_times_ = 0;
  protect_times_ = 0;
  rob_times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400409::~Proto80400409() {
  SharedDtor();
}

void Proto80400409::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400409::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400409::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400409_descriptor_;
}

const Proto80400409& Proto80400409::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto80400409* Proto80400409::default_instance_ = NULL;

Proto80400409* Proto80400409::New() const {
  return new Proto80400409;
}

void Proto80400409::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
    award_id_ = 0;
    exp_num_ = GOOGLE_LONGLONG(0);
    escort_times_ = 0;
    protect_times_ = 0;
    rob_times_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400409::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_award_id;
        break;
      }
      
      // optional int32 award_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_award_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &award_id_)));
          set_has_award_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_exp_num;
        break;
      }
      
      // optional int64 exp_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &exp_num_)));
          set_has_exp_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_escort_times;
        break;
      }
      
      // optional int32 escort_times = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_escort_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &escort_times_)));
          set_has_escort_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_protect_times;
        break;
      }
      
      // optional int32 protect_times = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_protect_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &protect_times_)));
          set_has_protect_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_rob_times;
        break;
      }
      
      // optional int32 rob_times = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rob_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rob_times_)));
          set_has_rob_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400409::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  // optional int32 award_id = 2;
  if (has_award_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->award_id(), output);
  }
  
  // optional int64 exp_num = 3;
  if (has_exp_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->exp_num(), output);
  }
  
  // optional int32 escort_times = 4;
  if (has_escort_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->escort_times(), output);
  }
  
  // optional int32 protect_times = 5;
  if (has_protect_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->protect_times(), output);
  }
  
  // optional int32 rob_times = 6;
  if (has_rob_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->rob_times(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400409::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  // optional int32 award_id = 2;
  if (has_award_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->award_id(), target);
  }
  
  // optional int64 exp_num = 3;
  if (has_exp_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->exp_num(), target);
  }
  
  // optional int32 escort_times = 4;
  if (has_escort_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->escort_times(), target);
  }
  
  // optional int32 protect_times = 5;
  if (has_protect_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->protect_times(), target);
  }
  
  // optional int32 rob_times = 6;
  if (has_rob_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->rob_times(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400409::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int32 award_id = 2;
    if (has_award_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->award_id());
    }
    
    // optional int64 exp_num = 3;
    if (has_exp_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->exp_num());
    }
    
    // optional int32 escort_times = 4;
    if (has_escort_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->escort_times());
    }
    
    // optional int32 protect_times = 5;
    if (has_protect_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->protect_times());
    }
    
    // optional int32 rob_times = 6;
    if (has_rob_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rob_times());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400409::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400409* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400409*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400409::MergeFrom(const Proto80400409& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_award_id()) {
      set_award_id(from.award_id());
    }
    if (from.has_exp_num()) {
      set_exp_num(from.exp_num());
    }
    if (from.has_escort_times()) {
      set_escort_times(from.escort_times());
    }
    if (from.has_protect_times()) {
      set_protect_times(from.protect_times());
    }
    if (from.has_rob_times()) {
      set_rob_times(from.rob_times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400409::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400409::CopyFrom(const Proto80400409& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400409::IsInitialized() const {
  
  return true;
}

void Proto80400409::Swap(Proto80400409* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(award_id_, other->award_id_);
    std::swap(exp_num_, other->exp_num_);
    std::swap(escort_times_, other->escort_times_);
    std::swap(protect_times_, other->protect_times_);
    std::swap(rob_times_, other->rob_times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400409::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400409_descriptor_;
  metadata.reflection = Proto80400409_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401529::kRoleIdFieldNumber;
const int Proto50401529::kRoleNameFieldNumber;
const int Proto50401529::kEscortLevelFieldNumber;
const int Proto50401529::kStartTickFieldNumber;
const int Proto50401529::kCoordFieldNumber;
const int Proto50401529::kSceneIdFieldNumber;
const int Proto50401529::kSpaceIdFieldNumber;
#endif  // !_MSC_VER

Proto50401529::Proto50401529()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401529::InitAsDefaultInstance() {
  coord_ = const_cast< ::ProtoCoord*>(&::ProtoCoord::default_instance());
}

Proto50401529::Proto50401529(const Proto50401529& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401529::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  escort_level_ = 0;
  start_tick_ = GOOGLE_LONGLONG(0);
  coord_ = NULL;
  scene_id_ = 0;
  space_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401529::~Proto50401529() {
  SharedDtor();
}

void Proto50401529::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (this != default_instance_) {
    delete coord_;
  }
}

void Proto50401529::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401529::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401529_descriptor_;
}

const Proto50401529& Proto50401529::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto50401529* Proto50401529::default_instance_ = NULL;

Proto50401529* Proto50401529::New() const {
  return new Proto50401529;
}

void Proto50401529::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
    escort_level_ = 0;
    start_tick_ = GOOGLE_LONGLONG(0);
    if (has_coord()) {
      if (coord_ != NULL) coord_->::ProtoCoord::Clear();
    }
    scene_id_ = 0;
    space_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401529::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_role_name;
        break;
      }
      
      // optional string role_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_escort_level;
        break;
      }
      
      // optional int32 escort_level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_escort_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &escort_level_)));
          set_has_escort_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_start_tick;
        break;
      }
      
      // optional int64 start_tick = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_tick_)));
          set_has_start_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_coord;
        break;
      }
      
      // optional .ProtoCoord coord = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_space_id;
        break;
      }
      
      // optional int32 space_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_space_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &space_id_)));
          set_has_space_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401529::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional string role_name = 2;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->role_name(), output);
  }
  
  // optional int32 escort_level = 3;
  if (has_escort_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->escort_level(), output);
  }
  
  // optional int64 start_tick = 4;
  if (has_start_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->start_tick(), output);
  }
  
  // optional .ProtoCoord coord = 5;
  if (has_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->coord(), output);
  }
  
  // optional int32 scene_id = 6;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->scene_id(), output);
  }
  
  // optional int32 space_id = 7;
  if (has_space_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->space_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401529::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional string role_name = 2;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->role_name(), target);
  }
  
  // optional int32 escort_level = 3;
  if (has_escort_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->escort_level(), target);
  }
  
  // optional int64 start_tick = 4;
  if (has_start_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->start_tick(), target);
  }
  
  // optional .ProtoCoord coord = 5;
  if (has_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->coord(), target);
  }
  
  // optional int32 scene_id = 6;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->scene_id(), target);
  }
  
  // optional int32 space_id = 7;
  if (has_space_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->space_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401529::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional string role_name = 2;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
    // optional int32 escort_level = 3;
    if (has_escort_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->escort_level());
    }
    
    // optional int64 start_tick = 4;
    if (has_start_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_tick());
    }
    
    // optional .ProtoCoord coord = 5;
    if (has_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->coord());
    }
    
    // optional int32 scene_id = 6;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 space_id = 7;
    if (has_space_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->space_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401529::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401529* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401529*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401529::MergeFrom(const Proto50401529& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
    if (from.has_escort_level()) {
      set_escort_level(from.escort_level());
    }
    if (from.has_start_tick()) {
      set_start_tick(from.start_tick());
    }
    if (from.has_coord()) {
      mutable_coord()->::ProtoCoord::MergeFrom(from.coord());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_space_id()) {
      set_space_id(from.space_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401529::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401529::CopyFrom(const Proto50401529& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401529::IsInitialized() const {
  
  return true;
}

void Proto50401529::Swap(Proto50401529* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(role_name_, other->role_name_);
    std::swap(escort_level_, other->escort_level_);
    std::swap(start_tick_, other->start_tick_);
    std::swap(coord_, other->coord_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(space_id_, other->space_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401529::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401529_descriptor_;
  metadata.reflection = Proto50401529_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400012::kGuideListFieldNumber;
#endif  // !_MSC_VER

Proto51400012::Proto51400012()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400012::InitAsDefaultInstance() {
}

Proto51400012::Proto51400012(const Proto51400012& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400012::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400012::~Proto51400012() {
  SharedDtor();
}

void Proto51400012::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400012::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400012::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400012_descriptor_;
}

const Proto51400012& Proto51400012::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto51400012* Proto51400012::default_instance_ = NULL;

Proto51400012* Proto51400012::New() const {
  return new Proto51400012;
}

void Proto51400012::Clear() {
  guide_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400012::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoPairObj guide_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_guide_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_guide_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_guide_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400012::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoPairObj guide_list = 1;
  for (int i = 0; i < this->guide_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->guide_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400012::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoPairObj guide_list = 1;
  for (int i = 0; i < this->guide_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->guide_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400012::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoPairObj guide_list = 1;
  total_size += 1 * this->guide_list_size();
  for (int i = 0; i < this->guide_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->guide_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400012::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400012* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400012*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400012::MergeFrom(const Proto51400012& from) {
  GOOGLE_CHECK_NE(&from, this);
  guide_list_.MergeFrom(from.guide_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400012::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400012::CopyFrom(const Proto51400012& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400012::IsInitialized() const {
  
  return true;
}

void Proto51400012::Swap(Proto51400012* other) {
  if (other != this) {
    guide_list_.Swap(&other->guide_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400012::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400012_descriptor_;
  metadata.reflection = Proto51400012_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400013::kIdFieldNumber;
const int Proto11400013::kTimesFieldNumber;
#endif  // !_MSC_VER

Proto11400013::Proto11400013()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400013::InitAsDefaultInstance() {
}

Proto11400013::Proto11400013(const Proto11400013& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400013::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400013::~Proto11400013() {
  SharedDtor();
}

void Proto11400013::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400013::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400013::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400013_descriptor_;
}

const Proto11400013& Proto11400013::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto11400013* Proto11400013::default_instance_ = NULL;

Proto11400013* Proto11400013::New() const {
  return new Proto11400013;
}

void Proto11400013::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    times_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400013::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_times;
        break;
      }
      
      // optional int32 times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &times_)));
          set_has_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400013::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional int32 times = 2;
  if (has_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->times(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400013::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional int32 times = 2;
  if (has_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->times(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400013::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional int32 times = 2;
    if (has_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->times());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400013::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400013* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400013*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400013::MergeFrom(const Proto11400013& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_times()) {
      set_times(from.times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400013::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400013::CopyFrom(const Proto11400013& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400013::IsInitialized() const {
  
  return true;
}

void Proto11400013::Swap(Proto11400013* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(times_, other->times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400013::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400013_descriptor_;
  metadata.reflection = Proto11400013_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400702::kNewListFieldNumber;
#endif  // !_MSC_VER

Proto81400702::Proto81400702()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400702::InitAsDefaultInstance() {
}

Proto81400702::Proto81400702(const Proto81400702& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400702::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400702::~Proto81400702() {
  SharedDtor();
}

void Proto81400702::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400702::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400702::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400702_descriptor_;
}

const Proto81400702& Proto81400702::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto81400702* Proto81400702::default_instance_ = NULL;

Proto81400702* Proto81400702::New() const {
  return new Proto81400702;
}

void Proto81400702::Clear() {
  new_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400702::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 new_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_new_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_new_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_new_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_new_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400702::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 new_list = 1;
  for (int i = 0; i < this->new_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->new_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400702::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 new_list = 1;
  for (int i = 0; i < this->new_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->new_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400702::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 new_list = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->new_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->new_list(i));
    }
    total_size += 1 * this->new_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400702::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400702* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400702*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400702::MergeFrom(const Proto81400702& from) {
  GOOGLE_CHECK_NE(&from, this);
  new_list_.MergeFrom(from.new_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400702::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400702::CopyFrom(const Proto81400702& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400702::IsInitialized() const {
  
  return true;
}

void Proto81400702::Swap(Proto81400702* other) {
  if (other != this) {
    new_list_.Swap(&other->new_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400702::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400702_descriptor_;
  metadata.reflection = Proto81400702_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400705::kLabelIdFieldNumber;
#endif  // !_MSC_VER

Proto11400705::Proto11400705()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400705::InitAsDefaultInstance() {
}

Proto11400705::Proto11400705(const Proto11400705& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400705::SharedCtor() {
  _cached_size_ = 0;
  label_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400705::~Proto11400705() {
  SharedDtor();
}

void Proto11400705::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400705::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400705::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400705_descriptor_;
}

const Proto11400705& Proto11400705::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto11400705* Proto11400705::default_instance_ = NULL;

Proto11400705* Proto11400705::New() const {
  return new Proto11400705;
}

void Proto11400705::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    label_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400705::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 label_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_id_)));
          set_has_label_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400705::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 label_id = 1;
  if (has_label_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->label_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400705::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 label_id = 1;
  if (has_label_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->label_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400705::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 label_id = 1;
    if (has_label_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400705::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400705* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400705*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400705::MergeFrom(const Proto11400705& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_label_id()) {
      set_label_id(from.label_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400705::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400705::CopyFrom(const Proto11400705& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400705::IsInitialized() const {
  
  return true;
}

void Proto11400705::Swap(Proto11400705* other) {
  if (other != this) {
    std::swap(label_id_, other->label_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400705::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400705_descriptor_;
  metadata.reflection = Proto11400705_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400705::kLabelIdFieldNumber;
const int Proto51400705::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto51400705::Proto51400705()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400705::InitAsDefaultInstance() {
}

Proto51400705::Proto51400705(const Proto51400705& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400705::SharedCtor() {
  _cached_size_ = 0;
  label_id_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400705::~Proto51400705() {
  SharedDtor();
}

void Proto51400705::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400705::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400705::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400705_descriptor_;
}

const Proto51400705& Proto51400705::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto51400705* Proto51400705::default_instance_ = NULL;

Proto51400705* Proto51400705::New() const {
  return new Proto51400705;
}

void Proto51400705::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    label_id_ = 0;
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400705::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 label_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_id_)));
          set_has_label_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }
      
      // optional int32 status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400705::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 label_id = 1;
  if (has_label_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->label_id(), output);
  }
  
  // optional int32 status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400705::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 label_id = 1;
  if (has_label_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->label_id(), target);
  }
  
  // optional int32 status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400705::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 label_id = 1;
    if (has_label_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_id());
    }
    
    // optional int32 status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400705::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400705* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400705*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400705::MergeFrom(const Proto51400705& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_label_id()) {
      set_label_id(from.label_id());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400705::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400705::CopyFrom(const Proto51400705& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400705::IsInitialized() const {
  
  return true;
}

void Proto51400705::Swap(Proto51400705* other) {
  if (other != this) {
    std::swap(label_id_, other->label_id_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400705::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400705_descriptor_;
  metadata.reflection = Proto51400705_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400651::kAddExpFieldNumber;
#endif  // !_MSC_VER

Proto81400651::Proto81400651()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400651::InitAsDefaultInstance() {
}

Proto81400651::Proto81400651(const Proto81400651& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400651::SharedCtor() {
  _cached_size_ = 0;
  add_exp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400651::~Proto81400651() {
  SharedDtor();
}

void Proto81400651::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400651::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400651::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400651_descriptor_;
}

const Proto81400651& Proto81400651::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto81400651* Proto81400651::default_instance_ = NULL;

Proto81400651* Proto81400651::New() const {
  return new Proto81400651;
}

void Proto81400651::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    add_exp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400651::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 add_exp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_exp_)));
          set_has_add_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400651::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 add_exp = 1;
  if (has_add_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->add_exp(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400651::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 add_exp = 1;
  if (has_add_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->add_exp(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400651::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 add_exp = 1;
    if (has_add_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_exp());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400651::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400651* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400651*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400651::MergeFrom(const Proto81400651& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_add_exp()) {
      set_add_exp(from.add_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400651::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400651::CopyFrom(const Proto81400651& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400651::IsInitialized() const {
  
  return true;
}

void Proto81400651::Swap(Proto81400651* other) {
  if (other != this) {
    std::swap(add_exp_, other->add_exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400651::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400651_descriptor_;
  metadata.reflection = Proto81400651_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80401026::kValueFieldNumber;
#endif  // !_MSC_VER

Proto80401026::Proto80401026()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80401026::InitAsDefaultInstance() {
}

Proto80401026::Proto80401026(const Proto80401026& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80401026::SharedCtor() {
  _cached_size_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80401026::~Proto80401026() {
  SharedDtor();
}

void Proto80401026::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80401026::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80401026::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80401026_descriptor_;
}

const Proto80401026& Proto80401026::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto80401026* Proto80401026::default_instance_ = NULL;

Proto80401026* Proto80401026::New() const {
  return new Proto80401026;
}

void Proto80401026::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80401026::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80401026::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80401026::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 value = 1;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80401026::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 value = 1;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80401026::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80401026* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80401026*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80401026::MergeFrom(const Proto80401026& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80401026::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80401026::CopyFrom(const Proto80401026& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80401026::IsInitialized() const {
  
  return true;
}

void Proto80401026::Swap(Proto80401026* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80401026::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80401026_descriptor_;
  metadata.reflection = Proto80401026_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10405035::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto10405035::Proto10405035()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10405035::InitAsDefaultInstance() {
}

Proto10405035::Proto10405035(const Proto10405035& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10405035::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10405035::~Proto10405035() {
  SharedDtor();
}

void Proto10405035::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10405035::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10405035::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10405035_descriptor_;
}

const Proto10405035& Proto10405035::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto10405035* Proto10405035::default_instance_ = NULL;

Proto10405035* Proto10405035::New() const {
  return new Proto10405035;
}

void Proto10405035::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10405035::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10405035::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10405035::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10405035::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10405035::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10405035* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10405035*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10405035::MergeFrom(const Proto10405035& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10405035::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10405035::CopyFrom(const Proto10405035& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10405035::IsInitialized() const {
  
  return true;
}

void Proto10405035::Swap(Proto10405035* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10405035::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10405035_descriptor_;
  metadata.reflection = Proto10405035_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50405035::kPlayerIdFieldNumber;
const int Proto50405035::kCoordFieldNumber;
const int Proto50405035::kPlayerNameFieldNumber;
#endif  // !_MSC_VER

Proto50405035::Proto50405035()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50405035::InitAsDefaultInstance() {
  coord_ = const_cast< ::ProtoCoord*>(&::ProtoCoord::default_instance());
}

Proto50405035::Proto50405035(const Proto50405035& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50405035::SharedCtor() {
  _cached_size_ = 0;
  player_id_ = GOOGLE_LONGLONG(0);
  coord_ = NULL;
  player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50405035::~Proto50405035() {
  SharedDtor();
}

void Proto50405035::SharedDtor() {
  if (player_name_ != &::google::protobuf::internal::kEmptyString) {
    delete player_name_;
  }
  if (this != default_instance_) {
    delete coord_;
  }
}

void Proto50405035::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50405035::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50405035_descriptor_;
}

const Proto50405035& Proto50405035::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto50405035* Proto50405035::default_instance_ = NULL;

Proto50405035* Proto50405035::New() const {
  return new Proto50405035;
}

void Proto50405035::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    player_id_ = GOOGLE_LONGLONG(0);
    if (has_coord()) {
      if (coord_ != NULL) coord_->::ProtoCoord::Clear();
    }
    if (has_player_name()) {
      if (player_name_ != &::google::protobuf::internal::kEmptyString) {
        player_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50405035::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 player_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
          set_has_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_coord;
        break;
      }
      
      // optional .ProtoCoord coord = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_player_name;
        break;
      }
      
      // optional string player_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_player_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_player_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->player_name().data(), this->player_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50405035::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->player_id(), output);
  }
  
  // optional .ProtoCoord coord = 2;
  if (has_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->coord(), output);
  }
  
  // optional string player_name = 3;
  if (has_player_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->player_name().data(), this->player_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->player_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50405035::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->player_id(), target);
  }
  
  // optional .ProtoCoord coord = 2;
  if (has_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->coord(), target);
  }
  
  // optional string player_name = 3;
  if (has_player_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->player_name().data(), this->player_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->player_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50405035::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_id());
    }
    
    // optional .ProtoCoord coord = 2;
    if (has_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->coord());
    }
    
    // optional string player_name = 3;
    if (has_player_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->player_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50405035::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50405035* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50405035*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50405035::MergeFrom(const Proto50405035& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
    if (from.has_coord()) {
      mutable_coord()->::ProtoCoord::MergeFrom(from.coord());
    }
    if (from.has_player_name()) {
      set_player_name(from.player_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50405035::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50405035::CopyFrom(const Proto50405035& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50405035::IsInitialized() const {
  
  return true;
}

void Proto50405035::Swap(Proto50405035* other) {
  if (other != this) {
    std::swap(player_id_, other->player_id_);
    std::swap(coord_, other->coord_);
    std::swap(player_name_, other->player_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50405035::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50405035_descriptor_;
  metadata.reflection = Proto50405035_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100158::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto10100158::Proto10100158()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100158::InitAsDefaultInstance() {
}

Proto10100158::Proto10100158(const Proto10100158& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100158::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100158::~Proto10100158() {
  SharedDtor();
}

void Proto10100158::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100158::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100158::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100158_descriptor_;
}

const Proto10100158& Proto10100158::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto10100158* Proto10100158::default_instance_ = NULL;

Proto10100158* Proto10100158::New() const {
  return new Proto10100158;
}

void Proto10100158::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100158::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100158::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100158::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100158::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100158::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100158* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100158*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100158::MergeFrom(const Proto10100158& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100158::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100158::CopyFrom(const Proto10100158& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100158::IsInitialized() const {
  
  return true;
}

void Proto10100158::Swap(Proto10100158* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100158::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100158_descriptor_;
  metadata.reflection = Proto10100158_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100158::kRoleIdFieldNumber;
const int Proto50100158::kSrcFriendTypeFieldNumber;
const int Proto50100158::kDesFriendTypeFieldNumber;
#endif  // !_MSC_VER

Proto50100158::Proto50100158()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100158::InitAsDefaultInstance() {
}

Proto50100158::Proto50100158(const Proto50100158& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100158::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  src_friend_type_ = 0;
  des_friend_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100158::~Proto50100158() {
  SharedDtor();
}

void Proto50100158::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100158::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100158::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100158_descriptor_;
}

const Proto50100158& Proto50100158::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto50100158* Proto50100158::default_instance_ = NULL;

Proto50100158* Proto50100158::New() const {
  return new Proto50100158;
}

void Proto50100158::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    src_friend_type_ = 0;
    des_friend_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100158::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_src_friend_type;
        break;
      }
      
      // optional int32 src_friend_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_src_friend_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &src_friend_type_)));
          set_has_src_friend_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_des_friend_type;
        break;
      }
      
      // optional int32 des_friend_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_des_friend_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &des_friend_type_)));
          set_has_des_friend_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100158::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 src_friend_type = 2;
  if (has_src_friend_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->src_friend_type(), output);
  }
  
  // optional int32 des_friend_type = 3;
  if (has_des_friend_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->des_friend_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100158::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 src_friend_type = 2;
  if (has_src_friend_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->src_friend_type(), target);
  }
  
  // optional int32 des_friend_type = 3;
  if (has_des_friend_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->des_friend_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100158::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 src_friend_type = 2;
    if (has_src_friend_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->src_friend_type());
    }
    
    // optional int32 des_friend_type = 3;
    if (has_des_friend_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->des_friend_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100158::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100158* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100158*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100158::MergeFrom(const Proto50100158& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_src_friend_type()) {
      set_src_friend_type(from.src_friend_type());
    }
    if (from.has_des_friend_type()) {
      set_des_friend_type(from.des_friend_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100158::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100158::CopyFrom(const Proto50100158& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100158::IsInitialized() const {
  
  return true;
}

void Proto50100158::Swap(Proto50100158* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(src_friend_type_, other->src_friend_type_);
    std::swap(des_friend_type_, other->des_friend_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100158::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100158_descriptor_;
  metadata.reflection = Proto50100158_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100635::kVoteTypeFieldNumber;
#endif  // !_MSC_VER

Proto10100635::Proto10100635()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100635::InitAsDefaultInstance() {
}

Proto10100635::Proto10100635(const Proto10100635& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100635::SharedCtor() {
  _cached_size_ = 0;
  vote_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100635::~Proto10100635() {
  SharedDtor();
}

void Proto10100635::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100635::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100635::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100635_descriptor_;
}

const Proto10100635& Proto10100635::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient017_2eproto();  return *default_instance_;
}

Proto10100635* Proto10100635::default_instance_ = NULL;

Proto10100635* Proto10100635::New() const {
  return new Proto10100635;
}

void Proto10100635::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    vote_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100635::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 vote_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vote_type_)));
          set_has_vote_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100635::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 vote_type = 1;
  if (has_vote_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vote_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100635::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 vote_type = 1;
  if (has_vote_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->vote_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100635::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 vote_type = 1;
    if (has_vote_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vote_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100635::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100635* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100635*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100635::MergeFrom(const Proto10100635& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_vote_type()) {
      set_vote_type(from.vote_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100635::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100635::CopyFrom(const Proto10100635& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100635::IsInitialized() const {
  
  return true;
}

void Proto10100635::Swap(Proto10100635* other) {
  if (other != this) {
    std::swap(vote_type_, other->vote_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100635::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100635_descriptor_;
  metadata.reflection = Proto10100635_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
