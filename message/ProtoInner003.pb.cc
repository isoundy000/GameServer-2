// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoInner003.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto31400121_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400121_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400122_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400122_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400429_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400429_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400430_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400430_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400431_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400431_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400305_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400305_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400501_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400501_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400501_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400501_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400017_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400017_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100402_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100402_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100403_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100403_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100401_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100401_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30200119_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30200119_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30200120_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30200120_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30200121_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30200121_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31401404_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31401404_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400432_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400432_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400433_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400433_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400434_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400434_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400123_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400123_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100215_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100215_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30401102_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30401102_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100501_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100501_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30200122_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30200122_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100502_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100502_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100503_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100503_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400014_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400014_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400124_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400124_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400015_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400015_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30401103_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30401103_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400435_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400435_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30200124_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30200124_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30200123_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30200123_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400107_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400107_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100601_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100601_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31401501_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31401501_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100602_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100602_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400020_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400020_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100224_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100224_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400901_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400901_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400902_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400902_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400903_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400903_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400108_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400108_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400109_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400109_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400110_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400110_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100603_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100603_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400125_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400125_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31401601_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31401601_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400903_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400903_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400111_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400111_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoInner003_2eproto() {
  protobuf_AddDesc_ProtoInner003_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoInner003.proto");
  GOOGLE_CHECK(file != NULL);
  Proto31400121_descriptor_ = file->message_type(0);
  static const int Proto31400121_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400121, cur_label_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400121, permant_label_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400121, limit_time_label_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400121, unshown_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400121, new_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400121, pre_label_id_),
  };
  Proto31400121_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400121_descriptor_,
      Proto31400121::default_instance_,
      Proto31400121_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400121, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400121, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400121));
  Proto31400122_descriptor_ = file->message_type(1);
  static const int Proto31400122_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400122, child_achieve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400122, achieve_detail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400122, achieve_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400122, achieve_point_map_),
  };
  Proto31400122_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400122_descriptor_,
      Proto31400122::default_instance_,
      Proto31400122_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400122, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400122, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400122));
  Proto30400429_descriptor_ = file->message_type(2);
  static const int Proto30400429_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400429, scene_id_),
  };
  Proto30400429_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400429_descriptor_,
      Proto30400429::default_instance_,
      Proto30400429_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400429, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400429, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400429));
  Proto30400430_descriptor_ = file->message_type(3);
  static const int Proto30400430_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400430, page_index_),
  };
  Proto30400430_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400430_descriptor_,
      Proto30400430::default_instance_,
      Proto30400430_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400430, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400430, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400430));
  Proto30400431_descriptor_ = file->message_type(4);
  static const int Proto30400431_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400431, page_index_),
  };
  Proto30400431_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400431_descriptor_,
      Proto30400431::default_instance_,
      Proto30400431_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400431, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400431, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400431));
  Proto31400305_descriptor_ = file->message_type(5);
  static const int Proto31400305_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400305, item_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400305, add_anima_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400305, add_contri_),
  };
  Proto31400305_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400305_descriptor_,
      Proto31400305::default_instance_,
      Proto31400305_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400305, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400305, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400305));
  Proto31400501_descriptor_ = file->message_type(6);
  static const int Proto31400501_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400501, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400501, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400501, pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400501, client_type_),
  };
  Proto31400501_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400501_descriptor_,
      Proto31400501::default_instance_,
      Proto31400501_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400501, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400501, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400501));
  Proto30400501_descriptor_ = file->message_type(7);
  static const int Proto30400501_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400501, oper_result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400501, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400501, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400501, pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400501, client_type_),
  };
  Proto30400501_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400501_descriptor_,
      Proto30400501::default_instance_,
      Proto30400501_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400501, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400501, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400501));
  Proto31400017_descriptor_ = file->message_type(8);
  static const int Proto31400017_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400017, goods_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400017, monster_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400017, gather_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400017, gather_item_),
  };
  Proto31400017_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400017_descriptor_,
      Proto31400017::default_instance_,
      Proto31400017_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400017, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400017, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400017));
  Proto30100402_descriptor_ = file->message_type(9);
  static const int Proto30100402_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100402, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100402, role_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100402, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100402, item_amount_),
  };
  Proto30100402_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100402_descriptor_,
      Proto30100402::default_instance_,
      Proto30100402_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100402, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100402, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100402));
  Proto30100403_descriptor_ = file->message_type(10);
  static const int Proto30100403_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100403, role_id_),
  };
  Proto30100403_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100403_descriptor_,
      Proto30100403::default_instance_,
      Proto30100403_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100403, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100403, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100403));
  Proto30100401_descriptor_ = file->message_type(11);
  static const int Proto30100401_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100401, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100401, oper_type_),
  };
  Proto30100401_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100401_descriptor_,
      Proto30100401::default_instance_,
      Proto30100401_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100401, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100401, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100401));
  Proto30200119_descriptor_ = file->message_type(12);
  static const int Proto30200119_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200119, role_id_),
  };
  Proto30200119_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30200119_descriptor_,
      Proto30200119::default_instance_,
      Proto30200119_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200119, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200119, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30200119));
  Proto30200120_descriptor_ = file->message_type(13);
  static const int Proto30200120_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200120, role_id_set_),
  };
  Proto30200120_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30200120_descriptor_,
      Proto30200120::default_instance_,
      Proto30200120_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200120, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200120, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30200120));
  Proto30200121_descriptor_ = file->message_type(14);
  static const int Proto30200121_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200121, role_id_set_),
  };
  Proto30200121_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30200121_descriptor_,
      Proto30200121::default_instance_,
      Proto30200121_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200121, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200121, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30200121));
  Proto31401404_descriptor_ = file->message_type(15);
  static const int Proto31401404_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401404, obj_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401404, bson_raw_data_),
  };
  Proto31401404_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31401404_descriptor_,
      Proto31401404::default_instance_,
      Proto31401404_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401404, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401404, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31401404));
  Proto30400432_descriptor_ = file->message_type(16);
  static const int Proto30400432_offsets_[24] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, role_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, fight_prop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, skill_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, shape_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, space_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, scene_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, offline_beast_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, wing_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, wing_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, kill_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, killing_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, cur_label_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, weapon_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, weapon_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, equip_refine_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, fashion_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, fashion_color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, solider_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, magic_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, beast_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, mount_level_),
  };
  Proto30400432_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400432_descriptor_,
      Proto30400432::default_instance_,
      Proto30400432_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400432, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400432));
  Proto30400433_descriptor_ = file->message_type(17);
  static const int Proto30400433_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400433, league_set_),
  };
  Proto30400433_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400433_descriptor_,
      Proto30400433::default_instance_,
      Proto30400433_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400433, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400433, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400433));
  Proto30400434_descriptor_ = file->message_type(18);
  static const int Proto30400434_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400434, war_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400434, league_index_),
  };
  Proto30400434_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400434_descriptor_,
      Proto30400434::default_instance_,
      Proto30400434_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400434, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400434, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400434));
  Proto31400123_descriptor_ = file->message_type(19);
  static const int Proto31400123_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400123, hook_detail_),
  };
  Proto31400123_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400123_descriptor_,
      Proto31400123::default_instance_,
      Proto31400123_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400123, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400123, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400123));
  Proto30100215_descriptor_ = file->message_type(20);
  static const int Proto30100215_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100215, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100215, offline_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100215, offline_data_),
  };
  Proto30100215_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100215_descriptor_,
      Proto30100215::default_instance_,
      Proto30100215_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100215, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100215, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100215));
  Proto30401102_descriptor_ = file->message_type(21);
  static const int Proto30401102_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401102, space_id_),
  };
  Proto30401102_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30401102_descriptor_,
      Proto30401102::default_instance_,
      Proto30401102_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401102, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401102, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30401102));
  Proto30100501_descriptor_ = file->message_type(22);
  static const int Proto30100501_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100501, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100501, space_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100501, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100501, peer_id_),
  };
  Proto30100501_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100501_descriptor_,
      Proto30100501::default_instance_,
      Proto30100501_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100501, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100501, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100501));
  Proto30200122_descriptor_ = file->message_type(23);
  static const int Proto30200122_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200122, sync_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200122, vip_type_),
  };
  Proto30200122_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30200122_descriptor_,
      Proto30200122::default_instance_,
      Proto30200122_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200122, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200122, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30200122));
  Proto30100502_descriptor_ = file->message_type(24);
  static const int Proto30100502_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100502, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100502, type_),
  };
  Proto30100502_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100502_descriptor_,
      Proto30100502::default_instance_,
      Proto30100502_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100502, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100502, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100502));
  Proto30100503_descriptor_ = file->message_type(25);
  static const int Proto30100503_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100503, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100503, type_),
  };
  Proto30100503_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100503_descriptor_,
      Proto30100503::default_instance_,
      Proto30100503_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100503, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100503, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100503));
  Proto30400014_descriptor_ = file->message_type(26);
  static const int Proto30400014_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400014, add_blood_),
  };
  Proto30400014_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400014_descriptor_,
      Proto30400014::default_instance_,
      Proto30400014_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400014, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400014, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400014));
  Proto31400124_descriptor_ = file->message_type(27);
  static const int Proto31400124_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400124, send_mail_cool_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400124, send_mail_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400124, mail_list_),
  };
  Proto31400124_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400124_descriptor_,
      Proto31400124::default_instance_,
      Proto31400124_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400124, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400124, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400124));
  Proto30400015_descriptor_ = file->message_type(28);
  static const int Proto30400015_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400015, item_info_),
  };
  Proto30400015_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400015_descriptor_,
      Proto30400015::default_instance_,
      Proto30400015_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400015, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400015, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400015));
  Proto30401103_descriptor_ = file->message_type(29);
  static const int Proto30401103_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401103, camp_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401103, respond_type_),
  };
  Proto30401103_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30401103_descriptor_,
      Proto30401103::default_instance_,
      Proto30401103_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401103, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401103, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30401103));
  Proto30400435_descriptor_ = file->message_type(30);
  static const int Proto30400435_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400435, skill_set_),
  };
  Proto30400435_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400435_descriptor_,
      Proto30400435::default_instance_,
      Proto30400435_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400435, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400435, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400435));
  Proto30200124_descriptor_ = file->message_type(31);
  static const int Proto30200124_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200124, brocast_info_),
  };
  Proto30200124_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30200124_descriptor_,
      Proto30200124::default_instance_,
      Proto30200124_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200124, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200124, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30200124));
  Proto30200123_descriptor_ = file->message_type(32);
  static const int Proto30200123_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200123, brocast_info_),
  };
  Proto30200123_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30200123_descriptor_,
      Proto30200123::default_instance_,
      Proto30200123_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200123, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200123, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30200123));
  Proto30400107_descriptor_ = file->message_type(33);
  static const int Proto30400107_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400107, vip_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400107, vip_start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400107, expired_time_),
  };
  Proto30400107_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400107_descriptor_,
      Proto30400107::default_instance_,
      Proto30400107_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400107, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400107, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400107));
  Proto30100601_descriptor_ = file->message_type(34);
  static const int Proto30100601_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100601, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100601, activity_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100601, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100601, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100601, ahead_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100601, last_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100601, left_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100601, sub_value_),
  };
  Proto30100601_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100601_descriptor_,
      Proto30100601::default_instance_,
      Proto30100601_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100601, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100601, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100601));
  Proto31401501_descriptor_ = file->message_type(35);
  static const int Proto31401501_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401501, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401501, sub_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401501, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401501, num_),
  };
  Proto31401501_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31401501_descriptor_,
      Proto31401501::default_instance_,
      Proto31401501_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401501, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401501, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31401501));
  Proto30100602_descriptor_ = file->message_type(36);
  static const int Proto30100602_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100602, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100602, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100602, time_),
  };
  Proto30100602_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100602_descriptor_,
      Proto30100602::default_instance_,
      Proto30100602_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100602, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100602, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100602));
  Proto31400020_descriptor_ = file->message_type(37);
  static const int Proto31400020_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400020, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400020, role_name_),
  };
  Proto31400020_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400020_descriptor_,
      Proto31400020::default_instance_,
      Proto31400020_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400020, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400020, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400020));
  Proto30100224_descriptor_ = file->message_type(38);
  static const int Proto30100224_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100224, add_contri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100224, serial_obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100224, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100224, league_id_),
  };
  Proto30100224_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100224_descriptor_,
      Proto30100224::default_instance_,
      Proto30100224_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100224, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100224, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100224));
  Proto31400901_descriptor_ = file->message_type(39);
  static const int Proto31400901_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400901, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400901, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400901, scrit_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400901, mult_),
  };
  Proto31400901_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400901_descriptor_,
      Proto31400901::default_instance_,
      Proto31400901_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400901, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400901, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400901));
  Proto31400902_descriptor_ = file->message_type(40);
  static const int Proto31400902_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400902, script_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400902, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400902, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400902, script_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400902, reset_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400902, top_floor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400902, pass_wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400902, pass_chapter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400902, mult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400902, start_wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400902, start_chapter_),
  };
  Proto31400902_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400902_descriptor_,
      Proto31400902::default_instance_,
      Proto31400902_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400902, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400902, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400902));
  Proto31400903_descriptor_ = file->message_type(41);
  static const int Proto31400903_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400903, rollback_script_),
  };
  Proto31400903_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400903_descriptor_,
      Proto31400903::default_instance_,
      Proto31400903_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400903, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400903, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400903));
  Proto30400108_descriptor_ = file->message_type(42);
  static const int Proto30400108_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400108, refresh_tick_),
  };
  Proto30400108_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400108_descriptor_,
      Proto30400108::default_instance_,
      Proto30400108_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400108, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400108, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400108));
  Proto30400109_descriptor_ = file->message_type(43);
  static const int Proto30400109_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400109, team_info_),
  };
  Proto30400109_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400109_descriptor_,
      Proto30400109::default_instance_,
      Proto30400109_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400109, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400109, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400109));
  Proto30400110_descriptor_ = file->message_type(44);
  static const int Proto30400110_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400110, monster_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400110, is_yellow_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400110, kill_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400110, is_brocast_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400110, online_ticks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400110, killing_value_),
  };
  Proto30400110_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400110_descriptor_,
      Proto30400110::default_instance_,
      Proto30400110_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400110, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400110, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400110));
  Proto30100603_descriptor_ = file->message_type(45);
  static const int Proto30100603_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100603, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100603, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100603, role_id_),
  };
  Proto30100603_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100603_descriptor_,
      Proto30100603::default_instance_,
      Proto30100603_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100603, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100603, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100603));
  Proto31400125_descriptor_ = file->message_type(46);
  static const int Proto31400125_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400125, tip_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400125, max_tip_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400125, notify_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400125, ingore_flag_),
  };
  Proto31400125_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400125_descriptor_,
      Proto31400125::default_instance_,
      Proto31400125_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400125, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400125, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400125));
  Proto31401601_descriptor_ = file->message_type(47);
  static const int Proto31401601_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401601, rank_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401601, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401601, role_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401601, league_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401601, vip_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401601, achieve_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401601, rank_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401601, rank_force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401601, ext_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401601, worship_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401601, is_worship_),
  };
  Proto31401601_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31401601_descriptor_,
      Proto31401601::default_instance_,
      Proto31401601_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401601, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401601, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31401601));
  Proto30400903_descriptor_ = file->message_type(48);
  static const int Proto30400903_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400903, res_recogn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400903, res_body_),
  };
  Proto30400903_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400903_descriptor_,
      Proto30400903::default_instance_,
      Proto30400903_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400903, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400903, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400903));
  Proto30400111_descriptor_ = file->message_type(49);
  static const int Proto30400111_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400111, cur_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400111, check_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400111, check_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400111, non_tips_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400111, everyday_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400111, last_tips_tick_),
  };
  Proto30400111_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400111_descriptor_,
      Proto30400111::default_instance_,
      Proto30400111_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400111, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400111, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400111));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoInner003_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400121_descriptor_, &Proto31400121::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400122_descriptor_, &Proto31400122::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400429_descriptor_, &Proto30400429::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400430_descriptor_, &Proto30400430::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400431_descriptor_, &Proto30400431::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400305_descriptor_, &Proto31400305::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400501_descriptor_, &Proto31400501::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400501_descriptor_, &Proto30400501::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400017_descriptor_, &Proto31400017::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100402_descriptor_, &Proto30100402::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100403_descriptor_, &Proto30100403::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100401_descriptor_, &Proto30100401::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30200119_descriptor_, &Proto30200119::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30200120_descriptor_, &Proto30200120::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30200121_descriptor_, &Proto30200121::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31401404_descriptor_, &Proto31401404::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400432_descriptor_, &Proto30400432::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400433_descriptor_, &Proto30400433::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400434_descriptor_, &Proto30400434::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400123_descriptor_, &Proto31400123::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100215_descriptor_, &Proto30100215::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30401102_descriptor_, &Proto30401102::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100501_descriptor_, &Proto30100501::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30200122_descriptor_, &Proto30200122::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100502_descriptor_, &Proto30100502::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100503_descriptor_, &Proto30100503::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400014_descriptor_, &Proto30400014::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400124_descriptor_, &Proto31400124::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400015_descriptor_, &Proto30400015::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30401103_descriptor_, &Proto30401103::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400435_descriptor_, &Proto30400435::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30200124_descriptor_, &Proto30200124::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30200123_descriptor_, &Proto30200123::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400107_descriptor_, &Proto30400107::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100601_descriptor_, &Proto30100601::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31401501_descriptor_, &Proto31401501::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100602_descriptor_, &Proto30100602::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400020_descriptor_, &Proto31400020::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100224_descriptor_, &Proto30100224::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400901_descriptor_, &Proto31400901::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400902_descriptor_, &Proto31400902::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400903_descriptor_, &Proto31400903::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400108_descriptor_, &Proto30400108::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400109_descriptor_, &Proto30400109::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400110_descriptor_, &Proto30400110::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100603_descriptor_, &Proto30100603::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400125_descriptor_, &Proto31400125::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31401601_descriptor_, &Proto31401601::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400903_descriptor_, &Proto30400903::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400111_descriptor_, &Proto30400111::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoInner003_2eproto() {
  delete Proto31400121::default_instance_;
  delete Proto31400121_reflection_;
  delete Proto31400122::default_instance_;
  delete Proto31400122_reflection_;
  delete Proto30400429::default_instance_;
  delete Proto30400429_reflection_;
  delete Proto30400430::default_instance_;
  delete Proto30400430_reflection_;
  delete Proto30400431::default_instance_;
  delete Proto30400431_reflection_;
  delete Proto31400305::default_instance_;
  delete Proto31400305_reflection_;
  delete Proto31400501::default_instance_;
  delete Proto31400501_reflection_;
  delete Proto30400501::default_instance_;
  delete Proto30400501_reflection_;
  delete Proto31400017::default_instance_;
  delete Proto31400017_reflection_;
  delete Proto30100402::default_instance_;
  delete Proto30100402_reflection_;
  delete Proto30100403::default_instance_;
  delete Proto30100403_reflection_;
  delete Proto30100401::default_instance_;
  delete Proto30100401_reflection_;
  delete Proto30200119::default_instance_;
  delete Proto30200119_reflection_;
  delete Proto30200120::default_instance_;
  delete Proto30200120_reflection_;
  delete Proto30200121::default_instance_;
  delete Proto30200121_reflection_;
  delete Proto31401404::default_instance_;
  delete Proto31401404_reflection_;
  delete Proto30400432::default_instance_;
  delete Proto30400432_reflection_;
  delete Proto30400433::default_instance_;
  delete Proto30400433_reflection_;
  delete Proto30400434::default_instance_;
  delete Proto30400434_reflection_;
  delete Proto31400123::default_instance_;
  delete Proto31400123_reflection_;
  delete Proto30100215::default_instance_;
  delete Proto30100215_reflection_;
  delete Proto30401102::default_instance_;
  delete Proto30401102_reflection_;
  delete Proto30100501::default_instance_;
  delete Proto30100501_reflection_;
  delete Proto30200122::default_instance_;
  delete Proto30200122_reflection_;
  delete Proto30100502::default_instance_;
  delete Proto30100502_reflection_;
  delete Proto30100503::default_instance_;
  delete Proto30100503_reflection_;
  delete Proto30400014::default_instance_;
  delete Proto30400014_reflection_;
  delete Proto31400124::default_instance_;
  delete Proto31400124_reflection_;
  delete Proto30400015::default_instance_;
  delete Proto30400015_reflection_;
  delete Proto30401103::default_instance_;
  delete Proto30401103_reflection_;
  delete Proto30400435::default_instance_;
  delete Proto30400435_reflection_;
  delete Proto30200124::default_instance_;
  delete Proto30200124_reflection_;
  delete Proto30200123::default_instance_;
  delete Proto30200123_reflection_;
  delete Proto30400107::default_instance_;
  delete Proto30400107_reflection_;
  delete Proto30100601::default_instance_;
  delete Proto30100601_reflection_;
  delete Proto31401501::default_instance_;
  delete Proto31401501_reflection_;
  delete Proto30100602::default_instance_;
  delete Proto30100602_reflection_;
  delete Proto31400020::default_instance_;
  delete Proto31400020_reflection_;
  delete Proto30100224::default_instance_;
  delete Proto30100224_reflection_;
  delete Proto31400901::default_instance_;
  delete Proto31400901_reflection_;
  delete Proto31400902::default_instance_;
  delete Proto31400902_reflection_;
  delete Proto31400903::default_instance_;
  delete Proto31400903_reflection_;
  delete Proto30400108::default_instance_;
  delete Proto30400108_reflection_;
  delete Proto30400109::default_instance_;
  delete Proto30400109_reflection_;
  delete Proto30400110::default_instance_;
  delete Proto30400110_reflection_;
  delete Proto30100603::default_instance_;
  delete Proto30100603_reflection_;
  delete Proto31400125::default_instance_;
  delete Proto31400125_reflection_;
  delete Proto31401601::default_instance_;
  delete Proto31401601_reflection_;
  delete Proto30400903::default_instance_;
  delete Proto30400903_reflection_;
  delete Proto30400111::default_instance_;
  delete Proto30400111_reflection_;
}

void protobuf_AddDesc_ProtoInner003_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::protobuf_AddDesc_ProtoInnerPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023ProtoInner003.proto\032\021ProtoPublic.proto"
    "\032\026ProtoInnerPublic.proto\"\254\001\n\rProto314001"
    "21\022\024\n\014cur_label_id\030\001 \001(\005\022\032\n\022permant_labe"
    "l_list\030\002 \003(\005\022+\n\025limit_time_label_list\030\003 "
    "\003(\0132\014.ProtoFlaunt\022\024\n\014unshown_list\030\004 \003(\005\022"
    "\020\n\010new_list\030\005 \003(\005\022\024\n\014pre_label_id\030\006 \001(\005\""
    "\250\001\n\rProto31400122\022)\n\rchild_achieve\030\001 \003(\013"
    "2\022.ProtoChildAchieve\022+\n\016achieve_detail\030\002"
    " \003(\0132\023.ProtoAchieveDetail\022\025\n\rachieve_lev"
    "el\030\003 \001(\005\022(\n\021achieve_point_map\030\004 \003(\0132\r.Pr"
    "otoPairObj\"!\n\rProto30400429\022\020\n\010scene_id\030"
    "\001 \001(\005\"#\n\rProto30400430\022\022\n\npage_index\030\001 \001"
    "(\005\"#\n\rProto30400431\022\022\n\npage_index\030\001 \001(\005\""
    "T\n\rProto31400305\022\034\n\010item_set\030\001 \003(\0132\n.Pro"
    "toItem\022\021\n\tadd_anima\030\002 \001(\005\022\022\n\nadd_contri\030"
    "\003 \001(\005\"X\n\rProto31400501\022\020\n\010scene_id\030\001 \001(\005"
    "\022\017\n\007pixel_x\030\002 \001(\005\022\017\n\007pixel_y\030\003 \001(\005\022\023\n\013cl"
    "ient_type\030\004 \001(\005\"m\n\rProto30400501\022\023\n\013oper"
    "_result\030\001 \001(\005\022\020\n\010scene_id\030\002 \001(\005\022\017\n\007pixel"
    "_x\030\003 \001(\005\022\017\n\007pixel_y\030\004 \001(\005\022\023\n\013client_type"
    "\030\005 \001(\005\"m\n\rProto31400017\022\020\n\010goods_id\030\001 \001("
    "\003\022\024\n\014monster_sort\030\002 \001(\005\022\023\n\013gather_flag\030\003"
    " \001(\005\022\037\n\013gather_item\030\004 \001(\0132\n.ProtoItem\"Y\n"
    "\rProto30100402\022\017\n\007role_id\030\001 \001(\003\022\021\n\trole_"
    "name\030\002 \001(\t\022\017\n\007item_id\030\003 \003(\005\022\023\n\013item_amou"
    "nt\030\004 \003(\005\" \n\rProto30100403\022\017\n\007role_id\030\001 \001"
    "(\003\"3\n\rProto30100401\022\017\n\007role_id\030\001 \001(\003\022\021\n\t"
    "oper_type\030\002 \001(\010\" \n\rProto30200119\022\017\n\007role"
    "_id\030\001 \001(\003\"$\n\rProto30200120\022\023\n\013role_id_se"
    "t\030\001 \003(\003\"$\n\rProto30200121\022\023\n\013role_id_set\030"
    "\001 \003(\003\"8\n\rProto31401404\022\020\n\010obj_type\030\001 \001(\005"
    "\022\025\n\rbson_raw_data\030\002 \001(\014\"\300\004\n\rProto3040043"
    "2\022!\n\trole_info\030\001 \001(\0132\016.ProtoRoleInfo\022\"\n\n"
    "fight_prop\030\002 \001(\0132\016.ProtoFightPro\022 \n\tskil"
    "l_set\030\003 \003(\0132\r.ProtoPairObj\022 \n\tshape_set\030"
    "\004 \003(\0132\r.ProtoPairObj\022\020\n\010space_id\030\005 \001(\005\022\022"
    "\n\nscene_mode\030\006 \001(\005\022\020\n\010scene_id\030\007 \001(\005\022\r\n\005"
    "pos_x\030\010 \001(\005\022\r\n\005pos_y\030\t \001(\005\022)\n\roffline_be"
    "ast\030\n \001(\0132\022.ProtoOfflineBeast\022\017\n\007wing_id"
    "\030\013 \001(\005\022\022\n\nwing_level\030\014 \001(\005\022\020\n\010kill_num\030\r"
    " \001(\005\022\025\n\rkilling_value\030\016 \001(\005\022\021\n\tcur_label"
    "\030\017 \001(\005\022\021\n\tweapon_id\030\020 \001(\005\022\024\n\014weapon_leve"
    "l\030\021 \001(\005\022\030\n\020equip_refine_lvl\030\022 \001(\005\022\022\n\nfas"
    "hion_id\030\023 \001(\005\022\025\n\rfashion_color\030\024 \001(\005\022\025\n\r"
    "solider_level\030\025 \001(\005\022\023\n\013magic_level\030\026 \001(\005"
    "\022\023\n\013beast_level\030\027 \001(\005\022\023\n\013mount_level\030\030 \001"
    "(\005\"5\n\rProto30400433\022$\n\nleague_set\030\001 \003(\0132"
    "\020.ProtoSyncLeague\"8\n\rProto30400434\022\021\n\twa"
    "r_index\030\001 \001(\005\022\024\n\014league_index\030\002 \001(\003\"6\n\rP"
    "roto31400123\022%\n\013hook_detail\030\001 \001(\0132\020.Prot"
    "oHookDetail\"L\n\rProto30100215\022\017\n\007role_id\030"
    "\001 \001(\003\022\024\n\014offline_type\030\002 \001(\005\022\024\n\014offline_d"
    "ata\030\003 \001(\014\"!\n\rProto30401102\022\020\n\010space_id\030\001"
    " \003(\005\"Q\n\rProto30100501\022\017\n\007role_id\030\001 \001(\003\022\020"
    "\n\010space_id\030\002 \001(\005\022\014\n\004type\030\003 \001(\005\022\017\n\007peer_i"
    "d\030\004 \001(\003\"4\n\rProto30200122\022\021\n\tsync_type\030\001 "
    "\001(\005\022\020\n\010vip_type\030\002 \001(\005\".\n\rProto30100502\022\017"
    "\n\007role_id\030\001 \001(\003\022\014\n\004type\030\002 \001(\005\".\n\rProto30"
    "100503\022\017\n\007role_id\030\001 \001(\003\022\014\n\004type\030\002 \001(\005\"\"\n"
    "\rProto30400014\022\021\n\tadd_blood\030\001 \001(\005\"h\n\rPro"
    "to31400124\022\033\n\023send_mail_cool_tick\030\001 \001(\003\022"
    "\027\n\017send_mail_count\030\002 \001(\005\022!\n\tmail_list\030\003 "
    "\003(\0132\016.ProtoMailInfo\".\n\rProto30400015\022\035\n\t"
    "item_info\030\001 \001(\0132\n.ProtoItem\"6\n\rProto3040"
    "1103\022\017\n\007camp_id\030\001 \001(\005\022\024\n\014respond_type\030\002 "
    "\001(\010\"\"\n\rProto30400435\022\021\n\tskill_set\030\001 \003(\005\""
    ";\n\rProto30200124\022*\n\014brocast_info\030\001 \001(\0132\024"
    ".ProtoBrocastNewInfo\";\n\rProto30200123\022*\n"
    "\014brocast_info\030\001 \001(\0132\024.ProtoBrocastNewInf"
    "o\"O\n\rProto30400107\022\020\n\010vip_type\030\001 \001(\005\022\026\n\016"
    "vip_start_time\030\002 \001(\005\022\024\n\014expired_time\030\003 \001"
    "(\005\"\260\001\n\rProto30100601\022\023\n\013activity_id\030\001 \001("
    "\005\022\026\n\016activity_state\030\002 \001(\005\022\022\n\nstart_time\030"
    "\003 \001(\005\022\020\n\010end_time\030\004 \001(\005\022\022\n\nahead_time\030\005 "
    "\001(\005\022\021\n\tlast_time\030\006 \001(\005\022\022\n\nleft_times\030\007 \001"
    "(\005\022\021\n\tsub_value\030\010 \001(\005\"F\n\rProto31401501\022\n"
    "\n\002id\030\001 \001(\005\022\016\n\006sub_id\030\002 \001(\005\022\014\n\004type\030\003 \001(\005"
    "\022\013\n\003num\030\004 \001(\005\"C\n\rProto30100602\022\017\n\007role_i"
    "d\030\001 \001(\003\022\023\n\013activity_id\030\002 \001(\005\022\014\n\004time\030\003 \001"
    "(\005\"3\n\rProto31400020\022\017\n\007role_id\030\001 \001(\003\022\021\n\t"
    "role_name\030\002 \001(\t\"l\n\rProto30100224\022\022\n\nadd_"
    "contri\030\001 \001(\005\022#\n\nserial_obj\030\002 \001(\0132\017.Proto"
    "SerialObj\022\017\n\007role_id\030\003 \001(\003\022\021\n\tleague_id\030"
    "\004 \001(\003\"T\n\rProto31400901\022\014\n\004type\030\001 \001(\005\022\023\n\013"
    "script_sort\030\002 \001(\005\022\022\n\nscrit_type\030\003 \001(\005\022\014\n"
    "\004mult\030\004 \001(\005\"\371\001\n\rProto31400902\022&\n\013script_"
    "list\030\001 \003(\0132\021.ProtoScriptClean\022\014\n\004type\030\002 "
    "\001(\005\022\023\n\013script_sort\030\003 \001(\005\022\023\n\013script_type\030"
    "\004 \001(\005\022\023\n\013reset_times\030\005 \001(\005\022\021\n\ttop_floor\030"
    "\006 \001(\005\022\021\n\tpass_wave\030\007 \001(\005\022\024\n\014pass_chapter"
    "\030\010 \001(\005\022\014\n\004mult\030\t \001(\005\022\022\n\nstart_wave\030\n \001(\005"
    "\022\025\n\rstart_chapter\030\013 \001(\005\";\n\rProto31400903"
    "\022*\n\017rollback_script\030\001 \003(\0132\021.ProtoScriptC"
    "lean\"%\n\rProto30400108\022\024\n\014refresh_tick\030\001 "
    "\001(\003\"4\n\rProto30400109\022#\n\tteam_info\030\001 \003(\0132"
    "\020.ProtoTravelTeam\"\231\001\n\rProto30400110\022\"\n\013m"
    "onster_set\030\001 \003(\0132\r.ProtoMonster\022\021\n\tis_ye"
    "llow\030\002 \001(\005\022\020\n\010kill_num\030\003 \001(\005\022\022\n\nis_broca"
    "st\030\004 \001(\005\022\024\n\014online_ticks\030\005 \001(\005\022\025\n\rkillin"
    "g_value\030\006 \001(\005\"C\n\rProto30100603\022\023\n\013activi"
    "ty_id\030\001 \001(\005\022\014\n\004time\030\002 \001(\005\022\017\n\007role_id\030\003 \003"
    "(\004\"\214\001\n\rProto31400125\022)\n\010tip_list\030\001 \003(\0132\027"
    ".ProtoPlayerTipSyncInfo\022\025\n\rmax_tip_index"
    "\030\002 \001(\005\022$\n\rnotify_record\030\003 \003(\0132\r.ProtoPai"
    "rObj\022\023\n\013ingore_flag\030\004 \001(\010\"\347\001\n\rProto31401"
    "601\022\021\n\trank_type\030\001 \001(\005\022\017\n\007role_id\030\002 \001(\003\022"
    "\021\n\trole_name\030\003 \001(\t\022\023\n\013league_name\030\004 \001(\t\022"
    "\020\n\010vip_type\030\005 \001(\005\022\024\n\014achieve_tick\030\006 \001(\003\022"
    "\022\n\nrank_value\030\007 \001(\005\022\022\n\nrank_force\030\010 \001(\005\022"
    "\021\n\text_value\030\t \001(\005\022\023\n\013worship_num\030\n \001(\003\022"
    "\022\n\nis_worship\030\013 \001(\005\"5\n\rProto30400903\022\022\n\n"
    "res_recogn\030\001 \001(\005\022\020\n\010res_body\030\002 \001(\014\"\213\001\n\rP"
    "roto30400111\022\021\n\tcur_blood\030\001 \001(\005\022\022\n\ncheck"
    "_flag\030\002 \001(\005\022\022\n\ncheck_tick\030\003 \001(\003\022\020\n\010non_t"
    "ips\030\004 \001(\005\022\025\n\reveryday_tick\030\005 \001(\003\022\026\n\016last"
    "_tips_tick\030\006 \001(\003", 4616);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoInner003.proto", &protobuf_RegisterTypes);
  Proto31400121::default_instance_ = new Proto31400121();
  Proto31400122::default_instance_ = new Proto31400122();
  Proto30400429::default_instance_ = new Proto30400429();
  Proto30400430::default_instance_ = new Proto30400430();
  Proto30400431::default_instance_ = new Proto30400431();
  Proto31400305::default_instance_ = new Proto31400305();
  Proto31400501::default_instance_ = new Proto31400501();
  Proto30400501::default_instance_ = new Proto30400501();
  Proto31400017::default_instance_ = new Proto31400017();
  Proto30100402::default_instance_ = new Proto30100402();
  Proto30100403::default_instance_ = new Proto30100403();
  Proto30100401::default_instance_ = new Proto30100401();
  Proto30200119::default_instance_ = new Proto30200119();
  Proto30200120::default_instance_ = new Proto30200120();
  Proto30200121::default_instance_ = new Proto30200121();
  Proto31401404::default_instance_ = new Proto31401404();
  Proto30400432::default_instance_ = new Proto30400432();
  Proto30400433::default_instance_ = new Proto30400433();
  Proto30400434::default_instance_ = new Proto30400434();
  Proto31400123::default_instance_ = new Proto31400123();
  Proto30100215::default_instance_ = new Proto30100215();
  Proto30401102::default_instance_ = new Proto30401102();
  Proto30100501::default_instance_ = new Proto30100501();
  Proto30200122::default_instance_ = new Proto30200122();
  Proto30100502::default_instance_ = new Proto30100502();
  Proto30100503::default_instance_ = new Proto30100503();
  Proto30400014::default_instance_ = new Proto30400014();
  Proto31400124::default_instance_ = new Proto31400124();
  Proto30400015::default_instance_ = new Proto30400015();
  Proto30401103::default_instance_ = new Proto30401103();
  Proto30400435::default_instance_ = new Proto30400435();
  Proto30200124::default_instance_ = new Proto30200124();
  Proto30200123::default_instance_ = new Proto30200123();
  Proto30400107::default_instance_ = new Proto30400107();
  Proto30100601::default_instance_ = new Proto30100601();
  Proto31401501::default_instance_ = new Proto31401501();
  Proto30100602::default_instance_ = new Proto30100602();
  Proto31400020::default_instance_ = new Proto31400020();
  Proto30100224::default_instance_ = new Proto30100224();
  Proto31400901::default_instance_ = new Proto31400901();
  Proto31400902::default_instance_ = new Proto31400902();
  Proto31400903::default_instance_ = new Proto31400903();
  Proto30400108::default_instance_ = new Proto30400108();
  Proto30400109::default_instance_ = new Proto30400109();
  Proto30400110::default_instance_ = new Proto30400110();
  Proto30100603::default_instance_ = new Proto30100603();
  Proto31400125::default_instance_ = new Proto31400125();
  Proto31401601::default_instance_ = new Proto31401601();
  Proto30400903::default_instance_ = new Proto30400903();
  Proto30400111::default_instance_ = new Proto30400111();
  Proto31400121::default_instance_->InitAsDefaultInstance();
  Proto31400122::default_instance_->InitAsDefaultInstance();
  Proto30400429::default_instance_->InitAsDefaultInstance();
  Proto30400430::default_instance_->InitAsDefaultInstance();
  Proto30400431::default_instance_->InitAsDefaultInstance();
  Proto31400305::default_instance_->InitAsDefaultInstance();
  Proto31400501::default_instance_->InitAsDefaultInstance();
  Proto30400501::default_instance_->InitAsDefaultInstance();
  Proto31400017::default_instance_->InitAsDefaultInstance();
  Proto30100402::default_instance_->InitAsDefaultInstance();
  Proto30100403::default_instance_->InitAsDefaultInstance();
  Proto30100401::default_instance_->InitAsDefaultInstance();
  Proto30200119::default_instance_->InitAsDefaultInstance();
  Proto30200120::default_instance_->InitAsDefaultInstance();
  Proto30200121::default_instance_->InitAsDefaultInstance();
  Proto31401404::default_instance_->InitAsDefaultInstance();
  Proto30400432::default_instance_->InitAsDefaultInstance();
  Proto30400433::default_instance_->InitAsDefaultInstance();
  Proto30400434::default_instance_->InitAsDefaultInstance();
  Proto31400123::default_instance_->InitAsDefaultInstance();
  Proto30100215::default_instance_->InitAsDefaultInstance();
  Proto30401102::default_instance_->InitAsDefaultInstance();
  Proto30100501::default_instance_->InitAsDefaultInstance();
  Proto30200122::default_instance_->InitAsDefaultInstance();
  Proto30100502::default_instance_->InitAsDefaultInstance();
  Proto30100503::default_instance_->InitAsDefaultInstance();
  Proto30400014::default_instance_->InitAsDefaultInstance();
  Proto31400124::default_instance_->InitAsDefaultInstance();
  Proto30400015::default_instance_->InitAsDefaultInstance();
  Proto30401103::default_instance_->InitAsDefaultInstance();
  Proto30400435::default_instance_->InitAsDefaultInstance();
  Proto30200124::default_instance_->InitAsDefaultInstance();
  Proto30200123::default_instance_->InitAsDefaultInstance();
  Proto30400107::default_instance_->InitAsDefaultInstance();
  Proto30100601::default_instance_->InitAsDefaultInstance();
  Proto31401501::default_instance_->InitAsDefaultInstance();
  Proto30100602::default_instance_->InitAsDefaultInstance();
  Proto31400020::default_instance_->InitAsDefaultInstance();
  Proto30100224::default_instance_->InitAsDefaultInstance();
  Proto31400901::default_instance_->InitAsDefaultInstance();
  Proto31400902::default_instance_->InitAsDefaultInstance();
  Proto31400903::default_instance_->InitAsDefaultInstance();
  Proto30400108::default_instance_->InitAsDefaultInstance();
  Proto30400109::default_instance_->InitAsDefaultInstance();
  Proto30400110::default_instance_->InitAsDefaultInstance();
  Proto30100603::default_instance_->InitAsDefaultInstance();
  Proto31400125::default_instance_->InitAsDefaultInstance();
  Proto31401601::default_instance_->InitAsDefaultInstance();
  Proto30400903::default_instance_->InitAsDefaultInstance();
  Proto30400111::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoInner003_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoInner003_2eproto {
  StaticDescriptorInitializer_ProtoInner003_2eproto() {
    protobuf_AddDesc_ProtoInner003_2eproto();
  }
} static_descriptor_initializer_ProtoInner003_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto31400121::kCurLabelIdFieldNumber;
const int Proto31400121::kPermantLabelListFieldNumber;
const int Proto31400121::kLimitTimeLabelListFieldNumber;
const int Proto31400121::kUnshownListFieldNumber;
const int Proto31400121::kNewListFieldNumber;
const int Proto31400121::kPreLabelIdFieldNumber;
#endif  // !_MSC_VER

Proto31400121::Proto31400121()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400121::InitAsDefaultInstance() {
}

Proto31400121::Proto31400121(const Proto31400121& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400121::SharedCtor() {
  _cached_size_ = 0;
  cur_label_id_ = 0;
  pre_label_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400121::~Proto31400121() {
  SharedDtor();
}

void Proto31400121::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400121::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400121::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400121_descriptor_;
}

const Proto31400121& Proto31400121::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto31400121* Proto31400121::default_instance_ = NULL;

Proto31400121* Proto31400121::New() const {
  return new Proto31400121;
}

void Proto31400121::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_label_id_ = 0;
    pre_label_id_ = 0;
  }
  permant_label_list_.Clear();
  limit_time_label_list_.Clear();
  unshown_list_.Clear();
  new_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400121::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_label_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_label_id_)));
          set_has_cur_label_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_permant_label_list;
        break;
      }
      
      // repeated int32 permant_label_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_permant_label_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_permant_label_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_permant_label_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_permant_label_list;
        if (input->ExpectTag(26)) goto parse_limit_time_label_list;
        break;
      }
      
      // repeated .ProtoFlaunt limit_time_label_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_limit_time_label_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_limit_time_label_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_limit_time_label_list;
        if (input->ExpectTag(32)) goto parse_unshown_list;
        break;
      }
      
      // repeated int32 unshown_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unshown_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_unshown_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unshown_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_unshown_list;
        if (input->ExpectTag(40)) goto parse_new_list;
        break;
      }
      
      // repeated int32 new_list = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_new_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_new_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_new_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_new_list;
        if (input->ExpectTag(48)) goto parse_pre_label_id;
        break;
      }
      
      // optional int32 pre_label_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pre_label_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pre_label_id_)));
          set_has_pre_label_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400121::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_label_id = 1;
  if (has_cur_label_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_label_id(), output);
  }
  
  // repeated int32 permant_label_list = 2;
  for (int i = 0; i < this->permant_label_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->permant_label_list(i), output);
  }
  
  // repeated .ProtoFlaunt limit_time_label_list = 3;
  for (int i = 0; i < this->limit_time_label_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->limit_time_label_list(i), output);
  }
  
  // repeated int32 unshown_list = 4;
  for (int i = 0; i < this->unshown_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->unshown_list(i), output);
  }
  
  // repeated int32 new_list = 5;
  for (int i = 0; i < this->new_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->new_list(i), output);
  }
  
  // optional int32 pre_label_id = 6;
  if (has_pre_label_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->pre_label_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400121::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_label_id = 1;
  if (has_cur_label_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_label_id(), target);
  }
  
  // repeated int32 permant_label_list = 2;
  for (int i = 0; i < this->permant_label_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->permant_label_list(i), target);
  }
  
  // repeated .ProtoFlaunt limit_time_label_list = 3;
  for (int i = 0; i < this->limit_time_label_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->limit_time_label_list(i), target);
  }
  
  // repeated int32 unshown_list = 4;
  for (int i = 0; i < this->unshown_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->unshown_list(i), target);
  }
  
  // repeated int32 new_list = 5;
  for (int i = 0; i < this->new_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->new_list(i), target);
  }
  
  // optional int32 pre_label_id = 6;
  if (has_pre_label_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->pre_label_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400121::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_label_id = 1;
    if (has_cur_label_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_label_id());
    }
    
    // optional int32 pre_label_id = 6;
    if (has_pre_label_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pre_label_id());
    }
    
  }
  // repeated int32 permant_label_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->permant_label_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->permant_label_list(i));
    }
    total_size += 1 * this->permant_label_list_size() + data_size;
  }
  
  // repeated .ProtoFlaunt limit_time_label_list = 3;
  total_size += 1 * this->limit_time_label_list_size();
  for (int i = 0; i < this->limit_time_label_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->limit_time_label_list(i));
  }
  
  // repeated int32 unshown_list = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->unshown_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unshown_list(i));
    }
    total_size += 1 * this->unshown_list_size() + data_size;
  }
  
  // repeated int32 new_list = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->new_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->new_list(i));
    }
    total_size += 1 * this->new_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400121::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400121* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400121*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400121::MergeFrom(const Proto31400121& from) {
  GOOGLE_CHECK_NE(&from, this);
  permant_label_list_.MergeFrom(from.permant_label_list_);
  limit_time_label_list_.MergeFrom(from.limit_time_label_list_);
  unshown_list_.MergeFrom(from.unshown_list_);
  new_list_.MergeFrom(from.new_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_label_id()) {
      set_cur_label_id(from.cur_label_id());
    }
    if (from.has_pre_label_id()) {
      set_pre_label_id(from.pre_label_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400121::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400121::CopyFrom(const Proto31400121& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400121::IsInitialized() const {
  
  return true;
}

void Proto31400121::Swap(Proto31400121* other) {
  if (other != this) {
    std::swap(cur_label_id_, other->cur_label_id_);
    permant_label_list_.Swap(&other->permant_label_list_);
    limit_time_label_list_.Swap(&other->limit_time_label_list_);
    unshown_list_.Swap(&other->unshown_list_);
    new_list_.Swap(&other->new_list_);
    std::swap(pre_label_id_, other->pre_label_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400121::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400121_descriptor_;
  metadata.reflection = Proto31400121_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400122::kChildAchieveFieldNumber;
const int Proto31400122::kAchieveDetailFieldNumber;
const int Proto31400122::kAchieveLevelFieldNumber;
const int Proto31400122::kAchievePointMapFieldNumber;
#endif  // !_MSC_VER

Proto31400122::Proto31400122()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400122::InitAsDefaultInstance() {
}

Proto31400122::Proto31400122(const Proto31400122& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400122::SharedCtor() {
  _cached_size_ = 0;
  achieve_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400122::~Proto31400122() {
  SharedDtor();
}

void Proto31400122::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400122::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400122::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400122_descriptor_;
}

const Proto31400122& Proto31400122::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto31400122* Proto31400122::default_instance_ = NULL;

Proto31400122* Proto31400122::New() const {
  return new Proto31400122;
}

void Proto31400122::Clear() {
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    achieve_level_ = 0;
  }
  child_achieve_.Clear();
  achieve_detail_.Clear();
  achieve_point_map_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400122::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoChildAchieve child_achieve = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_child_achieve:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_child_achieve()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_child_achieve;
        if (input->ExpectTag(18)) goto parse_achieve_detail;
        break;
      }
      
      // repeated .ProtoAchieveDetail achieve_detail = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_achieve_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_achieve_detail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_achieve_detail;
        if (input->ExpectTag(24)) goto parse_achieve_level;
        break;
      }
      
      // optional int32 achieve_level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_achieve_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &achieve_level_)));
          set_has_achieve_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_achieve_point_map;
        break;
      }
      
      // repeated .ProtoPairObj achieve_point_map = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_achieve_point_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_achieve_point_map()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_achieve_point_map;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400122::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoChildAchieve child_achieve = 1;
  for (int i = 0; i < this->child_achieve_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->child_achieve(i), output);
  }
  
  // repeated .ProtoAchieveDetail achieve_detail = 2;
  for (int i = 0; i < this->achieve_detail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->achieve_detail(i), output);
  }
  
  // optional int32 achieve_level = 3;
  if (has_achieve_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->achieve_level(), output);
  }
  
  // repeated .ProtoPairObj achieve_point_map = 4;
  for (int i = 0; i < this->achieve_point_map_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->achieve_point_map(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400122::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoChildAchieve child_achieve = 1;
  for (int i = 0; i < this->child_achieve_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->child_achieve(i), target);
  }
  
  // repeated .ProtoAchieveDetail achieve_detail = 2;
  for (int i = 0; i < this->achieve_detail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->achieve_detail(i), target);
  }
  
  // optional int32 achieve_level = 3;
  if (has_achieve_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->achieve_level(), target);
  }
  
  // repeated .ProtoPairObj achieve_point_map = 4;
  for (int i = 0; i < this->achieve_point_map_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->achieve_point_map(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400122::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional int32 achieve_level = 3;
    if (has_achieve_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->achieve_level());
    }
    
  }
  // repeated .ProtoChildAchieve child_achieve = 1;
  total_size += 1 * this->child_achieve_size();
  for (int i = 0; i < this->child_achieve_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->child_achieve(i));
  }
  
  // repeated .ProtoAchieveDetail achieve_detail = 2;
  total_size += 1 * this->achieve_detail_size();
  for (int i = 0; i < this->achieve_detail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->achieve_detail(i));
  }
  
  // repeated .ProtoPairObj achieve_point_map = 4;
  total_size += 1 * this->achieve_point_map_size();
  for (int i = 0; i < this->achieve_point_map_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->achieve_point_map(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400122::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400122* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400122*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400122::MergeFrom(const Proto31400122& from) {
  GOOGLE_CHECK_NE(&from, this);
  child_achieve_.MergeFrom(from.child_achieve_);
  achieve_detail_.MergeFrom(from.achieve_detail_);
  achieve_point_map_.MergeFrom(from.achieve_point_map_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_achieve_level()) {
      set_achieve_level(from.achieve_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400122::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400122::CopyFrom(const Proto31400122& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400122::IsInitialized() const {
  
  return true;
}

void Proto31400122::Swap(Proto31400122* other) {
  if (other != this) {
    child_achieve_.Swap(&other->child_achieve_);
    achieve_detail_.Swap(&other->achieve_detail_);
    std::swap(achieve_level_, other->achieve_level_);
    achieve_point_map_.Swap(&other->achieve_point_map_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400122::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400122_descriptor_;
  metadata.reflection = Proto31400122_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400429::kSceneIdFieldNumber;
#endif  // !_MSC_VER

Proto30400429::Proto30400429()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400429::InitAsDefaultInstance() {
}

Proto30400429::Proto30400429(const Proto30400429& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400429::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400429::~Proto30400429() {
  SharedDtor();
}

void Proto30400429::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400429::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400429::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400429_descriptor_;
}

const Proto30400429& Proto30400429::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30400429* Proto30400429::default_instance_ = NULL;

Proto30400429* Proto30400429::New() const {
  return new Proto30400429;
}

void Proto30400429::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400429::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400429::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400429::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400429::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400429::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400429* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400429*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400429::MergeFrom(const Proto30400429& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400429::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400429::CopyFrom(const Proto30400429& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400429::IsInitialized() const {
  
  return true;
}

void Proto30400429::Swap(Proto30400429* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400429::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400429_descriptor_;
  metadata.reflection = Proto30400429_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400430::kPageIndexFieldNumber;
#endif  // !_MSC_VER

Proto30400430::Proto30400430()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400430::InitAsDefaultInstance() {
}

Proto30400430::Proto30400430(const Proto30400430& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400430::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400430::~Proto30400430() {
  SharedDtor();
}

void Proto30400430::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400430::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400430::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400430_descriptor_;
}

const Proto30400430& Proto30400430::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30400430* Proto30400430::default_instance_ = NULL;

Proto30400430* Proto30400430::New() const {
  return new Proto30400430;
}

void Proto30400430::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400430::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400430::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400430::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400430::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400430::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400430* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400430*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400430::MergeFrom(const Proto30400430& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400430::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400430::CopyFrom(const Proto30400430& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400430::IsInitialized() const {
  
  return true;
}

void Proto30400430::Swap(Proto30400430* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400430::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400430_descriptor_;
  metadata.reflection = Proto30400430_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400431::kPageIndexFieldNumber;
#endif  // !_MSC_VER

Proto30400431::Proto30400431()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400431::InitAsDefaultInstance() {
}

Proto30400431::Proto30400431(const Proto30400431& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400431::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400431::~Proto30400431() {
  SharedDtor();
}

void Proto30400431::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400431::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400431::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400431_descriptor_;
}

const Proto30400431& Proto30400431::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30400431* Proto30400431::default_instance_ = NULL;

Proto30400431* Proto30400431::New() const {
  return new Proto30400431;
}

void Proto30400431::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400431::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400431::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400431::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400431::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400431::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400431* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400431*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400431::MergeFrom(const Proto30400431& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400431::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400431::CopyFrom(const Proto30400431& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400431::IsInitialized() const {
  
  return true;
}

void Proto30400431::Swap(Proto30400431* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400431::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400431_descriptor_;
  metadata.reflection = Proto30400431_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400305::kItemSetFieldNumber;
const int Proto31400305::kAddAnimaFieldNumber;
const int Proto31400305::kAddContriFieldNumber;
#endif  // !_MSC_VER

Proto31400305::Proto31400305()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400305::InitAsDefaultInstance() {
}

Proto31400305::Proto31400305(const Proto31400305& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400305::SharedCtor() {
  _cached_size_ = 0;
  add_anima_ = 0;
  add_contri_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400305::~Proto31400305() {
  SharedDtor();
}

void Proto31400305::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400305::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400305::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400305_descriptor_;
}

const Proto31400305& Proto31400305::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto31400305* Proto31400305::default_instance_ = NULL;

Proto31400305* Proto31400305::New() const {
  return new Proto31400305;
}

void Proto31400305::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    add_anima_ = 0;
    add_contri_ = 0;
  }
  item_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400305::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem item_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_set;
        if (input->ExpectTag(16)) goto parse_add_anima;
        break;
      }
      
      // optional int32 add_anima = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_add_anima:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_anima_)));
          set_has_add_anima();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_add_contri;
        break;
      }
      
      // optional int32 add_contri = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_add_contri:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_contri_)));
          set_has_add_contri();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400305::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem item_set = 1;
  for (int i = 0; i < this->item_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_set(i), output);
  }
  
  // optional int32 add_anima = 2;
  if (has_add_anima()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->add_anima(), output);
  }
  
  // optional int32 add_contri = 3;
  if (has_add_contri()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->add_contri(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400305::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem item_set = 1;
  for (int i = 0; i < this->item_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_set(i), target);
  }
  
  // optional int32 add_anima = 2;
  if (has_add_anima()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->add_anima(), target);
  }
  
  // optional int32 add_contri = 3;
  if (has_add_contri()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->add_contri(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400305::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 add_anima = 2;
    if (has_add_anima()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_anima());
    }
    
    // optional int32 add_contri = 3;
    if (has_add_contri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_contri());
    }
    
  }
  // repeated .ProtoItem item_set = 1;
  total_size += 1 * this->item_set_size();
  for (int i = 0; i < this->item_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400305::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400305* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400305*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400305::MergeFrom(const Proto31400305& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_set_.MergeFrom(from.item_set_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_add_anima()) {
      set_add_anima(from.add_anima());
    }
    if (from.has_add_contri()) {
      set_add_contri(from.add_contri());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400305::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400305::CopyFrom(const Proto31400305& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400305::IsInitialized() const {
  
  return true;
}

void Proto31400305::Swap(Proto31400305* other) {
  if (other != this) {
    item_set_.Swap(&other->item_set_);
    std::swap(add_anima_, other->add_anima_);
    std::swap(add_contri_, other->add_contri_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400305::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400305_descriptor_;
  metadata.reflection = Proto31400305_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400501::kSceneIdFieldNumber;
const int Proto31400501::kPixelXFieldNumber;
const int Proto31400501::kPixelYFieldNumber;
const int Proto31400501::kClientTypeFieldNumber;
#endif  // !_MSC_VER

Proto31400501::Proto31400501()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400501::InitAsDefaultInstance() {
}

Proto31400501::Proto31400501(const Proto31400501& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400501::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  client_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400501::~Proto31400501() {
  SharedDtor();
}

void Proto31400501::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400501::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400501::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400501_descriptor_;
}

const Proto31400501& Proto31400501::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto31400501* Proto31400501::default_instance_ = NULL;

Proto31400501* Proto31400501::New() const {
  return new Proto31400501;
}

void Proto31400501::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
    client_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400501::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_client_type;
        break;
      }
      
      // optional int32 client_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_client_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_type_)));
          set_has_client_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400501::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_y(), output);
  }
  
  // optional int32 client_type = 4;
  if (has_client_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->client_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400501::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_y(), target);
  }
  
  // optional int32 client_type = 4;
  if (has_client_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->client_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400501::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 pixel_x = 2;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 3;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
    // optional int32 client_type = 4;
    if (has_client_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->client_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400501::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400501* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400501*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400501::MergeFrom(const Proto31400501& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
    if (from.has_client_type()) {
      set_client_type(from.client_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400501::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400501::CopyFrom(const Proto31400501& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400501::IsInitialized() const {
  
  return true;
}

void Proto31400501::Swap(Proto31400501* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(client_type_, other->client_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400501::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400501_descriptor_;
  metadata.reflection = Proto31400501_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400501::kOperResultFieldNumber;
const int Proto30400501::kSceneIdFieldNumber;
const int Proto30400501::kPixelXFieldNumber;
const int Proto30400501::kPixelYFieldNumber;
const int Proto30400501::kClientTypeFieldNumber;
#endif  // !_MSC_VER

Proto30400501::Proto30400501()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400501::InitAsDefaultInstance() {
}

Proto30400501::Proto30400501(const Proto30400501& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400501::SharedCtor() {
  _cached_size_ = 0;
  oper_result_ = 0;
  scene_id_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  client_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400501::~Proto30400501() {
  SharedDtor();
}

void Proto30400501::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400501::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400501::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400501_descriptor_;
}

const Proto30400501& Proto30400501::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30400501* Proto30400501::default_instance_ = NULL;

Proto30400501* Proto30400501::New() const {
  return new Proto30400501;
}

void Proto30400501::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oper_result_ = 0;
    scene_id_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
    client_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400501::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 oper_result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oper_result_)));
          set_has_oper_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_client_type;
        break;
      }
      
      // optional int32 client_type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_client_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_type_)));
          set_has_client_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400501::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 oper_result = 1;
  if (has_oper_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oper_result(), output);
  }
  
  // optional int32 scene_id = 2;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->scene_id(), output);
  }
  
  // optional int32 pixel_x = 3;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 4;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pixel_y(), output);
  }
  
  // optional int32 client_type = 5;
  if (has_client_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->client_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400501::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 oper_result = 1;
  if (has_oper_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oper_result(), target);
  }
  
  // optional int32 scene_id = 2;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->scene_id(), target);
  }
  
  // optional int32 pixel_x = 3;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 4;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pixel_y(), target);
  }
  
  // optional int32 client_type = 5;
  if (has_client_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->client_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400501::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 oper_result = 1;
    if (has_oper_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oper_result());
    }
    
    // optional int32 scene_id = 2;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 pixel_x = 3;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 4;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
    // optional int32 client_type = 5;
    if (has_client_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->client_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400501::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400501* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400501*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400501::MergeFrom(const Proto30400501& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_oper_result()) {
      set_oper_result(from.oper_result());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
    if (from.has_client_type()) {
      set_client_type(from.client_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400501::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400501::CopyFrom(const Proto30400501& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400501::IsInitialized() const {
  
  return true;
}

void Proto30400501::Swap(Proto30400501* other) {
  if (other != this) {
    std::swap(oper_result_, other->oper_result_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(client_type_, other->client_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400501::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400501_descriptor_;
  metadata.reflection = Proto30400501_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400017::kGoodsIdFieldNumber;
const int Proto31400017::kMonsterSortFieldNumber;
const int Proto31400017::kGatherFlagFieldNumber;
const int Proto31400017::kGatherItemFieldNumber;
#endif  // !_MSC_VER

Proto31400017::Proto31400017()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400017::InitAsDefaultInstance() {
  gather_item_ = const_cast< ::ProtoItem*>(&::ProtoItem::default_instance());
}

Proto31400017::Proto31400017(const Proto31400017& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400017::SharedCtor() {
  _cached_size_ = 0;
  goods_id_ = GOOGLE_LONGLONG(0);
  monster_sort_ = 0;
  gather_flag_ = 0;
  gather_item_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400017::~Proto31400017() {
  SharedDtor();
}

void Proto31400017::SharedDtor() {
  if (this != default_instance_) {
    delete gather_item_;
  }
}

void Proto31400017::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400017::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400017_descriptor_;
}

const Proto31400017& Proto31400017::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto31400017* Proto31400017::default_instance_ = NULL;

Proto31400017* Proto31400017::New() const {
  return new Proto31400017;
}

void Proto31400017::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    goods_id_ = GOOGLE_LONGLONG(0);
    monster_sort_ = 0;
    gather_flag_ = 0;
    if (has_gather_item()) {
      if (gather_item_ != NULL) gather_item_->::ProtoItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400017::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 goods_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &goods_id_)));
          set_has_goods_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_monster_sort;
        break;
      }
      
      // optional int32 monster_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_monster_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &monster_sort_)));
          set_has_monster_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_gather_flag;
        break;
      }
      
      // optional int32 gather_flag = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gather_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gather_flag_)));
          set_has_gather_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_gather_item;
        break;
      }
      
      // optional .ProtoItem gather_item = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gather_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gather_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400017::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 goods_id = 1;
  if (has_goods_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->goods_id(), output);
  }
  
  // optional int32 monster_sort = 2;
  if (has_monster_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->monster_sort(), output);
  }
  
  // optional int32 gather_flag = 3;
  if (has_gather_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gather_flag(), output);
  }
  
  // optional .ProtoItem gather_item = 4;
  if (has_gather_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->gather_item(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400017::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 goods_id = 1;
  if (has_goods_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->goods_id(), target);
  }
  
  // optional int32 monster_sort = 2;
  if (has_monster_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->monster_sort(), target);
  }
  
  // optional int32 gather_flag = 3;
  if (has_gather_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gather_flag(), target);
  }
  
  // optional .ProtoItem gather_item = 4;
  if (has_gather_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->gather_item(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400017::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 goods_id = 1;
    if (has_goods_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->goods_id());
    }
    
    // optional int32 monster_sort = 2;
    if (has_monster_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->monster_sort());
    }
    
    // optional int32 gather_flag = 3;
    if (has_gather_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gather_flag());
    }
    
    // optional .ProtoItem gather_item = 4;
    if (has_gather_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gather_item());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400017::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400017* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400017*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400017::MergeFrom(const Proto31400017& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goods_id()) {
      set_goods_id(from.goods_id());
    }
    if (from.has_monster_sort()) {
      set_monster_sort(from.monster_sort());
    }
    if (from.has_gather_flag()) {
      set_gather_flag(from.gather_flag());
    }
    if (from.has_gather_item()) {
      mutable_gather_item()->::ProtoItem::MergeFrom(from.gather_item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400017::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400017::CopyFrom(const Proto31400017& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400017::IsInitialized() const {
  
  return true;
}

void Proto31400017::Swap(Proto31400017* other) {
  if (other != this) {
    std::swap(goods_id_, other->goods_id_);
    std::swap(monster_sort_, other->monster_sort_);
    std::swap(gather_flag_, other->gather_flag_);
    std::swap(gather_item_, other->gather_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400017::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400017_descriptor_;
  metadata.reflection = Proto31400017_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100402::kRoleIdFieldNumber;
const int Proto30100402::kRoleNameFieldNumber;
const int Proto30100402::kItemIdFieldNumber;
const int Proto30100402::kItemAmountFieldNumber;
#endif  // !_MSC_VER

Proto30100402::Proto30100402()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100402::InitAsDefaultInstance() {
}

Proto30100402::Proto30100402(const Proto30100402& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100402::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100402::~Proto30100402() {
  SharedDtor();
}

void Proto30100402::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto30100402::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100402::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100402_descriptor_;
}

const Proto30100402& Proto30100402::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30100402* Proto30100402::default_instance_ = NULL;

Proto30100402* Proto30100402::New() const {
  return new Proto30100402;
}

void Proto30100402::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
  }
  item_id_.Clear();
  item_amount_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100402::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_role_name;
        break;
      }
      
      // optional string role_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_id;
        break;
      }
      
      // repeated int32 item_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_item_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_id;
        if (input->ExpectTag(32)) goto parse_item_amount;
        break;
      }
      
      // repeated int32 item_amount = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_item_amount())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item_amount())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_item_amount;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100402::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional string role_name = 2;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->role_name(), output);
  }
  
  // repeated int32 item_id = 3;
  for (int i = 0; i < this->item_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->item_id(i), output);
  }
  
  // repeated int32 item_amount = 4;
  for (int i = 0; i < this->item_amount_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->item_amount(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100402::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional string role_name = 2;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->role_name(), target);
  }
  
  // repeated int32 item_id = 3;
  for (int i = 0; i < this->item_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->item_id(i), target);
  }
  
  // repeated int32 item_amount = 4;
  for (int i = 0; i < this->item_amount_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->item_amount(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100402::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional string role_name = 2;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
  }
  // repeated int32 item_id = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item_id(i));
    }
    total_size += 1 * this->item_id_size() + data_size;
  }
  
  // repeated int32 item_amount = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_amount_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item_amount(i));
    }
    total_size += 1 * this->item_amount_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100402::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100402* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100402*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100402::MergeFrom(const Proto30100402& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_id_.MergeFrom(from.item_id_);
  item_amount_.MergeFrom(from.item_amount_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100402::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100402::CopyFrom(const Proto30100402& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100402::IsInitialized() const {
  
  return true;
}

void Proto30100402::Swap(Proto30100402* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(role_name_, other->role_name_);
    item_id_.Swap(&other->item_id_);
    item_amount_.Swap(&other->item_amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100402::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100402_descriptor_;
  metadata.reflection = Proto30100402_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100403::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto30100403::Proto30100403()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100403::InitAsDefaultInstance() {
}

Proto30100403::Proto30100403(const Proto30100403& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100403::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100403::~Proto30100403() {
  SharedDtor();
}

void Proto30100403::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100403::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100403::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100403_descriptor_;
}

const Proto30100403& Proto30100403::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30100403* Proto30100403::default_instance_ = NULL;

Proto30100403* Proto30100403::New() const {
  return new Proto30100403;
}

void Proto30100403::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100403::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100403::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100403::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100403::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100403::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100403* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100403*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100403::MergeFrom(const Proto30100403& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100403::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100403::CopyFrom(const Proto30100403& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100403::IsInitialized() const {
  
  return true;
}

void Proto30100403::Swap(Proto30100403* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100403::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100403_descriptor_;
  metadata.reflection = Proto30100403_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100401::kRoleIdFieldNumber;
const int Proto30100401::kOperTypeFieldNumber;
#endif  // !_MSC_VER

Proto30100401::Proto30100401()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100401::InitAsDefaultInstance() {
}

Proto30100401::Proto30100401(const Proto30100401& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100401::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  oper_type_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100401::~Proto30100401() {
  SharedDtor();
}

void Proto30100401::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100401::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100401::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100401_descriptor_;
}

const Proto30100401& Proto30100401::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30100401* Proto30100401::default_instance_ = NULL;

Proto30100401* Proto30100401::New() const {
  return new Proto30100401;
}

void Proto30100401::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    oper_type_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100401::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_oper_type;
        break;
      }
      
      // optional bool oper_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_oper_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &oper_type_)));
          set_has_oper_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100401::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional bool oper_type = 2;
  if (has_oper_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->oper_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100401::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional bool oper_type = 2;
  if (has_oper_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->oper_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100401::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional bool oper_type = 2;
    if (has_oper_type()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100401::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100401* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100401*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100401::MergeFrom(const Proto30100401& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_oper_type()) {
      set_oper_type(from.oper_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100401::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100401::CopyFrom(const Proto30100401& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100401::IsInitialized() const {
  
  return true;
}

void Proto30100401::Swap(Proto30100401* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(oper_type_, other->oper_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100401::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100401_descriptor_;
  metadata.reflection = Proto30100401_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30200119::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto30200119::Proto30200119()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30200119::InitAsDefaultInstance() {
}

Proto30200119::Proto30200119(const Proto30200119& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30200119::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30200119::~Proto30200119() {
  SharedDtor();
}

void Proto30200119::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30200119::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30200119::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30200119_descriptor_;
}

const Proto30200119& Proto30200119::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30200119* Proto30200119::default_instance_ = NULL;

Proto30200119* Proto30200119::New() const {
  return new Proto30200119;
}

void Proto30200119::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30200119::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30200119::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30200119::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30200119::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30200119::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30200119* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30200119*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30200119::MergeFrom(const Proto30200119& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30200119::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30200119::CopyFrom(const Proto30200119& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30200119::IsInitialized() const {
  
  return true;
}

void Proto30200119::Swap(Proto30200119* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30200119::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30200119_descriptor_;
  metadata.reflection = Proto30200119_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30200120::kRoleIdSetFieldNumber;
#endif  // !_MSC_VER

Proto30200120::Proto30200120()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30200120::InitAsDefaultInstance() {
}

Proto30200120::Proto30200120(const Proto30200120& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30200120::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30200120::~Proto30200120() {
  SharedDtor();
}

void Proto30200120::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30200120::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30200120::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30200120_descriptor_;
}

const Proto30200120& Proto30200120::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30200120* Proto30200120::default_instance_ = NULL;

Proto30200120* Proto30200120::New() const {
  return new Proto30200120;
}

void Proto30200120::Clear() {
  role_id_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30200120::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 role_id_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_role_id_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_id_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_role_id_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30200120::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 role_id_set = 1;
  for (int i = 0; i < this->role_id_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->role_id_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30200120::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 role_id_set = 1;
  for (int i = 0; i < this->role_id_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->role_id_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30200120::ByteSize() const {
  int total_size = 0;
  
  // repeated int64 role_id_set = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_id_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_id_set(i));
    }
    total_size += 1 * this->role_id_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30200120::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30200120* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30200120*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30200120::MergeFrom(const Proto30200120& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_id_set_.MergeFrom(from.role_id_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30200120::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30200120::CopyFrom(const Proto30200120& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30200120::IsInitialized() const {
  
  return true;
}

void Proto30200120::Swap(Proto30200120* other) {
  if (other != this) {
    role_id_set_.Swap(&other->role_id_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30200120::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30200120_descriptor_;
  metadata.reflection = Proto30200120_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30200121::kRoleIdSetFieldNumber;
#endif  // !_MSC_VER

Proto30200121::Proto30200121()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30200121::InitAsDefaultInstance() {
}

Proto30200121::Proto30200121(const Proto30200121& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30200121::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30200121::~Proto30200121() {
  SharedDtor();
}

void Proto30200121::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30200121::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30200121::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30200121_descriptor_;
}

const Proto30200121& Proto30200121::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30200121* Proto30200121::default_instance_ = NULL;

Proto30200121* Proto30200121::New() const {
  return new Proto30200121;
}

void Proto30200121::Clear() {
  role_id_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30200121::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 role_id_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_role_id_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_id_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_role_id_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30200121::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 role_id_set = 1;
  for (int i = 0; i < this->role_id_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->role_id_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30200121::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 role_id_set = 1;
  for (int i = 0; i < this->role_id_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->role_id_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30200121::ByteSize() const {
  int total_size = 0;
  
  // repeated int64 role_id_set = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_id_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_id_set(i));
    }
    total_size += 1 * this->role_id_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30200121::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30200121* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30200121*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30200121::MergeFrom(const Proto30200121& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_id_set_.MergeFrom(from.role_id_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30200121::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30200121::CopyFrom(const Proto30200121& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30200121::IsInitialized() const {
  
  return true;
}

void Proto30200121::Swap(Proto30200121* other) {
  if (other != this) {
    role_id_set_.Swap(&other->role_id_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30200121::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30200121_descriptor_;
  metadata.reflection = Proto30200121_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31401404::kObjTypeFieldNumber;
const int Proto31401404::kBsonRawDataFieldNumber;
#endif  // !_MSC_VER

Proto31401404::Proto31401404()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31401404::InitAsDefaultInstance() {
}

Proto31401404::Proto31401404(const Proto31401404& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31401404::SharedCtor() {
  _cached_size_ = 0;
  obj_type_ = 0;
  bson_raw_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31401404::~Proto31401404() {
  SharedDtor();
}

void Proto31401404::SharedDtor() {
  if (bson_raw_data_ != &::google::protobuf::internal::kEmptyString) {
    delete bson_raw_data_;
  }
  if (this != default_instance_) {
  }
}

void Proto31401404::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31401404::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31401404_descriptor_;
}

const Proto31401404& Proto31401404::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto31401404* Proto31401404::default_instance_ = NULL;

Proto31401404* Proto31401404::New() const {
  return new Proto31401404;
}

void Proto31401404::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    obj_type_ = 0;
    if (has_bson_raw_data()) {
      if (bson_raw_data_ != &::google::protobuf::internal::kEmptyString) {
        bson_raw_data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31401404::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 obj_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &obj_type_)));
          set_has_obj_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bson_raw_data;
        break;
      }
      
      // optional bytes bson_raw_data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bson_raw_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bson_raw_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31401404::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 obj_type = 1;
  if (has_obj_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->obj_type(), output);
  }
  
  // optional bytes bson_raw_data = 2;
  if (has_bson_raw_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->bson_raw_data(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31401404::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 obj_type = 1;
  if (has_obj_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->obj_type(), target);
  }
  
  // optional bytes bson_raw_data = 2;
  if (has_bson_raw_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->bson_raw_data(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31401404::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 obj_type = 1;
    if (has_obj_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->obj_type());
    }
    
    // optional bytes bson_raw_data = 2;
    if (has_bson_raw_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bson_raw_data());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31401404::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31401404* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31401404*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31401404::MergeFrom(const Proto31401404& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj_type()) {
      set_obj_type(from.obj_type());
    }
    if (from.has_bson_raw_data()) {
      set_bson_raw_data(from.bson_raw_data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31401404::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31401404::CopyFrom(const Proto31401404& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31401404::IsInitialized() const {
  
  return true;
}

void Proto31401404::Swap(Proto31401404* other) {
  if (other != this) {
    std::swap(obj_type_, other->obj_type_);
    std::swap(bson_raw_data_, other->bson_raw_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31401404::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31401404_descriptor_;
  metadata.reflection = Proto31401404_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400432::kRoleInfoFieldNumber;
const int Proto30400432::kFightPropFieldNumber;
const int Proto30400432::kSkillSetFieldNumber;
const int Proto30400432::kShapeSetFieldNumber;
const int Proto30400432::kSpaceIdFieldNumber;
const int Proto30400432::kSceneModeFieldNumber;
const int Proto30400432::kSceneIdFieldNumber;
const int Proto30400432::kPosXFieldNumber;
const int Proto30400432::kPosYFieldNumber;
const int Proto30400432::kOfflineBeastFieldNumber;
const int Proto30400432::kWingIdFieldNumber;
const int Proto30400432::kWingLevelFieldNumber;
const int Proto30400432::kKillNumFieldNumber;
const int Proto30400432::kKillingValueFieldNumber;
const int Proto30400432::kCurLabelFieldNumber;
const int Proto30400432::kWeaponIdFieldNumber;
const int Proto30400432::kWeaponLevelFieldNumber;
const int Proto30400432::kEquipRefineLvlFieldNumber;
const int Proto30400432::kFashionIdFieldNumber;
const int Proto30400432::kFashionColorFieldNumber;
const int Proto30400432::kSoliderLevelFieldNumber;
const int Proto30400432::kMagicLevelFieldNumber;
const int Proto30400432::kBeastLevelFieldNumber;
const int Proto30400432::kMountLevelFieldNumber;
#endif  // !_MSC_VER

Proto30400432::Proto30400432()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400432::InitAsDefaultInstance() {
  role_info_ = const_cast< ::ProtoRoleInfo*>(&::ProtoRoleInfo::default_instance());
  fight_prop_ = const_cast< ::ProtoFightPro*>(&::ProtoFightPro::default_instance());
  offline_beast_ = const_cast< ::ProtoOfflineBeast*>(&::ProtoOfflineBeast::default_instance());
}

Proto30400432::Proto30400432(const Proto30400432& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400432::SharedCtor() {
  _cached_size_ = 0;
  role_info_ = NULL;
  fight_prop_ = NULL;
  space_id_ = 0;
  scene_mode_ = 0;
  scene_id_ = 0;
  pos_x_ = 0;
  pos_y_ = 0;
  offline_beast_ = NULL;
  wing_id_ = 0;
  wing_level_ = 0;
  kill_num_ = 0;
  killing_value_ = 0;
  cur_label_ = 0;
  weapon_id_ = 0;
  weapon_level_ = 0;
  equip_refine_lvl_ = 0;
  fashion_id_ = 0;
  fashion_color_ = 0;
  solider_level_ = 0;
  magic_level_ = 0;
  beast_level_ = 0;
  mount_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400432::~Proto30400432() {
  SharedDtor();
}

void Proto30400432::SharedDtor() {
  if (this != default_instance_) {
    delete role_info_;
    delete fight_prop_;
    delete offline_beast_;
  }
}

void Proto30400432::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400432::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400432_descriptor_;
}

const Proto30400432& Proto30400432::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30400432* Proto30400432::default_instance_ = NULL;

Proto30400432* Proto30400432::New() const {
  return new Proto30400432;
}

void Proto30400432::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_role_info()) {
      if (role_info_ != NULL) role_info_->::ProtoRoleInfo::Clear();
    }
    if (has_fight_prop()) {
      if (fight_prop_ != NULL) fight_prop_->::ProtoFightPro::Clear();
    }
    space_id_ = 0;
    scene_mode_ = 0;
    scene_id_ = 0;
    pos_x_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    pos_y_ = 0;
    if (has_offline_beast()) {
      if (offline_beast_ != NULL) offline_beast_->::ProtoOfflineBeast::Clear();
    }
    wing_id_ = 0;
    wing_level_ = 0;
    kill_num_ = 0;
    killing_value_ = 0;
    cur_label_ = 0;
    weapon_id_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    weapon_level_ = 0;
    equip_refine_lvl_ = 0;
    fashion_id_ = 0;
    fashion_color_ = 0;
    solider_level_ = 0;
    magic_level_ = 0;
    beast_level_ = 0;
    mount_level_ = 0;
  }
  skill_set_.Clear();
  shape_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400432::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoRoleInfo role_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_role_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_fight_prop;
        break;
      }
      
      // optional .ProtoFightPro fight_prop = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fight_prop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fight_prop()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_skill_set;
        break;
      }
      
      // repeated .ProtoPairObj skill_set = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skill_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_skill_set;
        if (input->ExpectTag(34)) goto parse_shape_set;
        break;
      }
      
      // repeated .ProtoPairObj shape_set = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shape_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shape_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_shape_set;
        if (input->ExpectTag(40)) goto parse_space_id;
        break;
      }
      
      // optional int32 space_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_space_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &space_id_)));
          set_has_space_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_scene_mode;
        break;
      }
      
      // optional int32 scene_mode = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_mode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_mode_)));
          set_has_scene_mode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_pos_x;
        break;
      }
      
      // optional int32 pos_x = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_pos_y;
        break;
      }
      
      // optional int32 pos_y = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_offline_beast;
        break;
      }
      
      // optional .ProtoOfflineBeast offline_beast = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_offline_beast:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_offline_beast()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_wing_id;
        break;
      }
      
      // optional int32 wing_id = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wing_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wing_id_)));
          set_has_wing_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_wing_level;
        break;
      }
      
      // optional int32 wing_level = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wing_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wing_level_)));
          set_has_wing_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_kill_num;
        break;
      }
      
      // optional int32 kill_num = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_kill_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kill_num_)));
          set_has_kill_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_killing_value;
        break;
      }
      
      // optional int32 killing_value = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_killing_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &killing_value_)));
          set_has_killing_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_cur_label;
        break;
      }
      
      // optional int32 cur_label = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_label:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_label_)));
          set_has_cur_label();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_weapon_id;
        break;
      }
      
      // optional int32 weapon_id = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_weapon_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weapon_id_)));
          set_has_weapon_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_weapon_level;
        break;
      }
      
      // optional int32 weapon_level = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_weapon_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weapon_level_)));
          set_has_weapon_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_equip_refine_lvl;
        break;
      }
      
      // optional int32 equip_refine_lvl = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equip_refine_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equip_refine_lvl_)));
          set_has_equip_refine_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_fashion_id;
        break;
      }
      
      // optional int32 fashion_id = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_fashion_color;
        break;
      }
      
      // optional int32 fashion_color = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_color_)));
          set_has_fashion_color();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_solider_level;
        break;
      }
      
      // optional int32 solider_level = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_solider_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &solider_level_)));
          set_has_solider_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_magic_level;
        break;
      }
      
      // optional int32 magic_level = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_magic_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magic_level_)));
          set_has_magic_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_beast_level;
        break;
      }
      
      // optional int32 beast_level = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beast_level_)));
          set_has_beast_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_mount_level;
        break;
      }
      
      // optional int32 mount_level = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mount_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mount_level_)));
          set_has_mount_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400432::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoRoleInfo role_info = 1;
  if (has_role_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->role_info(), output);
  }
  
  // optional .ProtoFightPro fight_prop = 2;
  if (has_fight_prop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fight_prop(), output);
  }
  
  // repeated .ProtoPairObj skill_set = 3;
  for (int i = 0; i < this->skill_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->skill_set(i), output);
  }
  
  // repeated .ProtoPairObj shape_set = 4;
  for (int i = 0; i < this->shape_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->shape_set(i), output);
  }
  
  // optional int32 space_id = 5;
  if (has_space_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->space_id(), output);
  }
  
  // optional int32 scene_mode = 6;
  if (has_scene_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->scene_mode(), output);
  }
  
  // optional int32 scene_id = 7;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->scene_id(), output);
  }
  
  // optional int32 pos_x = 8;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->pos_x(), output);
  }
  
  // optional int32 pos_y = 9;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->pos_y(), output);
  }
  
  // optional .ProtoOfflineBeast offline_beast = 10;
  if (has_offline_beast()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->offline_beast(), output);
  }
  
  // optional int32 wing_id = 11;
  if (has_wing_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->wing_id(), output);
  }
  
  // optional int32 wing_level = 12;
  if (has_wing_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->wing_level(), output);
  }
  
  // optional int32 kill_num = 13;
  if (has_kill_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->kill_num(), output);
  }
  
  // optional int32 killing_value = 14;
  if (has_killing_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->killing_value(), output);
  }
  
  // optional int32 cur_label = 15;
  if (has_cur_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->cur_label(), output);
  }
  
  // optional int32 weapon_id = 16;
  if (has_weapon_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->weapon_id(), output);
  }
  
  // optional int32 weapon_level = 17;
  if (has_weapon_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->weapon_level(), output);
  }
  
  // optional int32 equip_refine_lvl = 18;
  if (has_equip_refine_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->equip_refine_lvl(), output);
  }
  
  // optional int32 fashion_id = 19;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->fashion_id(), output);
  }
  
  // optional int32 fashion_color = 20;
  if (has_fashion_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->fashion_color(), output);
  }
  
  // optional int32 solider_level = 21;
  if (has_solider_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->solider_level(), output);
  }
  
  // optional int32 magic_level = 22;
  if (has_magic_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->magic_level(), output);
  }
  
  // optional int32 beast_level = 23;
  if (has_beast_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->beast_level(), output);
  }
  
  // optional int32 mount_level = 24;
  if (has_mount_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->mount_level(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400432::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoRoleInfo role_info = 1;
  if (has_role_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->role_info(), target);
  }
  
  // optional .ProtoFightPro fight_prop = 2;
  if (has_fight_prop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->fight_prop(), target);
  }
  
  // repeated .ProtoPairObj skill_set = 3;
  for (int i = 0; i < this->skill_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->skill_set(i), target);
  }
  
  // repeated .ProtoPairObj shape_set = 4;
  for (int i = 0; i < this->shape_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->shape_set(i), target);
  }
  
  // optional int32 space_id = 5;
  if (has_space_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->space_id(), target);
  }
  
  // optional int32 scene_mode = 6;
  if (has_scene_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->scene_mode(), target);
  }
  
  // optional int32 scene_id = 7;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->scene_id(), target);
  }
  
  // optional int32 pos_x = 8;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->pos_x(), target);
  }
  
  // optional int32 pos_y = 9;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->pos_y(), target);
  }
  
  // optional .ProtoOfflineBeast offline_beast = 10;
  if (has_offline_beast()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->offline_beast(), target);
  }
  
  // optional int32 wing_id = 11;
  if (has_wing_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->wing_id(), target);
  }
  
  // optional int32 wing_level = 12;
  if (has_wing_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->wing_level(), target);
  }
  
  // optional int32 kill_num = 13;
  if (has_kill_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->kill_num(), target);
  }
  
  // optional int32 killing_value = 14;
  if (has_killing_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->killing_value(), target);
  }
  
  // optional int32 cur_label = 15;
  if (has_cur_label()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->cur_label(), target);
  }
  
  // optional int32 weapon_id = 16;
  if (has_weapon_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->weapon_id(), target);
  }
  
  // optional int32 weapon_level = 17;
  if (has_weapon_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->weapon_level(), target);
  }
  
  // optional int32 equip_refine_lvl = 18;
  if (has_equip_refine_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->equip_refine_lvl(), target);
  }
  
  // optional int32 fashion_id = 19;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->fashion_id(), target);
  }
  
  // optional int32 fashion_color = 20;
  if (has_fashion_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->fashion_color(), target);
  }
  
  // optional int32 solider_level = 21;
  if (has_solider_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->solider_level(), target);
  }
  
  // optional int32 magic_level = 22;
  if (has_magic_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->magic_level(), target);
  }
  
  // optional int32 beast_level = 23;
  if (has_beast_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->beast_level(), target);
  }
  
  // optional int32 mount_level = 24;
  if (has_mount_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->mount_level(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400432::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoRoleInfo role_info = 1;
    if (has_role_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->role_info());
    }
    
    // optional .ProtoFightPro fight_prop = 2;
    if (has_fight_prop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fight_prop());
    }
    
    // optional int32 space_id = 5;
    if (has_space_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->space_id());
    }
    
    // optional int32 scene_mode = 6;
    if (has_scene_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_mode());
    }
    
    // optional int32 scene_id = 7;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 pos_x = 8;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 pos_y = 9;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }
    
    // optional .ProtoOfflineBeast offline_beast = 10;
    if (has_offline_beast()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->offline_beast());
    }
    
    // optional int32 wing_id = 11;
    if (has_wing_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wing_id());
    }
    
    // optional int32 wing_level = 12;
    if (has_wing_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wing_level());
    }
    
    // optional int32 kill_num = 13;
    if (has_kill_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->kill_num());
    }
    
    // optional int32 killing_value = 14;
    if (has_killing_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->killing_value());
    }
    
    // optional int32 cur_label = 15;
    if (has_cur_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_label());
    }
    
    // optional int32 weapon_id = 16;
    if (has_weapon_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weapon_id());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 weapon_level = 17;
    if (has_weapon_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weapon_level());
    }
    
    // optional int32 equip_refine_lvl = 18;
    if (has_equip_refine_lvl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equip_refine_lvl());
    }
    
    // optional int32 fashion_id = 19;
    if (has_fashion_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
    // optional int32 fashion_color = 20;
    if (has_fashion_color()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_color());
    }
    
    // optional int32 solider_level = 21;
    if (has_solider_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->solider_level());
    }
    
    // optional int32 magic_level = 22;
    if (has_magic_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->magic_level());
    }
    
    // optional int32 beast_level = 23;
    if (has_beast_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->beast_level());
    }
    
    // optional int32 mount_level = 24;
    if (has_mount_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mount_level());
    }
    
  }
  // repeated .ProtoPairObj skill_set = 3;
  total_size += 1 * this->skill_set_size();
  for (int i = 0; i < this->skill_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skill_set(i));
  }
  
  // repeated .ProtoPairObj shape_set = 4;
  total_size += 1 * this->shape_set_size();
  for (int i = 0; i < this->shape_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->shape_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400432::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400432* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400432*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400432::MergeFrom(const Proto30400432& from) {
  GOOGLE_CHECK_NE(&from, this);
  skill_set_.MergeFrom(from.skill_set_);
  shape_set_.MergeFrom(from.shape_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_info()) {
      mutable_role_info()->::ProtoRoleInfo::MergeFrom(from.role_info());
    }
    if (from.has_fight_prop()) {
      mutable_fight_prop()->::ProtoFightPro::MergeFrom(from.fight_prop());
    }
    if (from.has_space_id()) {
      set_space_id(from.space_id());
    }
    if (from.has_scene_mode()) {
      set_scene_mode(from.scene_mode());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_offline_beast()) {
      mutable_offline_beast()->::ProtoOfflineBeast::MergeFrom(from.offline_beast());
    }
    if (from.has_wing_id()) {
      set_wing_id(from.wing_id());
    }
    if (from.has_wing_level()) {
      set_wing_level(from.wing_level());
    }
    if (from.has_kill_num()) {
      set_kill_num(from.kill_num());
    }
    if (from.has_killing_value()) {
      set_killing_value(from.killing_value());
    }
    if (from.has_cur_label()) {
      set_cur_label(from.cur_label());
    }
    if (from.has_weapon_id()) {
      set_weapon_id(from.weapon_id());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_weapon_level()) {
      set_weapon_level(from.weapon_level());
    }
    if (from.has_equip_refine_lvl()) {
      set_equip_refine_lvl(from.equip_refine_lvl());
    }
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
    if (from.has_fashion_color()) {
      set_fashion_color(from.fashion_color());
    }
    if (from.has_solider_level()) {
      set_solider_level(from.solider_level());
    }
    if (from.has_magic_level()) {
      set_magic_level(from.magic_level());
    }
    if (from.has_beast_level()) {
      set_beast_level(from.beast_level());
    }
    if (from.has_mount_level()) {
      set_mount_level(from.mount_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400432::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400432::CopyFrom(const Proto30400432& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400432::IsInitialized() const {
  
  return true;
}

void Proto30400432::Swap(Proto30400432* other) {
  if (other != this) {
    std::swap(role_info_, other->role_info_);
    std::swap(fight_prop_, other->fight_prop_);
    skill_set_.Swap(&other->skill_set_);
    shape_set_.Swap(&other->shape_set_);
    std::swap(space_id_, other->space_id_);
    std::swap(scene_mode_, other->scene_mode_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(offline_beast_, other->offline_beast_);
    std::swap(wing_id_, other->wing_id_);
    std::swap(wing_level_, other->wing_level_);
    std::swap(kill_num_, other->kill_num_);
    std::swap(killing_value_, other->killing_value_);
    std::swap(cur_label_, other->cur_label_);
    std::swap(weapon_id_, other->weapon_id_);
    std::swap(weapon_level_, other->weapon_level_);
    std::swap(equip_refine_lvl_, other->equip_refine_lvl_);
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(fashion_color_, other->fashion_color_);
    std::swap(solider_level_, other->solider_level_);
    std::swap(magic_level_, other->magic_level_);
    std::swap(beast_level_, other->beast_level_);
    std::swap(mount_level_, other->mount_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400432::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400432_descriptor_;
  metadata.reflection = Proto30400432_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400433::kLeagueSetFieldNumber;
#endif  // !_MSC_VER

Proto30400433::Proto30400433()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400433::InitAsDefaultInstance() {
}

Proto30400433::Proto30400433(const Proto30400433& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400433::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400433::~Proto30400433() {
  SharedDtor();
}

void Proto30400433::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400433::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400433::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400433_descriptor_;
}

const Proto30400433& Proto30400433::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30400433* Proto30400433::default_instance_ = NULL;

Proto30400433* Proto30400433::New() const {
  return new Proto30400433;
}

void Proto30400433::Clear() {
  league_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400433::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoSyncLeague league_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_league_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_league_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400433::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoSyncLeague league_set = 1;
  for (int i = 0; i < this->league_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->league_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400433::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoSyncLeague league_set = 1;
  for (int i = 0; i < this->league_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->league_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400433::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoSyncLeague league_set = 1;
  total_size += 1 * this->league_set_size();
  for (int i = 0; i < this->league_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->league_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400433::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400433* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400433*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400433::MergeFrom(const Proto30400433& from) {
  GOOGLE_CHECK_NE(&from, this);
  league_set_.MergeFrom(from.league_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400433::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400433::CopyFrom(const Proto30400433& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400433::IsInitialized() const {
  
  return true;
}

void Proto30400433::Swap(Proto30400433* other) {
  if (other != this) {
    league_set_.Swap(&other->league_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400433::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400433_descriptor_;
  metadata.reflection = Proto30400433_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400434::kWarIndexFieldNumber;
const int Proto30400434::kLeagueIndexFieldNumber;
#endif  // !_MSC_VER

Proto30400434::Proto30400434()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400434::InitAsDefaultInstance() {
}

Proto30400434::Proto30400434(const Proto30400434& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400434::SharedCtor() {
  _cached_size_ = 0;
  war_index_ = 0;
  league_index_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400434::~Proto30400434() {
  SharedDtor();
}

void Proto30400434::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400434::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400434::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400434_descriptor_;
}

const Proto30400434& Proto30400434::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30400434* Proto30400434::default_instance_ = NULL;

Proto30400434* Proto30400434::New() const {
  return new Proto30400434;
}

void Proto30400434::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    war_index_ = 0;
    league_index_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400434::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 war_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &war_index_)));
          set_has_war_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_league_index;
        break;
      }
      
      // optional int64 league_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_index_)));
          set_has_league_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400434::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 war_index = 1;
  if (has_war_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->war_index(), output);
  }
  
  // optional int64 league_index = 2;
  if (has_league_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->league_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400434::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 war_index = 1;
  if (has_war_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->war_index(), target);
  }
  
  // optional int64 league_index = 2;
  if (has_league_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->league_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400434::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 war_index = 1;
    if (has_war_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->war_index());
    }
    
    // optional int64 league_index = 2;
    if (has_league_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400434::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400434* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400434*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400434::MergeFrom(const Proto30400434& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_war_index()) {
      set_war_index(from.war_index());
    }
    if (from.has_league_index()) {
      set_league_index(from.league_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400434::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400434::CopyFrom(const Proto30400434& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400434::IsInitialized() const {
  
  return true;
}

void Proto30400434::Swap(Proto30400434* other) {
  if (other != this) {
    std::swap(war_index_, other->war_index_);
    std::swap(league_index_, other->league_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400434::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400434_descriptor_;
  metadata.reflection = Proto30400434_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400123::kHookDetailFieldNumber;
#endif  // !_MSC_VER

Proto31400123::Proto31400123()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400123::InitAsDefaultInstance() {
  hook_detail_ = const_cast< ::ProtoHookDetail*>(&::ProtoHookDetail::default_instance());
}

Proto31400123::Proto31400123(const Proto31400123& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400123::SharedCtor() {
  _cached_size_ = 0;
  hook_detail_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400123::~Proto31400123() {
  SharedDtor();
}

void Proto31400123::SharedDtor() {
  if (this != default_instance_) {
    delete hook_detail_;
  }
}

void Proto31400123::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400123::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400123_descriptor_;
}

const Proto31400123& Proto31400123::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto31400123* Proto31400123::default_instance_ = NULL;

Proto31400123* Proto31400123::New() const {
  return new Proto31400123;
}

void Proto31400123::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_hook_detail()) {
      if (hook_detail_ != NULL) hook_detail_->::ProtoHookDetail::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400123::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoHookDetail hook_detail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hook_detail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400123::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoHookDetail hook_detail = 1;
  if (has_hook_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hook_detail(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400123::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoHookDetail hook_detail = 1;
  if (has_hook_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hook_detail(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400123::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoHookDetail hook_detail = 1;
    if (has_hook_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hook_detail());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400123::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400123* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400123*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400123::MergeFrom(const Proto31400123& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hook_detail()) {
      mutable_hook_detail()->::ProtoHookDetail::MergeFrom(from.hook_detail());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400123::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400123::CopyFrom(const Proto31400123& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400123::IsInitialized() const {
  
  return true;
}

void Proto31400123::Swap(Proto31400123* other) {
  if (other != this) {
    std::swap(hook_detail_, other->hook_detail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400123::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400123_descriptor_;
  metadata.reflection = Proto31400123_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100215::kRoleIdFieldNumber;
const int Proto30100215::kOfflineTypeFieldNumber;
const int Proto30100215::kOfflineDataFieldNumber;
#endif  // !_MSC_VER

Proto30100215::Proto30100215()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100215::InitAsDefaultInstance() {
}

Proto30100215::Proto30100215(const Proto30100215& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100215::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  offline_type_ = 0;
  offline_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100215::~Proto30100215() {
  SharedDtor();
}

void Proto30100215::SharedDtor() {
  if (offline_data_ != &::google::protobuf::internal::kEmptyString) {
    delete offline_data_;
  }
  if (this != default_instance_) {
  }
}

void Proto30100215::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100215::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100215_descriptor_;
}

const Proto30100215& Proto30100215::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30100215* Proto30100215::default_instance_ = NULL;

Proto30100215* Proto30100215::New() const {
  return new Proto30100215;
}

void Proto30100215::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    offline_type_ = 0;
    if (has_offline_data()) {
      if (offline_data_ != &::google::protobuf::internal::kEmptyString) {
        offline_data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100215::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_offline_type;
        break;
      }
      
      // optional int32 offline_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_offline_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offline_type_)));
          set_has_offline_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_offline_data;
        break;
      }
      
      // optional bytes offline_data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_offline_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_offline_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100215::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 offline_type = 2;
  if (has_offline_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->offline_type(), output);
  }
  
  // optional bytes offline_data = 3;
  if (has_offline_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->offline_data(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100215::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 offline_type = 2;
  if (has_offline_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->offline_type(), target);
  }
  
  // optional bytes offline_data = 3;
  if (has_offline_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->offline_data(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100215::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 offline_type = 2;
    if (has_offline_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->offline_type());
    }
    
    // optional bytes offline_data = 3;
    if (has_offline_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->offline_data());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100215::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100215* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100215*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100215::MergeFrom(const Proto30100215& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_offline_type()) {
      set_offline_type(from.offline_type());
    }
    if (from.has_offline_data()) {
      set_offline_data(from.offline_data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100215::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100215::CopyFrom(const Proto30100215& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100215::IsInitialized() const {
  
  return true;
}

void Proto30100215::Swap(Proto30100215* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(offline_type_, other->offline_type_);
    std::swap(offline_data_, other->offline_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100215::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100215_descriptor_;
  metadata.reflection = Proto30100215_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30401102::kSpaceIdFieldNumber;
#endif  // !_MSC_VER

Proto30401102::Proto30401102()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30401102::InitAsDefaultInstance() {
}

Proto30401102::Proto30401102(const Proto30401102& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30401102::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30401102::~Proto30401102() {
  SharedDtor();
}

void Proto30401102::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30401102::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30401102::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30401102_descriptor_;
}

const Proto30401102& Proto30401102::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30401102* Proto30401102::default_instance_ = NULL;

Proto30401102* Proto30401102::New() const {
  return new Proto30401102;
}

void Proto30401102::Clear() {
  space_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30401102::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 space_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_space_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_space_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_space_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_space_id;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30401102::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 space_id = 1;
  for (int i = 0; i < this->space_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->space_id(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30401102::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 space_id = 1;
  for (int i = 0; i < this->space_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->space_id(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30401102::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 space_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->space_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->space_id(i));
    }
    total_size += 1 * this->space_id_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30401102::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30401102* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30401102*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30401102::MergeFrom(const Proto30401102& from) {
  GOOGLE_CHECK_NE(&from, this);
  space_id_.MergeFrom(from.space_id_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30401102::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30401102::CopyFrom(const Proto30401102& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30401102::IsInitialized() const {
  
  return true;
}

void Proto30401102::Swap(Proto30401102* other) {
  if (other != this) {
    space_id_.Swap(&other->space_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30401102::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30401102_descriptor_;
  metadata.reflection = Proto30401102_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100501::kRoleIdFieldNumber;
const int Proto30100501::kSpaceIdFieldNumber;
const int Proto30100501::kTypeFieldNumber;
const int Proto30100501::kPeerIdFieldNumber;
#endif  // !_MSC_VER

Proto30100501::Proto30100501()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100501::InitAsDefaultInstance() {
}

Proto30100501::Proto30100501(const Proto30100501& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100501::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  space_id_ = 0;
  type_ = 0;
  peer_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100501::~Proto30100501() {
  SharedDtor();
}

void Proto30100501::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100501::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100501::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100501_descriptor_;
}

const Proto30100501& Proto30100501::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30100501* Proto30100501::default_instance_ = NULL;

Proto30100501* Proto30100501::New() const {
  return new Proto30100501;
}

void Proto30100501::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    space_id_ = 0;
    type_ = 0;
    peer_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100501::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_space_id;
        break;
      }
      
      // optional int32 space_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_space_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &space_id_)));
          set_has_space_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }
      
      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_peer_id;
        break;
      }
      
      // optional int64 peer_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_peer_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &peer_id_)));
          set_has_peer_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100501::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 space_id = 2;
  if (has_space_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->space_id(), output);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }
  
  // optional int64 peer_id = 4;
  if (has_peer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->peer_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100501::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 space_id = 2;
  if (has_space_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->space_id(), target);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }
  
  // optional int64 peer_id = 4;
  if (has_peer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->peer_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100501::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 space_id = 2;
    if (has_space_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->space_id());
    }
    
    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int64 peer_id = 4;
    if (has_peer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->peer_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100501::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100501* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100501*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100501::MergeFrom(const Proto30100501& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_space_id()) {
      set_space_id(from.space_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_peer_id()) {
      set_peer_id(from.peer_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100501::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100501::CopyFrom(const Proto30100501& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100501::IsInitialized() const {
  
  return true;
}

void Proto30100501::Swap(Proto30100501* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(space_id_, other->space_id_);
    std::swap(type_, other->type_);
    std::swap(peer_id_, other->peer_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100501::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100501_descriptor_;
  metadata.reflection = Proto30100501_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30200122::kSyncTypeFieldNumber;
const int Proto30200122::kVipTypeFieldNumber;
#endif  // !_MSC_VER

Proto30200122::Proto30200122()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30200122::InitAsDefaultInstance() {
}

Proto30200122::Proto30200122(const Proto30200122& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30200122::SharedCtor() {
  _cached_size_ = 0;
  sync_type_ = 0;
  vip_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30200122::~Proto30200122() {
  SharedDtor();
}

void Proto30200122::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30200122::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30200122::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30200122_descriptor_;
}

const Proto30200122& Proto30200122::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30200122* Proto30200122::default_instance_ = NULL;

Proto30200122* Proto30200122::New() const {
  return new Proto30200122;
}

void Proto30200122::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    sync_type_ = 0;
    vip_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30200122::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sync_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sync_type_)));
          set_has_sync_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_vip_type;
        break;
      }
      
      // optional int32 vip_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_type_)));
          set_has_vip_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30200122::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 sync_type = 1;
  if (has_sync_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sync_type(), output);
  }
  
  // optional int32 vip_type = 2;
  if (has_vip_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vip_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30200122::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 sync_type = 1;
  if (has_sync_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sync_type(), target);
  }
  
  // optional int32 vip_type = 2;
  if (has_vip_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vip_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30200122::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 sync_type = 1;
    if (has_sync_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sync_type());
    }
    
    // optional int32 vip_type = 2;
    if (has_vip_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30200122::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30200122* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30200122*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30200122::MergeFrom(const Proto30200122& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sync_type()) {
      set_sync_type(from.sync_type());
    }
    if (from.has_vip_type()) {
      set_vip_type(from.vip_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30200122::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30200122::CopyFrom(const Proto30200122& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30200122::IsInitialized() const {
  
  return true;
}

void Proto30200122::Swap(Proto30200122* other) {
  if (other != this) {
    std::swap(sync_type_, other->sync_type_);
    std::swap(vip_type_, other->vip_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30200122::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30200122_descriptor_;
  metadata.reflection = Proto30200122_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100502::kRoleIdFieldNumber;
const int Proto30100502::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto30100502::Proto30100502()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100502::InitAsDefaultInstance() {
}

Proto30100502::Proto30100502(const Proto30100502& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100502::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100502::~Proto30100502() {
  SharedDtor();
}

void Proto30100502::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100502::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100502::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100502_descriptor_;
}

const Proto30100502& Proto30100502::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30100502* Proto30100502::default_instance_ = NULL;

Proto30100502* Proto30100502::New() const {
  return new Proto30100502;
}

void Proto30100502::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100502::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100502::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100502::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100502::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100502::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100502* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100502*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100502::MergeFrom(const Proto30100502& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100502::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100502::CopyFrom(const Proto30100502& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100502::IsInitialized() const {
  
  return true;
}

void Proto30100502::Swap(Proto30100502* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100502::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100502_descriptor_;
  metadata.reflection = Proto30100502_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100503::kRoleIdFieldNumber;
const int Proto30100503::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto30100503::Proto30100503()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100503::InitAsDefaultInstance() {
}

Proto30100503::Proto30100503(const Proto30100503& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100503::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100503::~Proto30100503() {
  SharedDtor();
}

void Proto30100503::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100503::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100503::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100503_descriptor_;
}

const Proto30100503& Proto30100503::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30100503* Proto30100503::default_instance_ = NULL;

Proto30100503* Proto30100503::New() const {
  return new Proto30100503;
}

void Proto30100503::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100503::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100503::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100503::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100503::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100503::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100503* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100503*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100503::MergeFrom(const Proto30100503& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100503::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100503::CopyFrom(const Proto30100503& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100503::IsInitialized() const {
  
  return true;
}

void Proto30100503::Swap(Proto30100503* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100503::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100503_descriptor_;
  metadata.reflection = Proto30100503_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400014::kAddBloodFieldNumber;
#endif  // !_MSC_VER

Proto30400014::Proto30400014()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400014::InitAsDefaultInstance() {
}

Proto30400014::Proto30400014(const Proto30400014& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400014::SharedCtor() {
  _cached_size_ = 0;
  add_blood_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400014::~Proto30400014() {
  SharedDtor();
}

void Proto30400014::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400014::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400014::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400014_descriptor_;
}

const Proto30400014& Proto30400014::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30400014* Proto30400014::default_instance_ = NULL;

Proto30400014* Proto30400014::New() const {
  return new Proto30400014;
}

void Proto30400014::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    add_blood_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400014::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 add_blood = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_blood_)));
          set_has_add_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400014::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 add_blood = 1;
  if (has_add_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->add_blood(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400014::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 add_blood = 1;
  if (has_add_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->add_blood(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400014::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 add_blood = 1;
    if (has_add_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_blood());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400014::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400014* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400014*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400014::MergeFrom(const Proto30400014& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_add_blood()) {
      set_add_blood(from.add_blood());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400014::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400014::CopyFrom(const Proto30400014& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400014::IsInitialized() const {
  
  return true;
}

void Proto30400014::Swap(Proto30400014* other) {
  if (other != this) {
    std::swap(add_blood_, other->add_blood_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400014::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400014_descriptor_;
  metadata.reflection = Proto30400014_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400124::kSendMailCoolTickFieldNumber;
const int Proto31400124::kSendMailCountFieldNumber;
const int Proto31400124::kMailListFieldNumber;
#endif  // !_MSC_VER

Proto31400124::Proto31400124()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400124::InitAsDefaultInstance() {
}

Proto31400124::Proto31400124(const Proto31400124& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400124::SharedCtor() {
  _cached_size_ = 0;
  send_mail_cool_tick_ = GOOGLE_LONGLONG(0);
  send_mail_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400124::~Proto31400124() {
  SharedDtor();
}

void Proto31400124::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400124::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400124::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400124_descriptor_;
}

const Proto31400124& Proto31400124::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto31400124* Proto31400124::default_instance_ = NULL;

Proto31400124* Proto31400124::New() const {
  return new Proto31400124;
}

void Proto31400124::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    send_mail_cool_tick_ = GOOGLE_LONGLONG(0);
    send_mail_count_ = 0;
  }
  mail_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400124::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 send_mail_cool_tick = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &send_mail_cool_tick_)));
          set_has_send_mail_cool_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_send_mail_count;
        break;
      }
      
      // optional int32 send_mail_count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_send_mail_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &send_mail_count_)));
          set_has_send_mail_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_mail_list;
        break;
      }
      
      // repeated .ProtoMailInfo mail_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mail_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mail_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_mail_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400124::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 send_mail_cool_tick = 1;
  if (has_send_mail_cool_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->send_mail_cool_tick(), output);
  }
  
  // optional int32 send_mail_count = 2;
  if (has_send_mail_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->send_mail_count(), output);
  }
  
  // repeated .ProtoMailInfo mail_list = 3;
  for (int i = 0; i < this->mail_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->mail_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400124::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 send_mail_cool_tick = 1;
  if (has_send_mail_cool_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->send_mail_cool_tick(), target);
  }
  
  // optional int32 send_mail_count = 2;
  if (has_send_mail_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->send_mail_count(), target);
  }
  
  // repeated .ProtoMailInfo mail_list = 3;
  for (int i = 0; i < this->mail_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->mail_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400124::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 send_mail_cool_tick = 1;
    if (has_send_mail_cool_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->send_mail_cool_tick());
    }
    
    // optional int32 send_mail_count = 2;
    if (has_send_mail_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->send_mail_count());
    }
    
  }
  // repeated .ProtoMailInfo mail_list = 3;
  total_size += 1 * this->mail_list_size();
  for (int i = 0; i < this->mail_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mail_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400124::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400124* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400124*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400124::MergeFrom(const Proto31400124& from) {
  GOOGLE_CHECK_NE(&from, this);
  mail_list_.MergeFrom(from.mail_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_send_mail_cool_tick()) {
      set_send_mail_cool_tick(from.send_mail_cool_tick());
    }
    if (from.has_send_mail_count()) {
      set_send_mail_count(from.send_mail_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400124::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400124::CopyFrom(const Proto31400124& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400124::IsInitialized() const {
  
  return true;
}

void Proto31400124::Swap(Proto31400124* other) {
  if (other != this) {
    std::swap(send_mail_cool_tick_, other->send_mail_cool_tick_);
    std::swap(send_mail_count_, other->send_mail_count_);
    mail_list_.Swap(&other->mail_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400124::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400124_descriptor_;
  metadata.reflection = Proto31400124_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400015::kItemInfoFieldNumber;
#endif  // !_MSC_VER

Proto30400015::Proto30400015()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400015::InitAsDefaultInstance() {
  item_info_ = const_cast< ::ProtoItem*>(&::ProtoItem::default_instance());
}

Proto30400015::Proto30400015(const Proto30400015& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400015::SharedCtor() {
  _cached_size_ = 0;
  item_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400015::~Proto30400015() {
  SharedDtor();
}

void Proto30400015::SharedDtor() {
  if (this != default_instance_) {
    delete item_info_;
  }
}

void Proto30400015::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400015::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400015_descriptor_;
}

const Proto30400015& Proto30400015::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30400015* Proto30400015::default_instance_ = NULL;

Proto30400015* Proto30400015::New() const {
  return new Proto30400015;
}

void Proto30400015::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_item_info()) {
      if (item_info_ != NULL) item_info_->::ProtoItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400015::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoItem item_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400015::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoItem item_info = 1;
  if (has_item_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400015::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoItem item_info = 1;
  if (has_item_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400015::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoItem item_info = 1;
    if (has_item_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400015::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400015* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400015*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400015::MergeFrom(const Proto30400015& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_info()) {
      mutable_item_info()->::ProtoItem::MergeFrom(from.item_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400015::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400015::CopyFrom(const Proto30400015& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400015::IsInitialized() const {
  
  return true;
}

void Proto30400015::Swap(Proto30400015* other) {
  if (other != this) {
    std::swap(item_info_, other->item_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400015::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400015_descriptor_;
  metadata.reflection = Proto30400015_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30401103::kCampIdFieldNumber;
const int Proto30401103::kRespondTypeFieldNumber;
#endif  // !_MSC_VER

Proto30401103::Proto30401103()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30401103::InitAsDefaultInstance() {
}

Proto30401103::Proto30401103(const Proto30401103& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30401103::SharedCtor() {
  _cached_size_ = 0;
  camp_id_ = 0;
  respond_type_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30401103::~Proto30401103() {
  SharedDtor();
}

void Proto30401103::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30401103::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30401103::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30401103_descriptor_;
}

const Proto30401103& Proto30401103::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30401103* Proto30401103::default_instance_ = NULL;

Proto30401103* Proto30401103::New() const {
  return new Proto30401103;
}

void Proto30401103::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    camp_id_ = 0;
    respond_type_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30401103::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 camp_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &camp_id_)));
          set_has_camp_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_respond_type;
        break;
      }
      
      // optional bool respond_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_respond_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &respond_type_)));
          set_has_respond_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30401103::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 camp_id = 1;
  if (has_camp_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->camp_id(), output);
  }
  
  // optional bool respond_type = 2;
  if (has_respond_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->respond_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30401103::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 camp_id = 1;
  if (has_camp_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->camp_id(), target);
  }
  
  // optional bool respond_type = 2;
  if (has_respond_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->respond_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30401103::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 camp_id = 1;
    if (has_camp_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->camp_id());
    }
    
    // optional bool respond_type = 2;
    if (has_respond_type()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30401103::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30401103* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30401103*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30401103::MergeFrom(const Proto30401103& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_camp_id()) {
      set_camp_id(from.camp_id());
    }
    if (from.has_respond_type()) {
      set_respond_type(from.respond_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30401103::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30401103::CopyFrom(const Proto30401103& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30401103::IsInitialized() const {
  
  return true;
}

void Proto30401103::Swap(Proto30401103* other) {
  if (other != this) {
    std::swap(camp_id_, other->camp_id_);
    std::swap(respond_type_, other->respond_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30401103::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30401103_descriptor_;
  metadata.reflection = Proto30401103_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400435::kSkillSetFieldNumber;
#endif  // !_MSC_VER

Proto30400435::Proto30400435()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400435::InitAsDefaultInstance() {
}

Proto30400435::Proto30400435(const Proto30400435& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400435::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400435::~Proto30400435() {
  SharedDtor();
}

void Proto30400435::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400435::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400435::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400435_descriptor_;
}

const Proto30400435& Proto30400435::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30400435* Proto30400435::default_instance_ = NULL;

Proto30400435* Proto30400435::New() const {
  return new Proto30400435;
}

void Proto30400435::Clear() {
  skill_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400435::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 skill_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_skill_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_skill_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_skill_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400435::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 skill_set = 1;
  for (int i = 0; i < this->skill_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->skill_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400435::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 skill_set = 1;
  for (int i = 0; i < this->skill_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->skill_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400435::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 skill_set = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->skill_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->skill_set(i));
    }
    total_size += 1 * this->skill_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400435::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400435* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400435*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400435::MergeFrom(const Proto30400435& from) {
  GOOGLE_CHECK_NE(&from, this);
  skill_set_.MergeFrom(from.skill_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400435::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400435::CopyFrom(const Proto30400435& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400435::IsInitialized() const {
  
  return true;
}

void Proto30400435::Swap(Proto30400435* other) {
  if (other != this) {
    skill_set_.Swap(&other->skill_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400435::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400435_descriptor_;
  metadata.reflection = Proto30400435_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30200124::kBrocastInfoFieldNumber;
#endif  // !_MSC_VER

Proto30200124::Proto30200124()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30200124::InitAsDefaultInstance() {
  brocast_info_ = const_cast< ::ProtoBrocastNewInfo*>(&::ProtoBrocastNewInfo::default_instance());
}

Proto30200124::Proto30200124(const Proto30200124& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30200124::SharedCtor() {
  _cached_size_ = 0;
  brocast_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30200124::~Proto30200124() {
  SharedDtor();
}

void Proto30200124::SharedDtor() {
  if (this != default_instance_) {
    delete brocast_info_;
  }
}

void Proto30200124::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30200124::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30200124_descriptor_;
}

const Proto30200124& Proto30200124::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30200124* Proto30200124::default_instance_ = NULL;

Proto30200124* Proto30200124::New() const {
  return new Proto30200124;
}

void Proto30200124::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_brocast_info()) {
      if (brocast_info_ != NULL) brocast_info_->::ProtoBrocastNewInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30200124::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoBrocastNewInfo brocast_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_brocast_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30200124::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoBrocastNewInfo brocast_info = 1;
  if (has_brocast_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->brocast_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30200124::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoBrocastNewInfo brocast_info = 1;
  if (has_brocast_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->brocast_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30200124::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoBrocastNewInfo brocast_info = 1;
    if (has_brocast_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->brocast_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30200124::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30200124* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30200124*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30200124::MergeFrom(const Proto30200124& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_brocast_info()) {
      mutable_brocast_info()->::ProtoBrocastNewInfo::MergeFrom(from.brocast_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30200124::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30200124::CopyFrom(const Proto30200124& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30200124::IsInitialized() const {
  
  return true;
}

void Proto30200124::Swap(Proto30200124* other) {
  if (other != this) {
    std::swap(brocast_info_, other->brocast_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30200124::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30200124_descriptor_;
  metadata.reflection = Proto30200124_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30200123::kBrocastInfoFieldNumber;
#endif  // !_MSC_VER

Proto30200123::Proto30200123()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30200123::InitAsDefaultInstance() {
  brocast_info_ = const_cast< ::ProtoBrocastNewInfo*>(&::ProtoBrocastNewInfo::default_instance());
}

Proto30200123::Proto30200123(const Proto30200123& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30200123::SharedCtor() {
  _cached_size_ = 0;
  brocast_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30200123::~Proto30200123() {
  SharedDtor();
}

void Proto30200123::SharedDtor() {
  if (this != default_instance_) {
    delete brocast_info_;
  }
}

void Proto30200123::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30200123::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30200123_descriptor_;
}

const Proto30200123& Proto30200123::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30200123* Proto30200123::default_instance_ = NULL;

Proto30200123* Proto30200123::New() const {
  return new Proto30200123;
}

void Proto30200123::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_brocast_info()) {
      if (brocast_info_ != NULL) brocast_info_->::ProtoBrocastNewInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30200123::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoBrocastNewInfo brocast_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_brocast_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30200123::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoBrocastNewInfo brocast_info = 1;
  if (has_brocast_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->brocast_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30200123::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoBrocastNewInfo brocast_info = 1;
  if (has_brocast_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->brocast_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30200123::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoBrocastNewInfo brocast_info = 1;
    if (has_brocast_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->brocast_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30200123::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30200123* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30200123*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30200123::MergeFrom(const Proto30200123& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_brocast_info()) {
      mutable_brocast_info()->::ProtoBrocastNewInfo::MergeFrom(from.brocast_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30200123::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30200123::CopyFrom(const Proto30200123& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30200123::IsInitialized() const {
  
  return true;
}

void Proto30200123::Swap(Proto30200123* other) {
  if (other != this) {
    std::swap(brocast_info_, other->brocast_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30200123::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30200123_descriptor_;
  metadata.reflection = Proto30200123_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400107::kVipTypeFieldNumber;
const int Proto30400107::kVipStartTimeFieldNumber;
const int Proto30400107::kExpiredTimeFieldNumber;
#endif  // !_MSC_VER

Proto30400107::Proto30400107()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400107::InitAsDefaultInstance() {
}

Proto30400107::Proto30400107(const Proto30400107& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400107::SharedCtor() {
  _cached_size_ = 0;
  vip_type_ = 0;
  vip_start_time_ = 0;
  expired_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400107::~Proto30400107() {
  SharedDtor();
}

void Proto30400107::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400107::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400107::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400107_descriptor_;
}

const Proto30400107& Proto30400107::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30400107* Proto30400107::default_instance_ = NULL;

Proto30400107* Proto30400107::New() const {
  return new Proto30400107;
}

void Proto30400107::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    vip_type_ = 0;
    vip_start_time_ = 0;
    expired_time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400107::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 vip_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_type_)));
          set_has_vip_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_vip_start_time;
        break;
      }
      
      // optional int32 vip_start_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_start_time_)));
          set_has_vip_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_expired_time;
        break;
      }
      
      // optional int32 expired_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_expired_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &expired_time_)));
          set_has_expired_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400107::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 vip_type = 1;
  if (has_vip_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vip_type(), output);
  }
  
  // optional int32 vip_start_time = 2;
  if (has_vip_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vip_start_time(), output);
  }
  
  // optional int32 expired_time = 3;
  if (has_expired_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->expired_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400107::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 vip_type = 1;
  if (has_vip_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->vip_type(), target);
  }
  
  // optional int32 vip_start_time = 2;
  if (has_vip_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vip_start_time(), target);
  }
  
  // optional int32 expired_time = 3;
  if (has_expired_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->expired_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400107::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 vip_type = 1;
    if (has_vip_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_type());
    }
    
    // optional int32 vip_start_time = 2;
    if (has_vip_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_start_time());
    }
    
    // optional int32 expired_time = 3;
    if (has_expired_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->expired_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400107::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400107* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400107*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400107::MergeFrom(const Proto30400107& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_vip_type()) {
      set_vip_type(from.vip_type());
    }
    if (from.has_vip_start_time()) {
      set_vip_start_time(from.vip_start_time());
    }
    if (from.has_expired_time()) {
      set_expired_time(from.expired_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400107::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400107::CopyFrom(const Proto30400107& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400107::IsInitialized() const {
  
  return true;
}

void Proto30400107::Swap(Proto30400107* other) {
  if (other != this) {
    std::swap(vip_type_, other->vip_type_);
    std::swap(vip_start_time_, other->vip_start_time_);
    std::swap(expired_time_, other->expired_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400107::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400107_descriptor_;
  metadata.reflection = Proto30400107_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100601::kActivityIdFieldNumber;
const int Proto30100601::kActivityStateFieldNumber;
const int Proto30100601::kStartTimeFieldNumber;
const int Proto30100601::kEndTimeFieldNumber;
const int Proto30100601::kAheadTimeFieldNumber;
const int Proto30100601::kLastTimeFieldNumber;
const int Proto30100601::kLeftTimesFieldNumber;
const int Proto30100601::kSubValueFieldNumber;
#endif  // !_MSC_VER

Proto30100601::Proto30100601()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100601::InitAsDefaultInstance() {
}

Proto30100601::Proto30100601(const Proto30100601& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100601::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  activity_state_ = 0;
  start_time_ = 0;
  end_time_ = 0;
  ahead_time_ = 0;
  last_time_ = 0;
  left_times_ = 0;
  sub_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100601::~Proto30100601() {
  SharedDtor();
}

void Proto30100601::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100601::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100601::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100601_descriptor_;
}

const Proto30100601& Proto30100601::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30100601* Proto30100601::default_instance_ = NULL;

Proto30100601* Proto30100601::New() const {
  return new Proto30100601;
}

void Proto30100601::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    activity_state_ = 0;
    start_time_ = 0;
    end_time_ = 0;
    ahead_time_ = 0;
    last_time_ = 0;
    left_times_ = 0;
    sub_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100601::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_activity_state;
        break;
      }
      
      // optional int32 activity_state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_state_)));
          set_has_activity_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_start_time;
        break;
      }
      
      // optional int32 start_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_end_time;
        break;
      }
      
      // optional int32 end_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_ahead_time;
        break;
      }
      
      // optional int32 ahead_time = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ahead_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ahead_time_)));
          set_has_ahead_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_last_time;
        break;
      }
      
      // optional int32 last_time = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_time_)));
          set_has_last_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_left_times;
        break;
      }
      
      // optional int32 left_times = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_times_)));
          set_has_left_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_sub_value;
        break;
      }
      
      // optional int32 sub_value = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sub_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sub_value_)));
          set_has_sub_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100601::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 activity_state = 2;
  if (has_activity_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activity_state(), output);
  }
  
  // optional int32 start_time = 3;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->start_time(), output);
  }
  
  // optional int32 end_time = 4;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->end_time(), output);
  }
  
  // optional int32 ahead_time = 5;
  if (has_ahead_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ahead_time(), output);
  }
  
  // optional int32 last_time = 6;
  if (has_last_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->last_time(), output);
  }
  
  // optional int32 left_times = 7;
  if (has_left_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->left_times(), output);
  }
  
  // optional int32 sub_value = 8;
  if (has_sub_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->sub_value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100601::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 activity_state = 2;
  if (has_activity_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activity_state(), target);
  }
  
  // optional int32 start_time = 3;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->start_time(), target);
  }
  
  // optional int32 end_time = 4;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->end_time(), target);
  }
  
  // optional int32 ahead_time = 5;
  if (has_ahead_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ahead_time(), target);
  }
  
  // optional int32 last_time = 6;
  if (has_last_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->last_time(), target);
  }
  
  // optional int32 left_times = 7;
  if (has_left_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->left_times(), target);
  }
  
  // optional int32 sub_value = 8;
  if (has_sub_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->sub_value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100601::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 activity_state = 2;
    if (has_activity_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_state());
    }
    
    // optional int32 start_time = 3;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->start_time());
    }
    
    // optional int32 end_time = 4;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->end_time());
    }
    
    // optional int32 ahead_time = 5;
    if (has_ahead_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ahead_time());
    }
    
    // optional int32 last_time = 6;
    if (has_last_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_time());
    }
    
    // optional int32 left_times = 7;
    if (has_left_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_times());
    }
    
    // optional int32 sub_value = 8;
    if (has_sub_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sub_value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100601::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100601* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100601*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100601::MergeFrom(const Proto30100601& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_activity_state()) {
      set_activity_state(from.activity_state());
    }
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_ahead_time()) {
      set_ahead_time(from.ahead_time());
    }
    if (from.has_last_time()) {
      set_last_time(from.last_time());
    }
    if (from.has_left_times()) {
      set_left_times(from.left_times());
    }
    if (from.has_sub_value()) {
      set_sub_value(from.sub_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100601::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100601::CopyFrom(const Proto30100601& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100601::IsInitialized() const {
  
  return true;
}

void Proto30100601::Swap(Proto30100601* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(activity_state_, other->activity_state_);
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(ahead_time_, other->ahead_time_);
    std::swap(last_time_, other->last_time_);
    std::swap(left_times_, other->left_times_);
    std::swap(sub_value_, other->sub_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100601::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100601_descriptor_;
  metadata.reflection = Proto30100601_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31401501::kIdFieldNumber;
const int Proto31401501::kSubIdFieldNumber;
const int Proto31401501::kTypeFieldNumber;
const int Proto31401501::kNumFieldNumber;
#endif  // !_MSC_VER

Proto31401501::Proto31401501()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31401501::InitAsDefaultInstance() {
}

Proto31401501::Proto31401501(const Proto31401501& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31401501::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  sub_id_ = 0;
  type_ = 0;
  num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31401501::~Proto31401501() {
  SharedDtor();
}

void Proto31401501::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31401501::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31401501::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31401501_descriptor_;
}

const Proto31401501& Proto31401501::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto31401501* Proto31401501::default_instance_ = NULL;

Proto31401501* Proto31401501::New() const {
  return new Proto31401501;
}

void Proto31401501::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    sub_id_ = 0;
    type_ = 0;
    num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31401501::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sub_id;
        break;
      }
      
      // optional int32 sub_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sub_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sub_id_)));
          set_has_sub_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }
      
      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_num;
        break;
      }
      
      // optional int32 num = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31401501::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional int32 sub_id = 2;
  if (has_sub_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sub_id(), output);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }
  
  // optional int32 num = 4;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31401501::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional int32 sub_id = 2;
  if (has_sub_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sub_id(), target);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }
  
  // optional int32 num = 4;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31401501::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional int32 sub_id = 2;
    if (has_sub_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sub_id());
    }
    
    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 num = 4;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31401501::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31401501* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31401501*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31401501::MergeFrom(const Proto31401501& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_sub_id()) {
      set_sub_id(from.sub_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31401501::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31401501::CopyFrom(const Proto31401501& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31401501::IsInitialized() const {
  
  return true;
}

void Proto31401501::Swap(Proto31401501* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(sub_id_, other->sub_id_);
    std::swap(type_, other->type_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31401501::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31401501_descriptor_;
  metadata.reflection = Proto31401501_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100602::kRoleIdFieldNumber;
const int Proto30100602::kActivityIdFieldNumber;
const int Proto30100602::kTimeFieldNumber;
#endif  // !_MSC_VER

Proto30100602::Proto30100602()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100602::InitAsDefaultInstance() {
}

Proto30100602::Proto30100602(const Proto30100602& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100602::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  activity_id_ = 0;
  time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100602::~Proto30100602() {
  SharedDtor();
}

void Proto30100602::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100602::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100602::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100602_descriptor_;
}

const Proto30100602& Proto30100602::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30100602* Proto30100602::default_instance_ = NULL;

Proto30100602* Proto30100602::New() const {
  return new Proto30100602;
}

void Proto30100602::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    activity_id_ = 0;
    time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100602::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_activity_id;
        break;
      }
      
      // optional int32 activity_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_time;
        break;
      }
      
      // optional int32 time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100602::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activity_id(), output);
  }
  
  // optional int32 time = 3;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100602::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activity_id(), target);
  }
  
  // optional int32 time = 3;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100602::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 activity_id = 2;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 time = 3;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100602::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100602* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100602*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100602::MergeFrom(const Proto30100602& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100602::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100602::CopyFrom(const Proto30100602& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100602::IsInitialized() const {
  
  return true;
}

void Proto30100602::Swap(Proto30100602* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(activity_id_, other->activity_id_);
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100602::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100602_descriptor_;
  metadata.reflection = Proto30100602_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400020::kRoleIdFieldNumber;
const int Proto31400020::kRoleNameFieldNumber;
#endif  // !_MSC_VER

Proto31400020::Proto31400020()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400020::InitAsDefaultInstance() {
}

Proto31400020::Proto31400020(const Proto31400020& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400020::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400020::~Proto31400020() {
  SharedDtor();
}

void Proto31400020::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto31400020::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400020::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400020_descriptor_;
}

const Proto31400020& Proto31400020::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto31400020* Proto31400020::default_instance_ = NULL;

Proto31400020* Proto31400020::New() const {
  return new Proto31400020;
}

void Proto31400020::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400020::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_role_name;
        break;
      }
      
      // optional string role_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400020::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional string role_name = 2;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->role_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400020::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional string role_name = 2;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->role_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400020::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional string role_name = 2;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400020::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400020* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400020*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400020::MergeFrom(const Proto31400020& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400020::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400020::CopyFrom(const Proto31400020& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400020::IsInitialized() const {
  
  return true;
}

void Proto31400020::Swap(Proto31400020* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(role_name_, other->role_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400020::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400020_descriptor_;
  metadata.reflection = Proto31400020_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100224::kAddContriFieldNumber;
const int Proto30100224::kSerialObjFieldNumber;
const int Proto30100224::kRoleIdFieldNumber;
const int Proto30100224::kLeagueIdFieldNumber;
#endif  // !_MSC_VER

Proto30100224::Proto30100224()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100224::InitAsDefaultInstance() {
  serial_obj_ = const_cast< ::ProtoSerialObj*>(&::ProtoSerialObj::default_instance());
}

Proto30100224::Proto30100224(const Proto30100224& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100224::SharedCtor() {
  _cached_size_ = 0;
  add_contri_ = 0;
  serial_obj_ = NULL;
  role_id_ = GOOGLE_LONGLONG(0);
  league_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100224::~Proto30100224() {
  SharedDtor();
}

void Proto30100224::SharedDtor() {
  if (this != default_instance_) {
    delete serial_obj_;
  }
}

void Proto30100224::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100224::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100224_descriptor_;
}

const Proto30100224& Proto30100224::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30100224* Proto30100224::default_instance_ = NULL;

Proto30100224* Proto30100224::New() const {
  return new Proto30100224;
}

void Proto30100224::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    add_contri_ = 0;
    if (has_serial_obj()) {
      if (serial_obj_ != NULL) serial_obj_->::ProtoSerialObj::Clear();
    }
    role_id_ = GOOGLE_LONGLONG(0);
    league_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100224::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 add_contri = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_contri_)));
          set_has_add_contri();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_serial_obj;
        break;
      }
      
      // optional .ProtoSerialObj serial_obj = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_serial_obj:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serial_obj()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_league_id;
        break;
      }
      
      // optional int64 league_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_id_)));
          set_has_league_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100224::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 add_contri = 1;
  if (has_add_contri()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->add_contri(), output);
  }
  
  // optional .ProtoSerialObj serial_obj = 2;
  if (has_serial_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->serial_obj(), output);
  }
  
  // optional int64 role_id = 3;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->role_id(), output);
  }
  
  // optional int64 league_id = 4;
  if (has_league_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->league_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100224::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 add_contri = 1;
  if (has_add_contri()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->add_contri(), target);
  }
  
  // optional .ProtoSerialObj serial_obj = 2;
  if (has_serial_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->serial_obj(), target);
  }
  
  // optional int64 role_id = 3;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->role_id(), target);
  }
  
  // optional int64 league_id = 4;
  if (has_league_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->league_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100224::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 add_contri = 1;
    if (has_add_contri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_contri());
    }
    
    // optional .ProtoSerialObj serial_obj = 2;
    if (has_serial_obj()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serial_obj());
    }
    
    // optional int64 role_id = 3;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int64 league_id = 4;
    if (has_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100224::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100224* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100224*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100224::MergeFrom(const Proto30100224& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_add_contri()) {
      set_add_contri(from.add_contri());
    }
    if (from.has_serial_obj()) {
      mutable_serial_obj()->::ProtoSerialObj::MergeFrom(from.serial_obj());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_league_id()) {
      set_league_id(from.league_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100224::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100224::CopyFrom(const Proto30100224& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100224::IsInitialized() const {
  
  return true;
}

void Proto30100224::Swap(Proto30100224* other) {
  if (other != this) {
    std::swap(add_contri_, other->add_contri_);
    std::swap(serial_obj_, other->serial_obj_);
    std::swap(role_id_, other->role_id_);
    std::swap(league_id_, other->league_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100224::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100224_descriptor_;
  metadata.reflection = Proto30100224_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400901::kTypeFieldNumber;
const int Proto31400901::kScriptSortFieldNumber;
const int Proto31400901::kScritTypeFieldNumber;
const int Proto31400901::kMultFieldNumber;
#endif  // !_MSC_VER

Proto31400901::Proto31400901()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400901::InitAsDefaultInstance() {
}

Proto31400901::Proto31400901(const Proto31400901& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400901::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  script_sort_ = 0;
  scrit_type_ = 0;
  mult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400901::~Proto31400901() {
  SharedDtor();
}

void Proto31400901::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400901::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400901::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400901_descriptor_;
}

const Proto31400901& Proto31400901::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto31400901* Proto31400901::default_instance_ = NULL;

Proto31400901* Proto31400901::New() const {
  return new Proto31400901;
}

void Proto31400901::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    script_sort_ = 0;
    scrit_type_ = 0;
    mult_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400901::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_script_sort;
        break;
      }
      
      // optional int32 script_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_scrit_type;
        break;
      }
      
      // optional int32 scrit_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scrit_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scrit_type_)));
          set_has_scrit_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_mult;
        break;
      }
      
      // optional int32 mult = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mult_)));
          set_has_mult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400901::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->script_sort(), output);
  }
  
  // optional int32 scrit_type = 3;
  if (has_scrit_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->scrit_type(), output);
  }
  
  // optional int32 mult = 4;
  if (has_mult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mult(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400901::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->script_sort(), target);
  }
  
  // optional int32 scrit_type = 3;
  if (has_scrit_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->scrit_type(), target);
  }
  
  // optional int32 mult = 4;
  if (has_mult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mult(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400901::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 script_sort = 2;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 scrit_type = 3;
    if (has_scrit_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scrit_type());
    }
    
    // optional int32 mult = 4;
    if (has_mult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mult());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400901::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400901* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400901*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400901::MergeFrom(const Proto31400901& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_scrit_type()) {
      set_scrit_type(from.scrit_type());
    }
    if (from.has_mult()) {
      set_mult(from.mult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400901::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400901::CopyFrom(const Proto31400901& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400901::IsInitialized() const {
  
  return true;
}

void Proto31400901::Swap(Proto31400901* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(script_sort_, other->script_sort_);
    std::swap(scrit_type_, other->scrit_type_);
    std::swap(mult_, other->mult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400901::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400901_descriptor_;
  metadata.reflection = Proto31400901_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400902::kScriptListFieldNumber;
const int Proto31400902::kTypeFieldNumber;
const int Proto31400902::kScriptSortFieldNumber;
const int Proto31400902::kScriptTypeFieldNumber;
const int Proto31400902::kResetTimesFieldNumber;
const int Proto31400902::kTopFloorFieldNumber;
const int Proto31400902::kPassWaveFieldNumber;
const int Proto31400902::kPassChapterFieldNumber;
const int Proto31400902::kMultFieldNumber;
const int Proto31400902::kStartWaveFieldNumber;
const int Proto31400902::kStartChapterFieldNumber;
#endif  // !_MSC_VER

Proto31400902::Proto31400902()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400902::InitAsDefaultInstance() {
}

Proto31400902::Proto31400902(const Proto31400902& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400902::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  script_sort_ = 0;
  script_type_ = 0;
  reset_times_ = 0;
  top_floor_ = 0;
  pass_wave_ = 0;
  pass_chapter_ = 0;
  mult_ = 0;
  start_wave_ = 0;
  start_chapter_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400902::~Proto31400902() {
  SharedDtor();
}

void Proto31400902::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400902::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400902::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400902_descriptor_;
}

const Proto31400902& Proto31400902::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto31400902* Proto31400902::default_instance_ = NULL;

Proto31400902* Proto31400902::New() const {
  return new Proto31400902;
}

void Proto31400902::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    type_ = 0;
    script_sort_ = 0;
    script_type_ = 0;
    reset_times_ = 0;
    top_floor_ = 0;
    pass_wave_ = 0;
    pass_chapter_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    mult_ = 0;
    start_wave_ = 0;
    start_chapter_ = 0;
  }
  script_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400902::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoScriptClean script_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_script_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_script_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_script_list;
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_script_sort;
        break;
      }
      
      // optional int32 script_sort = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_script_type;
        break;
      }
      
      // optional int32 script_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_type_)));
          set_has_script_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_reset_times;
        break;
      }
      
      // optional int32 reset_times = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reset_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reset_times_)));
          set_has_reset_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_top_floor;
        break;
      }
      
      // optional int32 top_floor = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_top_floor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_floor_)));
          set_has_top_floor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_pass_wave;
        break;
      }
      
      // optional int32 pass_wave = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pass_wave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pass_wave_)));
          set_has_pass_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_pass_chapter;
        break;
      }
      
      // optional int32 pass_chapter = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pass_chapter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pass_chapter_)));
          set_has_pass_chapter();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_mult;
        break;
      }
      
      // optional int32 mult = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mult_)));
          set_has_mult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_start_wave;
        break;
      }
      
      // optional int32 start_wave = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_wave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_wave_)));
          set_has_start_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_start_chapter;
        break;
      }
      
      // optional int32 start_chapter = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_chapter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_chapter_)));
          set_has_start_chapter();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400902::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoScriptClean script_list = 1;
  for (int i = 0; i < this->script_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->script_list(i), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  // optional int32 script_sort = 3;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->script_sort(), output);
  }
  
  // optional int32 script_type = 4;
  if (has_script_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->script_type(), output);
  }
  
  // optional int32 reset_times = 5;
  if (has_reset_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->reset_times(), output);
  }
  
  // optional int32 top_floor = 6;
  if (has_top_floor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->top_floor(), output);
  }
  
  // optional int32 pass_wave = 7;
  if (has_pass_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->pass_wave(), output);
  }
  
  // optional int32 pass_chapter = 8;
  if (has_pass_chapter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->pass_chapter(), output);
  }
  
  // optional int32 mult = 9;
  if (has_mult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->mult(), output);
  }
  
  // optional int32 start_wave = 10;
  if (has_start_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->start_wave(), output);
  }
  
  // optional int32 start_chapter = 11;
  if (has_start_chapter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->start_chapter(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400902::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoScriptClean script_list = 1;
  for (int i = 0; i < this->script_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->script_list(i), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  // optional int32 script_sort = 3;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->script_sort(), target);
  }
  
  // optional int32 script_type = 4;
  if (has_script_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->script_type(), target);
  }
  
  // optional int32 reset_times = 5;
  if (has_reset_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->reset_times(), target);
  }
  
  // optional int32 top_floor = 6;
  if (has_top_floor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->top_floor(), target);
  }
  
  // optional int32 pass_wave = 7;
  if (has_pass_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->pass_wave(), target);
  }
  
  // optional int32 pass_chapter = 8;
  if (has_pass_chapter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->pass_chapter(), target);
  }
  
  // optional int32 mult = 9;
  if (has_mult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->mult(), target);
  }
  
  // optional int32 start_wave = 10;
  if (has_start_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->start_wave(), target);
  }
  
  // optional int32 start_chapter = 11;
  if (has_start_chapter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->start_chapter(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400902::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 script_sort = 3;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 script_type = 4;
    if (has_script_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_type());
    }
    
    // optional int32 reset_times = 5;
    if (has_reset_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reset_times());
    }
    
    // optional int32 top_floor = 6;
    if (has_top_floor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top_floor());
    }
    
    // optional int32 pass_wave = 7;
    if (has_pass_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pass_wave());
    }
    
    // optional int32 pass_chapter = 8;
    if (has_pass_chapter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pass_chapter());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 mult = 9;
    if (has_mult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mult());
    }
    
    // optional int32 start_wave = 10;
    if (has_start_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->start_wave());
    }
    
    // optional int32 start_chapter = 11;
    if (has_start_chapter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->start_chapter());
    }
    
  }
  // repeated .ProtoScriptClean script_list = 1;
  total_size += 1 * this->script_list_size();
  for (int i = 0; i < this->script_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->script_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400902::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400902* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400902*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400902::MergeFrom(const Proto31400902& from) {
  GOOGLE_CHECK_NE(&from, this);
  script_list_.MergeFrom(from.script_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_script_type()) {
      set_script_type(from.script_type());
    }
    if (from.has_reset_times()) {
      set_reset_times(from.reset_times());
    }
    if (from.has_top_floor()) {
      set_top_floor(from.top_floor());
    }
    if (from.has_pass_wave()) {
      set_pass_wave(from.pass_wave());
    }
    if (from.has_pass_chapter()) {
      set_pass_chapter(from.pass_chapter());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_mult()) {
      set_mult(from.mult());
    }
    if (from.has_start_wave()) {
      set_start_wave(from.start_wave());
    }
    if (from.has_start_chapter()) {
      set_start_chapter(from.start_chapter());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400902::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400902::CopyFrom(const Proto31400902& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400902::IsInitialized() const {
  
  return true;
}

void Proto31400902::Swap(Proto31400902* other) {
  if (other != this) {
    script_list_.Swap(&other->script_list_);
    std::swap(type_, other->type_);
    std::swap(script_sort_, other->script_sort_);
    std::swap(script_type_, other->script_type_);
    std::swap(reset_times_, other->reset_times_);
    std::swap(top_floor_, other->top_floor_);
    std::swap(pass_wave_, other->pass_wave_);
    std::swap(pass_chapter_, other->pass_chapter_);
    std::swap(mult_, other->mult_);
    std::swap(start_wave_, other->start_wave_);
    std::swap(start_chapter_, other->start_chapter_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400902::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400902_descriptor_;
  metadata.reflection = Proto31400902_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400903::kRollbackScriptFieldNumber;
#endif  // !_MSC_VER

Proto31400903::Proto31400903()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400903::InitAsDefaultInstance() {
}

Proto31400903::Proto31400903(const Proto31400903& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400903::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400903::~Proto31400903() {
  SharedDtor();
}

void Proto31400903::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400903::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400903::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400903_descriptor_;
}

const Proto31400903& Proto31400903::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto31400903* Proto31400903::default_instance_ = NULL;

Proto31400903* Proto31400903::New() const {
  return new Proto31400903;
}

void Proto31400903::Clear() {
  rollback_script_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400903::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoScriptClean rollback_script = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rollback_script:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rollback_script()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rollback_script;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400903::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoScriptClean rollback_script = 1;
  for (int i = 0; i < this->rollback_script_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rollback_script(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400903::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoScriptClean rollback_script = 1;
  for (int i = 0; i < this->rollback_script_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rollback_script(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400903::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoScriptClean rollback_script = 1;
  total_size += 1 * this->rollback_script_size();
  for (int i = 0; i < this->rollback_script_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rollback_script(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400903::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400903* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400903*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400903::MergeFrom(const Proto31400903& from) {
  GOOGLE_CHECK_NE(&from, this);
  rollback_script_.MergeFrom(from.rollback_script_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400903::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400903::CopyFrom(const Proto31400903& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400903::IsInitialized() const {
  
  return true;
}

void Proto31400903::Swap(Proto31400903* other) {
  if (other != this) {
    rollback_script_.Swap(&other->rollback_script_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400903::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400903_descriptor_;
  metadata.reflection = Proto31400903_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400108::kRefreshTickFieldNumber;
#endif  // !_MSC_VER

Proto30400108::Proto30400108()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400108::InitAsDefaultInstance() {
}

Proto30400108::Proto30400108(const Proto30400108& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400108::SharedCtor() {
  _cached_size_ = 0;
  refresh_tick_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400108::~Proto30400108() {
  SharedDtor();
}

void Proto30400108::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400108::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400108::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400108_descriptor_;
}

const Proto30400108& Proto30400108::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30400108* Proto30400108::default_instance_ = NULL;

Proto30400108* Proto30400108::New() const {
  return new Proto30400108;
}

void Proto30400108::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    refresh_tick_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400108::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 refresh_tick = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &refresh_tick_)));
          set_has_refresh_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400108::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 refresh_tick = 1;
  if (has_refresh_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->refresh_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400108::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 refresh_tick = 1;
  if (has_refresh_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->refresh_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400108::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 refresh_tick = 1;
    if (has_refresh_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->refresh_tick());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400108::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400108* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400108*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400108::MergeFrom(const Proto30400108& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_refresh_tick()) {
      set_refresh_tick(from.refresh_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400108::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400108::CopyFrom(const Proto30400108& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400108::IsInitialized() const {
  
  return true;
}

void Proto30400108::Swap(Proto30400108* other) {
  if (other != this) {
    std::swap(refresh_tick_, other->refresh_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400108::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400108_descriptor_;
  metadata.reflection = Proto30400108_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400109::kTeamInfoFieldNumber;
#endif  // !_MSC_VER

Proto30400109::Proto30400109()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400109::InitAsDefaultInstance() {
}

Proto30400109::Proto30400109(const Proto30400109& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400109::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400109::~Proto30400109() {
  SharedDtor();
}

void Proto30400109::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400109::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400109::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400109_descriptor_;
}

const Proto30400109& Proto30400109::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30400109* Proto30400109::default_instance_ = NULL;

Proto30400109* Proto30400109::New() const {
  return new Proto30400109;
}

void Proto30400109::Clear() {
  team_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400109::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoTravelTeam team_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_team_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_team_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_team_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400109::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoTravelTeam team_info = 1;
  for (int i = 0; i < this->team_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->team_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400109::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoTravelTeam team_info = 1;
  for (int i = 0; i < this->team_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->team_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400109::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoTravelTeam team_info = 1;
  total_size += 1 * this->team_info_size();
  for (int i = 0; i < this->team_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->team_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400109::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400109* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400109*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400109::MergeFrom(const Proto30400109& from) {
  GOOGLE_CHECK_NE(&from, this);
  team_info_.MergeFrom(from.team_info_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400109::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400109::CopyFrom(const Proto30400109& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400109::IsInitialized() const {
  
  return true;
}

void Proto30400109::Swap(Proto30400109* other) {
  if (other != this) {
    team_info_.Swap(&other->team_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400109::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400109_descriptor_;
  metadata.reflection = Proto30400109_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400110::kMonsterSetFieldNumber;
const int Proto30400110::kIsYellowFieldNumber;
const int Proto30400110::kKillNumFieldNumber;
const int Proto30400110::kIsBrocastFieldNumber;
const int Proto30400110::kOnlineTicksFieldNumber;
const int Proto30400110::kKillingValueFieldNumber;
#endif  // !_MSC_VER

Proto30400110::Proto30400110()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400110::InitAsDefaultInstance() {
}

Proto30400110::Proto30400110(const Proto30400110& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400110::SharedCtor() {
  _cached_size_ = 0;
  is_yellow_ = 0;
  kill_num_ = 0;
  is_brocast_ = 0;
  online_ticks_ = 0;
  killing_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400110::~Proto30400110() {
  SharedDtor();
}

void Proto30400110::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400110::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400110::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400110_descriptor_;
}

const Proto30400110& Proto30400110::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30400110* Proto30400110::default_instance_ = NULL;

Proto30400110* Proto30400110::New() const {
  return new Proto30400110;
}

void Proto30400110::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    is_yellow_ = 0;
    kill_num_ = 0;
    is_brocast_ = 0;
    online_ticks_ = 0;
    killing_value_ = 0;
  }
  monster_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400110::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoMonster monster_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_monster_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_monster_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_monster_set;
        if (input->ExpectTag(16)) goto parse_is_yellow;
        break;
      }
      
      // optional int32 is_yellow = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_yellow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_yellow_)));
          set_has_is_yellow();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_kill_num;
        break;
      }
      
      // optional int32 kill_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_kill_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kill_num_)));
          set_has_kill_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_is_brocast;
        break;
      }
      
      // optional int32 is_brocast = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_brocast:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_brocast_)));
          set_has_is_brocast();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_online_ticks;
        break;
      }
      
      // optional int32 online_ticks = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_online_ticks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &online_ticks_)));
          set_has_online_ticks();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_killing_value;
        break;
      }
      
      // optional int32 killing_value = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_killing_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &killing_value_)));
          set_has_killing_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400110::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoMonster monster_set = 1;
  for (int i = 0; i < this->monster_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->monster_set(i), output);
  }
  
  // optional int32 is_yellow = 2;
  if (has_is_yellow()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_yellow(), output);
  }
  
  // optional int32 kill_num = 3;
  if (has_kill_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->kill_num(), output);
  }
  
  // optional int32 is_brocast = 4;
  if (has_is_brocast()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->is_brocast(), output);
  }
  
  // optional int32 online_ticks = 5;
  if (has_online_ticks()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->online_ticks(), output);
  }
  
  // optional int32 killing_value = 6;
  if (has_killing_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->killing_value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400110::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoMonster monster_set = 1;
  for (int i = 0; i < this->monster_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->monster_set(i), target);
  }
  
  // optional int32 is_yellow = 2;
  if (has_is_yellow()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_yellow(), target);
  }
  
  // optional int32 kill_num = 3;
  if (has_kill_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->kill_num(), target);
  }
  
  // optional int32 is_brocast = 4;
  if (has_is_brocast()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->is_brocast(), target);
  }
  
  // optional int32 online_ticks = 5;
  if (has_online_ticks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->online_ticks(), target);
  }
  
  // optional int32 killing_value = 6;
  if (has_killing_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->killing_value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400110::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 is_yellow = 2;
    if (has_is_yellow()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_yellow());
    }
    
    // optional int32 kill_num = 3;
    if (has_kill_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->kill_num());
    }
    
    // optional int32 is_brocast = 4;
    if (has_is_brocast()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_brocast());
    }
    
    // optional int32 online_ticks = 5;
    if (has_online_ticks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->online_ticks());
    }
    
    // optional int32 killing_value = 6;
    if (has_killing_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->killing_value());
    }
    
  }
  // repeated .ProtoMonster monster_set = 1;
  total_size += 1 * this->monster_set_size();
  for (int i = 0; i < this->monster_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->monster_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400110::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400110* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400110*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400110::MergeFrom(const Proto30400110& from) {
  GOOGLE_CHECK_NE(&from, this);
  monster_set_.MergeFrom(from.monster_set_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_is_yellow()) {
      set_is_yellow(from.is_yellow());
    }
    if (from.has_kill_num()) {
      set_kill_num(from.kill_num());
    }
    if (from.has_is_brocast()) {
      set_is_brocast(from.is_brocast());
    }
    if (from.has_online_ticks()) {
      set_online_ticks(from.online_ticks());
    }
    if (from.has_killing_value()) {
      set_killing_value(from.killing_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400110::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400110::CopyFrom(const Proto30400110& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400110::IsInitialized() const {
  
  return true;
}

void Proto30400110::Swap(Proto30400110* other) {
  if (other != this) {
    monster_set_.Swap(&other->monster_set_);
    std::swap(is_yellow_, other->is_yellow_);
    std::swap(kill_num_, other->kill_num_);
    std::swap(is_brocast_, other->is_brocast_);
    std::swap(online_ticks_, other->online_ticks_);
    std::swap(killing_value_, other->killing_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400110::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400110_descriptor_;
  metadata.reflection = Proto30400110_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100603::kActivityIdFieldNumber;
const int Proto30100603::kTimeFieldNumber;
const int Proto30100603::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto30100603::Proto30100603()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100603::InitAsDefaultInstance() {
}

Proto30100603::Proto30100603(const Proto30100603& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100603::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100603::~Proto30100603() {
  SharedDtor();
}

void Proto30100603::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100603::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100603::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100603_descriptor_;
}

const Proto30100603& Proto30100603::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30100603* Proto30100603::default_instance_ = NULL;

Proto30100603* Proto30100603::New() const {
  return new Proto30100603;
}

void Proto30100603::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    time_ = 0;
  }
  role_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100603::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_time;
        break;
      }
      
      // optional int32 time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_role_id;
        break;
      }
      
      // repeated uint64 role_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24, input, this->mutable_role_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_role_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_role_id;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100603::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 time = 2;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->time(), output);
  }
  
  // repeated uint64 role_id = 3;
  for (int i = 0; i < this->role_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->role_id(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100603::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 time = 2;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->time(), target);
  }
  
  // repeated uint64 role_id = 3;
  for (int i = 0; i < this->role_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(3, this->role_id(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100603::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 time = 2;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time());
    }
    
  }
  // repeated uint64 role_id = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->role_id(i));
    }
    total_size += 1 * this->role_id_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100603::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100603* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100603*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100603::MergeFrom(const Proto30100603& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_id_.MergeFrom(from.role_id_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100603::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100603::CopyFrom(const Proto30100603& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100603::IsInitialized() const {
  
  return true;
}

void Proto30100603::Swap(Proto30100603* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(time_, other->time_);
    role_id_.Swap(&other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100603::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100603_descriptor_;
  metadata.reflection = Proto30100603_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400125::kTipListFieldNumber;
const int Proto31400125::kMaxTipIndexFieldNumber;
const int Proto31400125::kNotifyRecordFieldNumber;
const int Proto31400125::kIngoreFlagFieldNumber;
#endif  // !_MSC_VER

Proto31400125::Proto31400125()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400125::InitAsDefaultInstance() {
}

Proto31400125::Proto31400125(const Proto31400125& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400125::SharedCtor() {
  _cached_size_ = 0;
  max_tip_index_ = 0;
  ingore_flag_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400125::~Proto31400125() {
  SharedDtor();
}

void Proto31400125::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400125::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400125::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400125_descriptor_;
}

const Proto31400125& Proto31400125::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto31400125* Proto31400125::default_instance_ = NULL;

Proto31400125* Proto31400125::New() const {
  return new Proto31400125;
}

void Proto31400125::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    max_tip_index_ = 0;
    ingore_flag_ = false;
  }
  tip_list_.Clear();
  notify_record_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400125::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoPlayerTipSyncInfo tip_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tip_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tip_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_tip_list;
        if (input->ExpectTag(16)) goto parse_max_tip_index;
        break;
      }
      
      // optional int32 max_tip_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_tip_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_tip_index_)));
          set_has_max_tip_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_notify_record;
        break;
      }
      
      // repeated .ProtoPairObj notify_record = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_notify_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_notify_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_notify_record;
        if (input->ExpectTag(32)) goto parse_ingore_flag;
        break;
      }
      
      // optional bool ingore_flag = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ingore_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ingore_flag_)));
          set_has_ingore_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400125::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoPlayerTipSyncInfo tip_list = 1;
  for (int i = 0; i < this->tip_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tip_list(i), output);
  }
  
  // optional int32 max_tip_index = 2;
  if (has_max_tip_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_tip_index(), output);
  }
  
  // repeated .ProtoPairObj notify_record = 3;
  for (int i = 0; i < this->notify_record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->notify_record(i), output);
  }
  
  // optional bool ingore_flag = 4;
  if (has_ingore_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->ingore_flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400125::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoPlayerTipSyncInfo tip_list = 1;
  for (int i = 0; i < this->tip_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tip_list(i), target);
  }
  
  // optional int32 max_tip_index = 2;
  if (has_max_tip_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_tip_index(), target);
  }
  
  // repeated .ProtoPairObj notify_record = 3;
  for (int i = 0; i < this->notify_record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->notify_record(i), target);
  }
  
  // optional bool ingore_flag = 4;
  if (has_ingore_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->ingore_flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400125::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 max_tip_index = 2;
    if (has_max_tip_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_tip_index());
    }
    
    // optional bool ingore_flag = 4;
    if (has_ingore_flag()) {
      total_size += 1 + 1;
    }
    
  }
  // repeated .ProtoPlayerTipSyncInfo tip_list = 1;
  total_size += 1 * this->tip_list_size();
  for (int i = 0; i < this->tip_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tip_list(i));
  }
  
  // repeated .ProtoPairObj notify_record = 3;
  total_size += 1 * this->notify_record_size();
  for (int i = 0; i < this->notify_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->notify_record(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400125::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400125* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400125*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400125::MergeFrom(const Proto31400125& from) {
  GOOGLE_CHECK_NE(&from, this);
  tip_list_.MergeFrom(from.tip_list_);
  notify_record_.MergeFrom(from.notify_record_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_max_tip_index()) {
      set_max_tip_index(from.max_tip_index());
    }
    if (from.has_ingore_flag()) {
      set_ingore_flag(from.ingore_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400125::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400125::CopyFrom(const Proto31400125& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400125::IsInitialized() const {
  
  return true;
}

void Proto31400125::Swap(Proto31400125* other) {
  if (other != this) {
    tip_list_.Swap(&other->tip_list_);
    std::swap(max_tip_index_, other->max_tip_index_);
    notify_record_.Swap(&other->notify_record_);
    std::swap(ingore_flag_, other->ingore_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400125::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400125_descriptor_;
  metadata.reflection = Proto31400125_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31401601::kRankTypeFieldNumber;
const int Proto31401601::kRoleIdFieldNumber;
const int Proto31401601::kRoleNameFieldNumber;
const int Proto31401601::kLeagueNameFieldNumber;
const int Proto31401601::kVipTypeFieldNumber;
const int Proto31401601::kAchieveTickFieldNumber;
const int Proto31401601::kRankValueFieldNumber;
const int Proto31401601::kRankForceFieldNumber;
const int Proto31401601::kExtValueFieldNumber;
const int Proto31401601::kWorshipNumFieldNumber;
const int Proto31401601::kIsWorshipFieldNumber;
#endif  // !_MSC_VER

Proto31401601::Proto31401601()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31401601::InitAsDefaultInstance() {
}

Proto31401601::Proto31401601(const Proto31401601& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31401601::SharedCtor() {
  _cached_size_ = 0;
  rank_type_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  vip_type_ = 0;
  achieve_tick_ = GOOGLE_LONGLONG(0);
  rank_value_ = 0;
  rank_force_ = 0;
  ext_value_ = 0;
  worship_num_ = GOOGLE_LONGLONG(0);
  is_worship_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31401601::~Proto31401601() {
  SharedDtor();
}

void Proto31401601::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (league_name_ != &::google::protobuf::internal::kEmptyString) {
    delete league_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto31401601::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31401601::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31401601_descriptor_;
}

const Proto31401601& Proto31401601::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto31401601* Proto31401601::default_instance_ = NULL;

Proto31401601* Proto31401601::New() const {
  return new Proto31401601;
}

void Proto31401601::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rank_type_ = 0;
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
    if (has_league_name()) {
      if (league_name_ != &::google::protobuf::internal::kEmptyString) {
        league_name_->clear();
      }
    }
    vip_type_ = 0;
    achieve_tick_ = GOOGLE_LONGLONG(0);
    rank_value_ = 0;
    rank_force_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    ext_value_ = 0;
    worship_num_ = GOOGLE_LONGLONG(0);
    is_worship_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31401601::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rank_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_type_)));
          set_has_rank_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_role_name;
        break;
      }
      
      // optional string role_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_league_name;
        break;
      }
      
      // optional string league_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_league_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->league_name().data(), this->league_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_vip_type;
        break;
      }
      
      // optional int32 vip_type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_type_)));
          set_has_vip_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_achieve_tick;
        break;
      }
      
      // optional int64 achieve_tick = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_achieve_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &achieve_tick_)));
          set_has_achieve_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_rank_value;
        break;
      }
      
      // optional int32 rank_value = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_value_)));
          set_has_rank_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_rank_force;
        break;
      }
      
      // optional int32 rank_force = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_force_)));
          set_has_rank_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_ext_value;
        break;
      }
      
      // optional int32 ext_value = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ext_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ext_value_)));
          set_has_ext_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_worship_num;
        break;
      }
      
      // optional int64 worship_num = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_worship_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worship_num_)));
          set_has_worship_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_is_worship;
        break;
      }
      
      // optional int32 is_worship = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_worship:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_worship_)));
          set_has_is_worship();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31401601::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 rank_type = 1;
  if (has_rank_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank_type(), output);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->role_id(), output);
  }
  
  // optional string role_name = 3;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->role_name(), output);
  }
  
  // optional string league_name = 4;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->league_name(), output);
  }
  
  // optional int32 vip_type = 5;
  if (has_vip_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->vip_type(), output);
  }
  
  // optional int64 achieve_tick = 6;
  if (has_achieve_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->achieve_tick(), output);
  }
  
  // optional int32 rank_value = 7;
  if (has_rank_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->rank_value(), output);
  }
  
  // optional int32 rank_force = 8;
  if (has_rank_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->rank_force(), output);
  }
  
  // optional int32 ext_value = 9;
  if (has_ext_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->ext_value(), output);
  }
  
  // optional int64 worship_num = 10;
  if (has_worship_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->worship_num(), output);
  }
  
  // optional int32 is_worship = 11;
  if (has_is_worship()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->is_worship(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31401601::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 rank_type = 1;
  if (has_rank_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank_type(), target);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->role_id(), target);
  }
  
  // optional string role_name = 3;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->role_name(), target);
  }
  
  // optional string league_name = 4;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->league_name(), target);
  }
  
  // optional int32 vip_type = 5;
  if (has_vip_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->vip_type(), target);
  }
  
  // optional int64 achieve_tick = 6;
  if (has_achieve_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->achieve_tick(), target);
  }
  
  // optional int32 rank_value = 7;
  if (has_rank_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->rank_value(), target);
  }
  
  // optional int32 rank_force = 8;
  if (has_rank_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->rank_force(), target);
  }
  
  // optional int32 ext_value = 9;
  if (has_ext_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->ext_value(), target);
  }
  
  // optional int64 worship_num = 10;
  if (has_worship_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->worship_num(), target);
  }
  
  // optional int32 is_worship = 11;
  if (has_is_worship()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->is_worship(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31401601::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 rank_type = 1;
    if (has_rank_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_type());
    }
    
    // optional int64 role_id = 2;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional string role_name = 3;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
    // optional string league_name = 4;
    if (has_league_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->league_name());
    }
    
    // optional int32 vip_type = 5;
    if (has_vip_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_type());
    }
    
    // optional int64 achieve_tick = 6;
    if (has_achieve_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->achieve_tick());
    }
    
    // optional int32 rank_value = 7;
    if (has_rank_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_value());
    }
    
    // optional int32 rank_force = 8;
    if (has_rank_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_force());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 ext_value = 9;
    if (has_ext_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ext_value());
    }
    
    // optional int64 worship_num = 10;
    if (has_worship_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->worship_num());
    }
    
    // optional int32 is_worship = 11;
    if (has_is_worship()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_worship());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31401601::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31401601* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31401601*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31401601::MergeFrom(const Proto31401601& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rank_type()) {
      set_rank_type(from.rank_type());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
    if (from.has_league_name()) {
      set_league_name(from.league_name());
    }
    if (from.has_vip_type()) {
      set_vip_type(from.vip_type());
    }
    if (from.has_achieve_tick()) {
      set_achieve_tick(from.achieve_tick());
    }
    if (from.has_rank_value()) {
      set_rank_value(from.rank_value());
    }
    if (from.has_rank_force()) {
      set_rank_force(from.rank_force());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_ext_value()) {
      set_ext_value(from.ext_value());
    }
    if (from.has_worship_num()) {
      set_worship_num(from.worship_num());
    }
    if (from.has_is_worship()) {
      set_is_worship(from.is_worship());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31401601::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31401601::CopyFrom(const Proto31401601& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31401601::IsInitialized() const {
  
  return true;
}

void Proto31401601::Swap(Proto31401601* other) {
  if (other != this) {
    std::swap(rank_type_, other->rank_type_);
    std::swap(role_id_, other->role_id_);
    std::swap(role_name_, other->role_name_);
    std::swap(league_name_, other->league_name_);
    std::swap(vip_type_, other->vip_type_);
    std::swap(achieve_tick_, other->achieve_tick_);
    std::swap(rank_value_, other->rank_value_);
    std::swap(rank_force_, other->rank_force_);
    std::swap(ext_value_, other->ext_value_);
    std::swap(worship_num_, other->worship_num_);
    std::swap(is_worship_, other->is_worship_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31401601::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31401601_descriptor_;
  metadata.reflection = Proto31401601_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400903::kResRecognFieldNumber;
const int Proto30400903::kResBodyFieldNumber;
#endif  // !_MSC_VER

Proto30400903::Proto30400903()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400903::InitAsDefaultInstance() {
}

Proto30400903::Proto30400903(const Proto30400903& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400903::SharedCtor() {
  _cached_size_ = 0;
  res_recogn_ = 0;
  res_body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400903::~Proto30400903() {
  SharedDtor();
}

void Proto30400903::SharedDtor() {
  if (res_body_ != &::google::protobuf::internal::kEmptyString) {
    delete res_body_;
  }
  if (this != default_instance_) {
  }
}

void Proto30400903::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400903::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400903_descriptor_;
}

const Proto30400903& Proto30400903::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30400903* Proto30400903::default_instance_ = NULL;

Proto30400903* Proto30400903::New() const {
  return new Proto30400903;
}

void Proto30400903::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    res_recogn_ = 0;
    if (has_res_body()) {
      if (res_body_ != &::google::protobuf::internal::kEmptyString) {
        res_body_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400903::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 res_recogn = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &res_recogn_)));
          set_has_res_recogn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_res_body;
        break;
      }
      
      // optional bytes res_body = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_res_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_res_body()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400903::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 res_recogn = 1;
  if (has_res_recogn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->res_recogn(), output);
  }
  
  // optional bytes res_body = 2;
  if (has_res_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->res_body(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400903::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 res_recogn = 1;
  if (has_res_recogn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->res_recogn(), target);
  }
  
  // optional bytes res_body = 2;
  if (has_res_body()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->res_body(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400903::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 res_recogn = 1;
    if (has_res_recogn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->res_recogn());
    }
    
    // optional bytes res_body = 2;
    if (has_res_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->res_body());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400903::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400903* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400903*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400903::MergeFrom(const Proto30400903& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_res_recogn()) {
      set_res_recogn(from.res_recogn());
    }
    if (from.has_res_body()) {
      set_res_body(from.res_body());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400903::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400903::CopyFrom(const Proto30400903& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400903::IsInitialized() const {
  
  return true;
}

void Proto30400903::Swap(Proto30400903* other) {
  if (other != this) {
    std::swap(res_recogn_, other->res_recogn_);
    std::swap(res_body_, other->res_body_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400903::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400903_descriptor_;
  metadata.reflection = Proto30400903_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400111::kCurBloodFieldNumber;
const int Proto30400111::kCheckFlagFieldNumber;
const int Proto30400111::kCheckTickFieldNumber;
const int Proto30400111::kNonTipsFieldNumber;
const int Proto30400111::kEverydayTickFieldNumber;
const int Proto30400111::kLastTipsTickFieldNumber;
#endif  // !_MSC_VER

Proto30400111::Proto30400111()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400111::InitAsDefaultInstance() {
}

Proto30400111::Proto30400111(const Proto30400111& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400111::SharedCtor() {
  _cached_size_ = 0;
  cur_blood_ = 0;
  check_flag_ = 0;
  check_tick_ = GOOGLE_LONGLONG(0);
  non_tips_ = 0;
  everyday_tick_ = GOOGLE_LONGLONG(0);
  last_tips_tick_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400111::~Proto30400111() {
  SharedDtor();
}

void Proto30400111::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400111::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400111::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400111_descriptor_;
}

const Proto30400111& Proto30400111::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner003_2eproto();  return *default_instance_;
}

Proto30400111* Proto30400111::default_instance_ = NULL;

Proto30400111* Proto30400111::New() const {
  return new Proto30400111;
}

void Proto30400111::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_blood_ = 0;
    check_flag_ = 0;
    check_tick_ = GOOGLE_LONGLONG(0);
    non_tips_ = 0;
    everyday_tick_ = GOOGLE_LONGLONG(0);
    last_tips_tick_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400111::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_blood = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_blood_)));
          set_has_cur_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_check_flag;
        break;
      }
      
      // optional int32 check_flag = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_check_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &check_flag_)));
          set_has_check_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_check_tick;
        break;
      }
      
      // optional int64 check_tick = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_check_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &check_tick_)));
          set_has_check_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_non_tips;
        break;
      }
      
      // optional int32 non_tips = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_non_tips:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &non_tips_)));
          set_has_non_tips();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_everyday_tick;
        break;
      }
      
      // optional int64 everyday_tick = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_everyday_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &everyday_tick_)));
          set_has_everyday_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_last_tips_tick;
        break;
      }
      
      // optional int64 last_tips_tick = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last_tips_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_tips_tick_)));
          set_has_last_tips_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400111::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_blood = 1;
  if (has_cur_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_blood(), output);
  }
  
  // optional int32 check_flag = 2;
  if (has_check_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->check_flag(), output);
  }
  
  // optional int64 check_tick = 3;
  if (has_check_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->check_tick(), output);
  }
  
  // optional int32 non_tips = 4;
  if (has_non_tips()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->non_tips(), output);
  }
  
  // optional int64 everyday_tick = 5;
  if (has_everyday_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->everyday_tick(), output);
  }
  
  // optional int64 last_tips_tick = 6;
  if (has_last_tips_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->last_tips_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400111::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_blood = 1;
  if (has_cur_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_blood(), target);
  }
  
  // optional int32 check_flag = 2;
  if (has_check_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->check_flag(), target);
  }
  
  // optional int64 check_tick = 3;
  if (has_check_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->check_tick(), target);
  }
  
  // optional int32 non_tips = 4;
  if (has_non_tips()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->non_tips(), target);
  }
  
  // optional int64 everyday_tick = 5;
  if (has_everyday_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->everyday_tick(), target);
  }
  
  // optional int64 last_tips_tick = 6;
  if (has_last_tips_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->last_tips_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400111::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_blood = 1;
    if (has_cur_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_blood());
    }
    
    // optional int32 check_flag = 2;
    if (has_check_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->check_flag());
    }
    
    // optional int64 check_tick = 3;
    if (has_check_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->check_tick());
    }
    
    // optional int32 non_tips = 4;
    if (has_non_tips()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->non_tips());
    }
    
    // optional int64 everyday_tick = 5;
    if (has_everyday_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->everyday_tick());
    }
    
    // optional int64 last_tips_tick = 6;
    if (has_last_tips_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->last_tips_tick());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400111::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400111* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400111*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400111::MergeFrom(const Proto30400111& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_blood()) {
      set_cur_blood(from.cur_blood());
    }
    if (from.has_check_flag()) {
      set_check_flag(from.check_flag());
    }
    if (from.has_check_tick()) {
      set_check_tick(from.check_tick());
    }
    if (from.has_non_tips()) {
      set_non_tips(from.non_tips());
    }
    if (from.has_everyday_tick()) {
      set_everyday_tick(from.everyday_tick());
    }
    if (from.has_last_tips_tick()) {
      set_last_tips_tick(from.last_tips_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400111::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400111::CopyFrom(const Proto30400111& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400111::IsInitialized() const {
  
  return true;
}

void Proto30400111::Swap(Proto30400111* other) {
  if (other != this) {
    std::swap(cur_blood_, other->cur_blood_);
    std::swap(check_flag_, other->check_flag_);
    std::swap(check_tick_, other->check_tick_);
    std::swap(non_tips_, other->non_tips_);
    std::swap(everyday_tick_, other->everyday_tick_);
    std::swap(last_tips_tick_, other->last_tips_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400111::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400111_descriptor_;
  metadata.reflection = Proto30400111_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
