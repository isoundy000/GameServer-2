// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoInner002.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto31400302_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400302_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400304_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400304_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400303_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400303_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30200114_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30200114_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100801_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100801_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400801_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400801_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400051_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400051_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400052_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400052_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400421_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400421_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400422_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400422_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400801_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400801_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400601_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400601_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400018_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400018_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400231_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400231_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400901_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400901_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400902_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400902_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400251_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400251_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400252_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400252_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100302_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100302_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400019_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400019_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400602_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400602_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30401001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30401001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400006_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400006_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400211_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400211_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400112_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400112_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30810101_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30810101_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30860101_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30860101_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30200117_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30200117_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400013_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400013_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400012_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400012_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto32101101_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto32101101_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400423_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400423_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31401401_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31401401_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400106_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400106_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31401402_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31401402_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400701_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400701_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400113_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400113_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400114_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400114_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400116_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400116_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400117_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400117_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400118_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400118_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30200118_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30200118_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400261_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400261_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400424_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400424_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400115_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400115_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400426_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400426_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400427_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400427_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400401_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400401_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400120_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400120_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoInner002_2eproto() {
  protobuf_AddDesc_ProtoInner002_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoInner002.proto");
  GOOGLE_CHECK(file != NULL);
  Proto31400302_descriptor_ = file->message_type(0);
  static const int Proto31400302_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400302, league_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400302, league_intro_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400302, create_type_),
  };
  Proto31400302_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400302_descriptor_,
      Proto31400302::default_instance_,
      Proto31400302_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400302, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400302, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400302));
  Proto31400304_descriptor_ = file->message_type(1);
  static const int Proto31400304_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400304, league_lvl_),
  };
  Proto31400304_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400304_descriptor_,
      Proto31400304::default_instance_,
      Proto31400304_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400304, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400304, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400304));
  Proto31400303_descriptor_ = file->message_type(2);
  static const int Proto31400303_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400303, buy_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400303, buy_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400303, shop_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400303, need_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400303, need_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400303, need_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400303, oper_result_),
  };
  Proto31400303_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400303_descriptor_,
      Proto31400303::default_instance_,
      Proto31400303_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400303, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400303, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400303));
  Proto30200114_descriptor_ = file->message_type(3);
  static const int Proto30200114_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200114, role_id_set_),
  };
  Proto30200114_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30200114_descriptor_,
      Proto30200114::default_instance_,
      Proto30200114_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200114, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200114, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30200114));
  Proto30100801_descriptor_ = file->message_type(4);
  static const int Proto30100801_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100801, vip_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100801, vip_start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100801, period_time_),
  };
  Proto30100801_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100801_descriptor_,
      Proto30100801::default_instance_,
      Proto30100801_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100801, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100801, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100801));
  Proto31400801_descriptor_ = file->message_type(5);
  static const int Proto31400801_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400801, vip_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400801, period_time_),
  };
  Proto31400801_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400801_descriptor_,
      Proto31400801::default_instance_,
      Proto31400801_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400801, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400801, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400801));
  Proto30400051_descriptor_ = file->message_type(6);
  static const int Proto30400051_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400051, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400051, enter_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400051, request_scene_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400051, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400051, league_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400051, camp_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400051, space_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400051, role_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400051, boss_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400051, boss_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400051, force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400051, league_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400051, main_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400051, server_flag_),
  };
  Proto30400051_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400051_descriptor_,
      Proto30400051::default_instance_,
      Proto30400051_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400051, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400051, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400051));
  Proto30400052_descriptor_ = file->message_type(7);
  static const int Proto30400052_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400052, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400052, space_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400052, scene_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400052, enter_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400052, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400052, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400052, cur_save_),
  };
  Proto30400052_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400052_descriptor_,
      Proto30400052::default_instance_,
      Proto30400052_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400052, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400052, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400052));
  Proto30400421_descriptor_ = file->message_type(8);
  static const int Proto30400421_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400421, league_set_),
  };
  Proto30400421_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400421_descriptor_,
      Proto30400421::default_instance_,
      Proto30400421_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400421, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400421, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400421));
  Proto30400422_descriptor_ = file->message_type(9);
  static const int Proto30400422_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400422, league_index_),
  };
  Proto30400422_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400422_descriptor_,
      Proto30400422::default_instance_,
      Proto30400422_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400422, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400422, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400422));
  Proto30400801_descriptor_ = file->message_type(10);
  static const int Proto30400801_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400801, vip_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400801, vip_start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400801, expired_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400801, is_notify_),
  };
  Proto30400801_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400801_descriptor_,
      Proto30400801::default_instance_,
      Proto30400801_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400801, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400801, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400801));
  Proto30400601_descriptor_ = file->message_type(11);
  static const int Proto30400601_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400601, shape_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400601, no_notify_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400601, weapon_lvl_),
  };
  Proto30400601_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400601_descriptor_,
      Proto30400601::default_instance_,
      Proto30400601_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400601, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400601, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400601));
  Proto31400018_descriptor_ = file->message_type(12);
  static const int Proto31400018_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400018, activity_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400018, sub_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400018, value_),
  };
  Proto31400018_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400018_descriptor_,
      Proto31400018::default_instance_,
      Proto31400018_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400018, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400018, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400018));
  Proto31400231_descriptor_ = file->message_type(13);
  static const int Proto31400231_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400231, npc_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400231, recogn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400231, msg_body_),
  };
  Proto31400231_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400231_descriptor_,
      Proto31400231::default_instance_,
      Proto31400231_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400231, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400231, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400231));
  Proto30400901_descriptor_ = file->message_type(14);
  static const int Proto30400901_offsets_[21] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, progress_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, used_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, used_times_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, pass_piece_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, pass_chapter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, piece_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, chapter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, vip_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, replacements_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, teamer_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, buy_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, online_sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, need_pack_space_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, script_scene_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, cheer_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, encourage_num_),
  };
  Proto30400901_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400901_descriptor_,
      Proto30400901::default_instance_,
      Proto30400901_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400901, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400901));
  Proto30400902_descriptor_ = file->message_type(15);
  static const int Proto30400902_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400902, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400902, script_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400902, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400902, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400902, pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400902, used_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400902, progress_id_),
  };
  Proto30400902_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400902_descriptor_,
      Proto30400902::default_instance_,
      Proto30400902_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400902, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400902, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400902));
  Proto31400251_descriptor_ = file->message_type(16);
  static const int Proto31400251_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400251, receiver_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400251, receiver_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400251, shop_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400251, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400251, item_bind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400251, buy_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400251, money_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400251, money_amount_),
  };
  Proto31400251_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400251_descriptor_,
      Proto31400251::default_instance_,
      Proto31400251_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400251, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400251, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400251));
  Proto31400252_descriptor_ = file->message_type(17);
  static const int Proto31400252_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400252, shop_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400252, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400252, item_bind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400252, buy_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400252, money_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400252, money_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400252, ret_),
  };
  Proto31400252_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400252_descriptor_,
      Proto31400252::default_instance_,
      Proto31400252_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400252, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400252, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400252));
  Proto30100302_descriptor_ = file->message_type(18);
  static const int Proto30100302_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100302, cur_scene_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100302, last_scene_),
  };
  Proto30100302_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100302_descriptor_,
      Proto30100302::default_instance_,
      Proto30100302_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100302, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100302, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100302));
  Proto31400019_descriptor_ = file->message_type(19);
  static const int Proto31400019_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400019, fight_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400019, fight_tick_sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400019, fight_tick_usec_),
  };
  Proto31400019_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400019_descriptor_,
      Proto31400019::default_instance_,
      Proto31400019_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400019, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400019, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400019));
  Proto30400602_descriptor_ = file->message_type(20);
  static const int Proto30400602_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400602, cur_label_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400602, expire_tick_),
  };
  Proto30400602_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400602_descriptor_,
      Proto30400602::default_instance_,
      Proto30400602_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400602, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400602, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400602));
  Proto30401001_descriptor_ = file->message_type(21);
  static const int Proto30401001_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401001, monster_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401001, monster_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401001, monster_left_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401001, award_items_),
  };
  Proto30401001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30401001_descriptor_,
      Proto30401001::default_instance_,
      Proto30401001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30401001));
  Proto31400003_descriptor_ = file->message_type(22);
  static const int Proto31400003_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400003, sync_flag_),
  };
  Proto31400003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400003_descriptor_,
      Proto31400003::default_instance_,
      Proto31400003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400003));
  Proto30400006_descriptor_ = file->message_type(23);
  static const int Proto30400006_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400006, sync_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400006, finish_type_),
  };
  Proto30400006_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400006_descriptor_,
      Proto30400006::default_instance_,
      Proto30400006_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400006, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400006, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400006));
  Proto31400211_descriptor_ = file->message_type(24);
  static const int Proto31400211_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400211, team_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400211, leader_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400211, teamer_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400211, replacement_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400211, travel_team_),
  };
  Proto31400211_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400211_descriptor_,
      Proto31400211::default_instance_,
      Proto31400211_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400211, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400211, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400211));
  Proto31400112_descriptor_ = file->message_type(25);
  static const int Proto31400112_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400112, beast_set_),
  };
  Proto31400112_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400112_descriptor_,
      Proto31400112::default_instance_,
      Proto31400112_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400112, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400112, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400112));
  Proto30810101_descriptor_ = file->message_type(26);
  static const int Proto30810101_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30810101, account_),
  };
  Proto30810101_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30810101_descriptor_,
      Proto30810101::default_instance_,
      Proto30810101_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30810101, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30810101, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30810101));
  Proto30860101_descriptor_ = file->message_type(27);
  static const int Proto30860101_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30860101, role_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30860101, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30860101, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30860101, career_),
  };
  Proto30860101_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30860101_descriptor_,
      Proto30860101::default_instance_,
      Proto30860101_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30860101, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30860101, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30860101));
  Proto30200117_descriptor_ = file->message_type(28);
  static const int Proto30200117_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200117, show_content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200117, color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200117, channel_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200117, flaunt_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200117, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200117, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200117, bind_status_),
  };
  Proto30200117_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30200117_descriptor_,
      Proto30200117::default_instance_,
      Proto30200117_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200117, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200117, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30200117));
  Proto31400013_descriptor_ = file->message_type(29);
  static const int Proto31400013_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400013, add_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400013, add_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400013, drop_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400013, sort_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400013, src_id_),
  };
  Proto31400013_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400013_descriptor_,
      Proto31400013::default_instance_,
      Proto31400013_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400013, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400013, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400013));
  Proto30400012_descriptor_ = file->message_type(30);
  static const int Proto30400012_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400012, drop_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400012, result_flag_),
  };
  Proto30400012_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400012_descriptor_,
      Proto30400012::default_instance_,
      Proto30400012_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400012, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400012, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400012));
  Proto32101101_descriptor_ = file->message_type(31);
  static const int Proto32101101_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101101, role_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101101, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101101, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101101, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101101, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101101, agent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101101, platform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101101, market_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101101, server_flag_),
  };
  Proto32101101_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto32101101_descriptor_,
      Proto32101101::default_instance_,
      Proto32101101_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101101, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101101, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto32101101));
  Proto30400423_descriptor_ = file->message_type(32);
  static const int Proto30400423_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400423, league_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400423, league_name_),
  };
  Proto30400423_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400423_descriptor_,
      Proto30400423::default_instance_,
      Proto30400423_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400423, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400423, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400423));
  Proto31401401_descriptor_ = file->message_type(33);
  static const int Proto31401401_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401401, cycle_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401401, award_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401401, check_in_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401401, last_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401401, show_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401401, popup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401401, charge_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401401, check_total_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401401, total_last_time_),
  };
  Proto31401401_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31401401_descriptor_,
      Proto31401401::default_instance_,
      Proto31401401_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401401, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401401, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31401401));
  Proto30400106_descriptor_ = file->message_type(34);
  static const int Proto30400106_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, script_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, prev_scene_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, prev_pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, prev_pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, script_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, script_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, special_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, pass_piece_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, pass_chapter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, piece_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, first_script_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, piece_star_awarded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, prev_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, prev_magic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, max_floor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, trvl_total_pass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, legend_top_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, sword_top_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, skill_id_),
  };
  Proto30400106_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400106_descriptor_,
      Proto30400106::default_instance_,
      Proto30400106_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400106, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400106));
  Proto31401402_descriptor_ = file->message_type(35);
  static const int Proto31401402_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401402, liveness_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401402, received_award_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401402, finished_tasks_),
  };
  Proto31401402_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31401402_descriptor_,
      Proto31401402::default_instance_,
      Proto31401402_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401402, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401402, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31401402));
  Proto30400701_descriptor_ = file->message_type(36);
  static const int Proto30400701_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400701, team_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400701, leader_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400701, teamer_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400701, replacement_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400701, travel_team_),
  };
  Proto30400701_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400701_descriptor_,
      Proto30400701::default_instance_,
      Proto30400701_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400701, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400701, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400701));
  Proto31400113_descriptor_ = file->message_type(37);
  static const int Proto31400113_offsets_[25] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, vip_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, vip_start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, period_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, bless_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, gift_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, flight_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, flight_left_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, divine_reset_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, divine_reset_left_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, divine_get_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, divine_get_left_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, dg_pra_cool_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, dg_pra_cool_left_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, need_notify_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, is_acti_fashion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, vip_fashion_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, before_gift_vip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, is_gven_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, weekly_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, weekly_given_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, is_given_weekly_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, weekly_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, check_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, des_mail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, super_vip_type_),
  };
  Proto31400113_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400113_descriptor_,
      Proto31400113::default_instance_,
      Proto31400113_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400113, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400113));
  Proto31400114_descriptor_ = file->message_type(38);
  static const int Proto31400114_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400114, max_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400114, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400114, monster_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400114, divine_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400114, divine_spend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400114, fill_items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400114, obtained_items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400114, monster_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400114, luck_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400114, open_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400114, savvy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400114, free_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400114, box_is_open_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400114, box_next_free_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400114, second_equip_decompose_),
  };
  Proto31400114_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400114_descriptor_,
      Proto31400114::default_instance_,
      Proto31400114_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400114, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400114, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400114));
  Proto31400116_descriptor_ = file->message_type(39);
  static const int Proto31400116_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400116, activity_notify_info_),
  };
  Proto31400116_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400116_descriptor_,
      Proto31400116::default_instance_,
      Proto31400116_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400116, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400116, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400116));
  Proto31400117_descriptor_ = file->message_type(40);
  static const int Proto31400117_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400117, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400117, leader_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400117, teamer_id_),
  };
  Proto31400117_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400117_descriptor_,
      Proto31400117::default_instance_,
      Proto31400117_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400117, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400117, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400117));
  Proto31400118_descriptor_ = file->message_type(41);
  static const int Proto31400118_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400118, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400118, pre_stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400118, received_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400118, received_mark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400118, login_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400118, online_sum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400118, award_list_),
  };
  Proto31400118_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400118_descriptor_,
      Proto31400118::default_instance_,
      Proto31400118_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400118, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400118, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400118));
  Proto30200118_descriptor_ = file->message_type(42);
  static const int Proto30200118_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200118, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200118, chat_channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200118, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200118, league_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200118, opra_),
  };
  Proto30200118_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30200118_descriptor_,
      Proto30200118::default_instance_,
      Proto30200118_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200118, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200118, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30200118));
  Proto31400261_descriptor_ = file->message_type(43);
  static const int Proto31400261_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400261, recogn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400261, self_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400261, other_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400261, beast_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400261, msg_body_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400261, query_type_),
  };
  Proto31400261_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400261_descriptor_,
      Proto31400261::default_instance_,
      Proto31400261_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400261, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400261, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400261));
  Proto30400424_descriptor_ = file->message_type(44);
  static const int Proto30400424_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400424, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400424, role_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400424, role_sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400424, role_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400424, role_force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400424, league_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400424, league_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400424, league_force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400424, leader_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400424, leader_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400424, role_career_),
  };
  Proto30400424_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400424_descriptor_,
      Proto30400424::default_instance_,
      Proto30400424_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400424, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400424, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400424));
  Proto31400115_descriptor_ = file->message_type(45);
  static const int Proto31400115_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400115, update_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400115, vip_type_rec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400115, vip_start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400115, vip_expried_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400115, level_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400115, vip_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400115, exp_restore_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400115, script_stage_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400115, pre_act_map_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400115, now_act_map_),
  };
  Proto31400115_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400115_descriptor_,
      Proto31400115::default_instance_,
      Proto31400115_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400115, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400115, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400115));
  Proto30400426_descriptor_ = file->message_type(46);
  static const int Proto30400426_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400426, win_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400426, lose_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400426, fight_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400426, win_is_bot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400426, lose_is_bot_),
  };
  Proto30400426_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400426_descriptor_,
      Proto30400426::default_instance_,
      Proto30400426_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400426, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400426, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400426));
  Proto30400427_descriptor_ = file->message_type(47);
  static const int Proto30400427_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400427, martial_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400427, first_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400427, first_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400427, first_sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400427, first_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400427, second_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400427, second_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400427, second_sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400427, second_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400427, first_career_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400427, second_career_),
  };
  Proto30400427_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400427_descriptor_,
      Proto30400427::default_instance_,
      Proto30400427_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400427, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400427, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400427));
  Proto31400401_descriptor_ = file->message_type(48);
  static const int Proto31400401_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400401, event_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400401, times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400401, value_),
  };
  Proto31400401_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400401_descriptor_,
      Proto31400401::default_instance_,
      Proto31400401_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400401, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400401, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400401));
  Proto31400120_descriptor_ = file->message_type(49);
  static const int Proto31400120_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400120, lucky_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400120, magical_map_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400120, smelt_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400120, smelt_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400120, recommend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400120, open_),
  };
  Proto31400120_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400120_descriptor_,
      Proto31400120::default_instance_,
      Proto31400120_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400120, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400120, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400120));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoInner002_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400302_descriptor_, &Proto31400302::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400304_descriptor_, &Proto31400304::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400303_descriptor_, &Proto31400303::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30200114_descriptor_, &Proto30200114::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100801_descriptor_, &Proto30100801::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400801_descriptor_, &Proto31400801::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400051_descriptor_, &Proto30400051::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400052_descriptor_, &Proto30400052::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400421_descriptor_, &Proto30400421::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400422_descriptor_, &Proto30400422::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400801_descriptor_, &Proto30400801::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400601_descriptor_, &Proto30400601::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400018_descriptor_, &Proto31400018::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400231_descriptor_, &Proto31400231::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400901_descriptor_, &Proto30400901::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400902_descriptor_, &Proto30400902::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400251_descriptor_, &Proto31400251::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400252_descriptor_, &Proto31400252::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100302_descriptor_, &Proto30100302::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400019_descriptor_, &Proto31400019::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400602_descriptor_, &Proto30400602::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30401001_descriptor_, &Proto30401001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400003_descriptor_, &Proto31400003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400006_descriptor_, &Proto30400006::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400211_descriptor_, &Proto31400211::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400112_descriptor_, &Proto31400112::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30810101_descriptor_, &Proto30810101::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30860101_descriptor_, &Proto30860101::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30200117_descriptor_, &Proto30200117::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400013_descriptor_, &Proto31400013::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400012_descriptor_, &Proto30400012::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto32101101_descriptor_, &Proto32101101::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400423_descriptor_, &Proto30400423::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31401401_descriptor_, &Proto31401401::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400106_descriptor_, &Proto30400106::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31401402_descriptor_, &Proto31401402::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400701_descriptor_, &Proto30400701::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400113_descriptor_, &Proto31400113::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400114_descriptor_, &Proto31400114::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400116_descriptor_, &Proto31400116::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400117_descriptor_, &Proto31400117::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400118_descriptor_, &Proto31400118::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30200118_descriptor_, &Proto30200118::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400261_descriptor_, &Proto31400261::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400424_descriptor_, &Proto30400424::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400115_descriptor_, &Proto31400115::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400426_descriptor_, &Proto30400426::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400427_descriptor_, &Proto30400427::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400401_descriptor_, &Proto31400401::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400120_descriptor_, &Proto31400120::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoInner002_2eproto() {
  delete Proto31400302::default_instance_;
  delete Proto31400302_reflection_;
  delete Proto31400304::default_instance_;
  delete Proto31400304_reflection_;
  delete Proto31400303::default_instance_;
  delete Proto31400303_reflection_;
  delete Proto30200114::default_instance_;
  delete Proto30200114_reflection_;
  delete Proto30100801::default_instance_;
  delete Proto30100801_reflection_;
  delete Proto31400801::default_instance_;
  delete Proto31400801_reflection_;
  delete Proto30400051::default_instance_;
  delete Proto30400051_reflection_;
  delete Proto30400052::default_instance_;
  delete Proto30400052_reflection_;
  delete Proto30400421::default_instance_;
  delete Proto30400421_reflection_;
  delete Proto30400422::default_instance_;
  delete Proto30400422_reflection_;
  delete Proto30400801::default_instance_;
  delete Proto30400801_reflection_;
  delete Proto30400601::default_instance_;
  delete Proto30400601_reflection_;
  delete Proto31400018::default_instance_;
  delete Proto31400018_reflection_;
  delete Proto31400231::default_instance_;
  delete Proto31400231_reflection_;
  delete Proto30400901::default_instance_;
  delete Proto30400901_reflection_;
  delete Proto30400902::default_instance_;
  delete Proto30400902_reflection_;
  delete Proto31400251::default_instance_;
  delete Proto31400251_reflection_;
  delete Proto31400252::default_instance_;
  delete Proto31400252_reflection_;
  delete Proto30100302::default_instance_;
  delete Proto30100302_reflection_;
  delete Proto31400019::default_instance_;
  delete Proto31400019_reflection_;
  delete Proto30400602::default_instance_;
  delete Proto30400602_reflection_;
  delete Proto30401001::default_instance_;
  delete Proto30401001_reflection_;
  delete Proto31400003::default_instance_;
  delete Proto31400003_reflection_;
  delete Proto30400006::default_instance_;
  delete Proto30400006_reflection_;
  delete Proto31400211::default_instance_;
  delete Proto31400211_reflection_;
  delete Proto31400112::default_instance_;
  delete Proto31400112_reflection_;
  delete Proto30810101::default_instance_;
  delete Proto30810101_reflection_;
  delete Proto30860101::default_instance_;
  delete Proto30860101_reflection_;
  delete Proto30200117::default_instance_;
  delete Proto30200117_reflection_;
  delete Proto31400013::default_instance_;
  delete Proto31400013_reflection_;
  delete Proto30400012::default_instance_;
  delete Proto30400012_reflection_;
  delete Proto32101101::default_instance_;
  delete Proto32101101_reflection_;
  delete Proto30400423::default_instance_;
  delete Proto30400423_reflection_;
  delete Proto31401401::default_instance_;
  delete Proto31401401_reflection_;
  delete Proto30400106::default_instance_;
  delete Proto30400106_reflection_;
  delete Proto31401402::default_instance_;
  delete Proto31401402_reflection_;
  delete Proto30400701::default_instance_;
  delete Proto30400701_reflection_;
  delete Proto31400113::default_instance_;
  delete Proto31400113_reflection_;
  delete Proto31400114::default_instance_;
  delete Proto31400114_reflection_;
  delete Proto31400116::default_instance_;
  delete Proto31400116_reflection_;
  delete Proto31400117::default_instance_;
  delete Proto31400117_reflection_;
  delete Proto31400118::default_instance_;
  delete Proto31400118_reflection_;
  delete Proto30200118::default_instance_;
  delete Proto30200118_reflection_;
  delete Proto31400261::default_instance_;
  delete Proto31400261_reflection_;
  delete Proto30400424::default_instance_;
  delete Proto30400424_reflection_;
  delete Proto31400115::default_instance_;
  delete Proto31400115_reflection_;
  delete Proto30400426::default_instance_;
  delete Proto30400426_reflection_;
  delete Proto30400427::default_instance_;
  delete Proto30400427_reflection_;
  delete Proto31400401::default_instance_;
  delete Proto31400401_reflection_;
  delete Proto31400120::default_instance_;
  delete Proto31400120_reflection_;
}

void protobuf_AddDesc_ProtoInner002_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::protobuf_AddDesc_ProtoInnerPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023ProtoInner002.proto\032\021ProtoPublic.proto"
    "\032\026ProtoInnerPublic.proto\"O\n\rProto3140030"
    "2\022\023\n\013league_name\030\001 \001(\t\022\024\n\014league_intro\030\002"
    " \001(\t\022\023\n\013create_type\030\003 \001(\005\"#\n\rProto314003"
    "04\022\022\n\nleague_lvl\030\001 \001(\005\"\225\001\n\rProto31400303"
    "\022\020\n\010buy_item\030\001 \001(\005\022\017\n\007buy_num\030\002 \001(\005\022\021\n\ts"
    "hop_type\030\003 \001(\005\022\021\n\tneed_type\030\004 \001(\005\022\023\n\013nee"
    "d_amount\030\005 \001(\005\022\021\n\tneed_item\030\006 \001(\005\022\023\n\013ope"
    "r_result\030\007 \001(\005\"$\n\rProto30200114\022\023\n\013role_"
    "id_set\030\001 \003(\003\"N\n\rProto30100801\022\020\n\010vip_typ"
    "e\030\001 \001(\005\022\026\n\016vip_start_time\030\002 \001(\005\022\023\n\013perio"
    "d_time\030\003 \001(\003\"6\n\rProto31400801\022\020\n\010vip_typ"
    "e\030\001 \001(\005\022\023\n\013period_time\030\002 \001(\003\"\237\002\n\rProto30"
    "400051\022\020\n\010scene_id\030\001 \001(\005\022\022\n\nenter_type\030\002"
    " \001(\005\022\025\n\rrequest_scene\030\003 \001(\005\022\017\n\007role_id\030\004"
    " \001(\003\022\024\n\014league_index\030\005 \001(\003\022\017\n\007camp_id\030\006 "
    "\001(\005\022\020\n\010space_id\030\007 \001(\005\022\022\n\nrole_level\030\010 \001("
    "\005\022\021\n\tboss_type\030\t \001(\005\022\021\n\tboss_sort\030\n \001(\005\022"
    "\r\n\005force\030\013 \001(\005\022\023\n\013league_name\030\014 \001(\t\022\024\n\014m"
    "ain_version\030\r \001(\t\022\023\n\013server_flag\030\016 \001(\t\"\213"
    "\001\n\rProto30400052\022\020\n\010scene_id\030\001 \001(\005\022\020\n\010sp"
    "ace_id\030\002 \001(\005\022\022\n\nscene_mode\030\003 \001(\005\022\022\n\nente"
    "r_type\030\004 \001(\005\022\r\n\005pos_x\030\005 \001(\005\022\r\n\005pos_y\030\006 \001"
    "(\005\022\020\n\010cur_save\030\007 \001(\005\"5\n\rProto30400421\022$\n"
    "\nleague_set\030\001 \003(\0132\020.ProtoSyncLeague\"%\n\rP"
    "roto30400422\022\024\n\014league_index\030\001 \001(\003\"b\n\rPr"
    "oto30400801\022\020\n\010vip_type\030\001 \001(\005\022\026\n\016vip_sta"
    "rt_time\030\002 \001(\005\022\024\n\014expired_time\030\003 \001(\005\022\021\n\ti"
    "s_notify\030\004 \001(\010\"Y\n\rProto30400601\022!\n\nshape"
    "_list\030\001 \003(\0132\r.ProtoPairObj\022\021\n\tno_notify\030"
    "\002 \001(\005\022\022\n\nweapon_lvl\030\003 \001(\005\"G\n\rProto314000"
    "18\022\025\n\ractivity_type\030\001 \001(\005\022\020\n\010sub_type\030\002 "
    "\001(\005\022\r\n\005value\030\003 \001(\005\"A\n\rProto31400231\022\016\n\006n"
    "pc_id\030\001 \001(\005\022\016\n\006recogn\030\002 \001(\005\022\020\n\010msg_body\030"
    "\003 \001(\014\"\263\003\n\rProto30400901\022\017\n\007role_id\030\001 \001(\003"
    "\022\023\n\013script_sort\030\002 \001(\005\022\023\n\013progress_id\030\003 \001"
    "(\003\022\020\n\010scene_id\030\004 \001(\005\022\017\n\007team_id\030\005 \001(\003\022\r\n"
    "\005level\030\006 \001(\005\022\022\n\nused_times\030\007 \001(\005\022\027\n\017used"
    "_times_tick\030\010 \001(\005\022\022\n\npass_piece\030\t \001(\005\022\024\n"
    "\014pass_chapter\030\n \001(\005\022\r\n\005piece\030\013 \001(\005\022\017\n\007ch"
    "apter\030\014 \001(\005\022\020\n\010vip_type\030\r \001(\005\022\030\n\020replace"
    "ments_set\030\016 \003(\003\022\022\n\nteamer_set\030\017 \003(\003\022\021\n\tb"
    "uy_times\030\020 \001(\005\022\022\n\nonline_sec\030\021 \001(\003\022\027\n\017ne"
    "ed_pack_space\030\022 \001(\005\022\024\n\014script_scene\030\023 \001("
    "\005\022\021\n\tcheer_num\030\024 \001(\005\022\025\n\rencourage_num\030\025 "
    "\001(\005\"\224\001\n\rProto30400902\022\023\n\013script_sort\030\001 \001"
    "(\005\022\021\n\tscript_id\030\002 \001(\005\022\020\n\010scene_id\030\003 \001(\005\022"
    "\017\n\007pixel_x\030\004 \001(\005\022\017\n\007pixel_y\030\005 \001(\005\022\022\n\nuse"
    "d_times\030\006 \001(\005\022\023\n\013progress_id\030\007 \001(\003\"\260\001\n\rP"
    "roto31400251\022\025\n\rreceiver_name\030\001 \001(\t\022\023\n\013r"
    "eceiver_id\030\002 \001(\003\022\021\n\tshop_type\030\003 \001(\005\022\017\n\007i"
    "tem_id\030\004 \001(\005\022\021\n\titem_bind\030\005 \001(\005\022\022\n\nbuy_a"
    "mount\030\006 \001(\005\022\022\n\nmoney_type\030\007 \001(\005\022\024\n\014money"
    "_amount\030\010 \001(\005\"\221\001\n\rProto31400252\022\021\n\tshop_"
    "type\030\001 \001(\005\022\017\n\007item_id\030\002 \001(\005\022\021\n\titem_bind"
    "\030\003 \001(\005\022\022\n\nbuy_amount\030\004 \001(\005\022\022\n\nmoney_type"
    "\030\005 \001(\005\022\024\n\014money_amount\030\006 \001(\005\022\013\n\003ret\030\007 \001("
    "\005\"6\n\rProto30100302\022\021\n\tcur_scene\030\001 \001(\005\022\022\n"
    "\nlast_scene\030\002 \001(\005\"U\n\rProto31400019\022\023\n\013fi"
    "ght_state\030\001 \001(\005\022\026\n\016fight_tick_sec\030\002 \001(\005\022"
    "\027\n\017fight_tick_usec\030\003 \001(\005\"7\n\rProto3040060"
    "2\022\021\n\tcur_label\030\001 \001(\005\022\023\n\013expire_tick\030\002 \001("
    "\003\"t\n\rProto30401001\022\024\n\014monster_type\030\001 \001(\005"
    "\022\026\n\016monster_amount\030\002 \001(\005\022\024\n\014monster_left"
    "\030\003 \001(\005\022\037\n\013award_items\030\004 \003(\0132\n.ProtoItem\""
    "\"\n\rProto31400003\022\021\n\tsync_flag\030\001 \001(\005\"7\n\rP"
    "roto30400006\022\021\n\tsync_flag\030\001 \001(\005\022\023\n\013finis"
    "h_type\030\002 \001(\005\"x\n\rProto31400211\022\022\n\nteam_in"
    "dex\030\001 \001(\005\022\021\n\tleader_id\030\002 \001(\003\022\022\n\nteamer_s"
    "et\030\003 \003(\003\022\027\n\017replacement_set\030\004 \003(\003\022\023\n\013tra"
    "vel_team\030\005 \001(\005\"/\n\rProto31400112\022\036\n\tbeast"
    "_set\030\001 \003(\0132\013.ProtoBeast\" \n\rProto30810101"
    "\022\017\n\007account\030\001 \001(\t\"N\n\rProto30860101\022\021\n\tro"
    "le_name\030\001 \001(\t\022\r\n\005level\030\002 \001(\005\022\013\n\003sex\030\003 \001("
    "\005\022\016\n\006career\030\004 \001(\005\"\222\001\n\rProto30200117\022\024\n\014s"
    "how_content\030\001 \001(\t\022\r\n\005color\030\002 \001(\005\022\024\n\014chan"
    "nel_type\030\003 \001(\005\022\023\n\013flaunt_type\030\004 \001(\005\022\017\n\007r"
    "ole_id\030\005 \001(\003\022\013\n\003msg\030\006 \001(\014\022\023\n\013bind_status"
    "\030\007 \001(\005\"\177\n\rProto31400013\022\036\n\tadd_money\030\001 \001"
    "(\0132\013.ProtoMoney\022\034\n\010add_item\030\002 \001(\0132\n.Prot"
    "oItem\022\017\n\007drop_id\030\003 \001(\003\022\017\n\007sort_id\030\004 \001(\005\022"
    "\016\n\006src_id\030\005 \001(\003\"5\n\rProto30400012\022\017\n\007drop"
    "_id\030\001 \001(\003\022\023\n\013result_flag\030\002 \001(\005\"\246\001\n\rProto"
    "32101101\022\021\n\trole_name\030\001 \001(\t\022\017\n\007account\030\002"
    " \001(\t\022\017\n\007role_id\030\003 \001(\003\022\r\n\005level\030\004 \001(\005\022\013\n\003"
    "sex\030\005 \001(\005\022\r\n\005agent\030\006 \001(\t\022\020\n\010platform\030\007 \001"
    "(\t\022\016\n\006market\030\010 \001(\005\022\023\n\013server_flag\030\t \001(\t\""
    ":\n\rProto30400423\022\024\n\014league_index\030\001 \001(\003\022\023"
    "\n\013league_name\030\002 \001(\t\"\316\001\n\rProto31401401\022\020\n"
    "\010cycle_id\030\001 \001(\005\022\023\n\013award_index\030\002 \001(\005\022\026\n\016"
    "check_in_point\030\003 \001(\005\022\021\n\tlast_time\030\004 \001(\005\022"
    "\022\n\nshow_point\030\005 \001(\005\022\r\n\005popup\030\006 \001(\005\022\024\n\014ch"
    "arge_money\030\007 \001(\005\022\031\n\021check_total_index\030\010 "
    "\001(\005\022\027\n\017total_last_time\030\t \001(\005\"\251\004\n\rProto30"
    "400106\022\021\n\tscript_id\030\001 \001(\005\022\023\n\013script_sort"
    "\030\002 \001(\005\022\022\n\nprev_scene\030\003 \001(\005\022\024\n\014prev_pixel"
    "_x\030\004 \001(\005\022\024\n\014prev_pixel_y\030\005 \001(\005\022)\n\rscript"
    "_record\030\006 \003(\0132\022.ProtoScriptRecord\022%\n\013scr"
    "ipt_type\030\007 \003(\0132\020.ProtoScriptType\022.\n\016spec"
    "ial_record\030\010 \003(\0132\026.ProtoScriptFirstAward"
    "\022\022\n\npass_piece\030\t \001(\005\022\024\n\014pass_chapter\030\n \001"
    "(\005\022#\n\npiece_info\030\013 \003(\0132\017.ProtoPieceInfo\022"
    "\024\n\014first_script\030\014 \003(\005\022\032\n\022piece_star_awar"
    "ded\030\r \003(\005\022\022\n\nprev_blood\030\016 \001(\005\022\022\n\nprev_ma"
    "gic\030\017 \001(\005\022\021\n\tmax_floor\030\020 \001(\005\022\027\n\017trvl_tot"
    "al_pass\030\021 \001(\005\022#\n\nlegend_top\030\022 \001(\0132\017.Prot"
    "oLegendTop\022\"\n\tsword_top\030\023 \001(\0132\017.ProtoLeg"
    "endTop\022\020\n\010skill_id\030\024 \001(\005\"[\n\rProto3140140"
    "2\022\026\n\016liveness_point\030\001 \001(\005\022\032\n\022received_aw"
    "ard_idx\030\002 \003(\005\022\026\n\016finished_tasks\030\003 \003(\005\"x\n"
    "\rProto30400701\022\022\n\nteam_index\030\001 \001(\005\022\021\n\tle"
    "ader_id\030\002 \001(\003\022\022\n\nteamer_set\030\003 \003(\003\022\027\n\017rep"
    "lacement_set\030\004 \003(\003\022\023\n\013travel_team\030\005 \001(\005\""
    "\353\004\n\rProto31400113\022\020\n\010vip_type\030\001 \001(\005\022\026\n\016v"
    "ip_start_time\030\002 \001(\005\022\023\n\013period_time\030\003 \001(\005"
    "\022\022\n\nbless_tick\030\004 \001(\005\022\021\n\tgift_tick\030\005 \001(\005\022"
    "\023\n\013flight_tick\030\006 \001(\005\022\023\n\013flight_left\030\007 \001("
    "\005\022\031\n\021divine_reset_tick\030\010 \001(\005\022\031\n\021divine_r"
    "eset_left\030\t \001(\005\022\027\n\017divine_get_tick\030\n \001(\005"
    "\022\027\n\017divine_get_left\030\013 \001(\005\022\030\n\020dg_pra_cool"
    "_tick\030\014 \001(\005\022\030\n\020dg_pra_cool_left\030\r \001(\005\022\023\n"
    "\013need_notify\030\016 \001(\010\022\027\n\017is_acti_fashion\030\017 "
    "\001(\010\022&\n\017vip_fashion_set\030\020 \003(\0132\r.ProtoPair"
    "Obj\022\027\n\017before_gift_vip\030\021 \001(\005\022\036\n\007is_gven\030"
    "\022 \003(\0132\r.ProtoPairObj\022\035\n\006weekly\030\023 \003(\0132\r.P"
    "rotoPairObj\022\024\n\014weekly_given\030\024 \001(\005\022\027\n\017is_"
    "given_weekly\030\025 \001(\005\022\023\n\013weekly_tick\030\026 \001(\003\022"
    "\022\n\ncheck_flag\030\027 \001(\005\022\020\n\010des_mail\030\030 \001(\t\022\026\n"
    "\016super_vip_type\030\031 \001(\005\"\213\003\n\rProto31400114\022"
    "\020\n\010max_time\030\001 \001(\005\022\021\n\tleft_time\030\002 \001(\005\022\024\n\014"
    "monster_type\030\003 \001(\005\022\"\n\013divine_cost\030\004 \003(\0132"
    "\r.ProtoPairObj\022#\n\014divine_spend\030\005 \003(\0132\r.P"
    "rotoPairObj\022\036\n\nfill_items\030\006 \003(\0132\n.ProtoI"
    "tem\022\"\n\016obtained_items\030\007 \003(\0132\n.ProtoItem\022"
    "\026\n\016monster_amount\030\010 \001(\005\022\022\n\nluck_value\030\t "
    "\001(\005\022\022\n\nopen_times\030\n \001(\005\022\r\n\005savvy\030\013 \001(\005\022\022"
    "\n\nfree_state\030\014 \001(\005\022\023\n\013box_is_open\030\r \001(\005\022"
    "\032\n\022box_next_free_time\030\016 \001(\003\022\036\n\026second_eq"
    "uip_decompose\030\017 \001(\005\"<\n\rProto31400116\022+\n\024"
    "activity_notify_info\030\001 \003(\0132\r.ProtoPairOb"
    "j\"F\n\rProto31400117\022\017\n\007team_id\030\001 \001(\005\022\021\n\tl"
    "eader_id\030\002 \001(\003\022\021\n\tteamer_id\030\003 \003(\003\"\233\001\n\rPr"
    "oto31400118\022\r\n\005stage\030\001 \001(\005\022\021\n\tpre_stage\030"
    "\002 \001(\005\022\025\n\rreceived_tick\030\003 \001(\003\022\025\n\rreceived"
    "_mark\030\004 \001(\005\022\022\n\nlogin_time\030\005 \001(\003\022\022\n\nonlin"
    "e_sum\030\006 \001(\003\022\022\n\naward_list\030\007 \003(\005\"j\n\rProto"
    "30200118\022\021\n\tplayer_id\030\001 \001(\003\022\024\n\014chat_chan"
    "nel\030\002 \001(\005\022\017\n\007team_id\030\003 \001(\005\022\021\n\tleague_id\030"
    "\004 \001(\003\022\014\n\004opra\030\005 \001(\005\"z\n\rProto31400261\022\016\n\006"
    "recogn\030\001 \001(\005\022\017\n\007self_id\030\002 \001(\003\022\020\n\010other_i"
    "d\030\003 \001(\003\022\020\n\010beast_id\030\004 \001(\003\022\020\n\010msg_body\030\005 "
    "\001(\014\022\022\n\nquery_type\030\006 \001(\005\"\350\001\n\rProto3040042"
    "4\022\017\n\007role_id\030\001 \001(\003\022\021\n\trole_name\030\002 \001(\t\022\020\n"
    "\010role_sex\030\003 \001(\005\022\022\n\nrole_level\030\004 \001(\005\022\022\n\nr"
    "ole_force\030\005 \001(\005\022\021\n\tleague_id\030\006 \001(\003\022\023\n\013le"
    "ague_name\030\007 \001(\t\022\024\n\014league_force\030\010 \001(\005\022\021\n"
    "\tleader_id\030\t \001(\003\022\023\n\013leader_name\030\n \001(\t\022\023\n"
    "\013role_career\030\013 \001(\005\"\346\002\n\rProto31400115\022\023\n\013"
    "update_tick\030\001 \001(\005\022\024\n\014vip_type_rec\030\002 \001(\005\022"
    "\026\n\016vip_start_time\030\003 \001(\005\022\030\n\020vip_expried_t"
    "ime\030\004 \001(\005\022#\n\014level_record\030\005 \003(\0132\r.ProtoP"
    "airObj\022!\n\nvip_record\030\006 \003(\0132\r.ProtoPairOb"
    "j\0222\n\022exp_restore_record\030\007 \003(\0132\026.ProtoExp"
    "RestoreRecord\0222\n\021script_stage_info\030\010 \003(\013"
    "2\027.ProtoERScriptStageInfo\022#\n\013pre_act_map"
    "\030\t \003(\0132\016.ProtoThreeObj\022#\n\013now_act_map\030\n "
    "\003(\0132\016.ProtoThreeObj\"n\n\rProto30400426\022\016\n\006"
    "win_id\030\001 \001(\003\022\017\n\007lose_id\030\002 \001(\003\022\023\n\013fight_s"
    "tate\030\003 \001(\005\022\022\n\nwin_is_bot\030\004 \001(\005\022\023\n\013lose_i"
    "s_bot\030\005 \001(\005\"\363\001\n\rProto30400427\022\025\n\rmartial"
    "_index\030\001 \001(\005\022\020\n\010first_id\030\002 \001(\003\022\022\n\nfirst_"
    "name\030\003 \001(\t\022\021\n\tfirst_sex\030\004 \001(\005\022\023\n\013first_l"
    "evel\030\005 \001(\005\022\021\n\tsecond_id\030\006 \001(\003\022\023\n\013second_"
    "name\030\007 \001(\t\022\022\n\nsecond_sex\030\010 \001(\005\022\024\n\014second"
    "_level\030\t \001(\005\022\024\n\014first_career\030\n \001(\005\022\025\n\rse"
    "cond_career\030\013 \001(\005\"\?\n\rProto31400401\022\020\n\010ev"
    "ent_id\030\001 \001(\005\022\r\n\005times\030\002 \001(\005\022\r\n\005value\030\003 \001"
    "(\005\"\227\001\n\rProto31400120\022\023\n\013lucky_value\030\001 \001("
    "\005\022(\n\013magical_map\030\002 \003(\0132\023.ProtoMagicalPol"
    "ish\022\023\n\013smelt_level\030\003 \001(\005\022\021\n\tsmelt_exp\030\004 "
    "\001(\005\022\021\n\trecommend\030\005 \001(\005\022\014\n\004open\030\006 \001(\005", 7236);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoInner002.proto", &protobuf_RegisterTypes);
  Proto31400302::default_instance_ = new Proto31400302();
  Proto31400304::default_instance_ = new Proto31400304();
  Proto31400303::default_instance_ = new Proto31400303();
  Proto30200114::default_instance_ = new Proto30200114();
  Proto30100801::default_instance_ = new Proto30100801();
  Proto31400801::default_instance_ = new Proto31400801();
  Proto30400051::default_instance_ = new Proto30400051();
  Proto30400052::default_instance_ = new Proto30400052();
  Proto30400421::default_instance_ = new Proto30400421();
  Proto30400422::default_instance_ = new Proto30400422();
  Proto30400801::default_instance_ = new Proto30400801();
  Proto30400601::default_instance_ = new Proto30400601();
  Proto31400018::default_instance_ = new Proto31400018();
  Proto31400231::default_instance_ = new Proto31400231();
  Proto30400901::default_instance_ = new Proto30400901();
  Proto30400902::default_instance_ = new Proto30400902();
  Proto31400251::default_instance_ = new Proto31400251();
  Proto31400252::default_instance_ = new Proto31400252();
  Proto30100302::default_instance_ = new Proto30100302();
  Proto31400019::default_instance_ = new Proto31400019();
  Proto30400602::default_instance_ = new Proto30400602();
  Proto30401001::default_instance_ = new Proto30401001();
  Proto31400003::default_instance_ = new Proto31400003();
  Proto30400006::default_instance_ = new Proto30400006();
  Proto31400211::default_instance_ = new Proto31400211();
  Proto31400112::default_instance_ = new Proto31400112();
  Proto30810101::default_instance_ = new Proto30810101();
  Proto30860101::default_instance_ = new Proto30860101();
  Proto30200117::default_instance_ = new Proto30200117();
  Proto31400013::default_instance_ = new Proto31400013();
  Proto30400012::default_instance_ = new Proto30400012();
  Proto32101101::default_instance_ = new Proto32101101();
  Proto30400423::default_instance_ = new Proto30400423();
  Proto31401401::default_instance_ = new Proto31401401();
  Proto30400106::default_instance_ = new Proto30400106();
  Proto31401402::default_instance_ = new Proto31401402();
  Proto30400701::default_instance_ = new Proto30400701();
  Proto31400113::default_instance_ = new Proto31400113();
  Proto31400114::default_instance_ = new Proto31400114();
  Proto31400116::default_instance_ = new Proto31400116();
  Proto31400117::default_instance_ = new Proto31400117();
  Proto31400118::default_instance_ = new Proto31400118();
  Proto30200118::default_instance_ = new Proto30200118();
  Proto31400261::default_instance_ = new Proto31400261();
  Proto30400424::default_instance_ = new Proto30400424();
  Proto31400115::default_instance_ = new Proto31400115();
  Proto30400426::default_instance_ = new Proto30400426();
  Proto30400427::default_instance_ = new Proto30400427();
  Proto31400401::default_instance_ = new Proto31400401();
  Proto31400120::default_instance_ = new Proto31400120();
  Proto31400302::default_instance_->InitAsDefaultInstance();
  Proto31400304::default_instance_->InitAsDefaultInstance();
  Proto31400303::default_instance_->InitAsDefaultInstance();
  Proto30200114::default_instance_->InitAsDefaultInstance();
  Proto30100801::default_instance_->InitAsDefaultInstance();
  Proto31400801::default_instance_->InitAsDefaultInstance();
  Proto30400051::default_instance_->InitAsDefaultInstance();
  Proto30400052::default_instance_->InitAsDefaultInstance();
  Proto30400421::default_instance_->InitAsDefaultInstance();
  Proto30400422::default_instance_->InitAsDefaultInstance();
  Proto30400801::default_instance_->InitAsDefaultInstance();
  Proto30400601::default_instance_->InitAsDefaultInstance();
  Proto31400018::default_instance_->InitAsDefaultInstance();
  Proto31400231::default_instance_->InitAsDefaultInstance();
  Proto30400901::default_instance_->InitAsDefaultInstance();
  Proto30400902::default_instance_->InitAsDefaultInstance();
  Proto31400251::default_instance_->InitAsDefaultInstance();
  Proto31400252::default_instance_->InitAsDefaultInstance();
  Proto30100302::default_instance_->InitAsDefaultInstance();
  Proto31400019::default_instance_->InitAsDefaultInstance();
  Proto30400602::default_instance_->InitAsDefaultInstance();
  Proto30401001::default_instance_->InitAsDefaultInstance();
  Proto31400003::default_instance_->InitAsDefaultInstance();
  Proto30400006::default_instance_->InitAsDefaultInstance();
  Proto31400211::default_instance_->InitAsDefaultInstance();
  Proto31400112::default_instance_->InitAsDefaultInstance();
  Proto30810101::default_instance_->InitAsDefaultInstance();
  Proto30860101::default_instance_->InitAsDefaultInstance();
  Proto30200117::default_instance_->InitAsDefaultInstance();
  Proto31400013::default_instance_->InitAsDefaultInstance();
  Proto30400012::default_instance_->InitAsDefaultInstance();
  Proto32101101::default_instance_->InitAsDefaultInstance();
  Proto30400423::default_instance_->InitAsDefaultInstance();
  Proto31401401::default_instance_->InitAsDefaultInstance();
  Proto30400106::default_instance_->InitAsDefaultInstance();
  Proto31401402::default_instance_->InitAsDefaultInstance();
  Proto30400701::default_instance_->InitAsDefaultInstance();
  Proto31400113::default_instance_->InitAsDefaultInstance();
  Proto31400114::default_instance_->InitAsDefaultInstance();
  Proto31400116::default_instance_->InitAsDefaultInstance();
  Proto31400117::default_instance_->InitAsDefaultInstance();
  Proto31400118::default_instance_->InitAsDefaultInstance();
  Proto30200118::default_instance_->InitAsDefaultInstance();
  Proto31400261::default_instance_->InitAsDefaultInstance();
  Proto30400424::default_instance_->InitAsDefaultInstance();
  Proto31400115::default_instance_->InitAsDefaultInstance();
  Proto30400426::default_instance_->InitAsDefaultInstance();
  Proto30400427::default_instance_->InitAsDefaultInstance();
  Proto31400401::default_instance_->InitAsDefaultInstance();
  Proto31400120::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoInner002_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoInner002_2eproto {
  StaticDescriptorInitializer_ProtoInner002_2eproto() {
    protobuf_AddDesc_ProtoInner002_2eproto();
  }
} static_descriptor_initializer_ProtoInner002_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto31400302::kLeagueNameFieldNumber;
const int Proto31400302::kLeagueIntroFieldNumber;
const int Proto31400302::kCreateTypeFieldNumber;
#endif  // !_MSC_VER

Proto31400302::Proto31400302()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400302::InitAsDefaultInstance() {
}

Proto31400302::Proto31400302(const Proto31400302& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400302::SharedCtor() {
  _cached_size_ = 0;
  league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  league_intro_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  create_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400302::~Proto31400302() {
  SharedDtor();
}

void Proto31400302::SharedDtor() {
  if (league_name_ != &::google::protobuf::internal::kEmptyString) {
    delete league_name_;
  }
  if (league_intro_ != &::google::protobuf::internal::kEmptyString) {
    delete league_intro_;
  }
  if (this != default_instance_) {
  }
}

void Proto31400302::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400302::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400302_descriptor_;
}

const Proto31400302& Proto31400302::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400302* Proto31400302::default_instance_ = NULL;

Proto31400302* Proto31400302::New() const {
  return new Proto31400302;
}

void Proto31400302::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_league_name()) {
      if (league_name_ != &::google::protobuf::internal::kEmptyString) {
        league_name_->clear();
      }
    }
    if (has_league_intro()) {
      if (league_intro_ != &::google::protobuf::internal::kEmptyString) {
        league_intro_->clear();
      }
    }
    create_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400302::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string league_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_league_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->league_name().data(), this->league_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_league_intro;
        break;
      }
      
      // optional string league_intro = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_intro:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_league_intro()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->league_intro().data(), this->league_intro().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_create_type;
        break;
      }
      
      // optional int32 create_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_create_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &create_type_)));
          set_has_create_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400302::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string league_name = 1;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->league_name(), output);
  }
  
  // optional string league_intro = 2;
  if (has_league_intro()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_intro().data(), this->league_intro().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->league_intro(), output);
  }
  
  // optional int32 create_type = 3;
  if (has_create_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->create_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400302::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string league_name = 1;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->league_name(), target);
  }
  
  // optional string league_intro = 2;
  if (has_league_intro()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_intro().data(), this->league_intro().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->league_intro(), target);
  }
  
  // optional int32 create_type = 3;
  if (has_create_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->create_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400302::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string league_name = 1;
    if (has_league_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->league_name());
    }
    
    // optional string league_intro = 2;
    if (has_league_intro()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->league_intro());
    }
    
    // optional int32 create_type = 3;
    if (has_create_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->create_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400302::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400302* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400302*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400302::MergeFrom(const Proto31400302& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_name()) {
      set_league_name(from.league_name());
    }
    if (from.has_league_intro()) {
      set_league_intro(from.league_intro());
    }
    if (from.has_create_type()) {
      set_create_type(from.create_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400302::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400302::CopyFrom(const Proto31400302& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400302::IsInitialized() const {
  
  return true;
}

void Proto31400302::Swap(Proto31400302* other) {
  if (other != this) {
    std::swap(league_name_, other->league_name_);
    std::swap(league_intro_, other->league_intro_);
    std::swap(create_type_, other->create_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400302::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400302_descriptor_;
  metadata.reflection = Proto31400302_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400304::kLeagueLvlFieldNumber;
#endif  // !_MSC_VER

Proto31400304::Proto31400304()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400304::InitAsDefaultInstance() {
}

Proto31400304::Proto31400304(const Proto31400304& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400304::SharedCtor() {
  _cached_size_ = 0;
  league_lvl_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400304::~Proto31400304() {
  SharedDtor();
}

void Proto31400304::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400304::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400304::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400304_descriptor_;
}

const Proto31400304& Proto31400304::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400304* Proto31400304::default_instance_ = NULL;

Proto31400304* Proto31400304::New() const {
  return new Proto31400304;
}

void Proto31400304::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_lvl_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400304::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 league_lvl = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &league_lvl_)));
          set_has_league_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400304::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 league_lvl = 1;
  if (has_league_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->league_lvl(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400304::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 league_lvl = 1;
  if (has_league_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->league_lvl(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400304::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 league_lvl = 1;
    if (has_league_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->league_lvl());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400304::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400304* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400304*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400304::MergeFrom(const Proto31400304& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_lvl()) {
      set_league_lvl(from.league_lvl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400304::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400304::CopyFrom(const Proto31400304& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400304::IsInitialized() const {
  
  return true;
}

void Proto31400304::Swap(Proto31400304* other) {
  if (other != this) {
    std::swap(league_lvl_, other->league_lvl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400304::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400304_descriptor_;
  metadata.reflection = Proto31400304_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400303::kBuyItemFieldNumber;
const int Proto31400303::kBuyNumFieldNumber;
const int Proto31400303::kShopTypeFieldNumber;
const int Proto31400303::kNeedTypeFieldNumber;
const int Proto31400303::kNeedAmountFieldNumber;
const int Proto31400303::kNeedItemFieldNumber;
const int Proto31400303::kOperResultFieldNumber;
#endif  // !_MSC_VER

Proto31400303::Proto31400303()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400303::InitAsDefaultInstance() {
}

Proto31400303::Proto31400303(const Proto31400303& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400303::SharedCtor() {
  _cached_size_ = 0;
  buy_item_ = 0;
  buy_num_ = 0;
  shop_type_ = 0;
  need_type_ = 0;
  need_amount_ = 0;
  need_item_ = 0;
  oper_result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400303::~Proto31400303() {
  SharedDtor();
}

void Proto31400303::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400303::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400303::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400303_descriptor_;
}

const Proto31400303& Proto31400303::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400303* Proto31400303::default_instance_ = NULL;

Proto31400303* Proto31400303::New() const {
  return new Proto31400303;
}

void Proto31400303::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    buy_item_ = 0;
    buy_num_ = 0;
    shop_type_ = 0;
    need_type_ = 0;
    need_amount_ = 0;
    need_item_ = 0;
    oper_result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400303::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 buy_item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_item_)));
          set_has_buy_item();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_buy_num;
        break;
      }
      
      // optional int32 buy_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_num_)));
          set_has_buy_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_shop_type;
        break;
      }
      
      // optional int32 shop_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shop_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_type_)));
          set_has_shop_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_need_type;
        break;
      }
      
      // optional int32 need_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_need_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_type_)));
          set_has_need_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_need_amount;
        break;
      }
      
      // optional int32 need_amount = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_need_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_amount_)));
          set_has_need_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_need_item;
        break;
      }
      
      // optional int32 need_item = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_need_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_item_)));
          set_has_need_item();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_oper_result;
        break;
      }
      
      // optional int32 oper_result = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_oper_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oper_result_)));
          set_has_oper_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400303::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 buy_item = 1;
  if (has_buy_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->buy_item(), output);
  }
  
  // optional int32 buy_num = 2;
  if (has_buy_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->buy_num(), output);
  }
  
  // optional int32 shop_type = 3;
  if (has_shop_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->shop_type(), output);
  }
  
  // optional int32 need_type = 4;
  if (has_need_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->need_type(), output);
  }
  
  // optional int32 need_amount = 5;
  if (has_need_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->need_amount(), output);
  }
  
  // optional int32 need_item = 6;
  if (has_need_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->need_item(), output);
  }
  
  // optional int32 oper_result = 7;
  if (has_oper_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->oper_result(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400303::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 buy_item = 1;
  if (has_buy_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->buy_item(), target);
  }
  
  // optional int32 buy_num = 2;
  if (has_buy_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->buy_num(), target);
  }
  
  // optional int32 shop_type = 3;
  if (has_shop_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->shop_type(), target);
  }
  
  // optional int32 need_type = 4;
  if (has_need_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->need_type(), target);
  }
  
  // optional int32 need_amount = 5;
  if (has_need_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->need_amount(), target);
  }
  
  // optional int32 need_item = 6;
  if (has_need_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->need_item(), target);
  }
  
  // optional int32 oper_result = 7;
  if (has_oper_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->oper_result(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400303::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 buy_item = 1;
    if (has_buy_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_item());
    }
    
    // optional int32 buy_num = 2;
    if (has_buy_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_num());
    }
    
    // optional int32 shop_type = 3;
    if (has_shop_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop_type());
    }
    
    // optional int32 need_type = 4;
    if (has_need_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->need_type());
    }
    
    // optional int32 need_amount = 5;
    if (has_need_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->need_amount());
    }
    
    // optional int32 need_item = 6;
    if (has_need_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->need_item());
    }
    
    // optional int32 oper_result = 7;
    if (has_oper_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oper_result());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400303::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400303* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400303*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400303::MergeFrom(const Proto31400303& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buy_item()) {
      set_buy_item(from.buy_item());
    }
    if (from.has_buy_num()) {
      set_buy_num(from.buy_num());
    }
    if (from.has_shop_type()) {
      set_shop_type(from.shop_type());
    }
    if (from.has_need_type()) {
      set_need_type(from.need_type());
    }
    if (from.has_need_amount()) {
      set_need_amount(from.need_amount());
    }
    if (from.has_need_item()) {
      set_need_item(from.need_item());
    }
    if (from.has_oper_result()) {
      set_oper_result(from.oper_result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400303::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400303::CopyFrom(const Proto31400303& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400303::IsInitialized() const {
  
  return true;
}

void Proto31400303::Swap(Proto31400303* other) {
  if (other != this) {
    std::swap(buy_item_, other->buy_item_);
    std::swap(buy_num_, other->buy_num_);
    std::swap(shop_type_, other->shop_type_);
    std::swap(need_type_, other->need_type_);
    std::swap(need_amount_, other->need_amount_);
    std::swap(need_item_, other->need_item_);
    std::swap(oper_result_, other->oper_result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400303::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400303_descriptor_;
  metadata.reflection = Proto31400303_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30200114::kRoleIdSetFieldNumber;
#endif  // !_MSC_VER

Proto30200114::Proto30200114()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30200114::InitAsDefaultInstance() {
}

Proto30200114::Proto30200114(const Proto30200114& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30200114::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30200114::~Proto30200114() {
  SharedDtor();
}

void Proto30200114::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30200114::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30200114::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30200114_descriptor_;
}

const Proto30200114& Proto30200114::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30200114* Proto30200114::default_instance_ = NULL;

Proto30200114* Proto30200114::New() const {
  return new Proto30200114;
}

void Proto30200114::Clear() {
  role_id_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30200114::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 role_id_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_role_id_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_id_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_role_id_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30200114::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 role_id_set = 1;
  for (int i = 0; i < this->role_id_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->role_id_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30200114::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 role_id_set = 1;
  for (int i = 0; i < this->role_id_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->role_id_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30200114::ByteSize() const {
  int total_size = 0;
  
  // repeated int64 role_id_set = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_id_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_id_set(i));
    }
    total_size += 1 * this->role_id_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30200114::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30200114* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30200114*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30200114::MergeFrom(const Proto30200114& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_id_set_.MergeFrom(from.role_id_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30200114::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30200114::CopyFrom(const Proto30200114& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30200114::IsInitialized() const {
  
  return true;
}

void Proto30200114::Swap(Proto30200114* other) {
  if (other != this) {
    role_id_set_.Swap(&other->role_id_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30200114::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30200114_descriptor_;
  metadata.reflection = Proto30200114_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100801::kVipTypeFieldNumber;
const int Proto30100801::kVipStartTimeFieldNumber;
const int Proto30100801::kPeriodTimeFieldNumber;
#endif  // !_MSC_VER

Proto30100801::Proto30100801()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100801::InitAsDefaultInstance() {
}

Proto30100801::Proto30100801(const Proto30100801& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100801::SharedCtor() {
  _cached_size_ = 0;
  vip_type_ = 0;
  vip_start_time_ = 0;
  period_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100801::~Proto30100801() {
  SharedDtor();
}

void Proto30100801::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100801::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100801::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100801_descriptor_;
}

const Proto30100801& Proto30100801::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30100801* Proto30100801::default_instance_ = NULL;

Proto30100801* Proto30100801::New() const {
  return new Proto30100801;
}

void Proto30100801::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    vip_type_ = 0;
    vip_start_time_ = 0;
    period_time_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100801::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 vip_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_type_)));
          set_has_vip_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_vip_start_time;
        break;
      }
      
      // optional int32 vip_start_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_start_time_)));
          set_has_vip_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_period_time;
        break;
      }
      
      // optional int64 period_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_period_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &period_time_)));
          set_has_period_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100801::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 vip_type = 1;
  if (has_vip_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vip_type(), output);
  }
  
  // optional int32 vip_start_time = 2;
  if (has_vip_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vip_start_time(), output);
  }
  
  // optional int64 period_time = 3;
  if (has_period_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->period_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100801::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 vip_type = 1;
  if (has_vip_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->vip_type(), target);
  }
  
  // optional int32 vip_start_time = 2;
  if (has_vip_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vip_start_time(), target);
  }
  
  // optional int64 period_time = 3;
  if (has_period_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->period_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100801::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 vip_type = 1;
    if (has_vip_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_type());
    }
    
    // optional int32 vip_start_time = 2;
    if (has_vip_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_start_time());
    }
    
    // optional int64 period_time = 3;
    if (has_period_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->period_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100801::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100801* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100801*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100801::MergeFrom(const Proto30100801& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_vip_type()) {
      set_vip_type(from.vip_type());
    }
    if (from.has_vip_start_time()) {
      set_vip_start_time(from.vip_start_time());
    }
    if (from.has_period_time()) {
      set_period_time(from.period_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100801::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100801::CopyFrom(const Proto30100801& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100801::IsInitialized() const {
  
  return true;
}

void Proto30100801::Swap(Proto30100801* other) {
  if (other != this) {
    std::swap(vip_type_, other->vip_type_);
    std::swap(vip_start_time_, other->vip_start_time_);
    std::swap(period_time_, other->period_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100801::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100801_descriptor_;
  metadata.reflection = Proto30100801_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400801::kVipTypeFieldNumber;
const int Proto31400801::kPeriodTimeFieldNumber;
#endif  // !_MSC_VER

Proto31400801::Proto31400801()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400801::InitAsDefaultInstance() {
}

Proto31400801::Proto31400801(const Proto31400801& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400801::SharedCtor() {
  _cached_size_ = 0;
  vip_type_ = 0;
  period_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400801::~Proto31400801() {
  SharedDtor();
}

void Proto31400801::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400801::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400801::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400801_descriptor_;
}

const Proto31400801& Proto31400801::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400801* Proto31400801::default_instance_ = NULL;

Proto31400801* Proto31400801::New() const {
  return new Proto31400801;
}

void Proto31400801::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    vip_type_ = 0;
    period_time_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400801::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 vip_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_type_)));
          set_has_vip_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_period_time;
        break;
      }
      
      // optional int64 period_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_period_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &period_time_)));
          set_has_period_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400801::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 vip_type = 1;
  if (has_vip_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vip_type(), output);
  }
  
  // optional int64 period_time = 2;
  if (has_period_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->period_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400801::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 vip_type = 1;
  if (has_vip_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->vip_type(), target);
  }
  
  // optional int64 period_time = 2;
  if (has_period_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->period_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400801::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 vip_type = 1;
    if (has_vip_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_type());
    }
    
    // optional int64 period_time = 2;
    if (has_period_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->period_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400801::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400801* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400801*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400801::MergeFrom(const Proto31400801& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_vip_type()) {
      set_vip_type(from.vip_type());
    }
    if (from.has_period_time()) {
      set_period_time(from.period_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400801::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400801::CopyFrom(const Proto31400801& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400801::IsInitialized() const {
  
  return true;
}

void Proto31400801::Swap(Proto31400801* other) {
  if (other != this) {
    std::swap(vip_type_, other->vip_type_);
    std::swap(period_time_, other->period_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400801::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400801_descriptor_;
  metadata.reflection = Proto31400801_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400051::kSceneIdFieldNumber;
const int Proto30400051::kEnterTypeFieldNumber;
const int Proto30400051::kRequestSceneFieldNumber;
const int Proto30400051::kRoleIdFieldNumber;
const int Proto30400051::kLeagueIndexFieldNumber;
const int Proto30400051::kCampIdFieldNumber;
const int Proto30400051::kSpaceIdFieldNumber;
const int Proto30400051::kRoleLevelFieldNumber;
const int Proto30400051::kBossTypeFieldNumber;
const int Proto30400051::kBossSortFieldNumber;
const int Proto30400051::kForceFieldNumber;
const int Proto30400051::kLeagueNameFieldNumber;
const int Proto30400051::kMainVersionFieldNumber;
const int Proto30400051::kServerFlagFieldNumber;
#endif  // !_MSC_VER

Proto30400051::Proto30400051()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400051::InitAsDefaultInstance() {
}

Proto30400051::Proto30400051(const Proto30400051& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400051::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  enter_type_ = 0;
  request_scene_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  league_index_ = GOOGLE_LONGLONG(0);
  camp_id_ = 0;
  space_id_ = 0;
  role_level_ = 0;
  boss_type_ = 0;
  boss_sort_ = 0;
  force_ = 0;
  league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  main_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  server_flag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400051::~Proto30400051() {
  SharedDtor();
}

void Proto30400051::SharedDtor() {
  if (league_name_ != &::google::protobuf::internal::kEmptyString) {
    delete league_name_;
  }
  if (main_version_ != &::google::protobuf::internal::kEmptyString) {
    delete main_version_;
  }
  if (server_flag_ != &::google::protobuf::internal::kEmptyString) {
    delete server_flag_;
  }
  if (this != default_instance_) {
  }
}

void Proto30400051::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400051::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400051_descriptor_;
}

const Proto30400051& Proto30400051::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30400051* Proto30400051::default_instance_ = NULL;

Proto30400051* Proto30400051::New() const {
  return new Proto30400051;
}

void Proto30400051::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    enter_type_ = 0;
    request_scene_ = 0;
    role_id_ = GOOGLE_LONGLONG(0);
    league_index_ = GOOGLE_LONGLONG(0);
    camp_id_ = 0;
    space_id_ = 0;
    role_level_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    boss_type_ = 0;
    boss_sort_ = 0;
    force_ = 0;
    if (has_league_name()) {
      if (league_name_ != &::google::protobuf::internal::kEmptyString) {
        league_name_->clear();
      }
    }
    if (has_main_version()) {
      if (main_version_ != &::google::protobuf::internal::kEmptyString) {
        main_version_->clear();
      }
    }
    if (has_server_flag()) {
      if (server_flag_ != &::google::protobuf::internal::kEmptyString) {
        server_flag_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400051::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_enter_type;
        break;
      }
      
      // optional int32 enter_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_enter_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enter_type_)));
          set_has_enter_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_request_scene;
        break;
      }
      
      // optional int32 request_scene = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_request_scene:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &request_scene_)));
          set_has_request_scene();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_league_index;
        break;
      }
      
      // optional int64 league_index = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_index_)));
          set_has_league_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_camp_id;
        break;
      }
      
      // optional int32 camp_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_camp_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &camp_id_)));
          set_has_camp_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_space_id;
        break;
      }
      
      // optional int32 space_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_space_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &space_id_)));
          set_has_space_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_role_level;
        break;
      }
      
      // optional int32 role_level = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_level_)));
          set_has_role_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_boss_type;
        break;
      }
      
      // optional int32 boss_type = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_boss_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boss_type_)));
          set_has_boss_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_boss_sort;
        break;
      }
      
      // optional int32 boss_sort = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_boss_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boss_sort_)));
          set_has_boss_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_force;
        break;
      }
      
      // optional int32 force = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_league_name;
        break;
      }
      
      // optional string league_name = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_league_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->league_name().data(), this->league_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_main_version;
        break;
      }
      
      // optional string main_version = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_main_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_main_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->main_version().data(), this->main_version().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_server_flag;
        break;
      }
      
      // optional string server_flag = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_server_flag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_flag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->server_flag().data(), this->server_flag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400051::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 enter_type = 2;
  if (has_enter_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->enter_type(), output);
  }
  
  // optional int32 request_scene = 3;
  if (has_request_scene()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->request_scene(), output);
  }
  
  // optional int64 role_id = 4;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->role_id(), output);
  }
  
  // optional int64 league_index = 5;
  if (has_league_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->league_index(), output);
  }
  
  // optional int32 camp_id = 6;
  if (has_camp_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->camp_id(), output);
  }
  
  // optional int32 space_id = 7;
  if (has_space_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->space_id(), output);
  }
  
  // optional int32 role_level = 8;
  if (has_role_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->role_level(), output);
  }
  
  // optional int32 boss_type = 9;
  if (has_boss_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->boss_type(), output);
  }
  
  // optional int32 boss_sort = 10;
  if (has_boss_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->boss_sort(), output);
  }
  
  // optional int32 force = 11;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->force(), output);
  }
  
  // optional string league_name = 12;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->league_name(), output);
  }
  
  // optional string main_version = 13;
  if (has_main_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->main_version().data(), this->main_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->main_version(), output);
  }
  
  // optional string server_flag = 14;
  if (has_server_flag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_flag().data(), this->server_flag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->server_flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400051::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 enter_type = 2;
  if (has_enter_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->enter_type(), target);
  }
  
  // optional int32 request_scene = 3;
  if (has_request_scene()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->request_scene(), target);
  }
  
  // optional int64 role_id = 4;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->role_id(), target);
  }
  
  // optional int64 league_index = 5;
  if (has_league_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->league_index(), target);
  }
  
  // optional int32 camp_id = 6;
  if (has_camp_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->camp_id(), target);
  }
  
  // optional int32 space_id = 7;
  if (has_space_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->space_id(), target);
  }
  
  // optional int32 role_level = 8;
  if (has_role_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->role_level(), target);
  }
  
  // optional int32 boss_type = 9;
  if (has_boss_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->boss_type(), target);
  }
  
  // optional int32 boss_sort = 10;
  if (has_boss_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->boss_sort(), target);
  }
  
  // optional int32 force = 11;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->force(), target);
  }
  
  // optional string league_name = 12;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->league_name(), target);
  }
  
  // optional string main_version = 13;
  if (has_main_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->main_version().data(), this->main_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->main_version(), target);
  }
  
  // optional string server_flag = 14;
  if (has_server_flag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_flag().data(), this->server_flag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->server_flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400051::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 enter_type = 2;
    if (has_enter_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->enter_type());
    }
    
    // optional int32 request_scene = 3;
    if (has_request_scene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->request_scene());
    }
    
    // optional int64 role_id = 4;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int64 league_index = 5;
    if (has_league_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_index());
    }
    
    // optional int32 camp_id = 6;
    if (has_camp_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->camp_id());
    }
    
    // optional int32 space_id = 7;
    if (has_space_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->space_id());
    }
    
    // optional int32 role_level = 8;
    if (has_role_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->role_level());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 boss_type = 9;
    if (has_boss_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boss_type());
    }
    
    // optional int32 boss_sort = 10;
    if (has_boss_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boss_sort());
    }
    
    // optional int32 force = 11;
    if (has_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->force());
    }
    
    // optional string league_name = 12;
    if (has_league_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->league_name());
    }
    
    // optional string main_version = 13;
    if (has_main_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->main_version());
    }
    
    // optional string server_flag = 14;
    if (has_server_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_flag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400051::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400051* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400051*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400051::MergeFrom(const Proto30400051& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_enter_type()) {
      set_enter_type(from.enter_type());
    }
    if (from.has_request_scene()) {
      set_request_scene(from.request_scene());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_league_index()) {
      set_league_index(from.league_index());
    }
    if (from.has_camp_id()) {
      set_camp_id(from.camp_id());
    }
    if (from.has_space_id()) {
      set_space_id(from.space_id());
    }
    if (from.has_role_level()) {
      set_role_level(from.role_level());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_boss_type()) {
      set_boss_type(from.boss_type());
    }
    if (from.has_boss_sort()) {
      set_boss_sort(from.boss_sort());
    }
    if (from.has_force()) {
      set_force(from.force());
    }
    if (from.has_league_name()) {
      set_league_name(from.league_name());
    }
    if (from.has_main_version()) {
      set_main_version(from.main_version());
    }
    if (from.has_server_flag()) {
      set_server_flag(from.server_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400051::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400051::CopyFrom(const Proto30400051& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400051::IsInitialized() const {
  
  return true;
}

void Proto30400051::Swap(Proto30400051* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(enter_type_, other->enter_type_);
    std::swap(request_scene_, other->request_scene_);
    std::swap(role_id_, other->role_id_);
    std::swap(league_index_, other->league_index_);
    std::swap(camp_id_, other->camp_id_);
    std::swap(space_id_, other->space_id_);
    std::swap(role_level_, other->role_level_);
    std::swap(boss_type_, other->boss_type_);
    std::swap(boss_sort_, other->boss_sort_);
    std::swap(force_, other->force_);
    std::swap(league_name_, other->league_name_);
    std::swap(main_version_, other->main_version_);
    std::swap(server_flag_, other->server_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400051::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400051_descriptor_;
  metadata.reflection = Proto30400051_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400052::kSceneIdFieldNumber;
const int Proto30400052::kSpaceIdFieldNumber;
const int Proto30400052::kSceneModeFieldNumber;
const int Proto30400052::kEnterTypeFieldNumber;
const int Proto30400052::kPosXFieldNumber;
const int Proto30400052::kPosYFieldNumber;
const int Proto30400052::kCurSaveFieldNumber;
#endif  // !_MSC_VER

Proto30400052::Proto30400052()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400052::InitAsDefaultInstance() {
}

Proto30400052::Proto30400052(const Proto30400052& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400052::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  space_id_ = 0;
  scene_mode_ = 0;
  enter_type_ = 0;
  pos_x_ = 0;
  pos_y_ = 0;
  cur_save_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400052::~Proto30400052() {
  SharedDtor();
}

void Proto30400052::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400052::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400052::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400052_descriptor_;
}

const Proto30400052& Proto30400052::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30400052* Proto30400052::default_instance_ = NULL;

Proto30400052* Proto30400052::New() const {
  return new Proto30400052;
}

void Proto30400052::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    space_id_ = 0;
    scene_mode_ = 0;
    enter_type_ = 0;
    pos_x_ = 0;
    pos_y_ = 0;
    cur_save_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400052::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_space_id;
        break;
      }
      
      // optional int32 space_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_space_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &space_id_)));
          set_has_space_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_scene_mode;
        break;
      }
      
      // optional int32 scene_mode = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_mode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_mode_)));
          set_has_scene_mode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_enter_type;
        break;
      }
      
      // optional int32 enter_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_enter_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enter_type_)));
          set_has_enter_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_pos_x;
        break;
      }
      
      // optional int32 pos_x = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_pos_y;
        break;
      }
      
      // optional int32 pos_y = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_cur_save;
        break;
      }
      
      // optional int32 cur_save = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_save:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_save_)));
          set_has_cur_save();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400052::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 space_id = 2;
  if (has_space_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->space_id(), output);
  }
  
  // optional int32 scene_mode = 3;
  if (has_scene_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->scene_mode(), output);
  }
  
  // optional int32 enter_type = 4;
  if (has_enter_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->enter_type(), output);
  }
  
  // optional int32 pos_x = 5;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pos_x(), output);
  }
  
  // optional int32 pos_y = 6;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->pos_y(), output);
  }
  
  // optional int32 cur_save = 7;
  if (has_cur_save()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->cur_save(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400052::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 space_id = 2;
  if (has_space_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->space_id(), target);
  }
  
  // optional int32 scene_mode = 3;
  if (has_scene_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->scene_mode(), target);
  }
  
  // optional int32 enter_type = 4;
  if (has_enter_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->enter_type(), target);
  }
  
  // optional int32 pos_x = 5;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pos_x(), target);
  }
  
  // optional int32 pos_y = 6;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->pos_y(), target);
  }
  
  // optional int32 cur_save = 7;
  if (has_cur_save()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->cur_save(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400052::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 space_id = 2;
    if (has_space_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->space_id());
    }
    
    // optional int32 scene_mode = 3;
    if (has_scene_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_mode());
    }
    
    // optional int32 enter_type = 4;
    if (has_enter_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->enter_type());
    }
    
    // optional int32 pos_x = 5;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }
    
    // optional int32 pos_y = 6;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }
    
    // optional int32 cur_save = 7;
    if (has_cur_save()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_save());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400052::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400052* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400052*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400052::MergeFrom(const Proto30400052& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_space_id()) {
      set_space_id(from.space_id());
    }
    if (from.has_scene_mode()) {
      set_scene_mode(from.scene_mode());
    }
    if (from.has_enter_type()) {
      set_enter_type(from.enter_type());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_cur_save()) {
      set_cur_save(from.cur_save());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400052::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400052::CopyFrom(const Proto30400052& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400052::IsInitialized() const {
  
  return true;
}

void Proto30400052::Swap(Proto30400052* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(space_id_, other->space_id_);
    std::swap(scene_mode_, other->scene_mode_);
    std::swap(enter_type_, other->enter_type_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(cur_save_, other->cur_save_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400052::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400052_descriptor_;
  metadata.reflection = Proto30400052_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400421::kLeagueSetFieldNumber;
#endif  // !_MSC_VER

Proto30400421::Proto30400421()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400421::InitAsDefaultInstance() {
}

Proto30400421::Proto30400421(const Proto30400421& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400421::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400421::~Proto30400421() {
  SharedDtor();
}

void Proto30400421::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400421::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400421::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400421_descriptor_;
}

const Proto30400421& Proto30400421::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30400421* Proto30400421::default_instance_ = NULL;

Proto30400421* Proto30400421::New() const {
  return new Proto30400421;
}

void Proto30400421::Clear() {
  league_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400421::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoSyncLeague league_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_league_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_league_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400421::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoSyncLeague league_set = 1;
  for (int i = 0; i < this->league_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->league_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400421::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoSyncLeague league_set = 1;
  for (int i = 0; i < this->league_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->league_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400421::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoSyncLeague league_set = 1;
  total_size += 1 * this->league_set_size();
  for (int i = 0; i < this->league_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->league_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400421::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400421* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400421*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400421::MergeFrom(const Proto30400421& from) {
  GOOGLE_CHECK_NE(&from, this);
  league_set_.MergeFrom(from.league_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400421::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400421::CopyFrom(const Proto30400421& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400421::IsInitialized() const {
  
  return true;
}

void Proto30400421::Swap(Proto30400421* other) {
  if (other != this) {
    league_set_.Swap(&other->league_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400421::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400421_descriptor_;
  metadata.reflection = Proto30400421_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400422::kLeagueIndexFieldNumber;
#endif  // !_MSC_VER

Proto30400422::Proto30400422()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400422::InitAsDefaultInstance() {
}

Proto30400422::Proto30400422(const Proto30400422& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400422::SharedCtor() {
  _cached_size_ = 0;
  league_index_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400422::~Proto30400422() {
  SharedDtor();
}

void Proto30400422::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400422::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400422::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400422_descriptor_;
}

const Proto30400422& Proto30400422::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30400422* Proto30400422::default_instance_ = NULL;

Proto30400422* Proto30400422::New() const {
  return new Proto30400422;
}

void Proto30400422::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_index_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400422::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 league_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_index_)));
          set_has_league_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400422::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->league_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400422::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->league_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400422::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 league_index = 1;
    if (has_league_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400422::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400422* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400422*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400422::MergeFrom(const Proto30400422& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_index()) {
      set_league_index(from.league_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400422::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400422::CopyFrom(const Proto30400422& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400422::IsInitialized() const {
  
  return true;
}

void Proto30400422::Swap(Proto30400422* other) {
  if (other != this) {
    std::swap(league_index_, other->league_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400422::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400422_descriptor_;
  metadata.reflection = Proto30400422_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400801::kVipTypeFieldNumber;
const int Proto30400801::kVipStartTimeFieldNumber;
const int Proto30400801::kExpiredTimeFieldNumber;
const int Proto30400801::kIsNotifyFieldNumber;
#endif  // !_MSC_VER

Proto30400801::Proto30400801()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400801::InitAsDefaultInstance() {
}

Proto30400801::Proto30400801(const Proto30400801& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400801::SharedCtor() {
  _cached_size_ = 0;
  vip_type_ = 0;
  vip_start_time_ = 0;
  expired_time_ = 0;
  is_notify_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400801::~Proto30400801() {
  SharedDtor();
}

void Proto30400801::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400801::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400801::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400801_descriptor_;
}

const Proto30400801& Proto30400801::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30400801* Proto30400801::default_instance_ = NULL;

Proto30400801* Proto30400801::New() const {
  return new Proto30400801;
}

void Proto30400801::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    vip_type_ = 0;
    vip_start_time_ = 0;
    expired_time_ = 0;
    is_notify_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400801::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 vip_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_type_)));
          set_has_vip_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_vip_start_time;
        break;
      }
      
      // optional int32 vip_start_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_start_time_)));
          set_has_vip_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_expired_time;
        break;
      }
      
      // optional int32 expired_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_expired_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &expired_time_)));
          set_has_expired_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_is_notify;
        break;
      }
      
      // optional bool is_notify = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_notify:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_notify_)));
          set_has_is_notify();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400801::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 vip_type = 1;
  if (has_vip_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vip_type(), output);
  }
  
  // optional int32 vip_start_time = 2;
  if (has_vip_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vip_start_time(), output);
  }
  
  // optional int32 expired_time = 3;
  if (has_expired_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->expired_time(), output);
  }
  
  // optional bool is_notify = 4;
  if (has_is_notify()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_notify(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400801::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 vip_type = 1;
  if (has_vip_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->vip_type(), target);
  }
  
  // optional int32 vip_start_time = 2;
  if (has_vip_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vip_start_time(), target);
  }
  
  // optional int32 expired_time = 3;
  if (has_expired_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->expired_time(), target);
  }
  
  // optional bool is_notify = 4;
  if (has_is_notify()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_notify(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400801::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 vip_type = 1;
    if (has_vip_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_type());
    }
    
    // optional int32 vip_start_time = 2;
    if (has_vip_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_start_time());
    }
    
    // optional int32 expired_time = 3;
    if (has_expired_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->expired_time());
    }
    
    // optional bool is_notify = 4;
    if (has_is_notify()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400801::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400801* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400801*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400801::MergeFrom(const Proto30400801& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_vip_type()) {
      set_vip_type(from.vip_type());
    }
    if (from.has_vip_start_time()) {
      set_vip_start_time(from.vip_start_time());
    }
    if (from.has_expired_time()) {
      set_expired_time(from.expired_time());
    }
    if (from.has_is_notify()) {
      set_is_notify(from.is_notify());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400801::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400801::CopyFrom(const Proto30400801& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400801::IsInitialized() const {
  
  return true;
}

void Proto30400801::Swap(Proto30400801* other) {
  if (other != this) {
    std::swap(vip_type_, other->vip_type_);
    std::swap(vip_start_time_, other->vip_start_time_);
    std::swap(expired_time_, other->expired_time_);
    std::swap(is_notify_, other->is_notify_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400801::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400801_descriptor_;
  metadata.reflection = Proto30400801_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400601::kShapeListFieldNumber;
const int Proto30400601::kNoNotifyFieldNumber;
const int Proto30400601::kWeaponLvlFieldNumber;
#endif  // !_MSC_VER

Proto30400601::Proto30400601()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400601::InitAsDefaultInstance() {
}

Proto30400601::Proto30400601(const Proto30400601& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400601::SharedCtor() {
  _cached_size_ = 0;
  no_notify_ = 0;
  weapon_lvl_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400601::~Proto30400601() {
  SharedDtor();
}

void Proto30400601::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400601::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400601::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400601_descriptor_;
}

const Proto30400601& Proto30400601::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30400601* Proto30400601::default_instance_ = NULL;

Proto30400601* Proto30400601::New() const {
  return new Proto30400601;
}

void Proto30400601::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    no_notify_ = 0;
    weapon_lvl_ = 0;
  }
  shape_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400601::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoPairObj shape_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shape_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shape_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_shape_list;
        if (input->ExpectTag(16)) goto parse_no_notify;
        break;
      }
      
      // optional int32 no_notify = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_no_notify:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &no_notify_)));
          set_has_no_notify();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_weapon_lvl;
        break;
      }
      
      // optional int32 weapon_lvl = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_weapon_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weapon_lvl_)));
          set_has_weapon_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400601::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoPairObj shape_list = 1;
  for (int i = 0; i < this->shape_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->shape_list(i), output);
  }
  
  // optional int32 no_notify = 2;
  if (has_no_notify()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->no_notify(), output);
  }
  
  // optional int32 weapon_lvl = 3;
  if (has_weapon_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->weapon_lvl(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400601::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoPairObj shape_list = 1;
  for (int i = 0; i < this->shape_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->shape_list(i), target);
  }
  
  // optional int32 no_notify = 2;
  if (has_no_notify()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->no_notify(), target);
  }
  
  // optional int32 weapon_lvl = 3;
  if (has_weapon_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->weapon_lvl(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400601::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 no_notify = 2;
    if (has_no_notify()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->no_notify());
    }
    
    // optional int32 weapon_lvl = 3;
    if (has_weapon_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weapon_lvl());
    }
    
  }
  // repeated .ProtoPairObj shape_list = 1;
  total_size += 1 * this->shape_list_size();
  for (int i = 0; i < this->shape_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->shape_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400601::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400601* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400601*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400601::MergeFrom(const Proto30400601& from) {
  GOOGLE_CHECK_NE(&from, this);
  shape_list_.MergeFrom(from.shape_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_no_notify()) {
      set_no_notify(from.no_notify());
    }
    if (from.has_weapon_lvl()) {
      set_weapon_lvl(from.weapon_lvl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400601::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400601::CopyFrom(const Proto30400601& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400601::IsInitialized() const {
  
  return true;
}

void Proto30400601::Swap(Proto30400601* other) {
  if (other != this) {
    shape_list_.Swap(&other->shape_list_);
    std::swap(no_notify_, other->no_notify_);
    std::swap(weapon_lvl_, other->weapon_lvl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400601::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400601_descriptor_;
  metadata.reflection = Proto30400601_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400018::kActivityTypeFieldNumber;
const int Proto31400018::kSubTypeFieldNumber;
const int Proto31400018::kValueFieldNumber;
#endif  // !_MSC_VER

Proto31400018::Proto31400018()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400018::InitAsDefaultInstance() {
}

Proto31400018::Proto31400018(const Proto31400018& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400018::SharedCtor() {
  _cached_size_ = 0;
  activity_type_ = 0;
  sub_type_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400018::~Proto31400018() {
  SharedDtor();
}

void Proto31400018::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400018::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400018::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400018_descriptor_;
}

const Proto31400018& Proto31400018::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400018* Proto31400018::default_instance_ = NULL;

Proto31400018* Proto31400018::New() const {
  return new Proto31400018;
}

void Proto31400018::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_type_ = 0;
    sub_type_ = 0;
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400018::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_type_)));
          set_has_activity_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sub_type;
        break;
      }
      
      // optional int32 sub_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sub_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sub_type_)));
          set_has_sub_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_value;
        break;
      }
      
      // optional int32 value = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400018::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_type = 1;
  if (has_activity_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_type(), output);
  }
  
  // optional int32 sub_type = 2;
  if (has_sub_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sub_type(), output);
  }
  
  // optional int32 value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400018::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_type = 1;
  if (has_activity_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_type(), target);
  }
  
  // optional int32 sub_type = 2;
  if (has_sub_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sub_type(), target);
  }
  
  // optional int32 value = 3;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400018::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_type = 1;
    if (has_activity_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_type());
    }
    
    // optional int32 sub_type = 2;
    if (has_sub_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sub_type());
    }
    
    // optional int32 value = 3;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400018::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400018* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400018*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400018::MergeFrom(const Proto31400018& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_type()) {
      set_activity_type(from.activity_type());
    }
    if (from.has_sub_type()) {
      set_sub_type(from.sub_type());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400018::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400018::CopyFrom(const Proto31400018& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400018::IsInitialized() const {
  
  return true;
}

void Proto31400018::Swap(Proto31400018* other) {
  if (other != this) {
    std::swap(activity_type_, other->activity_type_);
    std::swap(sub_type_, other->sub_type_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400018::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400018_descriptor_;
  metadata.reflection = Proto31400018_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400231::kNpcIdFieldNumber;
const int Proto31400231::kRecognFieldNumber;
const int Proto31400231::kMsgBodyFieldNumber;
#endif  // !_MSC_VER

Proto31400231::Proto31400231()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400231::InitAsDefaultInstance() {
}

Proto31400231::Proto31400231(const Proto31400231& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400231::SharedCtor() {
  _cached_size_ = 0;
  npc_id_ = 0;
  recogn_ = 0;
  msg_body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400231::~Proto31400231() {
  SharedDtor();
}

void Proto31400231::SharedDtor() {
  if (msg_body_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_body_;
  }
  if (this != default_instance_) {
  }
}

void Proto31400231::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400231::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400231_descriptor_;
}

const Proto31400231& Proto31400231::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400231* Proto31400231::default_instance_ = NULL;

Proto31400231* Proto31400231::New() const {
  return new Proto31400231;
}

void Proto31400231::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    npc_id_ = 0;
    recogn_ = 0;
    if (has_msg_body()) {
      if (msg_body_ != &::google::protobuf::internal::kEmptyString) {
        msg_body_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400231::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 npc_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &npc_id_)));
          set_has_npc_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_recogn;
        break;
      }
      
      // optional int32 recogn = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recogn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recogn_)));
          set_has_recogn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_msg_body;
        break;
      }
      
      // optional bytes msg_body = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_msg_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg_body()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400231::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 npc_id = 1;
  if (has_npc_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->npc_id(), output);
  }
  
  // optional int32 recogn = 2;
  if (has_recogn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->recogn(), output);
  }
  
  // optional bytes msg_body = 3;
  if (has_msg_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->msg_body(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400231::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 npc_id = 1;
  if (has_npc_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->npc_id(), target);
  }
  
  // optional int32 recogn = 2;
  if (has_recogn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->recogn(), target);
  }
  
  // optional bytes msg_body = 3;
  if (has_msg_body()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->msg_body(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400231::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 npc_id = 1;
    if (has_npc_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->npc_id());
    }
    
    // optional int32 recogn = 2;
    if (has_recogn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recogn());
    }
    
    // optional bytes msg_body = 3;
    if (has_msg_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->msg_body());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400231::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400231* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400231*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400231::MergeFrom(const Proto31400231& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_npc_id()) {
      set_npc_id(from.npc_id());
    }
    if (from.has_recogn()) {
      set_recogn(from.recogn());
    }
    if (from.has_msg_body()) {
      set_msg_body(from.msg_body());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400231::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400231::CopyFrom(const Proto31400231& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400231::IsInitialized() const {
  
  return true;
}

void Proto31400231::Swap(Proto31400231* other) {
  if (other != this) {
    std::swap(npc_id_, other->npc_id_);
    std::swap(recogn_, other->recogn_);
    std::swap(msg_body_, other->msg_body_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400231::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400231_descriptor_;
  metadata.reflection = Proto31400231_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400901::kRoleIdFieldNumber;
const int Proto30400901::kScriptSortFieldNumber;
const int Proto30400901::kProgressIdFieldNumber;
const int Proto30400901::kSceneIdFieldNumber;
const int Proto30400901::kTeamIdFieldNumber;
const int Proto30400901::kLevelFieldNumber;
const int Proto30400901::kUsedTimesFieldNumber;
const int Proto30400901::kUsedTimesTickFieldNumber;
const int Proto30400901::kPassPieceFieldNumber;
const int Proto30400901::kPassChapterFieldNumber;
const int Proto30400901::kPieceFieldNumber;
const int Proto30400901::kChapterFieldNumber;
const int Proto30400901::kVipTypeFieldNumber;
const int Proto30400901::kReplacementsSetFieldNumber;
const int Proto30400901::kTeamerSetFieldNumber;
const int Proto30400901::kBuyTimesFieldNumber;
const int Proto30400901::kOnlineSecFieldNumber;
const int Proto30400901::kNeedPackSpaceFieldNumber;
const int Proto30400901::kScriptSceneFieldNumber;
const int Proto30400901::kCheerNumFieldNumber;
const int Proto30400901::kEncourageNumFieldNumber;
#endif  // !_MSC_VER

Proto30400901::Proto30400901()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400901::InitAsDefaultInstance() {
}

Proto30400901::Proto30400901(const Proto30400901& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400901::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  script_sort_ = 0;
  progress_id_ = GOOGLE_LONGLONG(0);
  scene_id_ = 0;
  team_id_ = GOOGLE_LONGLONG(0);
  level_ = 0;
  used_times_ = 0;
  used_times_tick_ = 0;
  pass_piece_ = 0;
  pass_chapter_ = 0;
  piece_ = 0;
  chapter_ = 0;
  vip_type_ = 0;
  buy_times_ = 0;
  online_sec_ = GOOGLE_LONGLONG(0);
  need_pack_space_ = 0;
  script_scene_ = 0;
  cheer_num_ = 0;
  encourage_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400901::~Proto30400901() {
  SharedDtor();
}

void Proto30400901::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400901::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400901::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400901_descriptor_;
}

const Proto30400901& Proto30400901::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30400901* Proto30400901::default_instance_ = NULL;

Proto30400901* Proto30400901::New() const {
  return new Proto30400901;
}

void Proto30400901::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    script_sort_ = 0;
    progress_id_ = GOOGLE_LONGLONG(0);
    scene_id_ = 0;
    team_id_ = GOOGLE_LONGLONG(0);
    level_ = 0;
    used_times_ = 0;
    used_times_tick_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    pass_piece_ = 0;
    pass_chapter_ = 0;
    piece_ = 0;
    chapter_ = 0;
    vip_type_ = 0;
    buy_times_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    online_sec_ = GOOGLE_LONGLONG(0);
    need_pack_space_ = 0;
    script_scene_ = 0;
    cheer_num_ = 0;
    encourage_num_ = 0;
  }
  replacements_set_.Clear();
  teamer_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400901::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_script_sort;
        break;
      }
      
      // optional int32 script_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_progress_id;
        break;
      }
      
      // optional int64 progress_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_progress_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &progress_id_)));
          set_has_progress_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_team_id;
        break;
      }
      
      // optional int64 team_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_team_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_level;
        break;
      }
      
      // optional int32 level = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_used_times;
        break;
      }
      
      // optional int32 used_times = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_used_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &used_times_)));
          set_has_used_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_used_times_tick;
        break;
      }
      
      // optional int32 used_times_tick = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_used_times_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &used_times_tick_)));
          set_has_used_times_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_pass_piece;
        break;
      }
      
      // optional int32 pass_piece = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pass_piece:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pass_piece_)));
          set_has_pass_piece();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_pass_chapter;
        break;
      }
      
      // optional int32 pass_chapter = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pass_chapter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pass_chapter_)));
          set_has_pass_chapter();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_piece;
        break;
      }
      
      // optional int32 piece = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_piece:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &piece_)));
          set_has_piece();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_chapter;
        break;
      }
      
      // optional int32 chapter = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_chapter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chapter_)));
          set_has_chapter();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_vip_type;
        break;
      }
      
      // optional int32 vip_type = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_type_)));
          set_has_vip_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_replacements_set;
        break;
      }
      
      // repeated int64 replacements_set = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_replacements_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 112, input, this->mutable_replacements_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_replacements_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_replacements_set;
        if (input->ExpectTag(120)) goto parse_teamer_set;
        break;
      }
      
      // repeated int64 teamer_set = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_teamer_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 120, input, this->mutable_teamer_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_teamer_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_teamer_set;
        if (input->ExpectTag(128)) goto parse_buy_times;
        break;
      }
      
      // optional int32 buy_times = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_times_)));
          set_has_buy_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_online_sec;
        break;
      }
      
      // optional int64 online_sec = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_online_sec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &online_sec_)));
          set_has_online_sec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_need_pack_space;
        break;
      }
      
      // optional int32 need_pack_space = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_need_pack_space:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_pack_space_)));
          set_has_need_pack_space();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_script_scene;
        break;
      }
      
      // optional int32 script_scene = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_scene:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_scene_)));
          set_has_script_scene();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_cheer_num;
        break;
      }
      
      // optional int32 cheer_num = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cheer_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cheer_num_)));
          set_has_cheer_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_encourage_num;
        break;
      }
      
      // optional int32 encourage_num = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_encourage_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &encourage_num_)));
          set_has_encourage_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400901::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->script_sort(), output);
  }
  
  // optional int64 progress_id = 3;
  if (has_progress_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->progress_id(), output);
  }
  
  // optional int32 scene_id = 4;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->scene_id(), output);
  }
  
  // optional int64 team_id = 5;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->team_id(), output);
  }
  
  // optional int32 level = 6;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->level(), output);
  }
  
  // optional int32 used_times = 7;
  if (has_used_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->used_times(), output);
  }
  
  // optional int32 used_times_tick = 8;
  if (has_used_times_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->used_times_tick(), output);
  }
  
  // optional int32 pass_piece = 9;
  if (has_pass_piece()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->pass_piece(), output);
  }
  
  // optional int32 pass_chapter = 10;
  if (has_pass_chapter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->pass_chapter(), output);
  }
  
  // optional int32 piece = 11;
  if (has_piece()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->piece(), output);
  }
  
  // optional int32 chapter = 12;
  if (has_chapter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->chapter(), output);
  }
  
  // optional int32 vip_type = 13;
  if (has_vip_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->vip_type(), output);
  }
  
  // repeated int64 replacements_set = 14;
  for (int i = 0; i < this->replacements_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      14, this->replacements_set(i), output);
  }
  
  // repeated int64 teamer_set = 15;
  for (int i = 0; i < this->teamer_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      15, this->teamer_set(i), output);
  }
  
  // optional int32 buy_times = 16;
  if (has_buy_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->buy_times(), output);
  }
  
  // optional int64 online_sec = 17;
  if (has_online_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->online_sec(), output);
  }
  
  // optional int32 need_pack_space = 18;
  if (has_need_pack_space()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->need_pack_space(), output);
  }
  
  // optional int32 script_scene = 19;
  if (has_script_scene()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->script_scene(), output);
  }
  
  // optional int32 cheer_num = 20;
  if (has_cheer_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->cheer_num(), output);
  }
  
  // optional int32 encourage_num = 21;
  if (has_encourage_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->encourage_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400901::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->script_sort(), target);
  }
  
  // optional int64 progress_id = 3;
  if (has_progress_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->progress_id(), target);
  }
  
  // optional int32 scene_id = 4;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->scene_id(), target);
  }
  
  // optional int64 team_id = 5;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->team_id(), target);
  }
  
  // optional int32 level = 6;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->level(), target);
  }
  
  // optional int32 used_times = 7;
  if (has_used_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->used_times(), target);
  }
  
  // optional int32 used_times_tick = 8;
  if (has_used_times_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->used_times_tick(), target);
  }
  
  // optional int32 pass_piece = 9;
  if (has_pass_piece()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->pass_piece(), target);
  }
  
  // optional int32 pass_chapter = 10;
  if (has_pass_chapter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->pass_chapter(), target);
  }
  
  // optional int32 piece = 11;
  if (has_piece()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->piece(), target);
  }
  
  // optional int32 chapter = 12;
  if (has_chapter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->chapter(), target);
  }
  
  // optional int32 vip_type = 13;
  if (has_vip_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->vip_type(), target);
  }
  
  // repeated int64 replacements_set = 14;
  for (int i = 0; i < this->replacements_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(14, this->replacements_set(i), target);
  }
  
  // repeated int64 teamer_set = 15;
  for (int i = 0; i < this->teamer_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(15, this->teamer_set(i), target);
  }
  
  // optional int32 buy_times = 16;
  if (has_buy_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->buy_times(), target);
  }
  
  // optional int64 online_sec = 17;
  if (has_online_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->online_sec(), target);
  }
  
  // optional int32 need_pack_space = 18;
  if (has_need_pack_space()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->need_pack_space(), target);
  }
  
  // optional int32 script_scene = 19;
  if (has_script_scene()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->script_scene(), target);
  }
  
  // optional int32 cheer_num = 20;
  if (has_cheer_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->cheer_num(), target);
  }
  
  // optional int32 encourage_num = 21;
  if (has_encourage_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->encourage_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400901::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 script_sort = 2;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int64 progress_id = 3;
    if (has_progress_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->progress_id());
    }
    
    // optional int32 scene_id = 4;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int64 team_id = 5;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->team_id());
    }
    
    // optional int32 level = 6;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 used_times = 7;
    if (has_used_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->used_times());
    }
    
    // optional int32 used_times_tick = 8;
    if (has_used_times_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->used_times_tick());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 pass_piece = 9;
    if (has_pass_piece()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pass_piece());
    }
    
    // optional int32 pass_chapter = 10;
    if (has_pass_chapter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pass_chapter());
    }
    
    // optional int32 piece = 11;
    if (has_piece()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->piece());
    }
    
    // optional int32 chapter = 12;
    if (has_chapter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chapter());
    }
    
    // optional int32 vip_type = 13;
    if (has_vip_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_type());
    }
    
    // optional int32 buy_times = 16;
    if (has_buy_times()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_times());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int64 online_sec = 17;
    if (has_online_sec()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->online_sec());
    }
    
    // optional int32 need_pack_space = 18;
    if (has_need_pack_space()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->need_pack_space());
    }
    
    // optional int32 script_scene = 19;
    if (has_script_scene()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_scene());
    }
    
    // optional int32 cheer_num = 20;
    if (has_cheer_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cheer_num());
    }
    
    // optional int32 encourage_num = 21;
    if (has_encourage_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->encourage_num());
    }
    
  }
  // repeated int64 replacements_set = 14;
  {
    int data_size = 0;
    for (int i = 0; i < this->replacements_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->replacements_set(i));
    }
    total_size += 1 * this->replacements_set_size() + data_size;
  }
  
  // repeated int64 teamer_set = 15;
  {
    int data_size = 0;
    for (int i = 0; i < this->teamer_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->teamer_set(i));
    }
    total_size += 1 * this->teamer_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400901::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400901* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400901*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400901::MergeFrom(const Proto30400901& from) {
  GOOGLE_CHECK_NE(&from, this);
  replacements_set_.MergeFrom(from.replacements_set_);
  teamer_set_.MergeFrom(from.teamer_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_progress_id()) {
      set_progress_id(from.progress_id());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_used_times()) {
      set_used_times(from.used_times());
    }
    if (from.has_used_times_tick()) {
      set_used_times_tick(from.used_times_tick());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_pass_piece()) {
      set_pass_piece(from.pass_piece());
    }
    if (from.has_pass_chapter()) {
      set_pass_chapter(from.pass_chapter());
    }
    if (from.has_piece()) {
      set_piece(from.piece());
    }
    if (from.has_chapter()) {
      set_chapter(from.chapter());
    }
    if (from.has_vip_type()) {
      set_vip_type(from.vip_type());
    }
    if (from.has_buy_times()) {
      set_buy_times(from.buy_times());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_online_sec()) {
      set_online_sec(from.online_sec());
    }
    if (from.has_need_pack_space()) {
      set_need_pack_space(from.need_pack_space());
    }
    if (from.has_script_scene()) {
      set_script_scene(from.script_scene());
    }
    if (from.has_cheer_num()) {
      set_cheer_num(from.cheer_num());
    }
    if (from.has_encourage_num()) {
      set_encourage_num(from.encourage_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400901::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400901::CopyFrom(const Proto30400901& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400901::IsInitialized() const {
  
  return true;
}

void Proto30400901::Swap(Proto30400901* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(script_sort_, other->script_sort_);
    std::swap(progress_id_, other->progress_id_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(team_id_, other->team_id_);
    std::swap(level_, other->level_);
    std::swap(used_times_, other->used_times_);
    std::swap(used_times_tick_, other->used_times_tick_);
    std::swap(pass_piece_, other->pass_piece_);
    std::swap(pass_chapter_, other->pass_chapter_);
    std::swap(piece_, other->piece_);
    std::swap(chapter_, other->chapter_);
    std::swap(vip_type_, other->vip_type_);
    replacements_set_.Swap(&other->replacements_set_);
    teamer_set_.Swap(&other->teamer_set_);
    std::swap(buy_times_, other->buy_times_);
    std::swap(online_sec_, other->online_sec_);
    std::swap(need_pack_space_, other->need_pack_space_);
    std::swap(script_scene_, other->script_scene_);
    std::swap(cheer_num_, other->cheer_num_);
    std::swap(encourage_num_, other->encourage_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400901::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400901_descriptor_;
  metadata.reflection = Proto30400901_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400902::kScriptSortFieldNumber;
const int Proto30400902::kScriptIdFieldNumber;
const int Proto30400902::kSceneIdFieldNumber;
const int Proto30400902::kPixelXFieldNumber;
const int Proto30400902::kPixelYFieldNumber;
const int Proto30400902::kUsedTimesFieldNumber;
const int Proto30400902::kProgressIdFieldNumber;
#endif  // !_MSC_VER

Proto30400902::Proto30400902()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400902::InitAsDefaultInstance() {
}

Proto30400902::Proto30400902(const Proto30400902& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400902::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  script_id_ = 0;
  scene_id_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  used_times_ = 0;
  progress_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400902::~Proto30400902() {
  SharedDtor();
}

void Proto30400902::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400902::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400902::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400902_descriptor_;
}

const Proto30400902& Proto30400902::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30400902* Proto30400902::default_instance_ = NULL;

Proto30400902* Proto30400902::New() const {
  return new Proto30400902;
}

void Proto30400902::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
    script_id_ = 0;
    scene_id_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
    used_times_ = 0;
    progress_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400902::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_script_id;
        break;
      }
      
      // optional int32 script_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_id_)));
          set_has_script_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_used_times;
        break;
      }
      
      // optional int32 used_times = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_used_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &used_times_)));
          set_has_used_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_progress_id;
        break;
      }
      
      // optional int64 progress_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_progress_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &progress_id_)));
          set_has_progress_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400902::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  // optional int32 script_id = 2;
  if (has_script_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->script_id(), output);
  }
  
  // optional int32 scene_id = 3;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->scene_id(), output);
  }
  
  // optional int32 pixel_x = 4;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 5;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pixel_y(), output);
  }
  
  // optional int32 used_times = 6;
  if (has_used_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->used_times(), output);
  }
  
  // optional int64 progress_id = 7;
  if (has_progress_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->progress_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400902::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  // optional int32 script_id = 2;
  if (has_script_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->script_id(), target);
  }
  
  // optional int32 scene_id = 3;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->scene_id(), target);
  }
  
  // optional int32 pixel_x = 4;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 5;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pixel_y(), target);
  }
  
  // optional int32 used_times = 6;
  if (has_used_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->used_times(), target);
  }
  
  // optional int64 progress_id = 7;
  if (has_progress_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->progress_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400902::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 script_id = 2;
    if (has_script_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_id());
    }
    
    // optional int32 scene_id = 3;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 pixel_x = 4;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 5;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
    // optional int32 used_times = 6;
    if (has_used_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->used_times());
    }
    
    // optional int64 progress_id = 7;
    if (has_progress_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->progress_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400902::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400902* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400902*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400902::MergeFrom(const Proto30400902& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_script_id()) {
      set_script_id(from.script_id());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
    if (from.has_used_times()) {
      set_used_times(from.used_times());
    }
    if (from.has_progress_id()) {
      set_progress_id(from.progress_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400902::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400902::CopyFrom(const Proto30400902& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400902::IsInitialized() const {
  
  return true;
}

void Proto30400902::Swap(Proto30400902* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(script_id_, other->script_id_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(used_times_, other->used_times_);
    std::swap(progress_id_, other->progress_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400902::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400902_descriptor_;
  metadata.reflection = Proto30400902_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400251::kReceiverNameFieldNumber;
const int Proto31400251::kReceiverIdFieldNumber;
const int Proto31400251::kShopTypeFieldNumber;
const int Proto31400251::kItemIdFieldNumber;
const int Proto31400251::kItemBindFieldNumber;
const int Proto31400251::kBuyAmountFieldNumber;
const int Proto31400251::kMoneyTypeFieldNumber;
const int Proto31400251::kMoneyAmountFieldNumber;
#endif  // !_MSC_VER

Proto31400251::Proto31400251()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400251::InitAsDefaultInstance() {
}

Proto31400251::Proto31400251(const Proto31400251& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400251::SharedCtor() {
  _cached_size_ = 0;
  receiver_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  receiver_id_ = GOOGLE_LONGLONG(0);
  shop_type_ = 0;
  item_id_ = 0;
  item_bind_ = 0;
  buy_amount_ = 0;
  money_type_ = 0;
  money_amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400251::~Proto31400251() {
  SharedDtor();
}

void Proto31400251::SharedDtor() {
  if (receiver_name_ != &::google::protobuf::internal::kEmptyString) {
    delete receiver_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto31400251::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400251::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400251_descriptor_;
}

const Proto31400251& Proto31400251::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400251* Proto31400251::default_instance_ = NULL;

Proto31400251* Proto31400251::New() const {
  return new Proto31400251;
}

void Proto31400251::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_receiver_name()) {
      if (receiver_name_ != &::google::protobuf::internal::kEmptyString) {
        receiver_name_->clear();
      }
    }
    receiver_id_ = GOOGLE_LONGLONG(0);
    shop_type_ = 0;
    item_id_ = 0;
    item_bind_ = 0;
    buy_amount_ = 0;
    money_type_ = 0;
    money_amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400251::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string receiver_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receiver_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->receiver_name().data(), this->receiver_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_receiver_id;
        break;
      }
      
      // optional int64 receiver_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_receiver_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &receiver_id_)));
          set_has_receiver_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_shop_type;
        break;
      }
      
      // optional int32 shop_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shop_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_type_)));
          set_has_shop_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_item_id;
        break;
      }
      
      // optional int32 item_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_item_bind;
        break;
      }
      
      // optional int32 item_bind = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_bind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_bind_)));
          set_has_item_bind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_buy_amount;
        break;
      }
      
      // optional int32 buy_amount = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_amount_)));
          set_has_buy_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_money_type;
        break;
      }
      
      // optional int32 money_type = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_money_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_type_)));
          set_has_money_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_money_amount;
        break;
      }
      
      // optional int32 money_amount = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_money_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_amount_)));
          set_has_money_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400251::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string receiver_name = 1;
  if (has_receiver_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiver_name().data(), this->receiver_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->receiver_name(), output);
  }
  
  // optional int64 receiver_id = 2;
  if (has_receiver_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->receiver_id(), output);
  }
  
  // optional int32 shop_type = 3;
  if (has_shop_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->shop_type(), output);
  }
  
  // optional int32 item_id = 4;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->item_id(), output);
  }
  
  // optional int32 item_bind = 5;
  if (has_item_bind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->item_bind(), output);
  }
  
  // optional int32 buy_amount = 6;
  if (has_buy_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->buy_amount(), output);
  }
  
  // optional int32 money_type = 7;
  if (has_money_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->money_type(), output);
  }
  
  // optional int32 money_amount = 8;
  if (has_money_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->money_amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400251::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string receiver_name = 1;
  if (has_receiver_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiver_name().data(), this->receiver_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->receiver_name(), target);
  }
  
  // optional int64 receiver_id = 2;
  if (has_receiver_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->receiver_id(), target);
  }
  
  // optional int32 shop_type = 3;
  if (has_shop_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->shop_type(), target);
  }
  
  // optional int32 item_id = 4;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->item_id(), target);
  }
  
  // optional int32 item_bind = 5;
  if (has_item_bind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->item_bind(), target);
  }
  
  // optional int32 buy_amount = 6;
  if (has_buy_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->buy_amount(), target);
  }
  
  // optional int32 money_type = 7;
  if (has_money_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->money_type(), target);
  }
  
  // optional int32 money_amount = 8;
  if (has_money_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->money_amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400251::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string receiver_name = 1;
    if (has_receiver_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->receiver_name());
    }
    
    // optional int64 receiver_id = 2;
    if (has_receiver_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->receiver_id());
    }
    
    // optional int32 shop_type = 3;
    if (has_shop_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop_type());
    }
    
    // optional int32 item_id = 4;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_bind = 5;
    if (has_item_bind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_bind());
    }
    
    // optional int32 buy_amount = 6;
    if (has_buy_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_amount());
    }
    
    // optional int32 money_type = 7;
    if (has_money_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money_type());
    }
    
    // optional int32 money_amount = 8;
    if (has_money_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money_amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400251::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400251* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400251*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400251::MergeFrom(const Proto31400251& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_receiver_name()) {
      set_receiver_name(from.receiver_name());
    }
    if (from.has_receiver_id()) {
      set_receiver_id(from.receiver_id());
    }
    if (from.has_shop_type()) {
      set_shop_type(from.shop_type());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_bind()) {
      set_item_bind(from.item_bind());
    }
    if (from.has_buy_amount()) {
      set_buy_amount(from.buy_amount());
    }
    if (from.has_money_type()) {
      set_money_type(from.money_type());
    }
    if (from.has_money_amount()) {
      set_money_amount(from.money_amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400251::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400251::CopyFrom(const Proto31400251& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400251::IsInitialized() const {
  
  return true;
}

void Proto31400251::Swap(Proto31400251* other) {
  if (other != this) {
    std::swap(receiver_name_, other->receiver_name_);
    std::swap(receiver_id_, other->receiver_id_);
    std::swap(shop_type_, other->shop_type_);
    std::swap(item_id_, other->item_id_);
    std::swap(item_bind_, other->item_bind_);
    std::swap(buy_amount_, other->buy_amount_);
    std::swap(money_type_, other->money_type_);
    std::swap(money_amount_, other->money_amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400251::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400251_descriptor_;
  metadata.reflection = Proto31400251_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400252::kShopTypeFieldNumber;
const int Proto31400252::kItemIdFieldNumber;
const int Proto31400252::kItemBindFieldNumber;
const int Proto31400252::kBuyAmountFieldNumber;
const int Proto31400252::kMoneyTypeFieldNumber;
const int Proto31400252::kMoneyAmountFieldNumber;
const int Proto31400252::kRetFieldNumber;
#endif  // !_MSC_VER

Proto31400252::Proto31400252()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400252::InitAsDefaultInstance() {
}

Proto31400252::Proto31400252(const Proto31400252& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400252::SharedCtor() {
  _cached_size_ = 0;
  shop_type_ = 0;
  item_id_ = 0;
  item_bind_ = 0;
  buy_amount_ = 0;
  money_type_ = 0;
  money_amount_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400252::~Proto31400252() {
  SharedDtor();
}

void Proto31400252::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400252::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400252::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400252_descriptor_;
}

const Proto31400252& Proto31400252::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400252* Proto31400252::default_instance_ = NULL;

Proto31400252* Proto31400252::New() const {
  return new Proto31400252;
}

void Proto31400252::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    shop_type_ = 0;
    item_id_ = 0;
    item_bind_ = 0;
    buy_amount_ = 0;
    money_type_ = 0;
    money_amount_ = 0;
    ret_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400252::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 shop_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_type_)));
          set_has_shop_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }
      
      // optional int32 item_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_bind;
        break;
      }
      
      // optional int32 item_bind = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_bind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_bind_)));
          set_has_item_bind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_buy_amount;
        break;
      }
      
      // optional int32 buy_amount = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_amount_)));
          set_has_buy_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_money_type;
        break;
      }
      
      // optional int32 money_type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_money_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_type_)));
          set_has_money_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_money_amount;
        break;
      }
      
      // optional int32 money_amount = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_money_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_amount_)));
          set_has_money_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_ret;
        break;
      }
      
      // optional int32 ret = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400252::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 shop_type = 1;
  if (has_shop_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->shop_type(), output);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_id(), output);
  }
  
  // optional int32 item_bind = 3;
  if (has_item_bind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_bind(), output);
  }
  
  // optional int32 buy_amount = 4;
  if (has_buy_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->buy_amount(), output);
  }
  
  // optional int32 money_type = 5;
  if (has_money_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->money_type(), output);
  }
  
  // optional int32 money_amount = 6;
  if (has_money_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->money_amount(), output);
  }
  
  // optional int32 ret = 7;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->ret(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400252::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 shop_type = 1;
  if (has_shop_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->shop_type(), target);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_id(), target);
  }
  
  // optional int32 item_bind = 3;
  if (has_item_bind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_bind(), target);
  }
  
  // optional int32 buy_amount = 4;
  if (has_buy_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->buy_amount(), target);
  }
  
  // optional int32 money_type = 5;
  if (has_money_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->money_type(), target);
  }
  
  // optional int32 money_amount = 6;
  if (has_money_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->money_amount(), target);
  }
  
  // optional int32 ret = 7;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->ret(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400252::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 shop_type = 1;
    if (has_shop_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop_type());
    }
    
    // optional int32 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_bind = 3;
    if (has_item_bind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_bind());
    }
    
    // optional int32 buy_amount = 4;
    if (has_buy_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_amount());
    }
    
    // optional int32 money_type = 5;
    if (has_money_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money_type());
    }
    
    // optional int32 money_amount = 6;
    if (has_money_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money_amount());
    }
    
    // optional int32 ret = 7;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400252::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400252* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400252*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400252::MergeFrom(const Proto31400252& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shop_type()) {
      set_shop_type(from.shop_type());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_bind()) {
      set_item_bind(from.item_bind());
    }
    if (from.has_buy_amount()) {
      set_buy_amount(from.buy_amount());
    }
    if (from.has_money_type()) {
      set_money_type(from.money_type());
    }
    if (from.has_money_amount()) {
      set_money_amount(from.money_amount());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400252::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400252::CopyFrom(const Proto31400252& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400252::IsInitialized() const {
  
  return true;
}

void Proto31400252::Swap(Proto31400252* other) {
  if (other != this) {
    std::swap(shop_type_, other->shop_type_);
    std::swap(item_id_, other->item_id_);
    std::swap(item_bind_, other->item_bind_);
    std::swap(buy_amount_, other->buy_amount_);
    std::swap(money_type_, other->money_type_);
    std::swap(money_amount_, other->money_amount_);
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400252::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400252_descriptor_;
  metadata.reflection = Proto31400252_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100302::kCurSceneFieldNumber;
const int Proto30100302::kLastSceneFieldNumber;
#endif  // !_MSC_VER

Proto30100302::Proto30100302()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100302::InitAsDefaultInstance() {
}

Proto30100302::Proto30100302(const Proto30100302& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100302::SharedCtor() {
  _cached_size_ = 0;
  cur_scene_ = 0;
  last_scene_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100302::~Proto30100302() {
  SharedDtor();
}

void Proto30100302::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100302::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100302::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100302_descriptor_;
}

const Proto30100302& Proto30100302::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30100302* Proto30100302::default_instance_ = NULL;

Proto30100302* Proto30100302::New() const {
  return new Proto30100302;
}

void Proto30100302::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_scene_ = 0;
    last_scene_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100302::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_scene = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_scene_)));
          set_has_cur_scene();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_last_scene;
        break;
      }
      
      // optional int32 last_scene = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last_scene:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_scene_)));
          set_has_last_scene();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100302::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_scene = 1;
  if (has_cur_scene()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_scene(), output);
  }
  
  // optional int32 last_scene = 2;
  if (has_last_scene()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->last_scene(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100302::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_scene = 1;
  if (has_cur_scene()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_scene(), target);
  }
  
  // optional int32 last_scene = 2;
  if (has_last_scene()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->last_scene(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100302::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_scene = 1;
    if (has_cur_scene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_scene());
    }
    
    // optional int32 last_scene = 2;
    if (has_last_scene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_scene());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100302::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100302* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100302*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100302::MergeFrom(const Proto30100302& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_scene()) {
      set_cur_scene(from.cur_scene());
    }
    if (from.has_last_scene()) {
      set_last_scene(from.last_scene());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100302::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100302::CopyFrom(const Proto30100302& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100302::IsInitialized() const {
  
  return true;
}

void Proto30100302::Swap(Proto30100302* other) {
  if (other != this) {
    std::swap(cur_scene_, other->cur_scene_);
    std::swap(last_scene_, other->last_scene_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100302::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100302_descriptor_;
  metadata.reflection = Proto30100302_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400019::kFightStateFieldNumber;
const int Proto31400019::kFightTickSecFieldNumber;
const int Proto31400019::kFightTickUsecFieldNumber;
#endif  // !_MSC_VER

Proto31400019::Proto31400019()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400019::InitAsDefaultInstance() {
}

Proto31400019::Proto31400019(const Proto31400019& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400019::SharedCtor() {
  _cached_size_ = 0;
  fight_state_ = 0;
  fight_tick_sec_ = 0;
  fight_tick_usec_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400019::~Proto31400019() {
  SharedDtor();
}

void Proto31400019::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400019::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400019::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400019_descriptor_;
}

const Proto31400019& Proto31400019::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400019* Proto31400019::default_instance_ = NULL;

Proto31400019* Proto31400019::New() const {
  return new Proto31400019;
}

void Proto31400019::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fight_state_ = 0;
    fight_tick_sec_ = 0;
    fight_tick_usec_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400019::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fight_state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_state_)));
          set_has_fight_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_fight_tick_sec;
        break;
      }
      
      // optional int32 fight_tick_sec = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_tick_sec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_tick_sec_)));
          set_has_fight_tick_sec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_fight_tick_usec;
        break;
      }
      
      // optional int32 fight_tick_usec = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_tick_usec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_tick_usec_)));
          set_has_fight_tick_usec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400019::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fight_state = 1;
  if (has_fight_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fight_state(), output);
  }
  
  // optional int32 fight_tick_sec = 2;
  if (has_fight_tick_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fight_tick_sec(), output);
  }
  
  // optional int32 fight_tick_usec = 3;
  if (has_fight_tick_usec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fight_tick_usec(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400019::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fight_state = 1;
  if (has_fight_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fight_state(), target);
  }
  
  // optional int32 fight_tick_sec = 2;
  if (has_fight_tick_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fight_tick_sec(), target);
  }
  
  // optional int32 fight_tick_usec = 3;
  if (has_fight_tick_usec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fight_tick_usec(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400019::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fight_state = 1;
    if (has_fight_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_state());
    }
    
    // optional int32 fight_tick_sec = 2;
    if (has_fight_tick_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_tick_sec());
    }
    
    // optional int32 fight_tick_usec = 3;
    if (has_fight_tick_usec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_tick_usec());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400019::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400019* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400019*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400019::MergeFrom(const Proto31400019& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fight_state()) {
      set_fight_state(from.fight_state());
    }
    if (from.has_fight_tick_sec()) {
      set_fight_tick_sec(from.fight_tick_sec());
    }
    if (from.has_fight_tick_usec()) {
      set_fight_tick_usec(from.fight_tick_usec());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400019::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400019::CopyFrom(const Proto31400019& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400019::IsInitialized() const {
  
  return true;
}

void Proto31400019::Swap(Proto31400019* other) {
  if (other != this) {
    std::swap(fight_state_, other->fight_state_);
    std::swap(fight_tick_sec_, other->fight_tick_sec_);
    std::swap(fight_tick_usec_, other->fight_tick_usec_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400019::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400019_descriptor_;
  metadata.reflection = Proto31400019_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400602::kCurLabelFieldNumber;
const int Proto30400602::kExpireTickFieldNumber;
#endif  // !_MSC_VER

Proto30400602::Proto30400602()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400602::InitAsDefaultInstance() {
}

Proto30400602::Proto30400602(const Proto30400602& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400602::SharedCtor() {
  _cached_size_ = 0;
  cur_label_ = 0;
  expire_tick_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400602::~Proto30400602() {
  SharedDtor();
}

void Proto30400602::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400602::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400602::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400602_descriptor_;
}

const Proto30400602& Proto30400602::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30400602* Proto30400602::default_instance_ = NULL;

Proto30400602* Proto30400602::New() const {
  return new Proto30400602;
}

void Proto30400602::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_label_ = 0;
    expire_tick_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400602::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_label = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_label_)));
          set_has_cur_label();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_expire_tick;
        break;
      }
      
      // optional int64 expire_tick = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_expire_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &expire_tick_)));
          set_has_expire_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400602::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_label = 1;
  if (has_cur_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_label(), output);
  }
  
  // optional int64 expire_tick = 2;
  if (has_expire_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->expire_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400602::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_label = 1;
  if (has_cur_label()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_label(), target);
  }
  
  // optional int64 expire_tick = 2;
  if (has_expire_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->expire_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400602::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_label = 1;
    if (has_cur_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_label());
    }
    
    // optional int64 expire_tick = 2;
    if (has_expire_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->expire_tick());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400602::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400602* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400602*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400602::MergeFrom(const Proto30400602& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_label()) {
      set_cur_label(from.cur_label());
    }
    if (from.has_expire_tick()) {
      set_expire_tick(from.expire_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400602::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400602::CopyFrom(const Proto30400602& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400602::IsInitialized() const {
  
  return true;
}

void Proto30400602::Swap(Proto30400602* other) {
  if (other != this) {
    std::swap(cur_label_, other->cur_label_);
    std::swap(expire_tick_, other->expire_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400602::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400602_descriptor_;
  metadata.reflection = Proto30400602_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30401001::kMonsterTypeFieldNumber;
const int Proto30401001::kMonsterAmountFieldNumber;
const int Proto30401001::kMonsterLeftFieldNumber;
const int Proto30401001::kAwardItemsFieldNumber;
#endif  // !_MSC_VER

Proto30401001::Proto30401001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30401001::InitAsDefaultInstance() {
}

Proto30401001::Proto30401001(const Proto30401001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30401001::SharedCtor() {
  _cached_size_ = 0;
  monster_type_ = 0;
  monster_amount_ = 0;
  monster_left_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30401001::~Proto30401001() {
  SharedDtor();
}

void Proto30401001::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30401001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30401001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30401001_descriptor_;
}

const Proto30401001& Proto30401001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30401001* Proto30401001::default_instance_ = NULL;

Proto30401001* Proto30401001::New() const {
  return new Proto30401001;
}

void Proto30401001::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    monster_type_ = 0;
    monster_amount_ = 0;
    monster_left_ = 0;
  }
  award_items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30401001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 monster_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &monster_type_)));
          set_has_monster_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_monster_amount;
        break;
      }
      
      // optional int32 monster_amount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_monster_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &monster_amount_)));
          set_has_monster_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_monster_left;
        break;
      }
      
      // optional int32 monster_left = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_monster_left:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &monster_left_)));
          set_has_monster_left();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_award_items;
        break;
      }
      
      // repeated .ProtoItem award_items = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_award_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_award_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_award_items;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30401001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 monster_type = 1;
  if (has_monster_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->monster_type(), output);
  }
  
  // optional int32 monster_amount = 2;
  if (has_monster_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->monster_amount(), output);
  }
  
  // optional int32 monster_left = 3;
  if (has_monster_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->monster_left(), output);
  }
  
  // repeated .ProtoItem award_items = 4;
  for (int i = 0; i < this->award_items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->award_items(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30401001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 monster_type = 1;
  if (has_monster_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->monster_type(), target);
  }
  
  // optional int32 monster_amount = 2;
  if (has_monster_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->monster_amount(), target);
  }
  
  // optional int32 monster_left = 3;
  if (has_monster_left()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->monster_left(), target);
  }
  
  // repeated .ProtoItem award_items = 4;
  for (int i = 0; i < this->award_items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->award_items(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30401001::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 monster_type = 1;
    if (has_monster_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->monster_type());
    }
    
    // optional int32 monster_amount = 2;
    if (has_monster_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->monster_amount());
    }
    
    // optional int32 monster_left = 3;
    if (has_monster_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->monster_left());
    }
    
  }
  // repeated .ProtoItem award_items = 4;
  total_size += 1 * this->award_items_size();
  for (int i = 0; i < this->award_items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->award_items(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30401001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30401001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30401001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30401001::MergeFrom(const Proto30401001& from) {
  GOOGLE_CHECK_NE(&from, this);
  award_items_.MergeFrom(from.award_items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_monster_type()) {
      set_monster_type(from.monster_type());
    }
    if (from.has_monster_amount()) {
      set_monster_amount(from.monster_amount());
    }
    if (from.has_monster_left()) {
      set_monster_left(from.monster_left());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30401001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30401001::CopyFrom(const Proto30401001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30401001::IsInitialized() const {
  
  return true;
}

void Proto30401001::Swap(Proto30401001* other) {
  if (other != this) {
    std::swap(monster_type_, other->monster_type_);
    std::swap(monster_amount_, other->monster_amount_);
    std::swap(monster_left_, other->monster_left_);
    award_items_.Swap(&other->award_items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30401001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30401001_descriptor_;
  metadata.reflection = Proto30401001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400003::kSyncFlagFieldNumber;
#endif  // !_MSC_VER

Proto31400003::Proto31400003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400003::InitAsDefaultInstance() {
}

Proto31400003::Proto31400003(const Proto31400003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400003::SharedCtor() {
  _cached_size_ = 0;
  sync_flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400003::~Proto31400003() {
  SharedDtor();
}

void Proto31400003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400003_descriptor_;
}

const Proto31400003& Proto31400003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400003* Proto31400003::default_instance_ = NULL;

Proto31400003* Proto31400003::New() const {
  return new Proto31400003;
}

void Proto31400003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    sync_flag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sync_flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sync_flag_)));
          set_has_sync_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 sync_flag = 1;
  if (has_sync_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sync_flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 sync_flag = 1;
  if (has_sync_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sync_flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 sync_flag = 1;
    if (has_sync_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sync_flag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400003::MergeFrom(const Proto31400003& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sync_flag()) {
      set_sync_flag(from.sync_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400003::CopyFrom(const Proto31400003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400003::IsInitialized() const {
  
  return true;
}

void Proto31400003::Swap(Proto31400003* other) {
  if (other != this) {
    std::swap(sync_flag_, other->sync_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400003_descriptor_;
  metadata.reflection = Proto31400003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400006::kSyncFlagFieldNumber;
const int Proto30400006::kFinishTypeFieldNumber;
#endif  // !_MSC_VER

Proto30400006::Proto30400006()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400006::InitAsDefaultInstance() {
}

Proto30400006::Proto30400006(const Proto30400006& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400006::SharedCtor() {
  _cached_size_ = 0;
  sync_flag_ = 0;
  finish_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400006::~Proto30400006() {
  SharedDtor();
}

void Proto30400006::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400006::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400006::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400006_descriptor_;
}

const Proto30400006& Proto30400006::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30400006* Proto30400006::default_instance_ = NULL;

Proto30400006* Proto30400006::New() const {
  return new Proto30400006;
}

void Proto30400006::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    sync_flag_ = 0;
    finish_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400006::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sync_flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sync_flag_)));
          set_has_sync_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_finish_type;
        break;
      }
      
      // optional int32 finish_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_finish_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &finish_type_)));
          set_has_finish_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400006::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 sync_flag = 1;
  if (has_sync_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sync_flag(), output);
  }
  
  // optional int32 finish_type = 2;
  if (has_finish_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->finish_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400006::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 sync_flag = 1;
  if (has_sync_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sync_flag(), target);
  }
  
  // optional int32 finish_type = 2;
  if (has_finish_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->finish_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400006::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 sync_flag = 1;
    if (has_sync_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sync_flag());
    }
    
    // optional int32 finish_type = 2;
    if (has_finish_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->finish_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400006::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400006* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400006*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400006::MergeFrom(const Proto30400006& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sync_flag()) {
      set_sync_flag(from.sync_flag());
    }
    if (from.has_finish_type()) {
      set_finish_type(from.finish_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400006::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400006::CopyFrom(const Proto30400006& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400006::IsInitialized() const {
  
  return true;
}

void Proto30400006::Swap(Proto30400006* other) {
  if (other != this) {
    std::swap(sync_flag_, other->sync_flag_);
    std::swap(finish_type_, other->finish_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400006::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400006_descriptor_;
  metadata.reflection = Proto30400006_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400211::kTeamIndexFieldNumber;
const int Proto31400211::kLeaderIdFieldNumber;
const int Proto31400211::kTeamerSetFieldNumber;
const int Proto31400211::kReplacementSetFieldNumber;
const int Proto31400211::kTravelTeamFieldNumber;
#endif  // !_MSC_VER

Proto31400211::Proto31400211()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400211::InitAsDefaultInstance() {
}

Proto31400211::Proto31400211(const Proto31400211& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400211::SharedCtor() {
  _cached_size_ = 0;
  team_index_ = 0;
  leader_id_ = GOOGLE_LONGLONG(0);
  travel_team_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400211::~Proto31400211() {
  SharedDtor();
}

void Proto31400211::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400211::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400211::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400211_descriptor_;
}

const Proto31400211& Proto31400211::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400211* Proto31400211::default_instance_ = NULL;

Proto31400211* Proto31400211::New() const {
  return new Proto31400211;
}

void Proto31400211::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    team_index_ = 0;
    leader_id_ = GOOGLE_LONGLONG(0);
    travel_team_ = 0;
  }
  teamer_set_.Clear();
  replacement_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400211::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 team_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_index_)));
          set_has_team_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_leader_id;
        break;
      }
      
      // optional int64 leader_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leader_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &leader_id_)));
          set_has_leader_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_teamer_set;
        break;
      }
      
      // repeated int64 teamer_set = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_teamer_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24, input, this->mutable_teamer_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_teamer_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_teamer_set;
        if (input->ExpectTag(32)) goto parse_replacement_set;
        break;
      }
      
      // repeated int64 replacement_set = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_replacement_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 32, input, this->mutable_replacement_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_replacement_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_replacement_set;
        if (input->ExpectTag(40)) goto parse_travel_team;
        break;
      }
      
      // optional int32 travel_team = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_travel_team:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &travel_team_)));
          set_has_travel_team();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400211::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 team_index = 1;
  if (has_team_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->team_index(), output);
  }
  
  // optional int64 leader_id = 2;
  if (has_leader_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->leader_id(), output);
  }
  
  // repeated int64 teamer_set = 3;
  for (int i = 0; i < this->teamer_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->teamer_set(i), output);
  }
  
  // repeated int64 replacement_set = 4;
  for (int i = 0; i < this->replacement_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->replacement_set(i), output);
  }
  
  // optional int32 travel_team = 5;
  if (has_travel_team()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->travel_team(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400211::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 team_index = 1;
  if (has_team_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->team_index(), target);
  }
  
  // optional int64 leader_id = 2;
  if (has_leader_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->leader_id(), target);
  }
  
  // repeated int64 teamer_set = 3;
  for (int i = 0; i < this->teamer_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->teamer_set(i), target);
  }
  
  // repeated int64 replacement_set = 4;
  for (int i = 0; i < this->replacement_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(4, this->replacement_set(i), target);
  }
  
  // optional int32 travel_team = 5;
  if (has_travel_team()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->travel_team(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400211::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 team_index = 1;
    if (has_team_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team_index());
    }
    
    // optional int64 leader_id = 2;
    if (has_leader_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->leader_id());
    }
    
    // optional int32 travel_team = 5;
    if (has_travel_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->travel_team());
    }
    
  }
  // repeated int64 teamer_set = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->teamer_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->teamer_set(i));
    }
    total_size += 1 * this->teamer_set_size() + data_size;
  }
  
  // repeated int64 replacement_set = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->replacement_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->replacement_set(i));
    }
    total_size += 1 * this->replacement_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400211::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400211* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400211*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400211::MergeFrom(const Proto31400211& from) {
  GOOGLE_CHECK_NE(&from, this);
  teamer_set_.MergeFrom(from.teamer_set_);
  replacement_set_.MergeFrom(from.replacement_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_index()) {
      set_team_index(from.team_index());
    }
    if (from.has_leader_id()) {
      set_leader_id(from.leader_id());
    }
    if (from.has_travel_team()) {
      set_travel_team(from.travel_team());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400211::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400211::CopyFrom(const Proto31400211& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400211::IsInitialized() const {
  
  return true;
}

void Proto31400211::Swap(Proto31400211* other) {
  if (other != this) {
    std::swap(team_index_, other->team_index_);
    std::swap(leader_id_, other->leader_id_);
    teamer_set_.Swap(&other->teamer_set_);
    replacement_set_.Swap(&other->replacement_set_);
    std::swap(travel_team_, other->travel_team_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400211::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400211_descriptor_;
  metadata.reflection = Proto31400211_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400112::kBeastSetFieldNumber;
#endif  // !_MSC_VER

Proto31400112::Proto31400112()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400112::InitAsDefaultInstance() {
}

Proto31400112::Proto31400112(const Proto31400112& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400112::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400112::~Proto31400112() {
  SharedDtor();
}

void Proto31400112::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400112::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400112::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400112_descriptor_;
}

const Proto31400112& Proto31400112::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400112* Proto31400112::default_instance_ = NULL;

Proto31400112* Proto31400112::New() const {
  return new Proto31400112;
}

void Proto31400112::Clear() {
  beast_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400112::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoBeast beast_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_beast_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_beast_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_beast_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400112::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoBeast beast_set = 1;
  for (int i = 0; i < this->beast_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->beast_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400112::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoBeast beast_set = 1;
  for (int i = 0; i < this->beast_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->beast_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400112::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoBeast beast_set = 1;
  total_size += 1 * this->beast_set_size();
  for (int i = 0; i < this->beast_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->beast_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400112::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400112* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400112*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400112::MergeFrom(const Proto31400112& from) {
  GOOGLE_CHECK_NE(&from, this);
  beast_set_.MergeFrom(from.beast_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400112::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400112::CopyFrom(const Proto31400112& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400112::IsInitialized() const {
  
  return true;
}

void Proto31400112::Swap(Proto31400112* other) {
  if (other != this) {
    beast_set_.Swap(&other->beast_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400112::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400112_descriptor_;
  metadata.reflection = Proto31400112_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30810101::kAccountFieldNumber;
#endif  // !_MSC_VER

Proto30810101::Proto30810101()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30810101::InitAsDefaultInstance() {
}

Proto30810101::Proto30810101(const Proto30810101& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30810101::SharedCtor() {
  _cached_size_ = 0;
  account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30810101::~Proto30810101() {
  SharedDtor();
}

void Proto30810101::SharedDtor() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (this != default_instance_) {
  }
}

void Proto30810101::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30810101::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30810101_descriptor_;
}

const Proto30810101& Proto30810101::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30810101* Proto30810101::default_instance_ = NULL;

Proto30810101* Proto30810101::New() const {
  return new Proto30810101;
}

void Proto30810101::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_account()) {
      if (account_ != &::google::protobuf::internal::kEmptyString) {
        account_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30810101::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30810101::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->account(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30810101::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30810101::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30810101::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30810101* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30810101*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30810101::MergeFrom(const Proto30810101& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_account(from.account());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30810101::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30810101::CopyFrom(const Proto30810101& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30810101::IsInitialized() const {
  
  return true;
}

void Proto30810101::Swap(Proto30810101* other) {
  if (other != this) {
    std::swap(account_, other->account_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30810101::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30810101_descriptor_;
  metadata.reflection = Proto30810101_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30860101::kRoleNameFieldNumber;
const int Proto30860101::kLevelFieldNumber;
const int Proto30860101::kSexFieldNumber;
const int Proto30860101::kCareerFieldNumber;
#endif  // !_MSC_VER

Proto30860101::Proto30860101()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30860101::InitAsDefaultInstance() {
}

Proto30860101::Proto30860101(const Proto30860101& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30860101::SharedCtor() {
  _cached_size_ = 0;
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  level_ = 0;
  sex_ = 0;
  career_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30860101::~Proto30860101() {
  SharedDtor();
}

void Proto30860101::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto30860101::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30860101::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30860101_descriptor_;
}

const Proto30860101& Proto30860101::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30860101* Proto30860101::default_instance_ = NULL;

Proto30860101* Proto30860101::New() const {
  return new Proto30860101;
}

void Proto30860101::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
    level_ = 0;
    sex_ = 0;
    career_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30860101::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string role_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }
      
      // optional int32 level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_sex;
        break;
      }
      
      // optional int32 sex = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_career;
        break;
      }
      
      // optional int32 career = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_career:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &career_)));
          set_has_career();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30860101::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string role_name = 1;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->role_name(), output);
  }
  
  // optional int32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }
  
  // optional int32 sex = 3;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sex(), output);
  }
  
  // optional int32 career = 4;
  if (has_career()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->career(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30860101::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string role_name = 1;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->role_name(), target);
  }
  
  // optional int32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }
  
  // optional int32 sex = 3;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sex(), target);
  }
  
  // optional int32 career = 4;
  if (has_career()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->career(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30860101::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string role_name = 1;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
    // optional int32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 sex = 3;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }
    
    // optional int32 career = 4;
    if (has_career()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->career());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30860101::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30860101* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30860101*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30860101::MergeFrom(const Proto30860101& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_career()) {
      set_career(from.career());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30860101::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30860101::CopyFrom(const Proto30860101& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30860101::IsInitialized() const {
  
  return true;
}

void Proto30860101::Swap(Proto30860101* other) {
  if (other != this) {
    std::swap(role_name_, other->role_name_);
    std::swap(level_, other->level_);
    std::swap(sex_, other->sex_);
    std::swap(career_, other->career_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30860101::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30860101_descriptor_;
  metadata.reflection = Proto30860101_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30200117::kShowContentFieldNumber;
const int Proto30200117::kColorFieldNumber;
const int Proto30200117::kChannelTypeFieldNumber;
const int Proto30200117::kFlauntTypeFieldNumber;
const int Proto30200117::kRoleIdFieldNumber;
const int Proto30200117::kMsgFieldNumber;
const int Proto30200117::kBindStatusFieldNumber;
#endif  // !_MSC_VER

Proto30200117::Proto30200117()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30200117::InitAsDefaultInstance() {
}

Proto30200117::Proto30200117(const Proto30200117& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30200117::SharedCtor() {
  _cached_size_ = 0;
  show_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  color_ = 0;
  channel_type_ = 0;
  flaunt_type_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bind_status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30200117::~Proto30200117() {
  SharedDtor();
}

void Proto30200117::SharedDtor() {
  if (show_content_ != &::google::protobuf::internal::kEmptyString) {
    delete show_content_;
  }
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_;
  }
  if (this != default_instance_) {
  }
}

void Proto30200117::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30200117::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30200117_descriptor_;
}

const Proto30200117& Proto30200117::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30200117* Proto30200117::default_instance_ = NULL;

Proto30200117* Proto30200117::New() const {
  return new Proto30200117;
}

void Proto30200117::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_show_content()) {
      if (show_content_ != &::google::protobuf::internal::kEmptyString) {
        show_content_->clear();
      }
    }
    color_ = 0;
    channel_type_ = 0;
    flaunt_type_ = 0;
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_msg()) {
      if (msg_ != &::google::protobuf::internal::kEmptyString) {
        msg_->clear();
      }
    }
    bind_status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30200117::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string show_content = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_show_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->show_content().data(), this->show_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_color;
        break;
      }
      
      // optional int32 color = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &color_)));
          set_has_color();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_channel_type;
        break;
      }
      
      // optional int32 channel_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_channel_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_type_)));
          set_has_channel_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_flaunt_type;
        break;
      }
      
      // optional int32 flaunt_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flaunt_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flaunt_type_)));
          set_has_flaunt_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_msg;
        break;
      }
      
      // optional bytes msg = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_bind_status;
        break;
      }
      
      // optional int32 bind_status = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bind_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bind_status_)));
          set_has_bind_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30200117::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string show_content = 1;
  if (has_show_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->show_content().data(), this->show_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->show_content(), output);
  }
  
  // optional int32 color = 2;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->color(), output);
  }
  
  // optional int32 channel_type = 3;
  if (has_channel_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channel_type(), output);
  }
  
  // optional int32 flaunt_type = 4;
  if (has_flaunt_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->flaunt_type(), output);
  }
  
  // optional int64 role_id = 5;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->role_id(), output);
  }
  
  // optional bytes msg = 6;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      6, this->msg(), output);
  }
  
  // optional int32 bind_status = 7;
  if (has_bind_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->bind_status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30200117::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string show_content = 1;
  if (has_show_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->show_content().data(), this->show_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->show_content(), target);
  }
  
  // optional int32 color = 2;
  if (has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->color(), target);
  }
  
  // optional int32 channel_type = 3;
  if (has_channel_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channel_type(), target);
  }
  
  // optional int32 flaunt_type = 4;
  if (has_flaunt_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->flaunt_type(), target);
  }
  
  // optional int64 role_id = 5;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->role_id(), target);
  }
  
  // optional bytes msg = 6;
  if (has_msg()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->msg(), target);
  }
  
  // optional int32 bind_status = 7;
  if (has_bind_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->bind_status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30200117::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string show_content = 1;
    if (has_show_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->show_content());
    }
    
    // optional int32 color = 2;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->color());
    }
    
    // optional int32 channel_type = 3;
    if (has_channel_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->channel_type());
    }
    
    // optional int32 flaunt_type = 4;
    if (has_flaunt_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flaunt_type());
    }
    
    // optional int64 role_id = 5;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional bytes msg = 6;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->msg());
    }
    
    // optional int32 bind_status = 7;
    if (has_bind_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bind_status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30200117::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30200117* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30200117*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30200117::MergeFrom(const Proto30200117& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_show_content()) {
      set_show_content(from.show_content());
    }
    if (from.has_color()) {
      set_color(from.color());
    }
    if (from.has_channel_type()) {
      set_channel_type(from.channel_type());
    }
    if (from.has_flaunt_type()) {
      set_flaunt_type(from.flaunt_type());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_msg()) {
      set_msg(from.msg());
    }
    if (from.has_bind_status()) {
      set_bind_status(from.bind_status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30200117::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30200117::CopyFrom(const Proto30200117& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30200117::IsInitialized() const {
  
  return true;
}

void Proto30200117::Swap(Proto30200117* other) {
  if (other != this) {
    std::swap(show_content_, other->show_content_);
    std::swap(color_, other->color_);
    std::swap(channel_type_, other->channel_type_);
    std::swap(flaunt_type_, other->flaunt_type_);
    std::swap(role_id_, other->role_id_);
    std::swap(msg_, other->msg_);
    std::swap(bind_status_, other->bind_status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30200117::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30200117_descriptor_;
  metadata.reflection = Proto30200117_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400013::kAddMoneyFieldNumber;
const int Proto31400013::kAddItemFieldNumber;
const int Proto31400013::kDropIdFieldNumber;
const int Proto31400013::kSortIdFieldNumber;
const int Proto31400013::kSrcIdFieldNumber;
#endif  // !_MSC_VER

Proto31400013::Proto31400013()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400013::InitAsDefaultInstance() {
  add_money_ = const_cast< ::ProtoMoney*>(&::ProtoMoney::default_instance());
  add_item_ = const_cast< ::ProtoItem*>(&::ProtoItem::default_instance());
}

Proto31400013::Proto31400013(const Proto31400013& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400013::SharedCtor() {
  _cached_size_ = 0;
  add_money_ = NULL;
  add_item_ = NULL;
  drop_id_ = GOOGLE_LONGLONG(0);
  sort_id_ = 0;
  src_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400013::~Proto31400013() {
  SharedDtor();
}

void Proto31400013::SharedDtor() {
  if (this != default_instance_) {
    delete add_money_;
    delete add_item_;
  }
}

void Proto31400013::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400013::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400013_descriptor_;
}

const Proto31400013& Proto31400013::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400013* Proto31400013::default_instance_ = NULL;

Proto31400013* Proto31400013::New() const {
  return new Proto31400013;
}

void Proto31400013::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_add_money()) {
      if (add_money_ != NULL) add_money_->::ProtoMoney::Clear();
    }
    if (has_add_item()) {
      if (add_item_ != NULL) add_item_->::ProtoItem::Clear();
    }
    drop_id_ = GOOGLE_LONGLONG(0);
    sort_id_ = 0;
    src_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400013::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoMoney add_money = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_add_money()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_add_item;
        break;
      }
      
      // optional .ProtoItem add_item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_add_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_drop_id;
        break;
      }
      
      // optional int64 drop_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_drop_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &drop_id_)));
          set_has_drop_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_sort_id;
        break;
      }
      
      // optional int32 sort_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sort_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sort_id_)));
          set_has_sort_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_src_id;
        break;
      }
      
      // optional int64 src_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_src_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &src_id_)));
          set_has_src_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400013::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoMoney add_money = 1;
  if (has_add_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->add_money(), output);
  }
  
  // optional .ProtoItem add_item = 2;
  if (has_add_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->add_item(), output);
  }
  
  // optional int64 drop_id = 3;
  if (has_drop_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->drop_id(), output);
  }
  
  // optional int32 sort_id = 4;
  if (has_sort_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sort_id(), output);
  }
  
  // optional int64 src_id = 5;
  if (has_src_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->src_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400013::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoMoney add_money = 1;
  if (has_add_money()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->add_money(), target);
  }
  
  // optional .ProtoItem add_item = 2;
  if (has_add_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->add_item(), target);
  }
  
  // optional int64 drop_id = 3;
  if (has_drop_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->drop_id(), target);
  }
  
  // optional int32 sort_id = 4;
  if (has_sort_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sort_id(), target);
  }
  
  // optional int64 src_id = 5;
  if (has_src_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->src_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400013::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoMoney add_money = 1;
    if (has_add_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->add_money());
    }
    
    // optional .ProtoItem add_item = 2;
    if (has_add_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->add_item());
    }
    
    // optional int64 drop_id = 3;
    if (has_drop_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->drop_id());
    }
    
    // optional int32 sort_id = 4;
    if (has_sort_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sort_id());
    }
    
    // optional int64 src_id = 5;
    if (has_src_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->src_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400013::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400013* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400013*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400013::MergeFrom(const Proto31400013& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_add_money()) {
      mutable_add_money()->::ProtoMoney::MergeFrom(from.add_money());
    }
    if (from.has_add_item()) {
      mutable_add_item()->::ProtoItem::MergeFrom(from.add_item());
    }
    if (from.has_drop_id()) {
      set_drop_id(from.drop_id());
    }
    if (from.has_sort_id()) {
      set_sort_id(from.sort_id());
    }
    if (from.has_src_id()) {
      set_src_id(from.src_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400013::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400013::CopyFrom(const Proto31400013& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400013::IsInitialized() const {
  
  return true;
}

void Proto31400013::Swap(Proto31400013* other) {
  if (other != this) {
    std::swap(add_money_, other->add_money_);
    std::swap(add_item_, other->add_item_);
    std::swap(drop_id_, other->drop_id_);
    std::swap(sort_id_, other->sort_id_);
    std::swap(src_id_, other->src_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400013::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400013_descriptor_;
  metadata.reflection = Proto31400013_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400012::kDropIdFieldNumber;
const int Proto30400012::kResultFlagFieldNumber;
#endif  // !_MSC_VER

Proto30400012::Proto30400012()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400012::InitAsDefaultInstance() {
}

Proto30400012::Proto30400012(const Proto30400012& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400012::SharedCtor() {
  _cached_size_ = 0;
  drop_id_ = GOOGLE_LONGLONG(0);
  result_flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400012::~Proto30400012() {
  SharedDtor();
}

void Proto30400012::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400012::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400012::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400012_descriptor_;
}

const Proto30400012& Proto30400012::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30400012* Proto30400012::default_instance_ = NULL;

Proto30400012* Proto30400012::New() const {
  return new Proto30400012;
}

void Proto30400012::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    drop_id_ = GOOGLE_LONGLONG(0);
    result_flag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400012::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 drop_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &drop_id_)));
          set_has_drop_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result_flag;
        break;
      }
      
      // optional int32 result_flag = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_flag_)));
          set_has_result_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400012::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 drop_id = 1;
  if (has_drop_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->drop_id(), output);
  }
  
  // optional int32 result_flag = 2;
  if (has_result_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result_flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400012::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 drop_id = 1;
  if (has_drop_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->drop_id(), target);
  }
  
  // optional int32 result_flag = 2;
  if (has_result_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result_flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400012::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 drop_id = 1;
    if (has_drop_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->drop_id());
    }
    
    // optional int32 result_flag = 2;
    if (has_result_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result_flag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400012::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400012* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400012*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400012::MergeFrom(const Proto30400012& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_drop_id()) {
      set_drop_id(from.drop_id());
    }
    if (from.has_result_flag()) {
      set_result_flag(from.result_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400012::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400012::CopyFrom(const Proto30400012& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400012::IsInitialized() const {
  
  return true;
}

void Proto30400012::Swap(Proto30400012* other) {
  if (other != this) {
    std::swap(drop_id_, other->drop_id_);
    std::swap(result_flag_, other->result_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400012::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400012_descriptor_;
  metadata.reflection = Proto30400012_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto32101101::kRoleNameFieldNumber;
const int Proto32101101::kAccountFieldNumber;
const int Proto32101101::kRoleIdFieldNumber;
const int Proto32101101::kLevelFieldNumber;
const int Proto32101101::kSexFieldNumber;
const int Proto32101101::kAgentFieldNumber;
const int Proto32101101::kPlatformFieldNumber;
const int Proto32101101::kMarketFieldNumber;
const int Proto32101101::kServerFlagFieldNumber;
#endif  // !_MSC_VER

Proto32101101::Proto32101101()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto32101101::InitAsDefaultInstance() {
}

Proto32101101::Proto32101101(const Proto32101101& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto32101101::SharedCtor() {
  _cached_size_ = 0;
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  role_id_ = GOOGLE_LONGLONG(0);
  level_ = 0;
  sex_ = 0;
  agent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  market_ = 0;
  server_flag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto32101101::~Proto32101101() {
  SharedDtor();
}

void Proto32101101::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (agent_ != &::google::protobuf::internal::kEmptyString) {
    delete agent_;
  }
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    delete platform_;
  }
  if (server_flag_ != &::google::protobuf::internal::kEmptyString) {
    delete server_flag_;
  }
  if (this != default_instance_) {
  }
}

void Proto32101101::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto32101101::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto32101101_descriptor_;
}

const Proto32101101& Proto32101101::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto32101101* Proto32101101::default_instance_ = NULL;

Proto32101101* Proto32101101::New() const {
  return new Proto32101101;
}

void Proto32101101::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
    if (has_account()) {
      if (account_ != &::google::protobuf::internal::kEmptyString) {
        account_->clear();
      }
    }
    role_id_ = GOOGLE_LONGLONG(0);
    level_ = 0;
    sex_ = 0;
    if (has_agent()) {
      if (agent_ != &::google::protobuf::internal::kEmptyString) {
        agent_->clear();
      }
    }
    if (has_platform()) {
      if (platform_ != &::google::protobuf::internal::kEmptyString) {
        platform_->clear();
      }
    }
    market_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_server_flag()) {
      if (server_flag_ != &::google::protobuf::internal::kEmptyString) {
        server_flag_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto32101101::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string role_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_account;
        break;
      }
      
      // optional string account = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_level;
        break;
      }
      
      // optional int32 level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_sex;
        break;
      }
      
      // optional int32 sex = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_agent;
        break;
      }
      
      // optional string agent = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_agent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_agent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->agent().data(), this->agent().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_platform;
        break;
      }
      
      // optional string platform = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_platform:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->platform().data(), this->platform().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_market;
        break;
      }
      
      // optional int32 market = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_market:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &market_)));
          set_has_market();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_server_flag;
        break;
      }
      
      // optional string server_flag = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_server_flag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_flag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->server_flag().data(), this->server_flag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto32101101::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string role_name = 1;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->role_name(), output);
  }
  
  // optional string account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->account(), output);
  }
  
  // optional int64 role_id = 3;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->role_id(), output);
  }
  
  // optional int32 level = 4;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->level(), output);
  }
  
  // optional int32 sex = 5;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sex(), output);
  }
  
  // optional string agent = 6;
  if (has_agent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->agent().data(), this->agent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->agent(), output);
  }
  
  // optional string platform = 7;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->platform(), output);
  }
  
  // optional int32 market = 8;
  if (has_market()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->market(), output);
  }
  
  // optional string server_flag = 9;
  if (has_server_flag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_flag().data(), this->server_flag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->server_flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto32101101::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string role_name = 1;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->role_name(), target);
  }
  
  // optional string account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }
  
  // optional int64 role_id = 3;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->role_id(), target);
  }
  
  // optional int32 level = 4;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->level(), target);
  }
  
  // optional int32 sex = 5;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sex(), target);
  }
  
  // optional string agent = 6;
  if (has_agent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->agent().data(), this->agent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->agent(), target);
  }
  
  // optional string platform = 7;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->platform(), target);
  }
  
  // optional int32 market = 8;
  if (has_market()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->market(), target);
  }
  
  // optional string server_flag = 9;
  if (has_server_flag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_flag().data(), this->server_flag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->server_flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto32101101::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string role_name = 1;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
    // optional string account = 2;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }
    
    // optional int64 role_id = 3;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 level = 4;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 sex = 5;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }
    
    // optional string agent = 6;
    if (has_agent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->agent());
    }
    
    // optional string platform = 7;
    if (has_platform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platform());
    }
    
    // optional int32 market = 8;
    if (has_market()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->market());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string server_flag = 9;
    if (has_server_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_flag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto32101101::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto32101101* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto32101101*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto32101101::MergeFrom(const Proto32101101& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
    if (from.has_account()) {
      set_account(from.account());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_agent()) {
      set_agent(from.agent());
    }
    if (from.has_platform()) {
      set_platform(from.platform());
    }
    if (from.has_market()) {
      set_market(from.market());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_server_flag()) {
      set_server_flag(from.server_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto32101101::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto32101101::CopyFrom(const Proto32101101& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto32101101::IsInitialized() const {
  
  return true;
}

void Proto32101101::Swap(Proto32101101* other) {
  if (other != this) {
    std::swap(role_name_, other->role_name_);
    std::swap(account_, other->account_);
    std::swap(role_id_, other->role_id_);
    std::swap(level_, other->level_);
    std::swap(sex_, other->sex_);
    std::swap(agent_, other->agent_);
    std::swap(platform_, other->platform_);
    std::swap(market_, other->market_);
    std::swap(server_flag_, other->server_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto32101101::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto32101101_descriptor_;
  metadata.reflection = Proto32101101_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400423::kLeagueIndexFieldNumber;
const int Proto30400423::kLeagueNameFieldNumber;
#endif  // !_MSC_VER

Proto30400423::Proto30400423()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400423::InitAsDefaultInstance() {
}

Proto30400423::Proto30400423(const Proto30400423& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400423::SharedCtor() {
  _cached_size_ = 0;
  league_index_ = GOOGLE_LONGLONG(0);
  league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400423::~Proto30400423() {
  SharedDtor();
}

void Proto30400423::SharedDtor() {
  if (league_name_ != &::google::protobuf::internal::kEmptyString) {
    delete league_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto30400423::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400423::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400423_descriptor_;
}

const Proto30400423& Proto30400423::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30400423* Proto30400423::default_instance_ = NULL;

Proto30400423* Proto30400423::New() const {
  return new Proto30400423;
}

void Proto30400423::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_index_ = GOOGLE_LONGLONG(0);
    if (has_league_name()) {
      if (league_name_ != &::google::protobuf::internal::kEmptyString) {
        league_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400423::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 league_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_index_)));
          set_has_league_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_league_name;
        break;
      }
      
      // optional string league_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_league_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->league_name().data(), this->league_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400423::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->league_index(), output);
  }
  
  // optional string league_name = 2;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->league_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400423::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->league_index(), target);
  }
  
  // optional string league_name = 2;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->league_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400423::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 league_index = 1;
    if (has_league_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_index());
    }
    
    // optional string league_name = 2;
    if (has_league_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->league_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400423::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400423* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400423*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400423::MergeFrom(const Proto30400423& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_index()) {
      set_league_index(from.league_index());
    }
    if (from.has_league_name()) {
      set_league_name(from.league_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400423::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400423::CopyFrom(const Proto30400423& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400423::IsInitialized() const {
  
  return true;
}

void Proto30400423::Swap(Proto30400423* other) {
  if (other != this) {
    std::swap(league_index_, other->league_index_);
    std::swap(league_name_, other->league_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400423::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400423_descriptor_;
  metadata.reflection = Proto30400423_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31401401::kCycleIdFieldNumber;
const int Proto31401401::kAwardIndexFieldNumber;
const int Proto31401401::kCheckInPointFieldNumber;
const int Proto31401401::kLastTimeFieldNumber;
const int Proto31401401::kShowPointFieldNumber;
const int Proto31401401::kPopupFieldNumber;
const int Proto31401401::kChargeMoneyFieldNumber;
const int Proto31401401::kCheckTotalIndexFieldNumber;
const int Proto31401401::kTotalLastTimeFieldNumber;
#endif  // !_MSC_VER

Proto31401401::Proto31401401()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31401401::InitAsDefaultInstance() {
}

Proto31401401::Proto31401401(const Proto31401401& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31401401::SharedCtor() {
  _cached_size_ = 0;
  cycle_id_ = 0;
  award_index_ = 0;
  check_in_point_ = 0;
  last_time_ = 0;
  show_point_ = 0;
  popup_ = 0;
  charge_money_ = 0;
  check_total_index_ = 0;
  total_last_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31401401::~Proto31401401() {
  SharedDtor();
}

void Proto31401401::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31401401::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31401401::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31401401_descriptor_;
}

const Proto31401401& Proto31401401::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31401401* Proto31401401::default_instance_ = NULL;

Proto31401401* Proto31401401::New() const {
  return new Proto31401401;
}

void Proto31401401::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cycle_id_ = 0;
    award_index_ = 0;
    check_in_point_ = 0;
    last_time_ = 0;
    show_point_ = 0;
    popup_ = 0;
    charge_money_ = 0;
    check_total_index_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    total_last_time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31401401::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cycle_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cycle_id_)));
          set_has_cycle_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_award_index;
        break;
      }
      
      // optional int32 award_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_award_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &award_index_)));
          set_has_award_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_check_in_point;
        break;
      }
      
      // optional int32 check_in_point = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_check_in_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &check_in_point_)));
          set_has_check_in_point();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_last_time;
        break;
      }
      
      // optional int32 last_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_time_)));
          set_has_last_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_show_point;
        break;
      }
      
      // optional int32 show_point = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_show_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &show_point_)));
          set_has_show_point();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_popup;
        break;
      }
      
      // optional int32 popup = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_popup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &popup_)));
          set_has_popup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_charge_money;
        break;
      }
      
      // optional int32 charge_money = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_charge_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &charge_money_)));
          set_has_charge_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_check_total_index;
        break;
      }
      
      // optional int32 check_total_index = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_check_total_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &check_total_index_)));
          set_has_check_total_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_total_last_time;
        break;
      }
      
      // optional int32 total_last_time = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_last_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_last_time_)));
          set_has_total_last_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31401401::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cycle_id = 1;
  if (has_cycle_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cycle_id(), output);
  }
  
  // optional int32 award_index = 2;
  if (has_award_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->award_index(), output);
  }
  
  // optional int32 check_in_point = 3;
  if (has_check_in_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->check_in_point(), output);
  }
  
  // optional int32 last_time = 4;
  if (has_last_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->last_time(), output);
  }
  
  // optional int32 show_point = 5;
  if (has_show_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->show_point(), output);
  }
  
  // optional int32 popup = 6;
  if (has_popup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->popup(), output);
  }
  
  // optional int32 charge_money = 7;
  if (has_charge_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->charge_money(), output);
  }
  
  // optional int32 check_total_index = 8;
  if (has_check_total_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->check_total_index(), output);
  }
  
  // optional int32 total_last_time = 9;
  if (has_total_last_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->total_last_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31401401::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cycle_id = 1;
  if (has_cycle_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cycle_id(), target);
  }
  
  // optional int32 award_index = 2;
  if (has_award_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->award_index(), target);
  }
  
  // optional int32 check_in_point = 3;
  if (has_check_in_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->check_in_point(), target);
  }
  
  // optional int32 last_time = 4;
  if (has_last_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->last_time(), target);
  }
  
  // optional int32 show_point = 5;
  if (has_show_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->show_point(), target);
  }
  
  // optional int32 popup = 6;
  if (has_popup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->popup(), target);
  }
  
  // optional int32 charge_money = 7;
  if (has_charge_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->charge_money(), target);
  }
  
  // optional int32 check_total_index = 8;
  if (has_check_total_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->check_total_index(), target);
  }
  
  // optional int32 total_last_time = 9;
  if (has_total_last_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->total_last_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31401401::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cycle_id = 1;
    if (has_cycle_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cycle_id());
    }
    
    // optional int32 award_index = 2;
    if (has_award_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->award_index());
    }
    
    // optional int32 check_in_point = 3;
    if (has_check_in_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->check_in_point());
    }
    
    // optional int32 last_time = 4;
    if (has_last_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_time());
    }
    
    // optional int32 show_point = 5;
    if (has_show_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->show_point());
    }
    
    // optional int32 popup = 6;
    if (has_popup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->popup());
    }
    
    // optional int32 charge_money = 7;
    if (has_charge_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->charge_money());
    }
    
    // optional int32 check_total_index = 8;
    if (has_check_total_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->check_total_index());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 total_last_time = 9;
    if (has_total_last_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_last_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31401401::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31401401* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31401401*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31401401::MergeFrom(const Proto31401401& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cycle_id()) {
      set_cycle_id(from.cycle_id());
    }
    if (from.has_award_index()) {
      set_award_index(from.award_index());
    }
    if (from.has_check_in_point()) {
      set_check_in_point(from.check_in_point());
    }
    if (from.has_last_time()) {
      set_last_time(from.last_time());
    }
    if (from.has_show_point()) {
      set_show_point(from.show_point());
    }
    if (from.has_popup()) {
      set_popup(from.popup());
    }
    if (from.has_charge_money()) {
      set_charge_money(from.charge_money());
    }
    if (from.has_check_total_index()) {
      set_check_total_index(from.check_total_index());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_total_last_time()) {
      set_total_last_time(from.total_last_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31401401::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31401401::CopyFrom(const Proto31401401& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31401401::IsInitialized() const {
  
  return true;
}

void Proto31401401::Swap(Proto31401401* other) {
  if (other != this) {
    std::swap(cycle_id_, other->cycle_id_);
    std::swap(award_index_, other->award_index_);
    std::swap(check_in_point_, other->check_in_point_);
    std::swap(last_time_, other->last_time_);
    std::swap(show_point_, other->show_point_);
    std::swap(popup_, other->popup_);
    std::swap(charge_money_, other->charge_money_);
    std::swap(check_total_index_, other->check_total_index_);
    std::swap(total_last_time_, other->total_last_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31401401::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31401401_descriptor_;
  metadata.reflection = Proto31401401_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400106::kScriptIdFieldNumber;
const int Proto30400106::kScriptSortFieldNumber;
const int Proto30400106::kPrevSceneFieldNumber;
const int Proto30400106::kPrevPixelXFieldNumber;
const int Proto30400106::kPrevPixelYFieldNumber;
const int Proto30400106::kScriptRecordFieldNumber;
const int Proto30400106::kScriptTypeFieldNumber;
const int Proto30400106::kSpecialRecordFieldNumber;
const int Proto30400106::kPassPieceFieldNumber;
const int Proto30400106::kPassChapterFieldNumber;
const int Proto30400106::kPieceInfoFieldNumber;
const int Proto30400106::kFirstScriptFieldNumber;
const int Proto30400106::kPieceStarAwardedFieldNumber;
const int Proto30400106::kPrevBloodFieldNumber;
const int Proto30400106::kPrevMagicFieldNumber;
const int Proto30400106::kMaxFloorFieldNumber;
const int Proto30400106::kTrvlTotalPassFieldNumber;
const int Proto30400106::kLegendTopFieldNumber;
const int Proto30400106::kSwordTopFieldNumber;
const int Proto30400106::kSkillIdFieldNumber;
#endif  // !_MSC_VER

Proto30400106::Proto30400106()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400106::InitAsDefaultInstance() {
  legend_top_ = const_cast< ::ProtoLegendTop*>(&::ProtoLegendTop::default_instance());
  sword_top_ = const_cast< ::ProtoLegendTop*>(&::ProtoLegendTop::default_instance());
}

Proto30400106::Proto30400106(const Proto30400106& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400106::SharedCtor() {
  _cached_size_ = 0;
  script_id_ = 0;
  script_sort_ = 0;
  prev_scene_ = 0;
  prev_pixel_x_ = 0;
  prev_pixel_y_ = 0;
  pass_piece_ = 0;
  pass_chapter_ = 0;
  prev_blood_ = 0;
  prev_magic_ = 0;
  max_floor_ = 0;
  trvl_total_pass_ = 0;
  legend_top_ = NULL;
  sword_top_ = NULL;
  skill_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400106::~Proto30400106() {
  SharedDtor();
}

void Proto30400106::SharedDtor() {
  if (this != default_instance_) {
    delete legend_top_;
    delete sword_top_;
  }
}

void Proto30400106::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400106::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400106_descriptor_;
}

const Proto30400106& Proto30400106::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30400106* Proto30400106::default_instance_ = NULL;

Proto30400106* Proto30400106::New() const {
  return new Proto30400106;
}

void Proto30400106::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_id_ = 0;
    script_sort_ = 0;
    prev_scene_ = 0;
    prev_pixel_x_ = 0;
    prev_pixel_y_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    pass_piece_ = 0;
    pass_chapter_ = 0;
    prev_blood_ = 0;
    prev_magic_ = 0;
    max_floor_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    trvl_total_pass_ = 0;
    if (has_legend_top()) {
      if (legend_top_ != NULL) legend_top_->::ProtoLegendTop::Clear();
    }
    if (has_sword_top()) {
      if (sword_top_ != NULL) sword_top_->::ProtoLegendTop::Clear();
    }
    skill_id_ = 0;
  }
  script_record_.Clear();
  script_type_.Clear();
  special_record_.Clear();
  piece_info_.Clear();
  first_script_.Clear();
  piece_star_awarded_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400106::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_id_)));
          set_has_script_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_script_sort;
        break;
      }
      
      // optional int32 script_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_prev_scene;
        break;
      }
      
      // optional int32 prev_scene = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_prev_scene:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prev_scene_)));
          set_has_prev_scene();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_prev_pixel_x;
        break;
      }
      
      // optional int32 prev_pixel_x = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_prev_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prev_pixel_x_)));
          set_has_prev_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_prev_pixel_y;
        break;
      }
      
      // optional int32 prev_pixel_y = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_prev_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prev_pixel_y_)));
          set_has_prev_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_script_record;
        break;
      }
      
      // repeated .ProtoScriptRecord script_record = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_script_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_script_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_script_record;
        if (input->ExpectTag(58)) goto parse_script_type;
        break;
      }
      
      // repeated .ProtoScriptType script_type = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_script_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_script_type()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_script_type;
        if (input->ExpectTag(66)) goto parse_special_record;
        break;
      }
      
      // repeated .ProtoScriptFirstAward special_record = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_special_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_special_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_special_record;
        if (input->ExpectTag(72)) goto parse_pass_piece;
        break;
      }
      
      // optional int32 pass_piece = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pass_piece:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pass_piece_)));
          set_has_pass_piece();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_pass_chapter;
        break;
      }
      
      // optional int32 pass_chapter = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pass_chapter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pass_chapter_)));
          set_has_pass_chapter();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_piece_info;
        break;
      }
      
      // repeated .ProtoPieceInfo piece_info = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_piece_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_piece_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_piece_info;
        if (input->ExpectTag(96)) goto parse_first_script;
        break;
      }
      
      // repeated int32 first_script = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_script:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 96, input, this->mutable_first_script())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_first_script())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_first_script;
        if (input->ExpectTag(104)) goto parse_piece_star_awarded;
        break;
      }
      
      // repeated int32 piece_star_awarded = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_piece_star_awarded:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 104, input, this->mutable_piece_star_awarded())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_piece_star_awarded())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_piece_star_awarded;
        if (input->ExpectTag(112)) goto parse_prev_blood;
        break;
      }
      
      // optional int32 prev_blood = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_prev_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prev_blood_)));
          set_has_prev_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_prev_magic;
        break;
      }
      
      // optional int32 prev_magic = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_prev_magic:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prev_magic_)));
          set_has_prev_magic();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_max_floor;
        break;
      }
      
      // optional int32 max_floor = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_floor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_floor_)));
          set_has_max_floor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_trvl_total_pass;
        break;
      }
      
      // optional int32 trvl_total_pass = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_trvl_total_pass:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trvl_total_pass_)));
          set_has_trvl_total_pass();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_legend_top;
        break;
      }
      
      // optional .ProtoLegendTop legend_top = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_legend_top:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_legend_top()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_sword_top;
        break;
      }
      
      // optional .ProtoLegendTop sword_top = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sword_top:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sword_top()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_skill_id;
        break;
      }
      
      // optional int32 skill_id = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400106::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_id = 1;
  if (has_script_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_id(), output);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->script_sort(), output);
  }
  
  // optional int32 prev_scene = 3;
  if (has_prev_scene()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->prev_scene(), output);
  }
  
  // optional int32 prev_pixel_x = 4;
  if (has_prev_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->prev_pixel_x(), output);
  }
  
  // optional int32 prev_pixel_y = 5;
  if (has_prev_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->prev_pixel_y(), output);
  }
  
  // repeated .ProtoScriptRecord script_record = 6;
  for (int i = 0; i < this->script_record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->script_record(i), output);
  }
  
  // repeated .ProtoScriptType script_type = 7;
  for (int i = 0; i < this->script_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->script_type(i), output);
  }
  
  // repeated .ProtoScriptFirstAward special_record = 8;
  for (int i = 0; i < this->special_record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->special_record(i), output);
  }
  
  // optional int32 pass_piece = 9;
  if (has_pass_piece()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->pass_piece(), output);
  }
  
  // optional int32 pass_chapter = 10;
  if (has_pass_chapter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->pass_chapter(), output);
  }
  
  // repeated .ProtoPieceInfo piece_info = 11;
  for (int i = 0; i < this->piece_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->piece_info(i), output);
  }
  
  // repeated int32 first_script = 12;
  for (int i = 0; i < this->first_script_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      12, this->first_script(i), output);
  }
  
  // repeated int32 piece_star_awarded = 13;
  for (int i = 0; i < this->piece_star_awarded_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      13, this->piece_star_awarded(i), output);
  }
  
  // optional int32 prev_blood = 14;
  if (has_prev_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->prev_blood(), output);
  }
  
  // optional int32 prev_magic = 15;
  if (has_prev_magic()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->prev_magic(), output);
  }
  
  // optional int32 max_floor = 16;
  if (has_max_floor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->max_floor(), output);
  }
  
  // optional int32 trvl_total_pass = 17;
  if (has_trvl_total_pass()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->trvl_total_pass(), output);
  }
  
  // optional .ProtoLegendTop legend_top = 18;
  if (has_legend_top()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->legend_top(), output);
  }
  
  // optional .ProtoLegendTop sword_top = 19;
  if (has_sword_top()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->sword_top(), output);
  }
  
  // optional int32 skill_id = 20;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->skill_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400106::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_id = 1;
  if (has_script_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_id(), target);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->script_sort(), target);
  }
  
  // optional int32 prev_scene = 3;
  if (has_prev_scene()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->prev_scene(), target);
  }
  
  // optional int32 prev_pixel_x = 4;
  if (has_prev_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->prev_pixel_x(), target);
  }
  
  // optional int32 prev_pixel_y = 5;
  if (has_prev_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->prev_pixel_y(), target);
  }
  
  // repeated .ProtoScriptRecord script_record = 6;
  for (int i = 0; i < this->script_record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->script_record(i), target);
  }
  
  // repeated .ProtoScriptType script_type = 7;
  for (int i = 0; i < this->script_type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->script_type(i), target);
  }
  
  // repeated .ProtoScriptFirstAward special_record = 8;
  for (int i = 0; i < this->special_record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->special_record(i), target);
  }
  
  // optional int32 pass_piece = 9;
  if (has_pass_piece()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->pass_piece(), target);
  }
  
  // optional int32 pass_chapter = 10;
  if (has_pass_chapter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->pass_chapter(), target);
  }
  
  // repeated .ProtoPieceInfo piece_info = 11;
  for (int i = 0; i < this->piece_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->piece_info(i), target);
  }
  
  // repeated int32 first_script = 12;
  for (int i = 0; i < this->first_script_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(12, this->first_script(i), target);
  }
  
  // repeated int32 piece_star_awarded = 13;
  for (int i = 0; i < this->piece_star_awarded_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(13, this->piece_star_awarded(i), target);
  }
  
  // optional int32 prev_blood = 14;
  if (has_prev_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->prev_blood(), target);
  }
  
  // optional int32 prev_magic = 15;
  if (has_prev_magic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->prev_magic(), target);
  }
  
  // optional int32 max_floor = 16;
  if (has_max_floor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->max_floor(), target);
  }
  
  // optional int32 trvl_total_pass = 17;
  if (has_trvl_total_pass()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->trvl_total_pass(), target);
  }
  
  // optional .ProtoLegendTop legend_top = 18;
  if (has_legend_top()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->legend_top(), target);
  }
  
  // optional .ProtoLegendTop sword_top = 19;
  if (has_sword_top()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->sword_top(), target);
  }
  
  // optional int32 skill_id = 20;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->skill_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400106::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_id = 1;
    if (has_script_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_id());
    }
    
    // optional int32 script_sort = 2;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 prev_scene = 3;
    if (has_prev_scene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->prev_scene());
    }
    
    // optional int32 prev_pixel_x = 4;
    if (has_prev_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->prev_pixel_x());
    }
    
    // optional int32 prev_pixel_y = 5;
    if (has_prev_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->prev_pixel_y());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 pass_piece = 9;
    if (has_pass_piece()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pass_piece());
    }
    
    // optional int32 pass_chapter = 10;
    if (has_pass_chapter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pass_chapter());
    }
    
    // optional int32 prev_blood = 14;
    if (has_prev_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->prev_blood());
    }
    
    // optional int32 prev_magic = 15;
    if (has_prev_magic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->prev_magic());
    }
    
    // optional int32 max_floor = 16;
    if (has_max_floor()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_floor());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 trvl_total_pass = 17;
    if (has_trvl_total_pass()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->trvl_total_pass());
    }
    
    // optional .ProtoLegendTop legend_top = 18;
    if (has_legend_top()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->legend_top());
    }
    
    // optional .ProtoLegendTop sword_top = 19;
    if (has_sword_top()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sword_top());
    }
    
    // optional int32 skill_id = 20;
    if (has_skill_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
  }
  // repeated .ProtoScriptRecord script_record = 6;
  total_size += 1 * this->script_record_size();
  for (int i = 0; i < this->script_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->script_record(i));
  }
  
  // repeated .ProtoScriptType script_type = 7;
  total_size += 1 * this->script_type_size();
  for (int i = 0; i < this->script_type_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->script_type(i));
  }
  
  // repeated .ProtoScriptFirstAward special_record = 8;
  total_size += 1 * this->special_record_size();
  for (int i = 0; i < this->special_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->special_record(i));
  }
  
  // repeated .ProtoPieceInfo piece_info = 11;
  total_size += 1 * this->piece_info_size();
  for (int i = 0; i < this->piece_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->piece_info(i));
  }
  
  // repeated int32 first_script = 12;
  {
    int data_size = 0;
    for (int i = 0; i < this->first_script_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->first_script(i));
    }
    total_size += 1 * this->first_script_size() + data_size;
  }
  
  // repeated int32 piece_star_awarded = 13;
  {
    int data_size = 0;
    for (int i = 0; i < this->piece_star_awarded_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->piece_star_awarded(i));
    }
    total_size += 1 * this->piece_star_awarded_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400106::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400106* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400106*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400106::MergeFrom(const Proto30400106& from) {
  GOOGLE_CHECK_NE(&from, this);
  script_record_.MergeFrom(from.script_record_);
  script_type_.MergeFrom(from.script_type_);
  special_record_.MergeFrom(from.special_record_);
  piece_info_.MergeFrom(from.piece_info_);
  first_script_.MergeFrom(from.first_script_);
  piece_star_awarded_.MergeFrom(from.piece_star_awarded_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_id()) {
      set_script_id(from.script_id());
    }
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_prev_scene()) {
      set_prev_scene(from.prev_scene());
    }
    if (from.has_prev_pixel_x()) {
      set_prev_pixel_x(from.prev_pixel_x());
    }
    if (from.has_prev_pixel_y()) {
      set_prev_pixel_y(from.prev_pixel_y());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_pass_piece()) {
      set_pass_piece(from.pass_piece());
    }
    if (from.has_pass_chapter()) {
      set_pass_chapter(from.pass_chapter());
    }
    if (from.has_prev_blood()) {
      set_prev_blood(from.prev_blood());
    }
    if (from.has_prev_magic()) {
      set_prev_magic(from.prev_magic());
    }
    if (from.has_max_floor()) {
      set_max_floor(from.max_floor());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_trvl_total_pass()) {
      set_trvl_total_pass(from.trvl_total_pass());
    }
    if (from.has_legend_top()) {
      mutable_legend_top()->::ProtoLegendTop::MergeFrom(from.legend_top());
    }
    if (from.has_sword_top()) {
      mutable_sword_top()->::ProtoLegendTop::MergeFrom(from.sword_top());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400106::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400106::CopyFrom(const Proto30400106& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400106::IsInitialized() const {
  
  return true;
}

void Proto30400106::Swap(Proto30400106* other) {
  if (other != this) {
    std::swap(script_id_, other->script_id_);
    std::swap(script_sort_, other->script_sort_);
    std::swap(prev_scene_, other->prev_scene_);
    std::swap(prev_pixel_x_, other->prev_pixel_x_);
    std::swap(prev_pixel_y_, other->prev_pixel_y_);
    script_record_.Swap(&other->script_record_);
    script_type_.Swap(&other->script_type_);
    special_record_.Swap(&other->special_record_);
    std::swap(pass_piece_, other->pass_piece_);
    std::swap(pass_chapter_, other->pass_chapter_);
    piece_info_.Swap(&other->piece_info_);
    first_script_.Swap(&other->first_script_);
    piece_star_awarded_.Swap(&other->piece_star_awarded_);
    std::swap(prev_blood_, other->prev_blood_);
    std::swap(prev_magic_, other->prev_magic_);
    std::swap(max_floor_, other->max_floor_);
    std::swap(trvl_total_pass_, other->trvl_total_pass_);
    std::swap(legend_top_, other->legend_top_);
    std::swap(sword_top_, other->sword_top_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400106::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400106_descriptor_;
  metadata.reflection = Proto30400106_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31401402::kLivenessPointFieldNumber;
const int Proto31401402::kReceivedAwardIdxFieldNumber;
const int Proto31401402::kFinishedTasksFieldNumber;
#endif  // !_MSC_VER

Proto31401402::Proto31401402()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31401402::InitAsDefaultInstance() {
}

Proto31401402::Proto31401402(const Proto31401402& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31401402::SharedCtor() {
  _cached_size_ = 0;
  liveness_point_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31401402::~Proto31401402() {
  SharedDtor();
}

void Proto31401402::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31401402::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31401402::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31401402_descriptor_;
}

const Proto31401402& Proto31401402::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31401402* Proto31401402::default_instance_ = NULL;

Proto31401402* Proto31401402::New() const {
  return new Proto31401402;
}

void Proto31401402::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    liveness_point_ = 0;
  }
  received_award_idx_.Clear();
  finished_tasks_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31401402::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 liveness_point = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &liveness_point_)));
          set_has_liveness_point();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_received_award_idx;
        break;
      }
      
      // repeated int32 received_award_idx = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_received_award_idx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_received_award_idx())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_received_award_idx())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_received_award_idx;
        if (input->ExpectTag(24)) goto parse_finished_tasks;
        break;
      }
      
      // repeated int32 finished_tasks = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_finished_tasks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_finished_tasks())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_finished_tasks())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_finished_tasks;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31401402::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 liveness_point = 1;
  if (has_liveness_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->liveness_point(), output);
  }
  
  // repeated int32 received_award_idx = 2;
  for (int i = 0; i < this->received_award_idx_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->received_award_idx(i), output);
  }
  
  // repeated int32 finished_tasks = 3;
  for (int i = 0; i < this->finished_tasks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->finished_tasks(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31401402::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 liveness_point = 1;
  if (has_liveness_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->liveness_point(), target);
  }
  
  // repeated int32 received_award_idx = 2;
  for (int i = 0; i < this->received_award_idx_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->received_award_idx(i), target);
  }
  
  // repeated int32 finished_tasks = 3;
  for (int i = 0; i < this->finished_tasks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->finished_tasks(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31401402::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 liveness_point = 1;
    if (has_liveness_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->liveness_point());
    }
    
  }
  // repeated int32 received_award_idx = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->received_award_idx_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->received_award_idx(i));
    }
    total_size += 1 * this->received_award_idx_size() + data_size;
  }
  
  // repeated int32 finished_tasks = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->finished_tasks_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->finished_tasks(i));
    }
    total_size += 1 * this->finished_tasks_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31401402::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31401402* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31401402*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31401402::MergeFrom(const Proto31401402& from) {
  GOOGLE_CHECK_NE(&from, this);
  received_award_idx_.MergeFrom(from.received_award_idx_);
  finished_tasks_.MergeFrom(from.finished_tasks_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_liveness_point()) {
      set_liveness_point(from.liveness_point());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31401402::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31401402::CopyFrom(const Proto31401402& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31401402::IsInitialized() const {
  
  return true;
}

void Proto31401402::Swap(Proto31401402* other) {
  if (other != this) {
    std::swap(liveness_point_, other->liveness_point_);
    received_award_idx_.Swap(&other->received_award_idx_);
    finished_tasks_.Swap(&other->finished_tasks_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31401402::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31401402_descriptor_;
  metadata.reflection = Proto31401402_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400701::kTeamIndexFieldNumber;
const int Proto30400701::kLeaderIdFieldNumber;
const int Proto30400701::kTeamerSetFieldNumber;
const int Proto30400701::kReplacementSetFieldNumber;
const int Proto30400701::kTravelTeamFieldNumber;
#endif  // !_MSC_VER

Proto30400701::Proto30400701()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400701::InitAsDefaultInstance() {
}

Proto30400701::Proto30400701(const Proto30400701& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400701::SharedCtor() {
  _cached_size_ = 0;
  team_index_ = 0;
  leader_id_ = GOOGLE_LONGLONG(0);
  travel_team_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400701::~Proto30400701() {
  SharedDtor();
}

void Proto30400701::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400701::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400701::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400701_descriptor_;
}

const Proto30400701& Proto30400701::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30400701* Proto30400701::default_instance_ = NULL;

Proto30400701* Proto30400701::New() const {
  return new Proto30400701;
}

void Proto30400701::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    team_index_ = 0;
    leader_id_ = GOOGLE_LONGLONG(0);
    travel_team_ = 0;
  }
  teamer_set_.Clear();
  replacement_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400701::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 team_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_index_)));
          set_has_team_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_leader_id;
        break;
      }
      
      // optional int64 leader_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leader_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &leader_id_)));
          set_has_leader_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_teamer_set;
        break;
      }
      
      // repeated int64 teamer_set = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_teamer_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24, input, this->mutable_teamer_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_teamer_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_teamer_set;
        if (input->ExpectTag(32)) goto parse_replacement_set;
        break;
      }
      
      // repeated int64 replacement_set = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_replacement_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 32, input, this->mutable_replacement_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_replacement_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_replacement_set;
        if (input->ExpectTag(40)) goto parse_travel_team;
        break;
      }
      
      // optional int32 travel_team = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_travel_team:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &travel_team_)));
          set_has_travel_team();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400701::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 team_index = 1;
  if (has_team_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->team_index(), output);
  }
  
  // optional int64 leader_id = 2;
  if (has_leader_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->leader_id(), output);
  }
  
  // repeated int64 teamer_set = 3;
  for (int i = 0; i < this->teamer_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->teamer_set(i), output);
  }
  
  // repeated int64 replacement_set = 4;
  for (int i = 0; i < this->replacement_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->replacement_set(i), output);
  }
  
  // optional int32 travel_team = 5;
  if (has_travel_team()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->travel_team(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400701::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 team_index = 1;
  if (has_team_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->team_index(), target);
  }
  
  // optional int64 leader_id = 2;
  if (has_leader_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->leader_id(), target);
  }
  
  // repeated int64 teamer_set = 3;
  for (int i = 0; i < this->teamer_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->teamer_set(i), target);
  }
  
  // repeated int64 replacement_set = 4;
  for (int i = 0; i < this->replacement_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(4, this->replacement_set(i), target);
  }
  
  // optional int32 travel_team = 5;
  if (has_travel_team()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->travel_team(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400701::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 team_index = 1;
    if (has_team_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team_index());
    }
    
    // optional int64 leader_id = 2;
    if (has_leader_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->leader_id());
    }
    
    // optional int32 travel_team = 5;
    if (has_travel_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->travel_team());
    }
    
  }
  // repeated int64 teamer_set = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->teamer_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->teamer_set(i));
    }
    total_size += 1 * this->teamer_set_size() + data_size;
  }
  
  // repeated int64 replacement_set = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->replacement_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->replacement_set(i));
    }
    total_size += 1 * this->replacement_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400701::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400701* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400701*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400701::MergeFrom(const Proto30400701& from) {
  GOOGLE_CHECK_NE(&from, this);
  teamer_set_.MergeFrom(from.teamer_set_);
  replacement_set_.MergeFrom(from.replacement_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_index()) {
      set_team_index(from.team_index());
    }
    if (from.has_leader_id()) {
      set_leader_id(from.leader_id());
    }
    if (from.has_travel_team()) {
      set_travel_team(from.travel_team());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400701::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400701::CopyFrom(const Proto30400701& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400701::IsInitialized() const {
  
  return true;
}

void Proto30400701::Swap(Proto30400701* other) {
  if (other != this) {
    std::swap(team_index_, other->team_index_);
    std::swap(leader_id_, other->leader_id_);
    teamer_set_.Swap(&other->teamer_set_);
    replacement_set_.Swap(&other->replacement_set_);
    std::swap(travel_team_, other->travel_team_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400701::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400701_descriptor_;
  metadata.reflection = Proto30400701_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400113::kVipTypeFieldNumber;
const int Proto31400113::kVipStartTimeFieldNumber;
const int Proto31400113::kPeriodTimeFieldNumber;
const int Proto31400113::kBlessTickFieldNumber;
const int Proto31400113::kGiftTickFieldNumber;
const int Proto31400113::kFlightTickFieldNumber;
const int Proto31400113::kFlightLeftFieldNumber;
const int Proto31400113::kDivineResetTickFieldNumber;
const int Proto31400113::kDivineResetLeftFieldNumber;
const int Proto31400113::kDivineGetTickFieldNumber;
const int Proto31400113::kDivineGetLeftFieldNumber;
const int Proto31400113::kDgPraCoolTickFieldNumber;
const int Proto31400113::kDgPraCoolLeftFieldNumber;
const int Proto31400113::kNeedNotifyFieldNumber;
const int Proto31400113::kIsActiFashionFieldNumber;
const int Proto31400113::kVipFashionSetFieldNumber;
const int Proto31400113::kBeforeGiftVipFieldNumber;
const int Proto31400113::kIsGvenFieldNumber;
const int Proto31400113::kWeeklyFieldNumber;
const int Proto31400113::kWeeklyGivenFieldNumber;
const int Proto31400113::kIsGivenWeeklyFieldNumber;
const int Proto31400113::kWeeklyTickFieldNumber;
const int Proto31400113::kCheckFlagFieldNumber;
const int Proto31400113::kDesMailFieldNumber;
const int Proto31400113::kSuperVipTypeFieldNumber;
#endif  // !_MSC_VER

Proto31400113::Proto31400113()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400113::InitAsDefaultInstance() {
}

Proto31400113::Proto31400113(const Proto31400113& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400113::SharedCtor() {
  _cached_size_ = 0;
  vip_type_ = 0;
  vip_start_time_ = 0;
  period_time_ = 0;
  bless_tick_ = 0;
  gift_tick_ = 0;
  flight_tick_ = 0;
  flight_left_ = 0;
  divine_reset_tick_ = 0;
  divine_reset_left_ = 0;
  divine_get_tick_ = 0;
  divine_get_left_ = 0;
  dg_pra_cool_tick_ = 0;
  dg_pra_cool_left_ = 0;
  need_notify_ = false;
  is_acti_fashion_ = false;
  before_gift_vip_ = 0;
  weekly_given_ = 0;
  is_given_weekly_ = 0;
  weekly_tick_ = GOOGLE_LONGLONG(0);
  check_flag_ = 0;
  des_mail_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  super_vip_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400113::~Proto31400113() {
  SharedDtor();
}

void Proto31400113::SharedDtor() {
  if (des_mail_ != &::google::protobuf::internal::kEmptyString) {
    delete des_mail_;
  }
  if (this != default_instance_) {
  }
}

void Proto31400113::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400113::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400113_descriptor_;
}

const Proto31400113& Proto31400113::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400113* Proto31400113::default_instance_ = NULL;

Proto31400113* Proto31400113::New() const {
  return new Proto31400113;
}

void Proto31400113::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    vip_type_ = 0;
    vip_start_time_ = 0;
    period_time_ = 0;
    bless_tick_ = 0;
    gift_tick_ = 0;
    flight_tick_ = 0;
    flight_left_ = 0;
    divine_reset_tick_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    divine_reset_left_ = 0;
    divine_get_tick_ = 0;
    divine_get_left_ = 0;
    dg_pra_cool_tick_ = 0;
    dg_pra_cool_left_ = 0;
    need_notify_ = false;
    is_acti_fashion_ = false;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    before_gift_vip_ = 0;
    weekly_given_ = 0;
    is_given_weekly_ = 0;
    weekly_tick_ = GOOGLE_LONGLONG(0);
    check_flag_ = 0;
    if (has_des_mail()) {
      if (des_mail_ != &::google::protobuf::internal::kEmptyString) {
        des_mail_->clear();
      }
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    super_vip_type_ = 0;
  }
  vip_fashion_set_.Clear();
  is_gven_.Clear();
  weekly_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400113::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 vip_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_type_)));
          set_has_vip_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_vip_start_time;
        break;
      }
      
      // optional int32 vip_start_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_start_time_)));
          set_has_vip_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_period_time;
        break;
      }
      
      // optional int32 period_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_period_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &period_time_)));
          set_has_period_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_bless_tick;
        break;
      }
      
      // optional int32 bless_tick = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bless_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bless_tick_)));
          set_has_bless_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_gift_tick;
        break;
      }
      
      // optional int32 gift_tick = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gift_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gift_tick_)));
          set_has_gift_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_flight_tick;
        break;
      }
      
      // optional int32 flight_tick = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flight_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flight_tick_)));
          set_has_flight_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_flight_left;
        break;
      }
      
      // optional int32 flight_left = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flight_left:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flight_left_)));
          set_has_flight_left();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_divine_reset_tick;
        break;
      }
      
      // optional int32 divine_reset_tick = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_divine_reset_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &divine_reset_tick_)));
          set_has_divine_reset_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_divine_reset_left;
        break;
      }
      
      // optional int32 divine_reset_left = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_divine_reset_left:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &divine_reset_left_)));
          set_has_divine_reset_left();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_divine_get_tick;
        break;
      }
      
      // optional int32 divine_get_tick = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_divine_get_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &divine_get_tick_)));
          set_has_divine_get_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_divine_get_left;
        break;
      }
      
      // optional int32 divine_get_left = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_divine_get_left:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &divine_get_left_)));
          set_has_divine_get_left();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_dg_pra_cool_tick;
        break;
      }
      
      // optional int32 dg_pra_cool_tick = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dg_pra_cool_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dg_pra_cool_tick_)));
          set_has_dg_pra_cool_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_dg_pra_cool_left;
        break;
      }
      
      // optional int32 dg_pra_cool_left = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dg_pra_cool_left:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dg_pra_cool_left_)));
          set_has_dg_pra_cool_left();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_need_notify;
        break;
      }
      
      // optional bool need_notify = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_need_notify:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &need_notify_)));
          set_has_need_notify();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_is_acti_fashion;
        break;
      }
      
      // optional bool is_acti_fashion = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_acti_fashion:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_acti_fashion_)));
          set_has_is_acti_fashion();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_vip_fashion_set;
        break;
      }
      
      // repeated .ProtoPairObj vip_fashion_set = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_vip_fashion_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_vip_fashion_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_vip_fashion_set;
        if (input->ExpectTag(136)) goto parse_before_gift_vip;
        break;
      }
      
      // optional int32 before_gift_vip = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_before_gift_vip:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &before_gift_vip_)));
          set_has_before_gift_vip();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_is_gven;
        break;
      }
      
      // repeated .ProtoPairObj is_gven = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_is_gven:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_is_gven()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_is_gven;
        if (input->ExpectTag(154)) goto parse_weekly;
        break;
      }
      
      // repeated .ProtoPairObj weekly = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_weekly:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_weekly()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_weekly;
        if (input->ExpectTag(160)) goto parse_weekly_given;
        break;
      }
      
      // optional int32 weekly_given = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_weekly_given:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weekly_given_)));
          set_has_weekly_given();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_is_given_weekly;
        break;
      }
      
      // optional int32 is_given_weekly = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_given_weekly:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_given_weekly_)));
          set_has_is_given_weekly();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_weekly_tick;
        break;
      }
      
      // optional int64 weekly_tick = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_weekly_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &weekly_tick_)));
          set_has_weekly_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_check_flag;
        break;
      }
      
      // optional int32 check_flag = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_check_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &check_flag_)));
          set_has_check_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_des_mail;
        break;
      }
      
      // optional string des_mail = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_des_mail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_des_mail()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->des_mail().data(), this->des_mail().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_super_vip_type;
        break;
      }
      
      // optional int32 super_vip_type = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_super_vip_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &super_vip_type_)));
          set_has_super_vip_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400113::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 vip_type = 1;
  if (has_vip_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vip_type(), output);
  }
  
  // optional int32 vip_start_time = 2;
  if (has_vip_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vip_start_time(), output);
  }
  
  // optional int32 period_time = 3;
  if (has_period_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->period_time(), output);
  }
  
  // optional int32 bless_tick = 4;
  if (has_bless_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->bless_tick(), output);
  }
  
  // optional int32 gift_tick = 5;
  if (has_gift_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->gift_tick(), output);
  }
  
  // optional int32 flight_tick = 6;
  if (has_flight_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->flight_tick(), output);
  }
  
  // optional int32 flight_left = 7;
  if (has_flight_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->flight_left(), output);
  }
  
  // optional int32 divine_reset_tick = 8;
  if (has_divine_reset_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->divine_reset_tick(), output);
  }
  
  // optional int32 divine_reset_left = 9;
  if (has_divine_reset_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->divine_reset_left(), output);
  }
  
  // optional int32 divine_get_tick = 10;
  if (has_divine_get_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->divine_get_tick(), output);
  }
  
  // optional int32 divine_get_left = 11;
  if (has_divine_get_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->divine_get_left(), output);
  }
  
  // optional int32 dg_pra_cool_tick = 12;
  if (has_dg_pra_cool_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->dg_pra_cool_tick(), output);
  }
  
  // optional int32 dg_pra_cool_left = 13;
  if (has_dg_pra_cool_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->dg_pra_cool_left(), output);
  }
  
  // optional bool need_notify = 14;
  if (has_need_notify()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->need_notify(), output);
  }
  
  // optional bool is_acti_fashion = 15;
  if (has_is_acti_fashion()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_acti_fashion(), output);
  }
  
  // repeated .ProtoPairObj vip_fashion_set = 16;
  for (int i = 0; i < this->vip_fashion_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->vip_fashion_set(i), output);
  }
  
  // optional int32 before_gift_vip = 17;
  if (has_before_gift_vip()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->before_gift_vip(), output);
  }
  
  // repeated .ProtoPairObj is_gven = 18;
  for (int i = 0; i < this->is_gven_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->is_gven(i), output);
  }
  
  // repeated .ProtoPairObj weekly = 19;
  for (int i = 0; i < this->weekly_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->weekly(i), output);
  }
  
  // optional int32 weekly_given = 20;
  if (has_weekly_given()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->weekly_given(), output);
  }
  
  // optional int32 is_given_weekly = 21;
  if (has_is_given_weekly()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->is_given_weekly(), output);
  }
  
  // optional int64 weekly_tick = 22;
  if (has_weekly_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->weekly_tick(), output);
  }
  
  // optional int32 check_flag = 23;
  if (has_check_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->check_flag(), output);
  }
  
  // optional string des_mail = 24;
  if (has_des_mail()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->des_mail().data(), this->des_mail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      24, this->des_mail(), output);
  }
  
  // optional int32 super_vip_type = 25;
  if (has_super_vip_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->super_vip_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400113::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 vip_type = 1;
  if (has_vip_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->vip_type(), target);
  }
  
  // optional int32 vip_start_time = 2;
  if (has_vip_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vip_start_time(), target);
  }
  
  // optional int32 period_time = 3;
  if (has_period_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->period_time(), target);
  }
  
  // optional int32 bless_tick = 4;
  if (has_bless_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->bless_tick(), target);
  }
  
  // optional int32 gift_tick = 5;
  if (has_gift_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->gift_tick(), target);
  }
  
  // optional int32 flight_tick = 6;
  if (has_flight_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->flight_tick(), target);
  }
  
  // optional int32 flight_left = 7;
  if (has_flight_left()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->flight_left(), target);
  }
  
  // optional int32 divine_reset_tick = 8;
  if (has_divine_reset_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->divine_reset_tick(), target);
  }
  
  // optional int32 divine_reset_left = 9;
  if (has_divine_reset_left()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->divine_reset_left(), target);
  }
  
  // optional int32 divine_get_tick = 10;
  if (has_divine_get_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->divine_get_tick(), target);
  }
  
  // optional int32 divine_get_left = 11;
  if (has_divine_get_left()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->divine_get_left(), target);
  }
  
  // optional int32 dg_pra_cool_tick = 12;
  if (has_dg_pra_cool_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->dg_pra_cool_tick(), target);
  }
  
  // optional int32 dg_pra_cool_left = 13;
  if (has_dg_pra_cool_left()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->dg_pra_cool_left(), target);
  }
  
  // optional bool need_notify = 14;
  if (has_need_notify()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->need_notify(), target);
  }
  
  // optional bool is_acti_fashion = 15;
  if (has_is_acti_fashion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_acti_fashion(), target);
  }
  
  // repeated .ProtoPairObj vip_fashion_set = 16;
  for (int i = 0; i < this->vip_fashion_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->vip_fashion_set(i), target);
  }
  
  // optional int32 before_gift_vip = 17;
  if (has_before_gift_vip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->before_gift_vip(), target);
  }
  
  // repeated .ProtoPairObj is_gven = 18;
  for (int i = 0; i < this->is_gven_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->is_gven(i), target);
  }
  
  // repeated .ProtoPairObj weekly = 19;
  for (int i = 0; i < this->weekly_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->weekly(i), target);
  }
  
  // optional int32 weekly_given = 20;
  if (has_weekly_given()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->weekly_given(), target);
  }
  
  // optional int32 is_given_weekly = 21;
  if (has_is_given_weekly()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->is_given_weekly(), target);
  }
  
  // optional int64 weekly_tick = 22;
  if (has_weekly_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->weekly_tick(), target);
  }
  
  // optional int32 check_flag = 23;
  if (has_check_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->check_flag(), target);
  }
  
  // optional string des_mail = 24;
  if (has_des_mail()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->des_mail().data(), this->des_mail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->des_mail(), target);
  }
  
  // optional int32 super_vip_type = 25;
  if (has_super_vip_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->super_vip_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400113::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 vip_type = 1;
    if (has_vip_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_type());
    }
    
    // optional int32 vip_start_time = 2;
    if (has_vip_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_start_time());
    }
    
    // optional int32 period_time = 3;
    if (has_period_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->period_time());
    }
    
    // optional int32 bless_tick = 4;
    if (has_bless_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bless_tick());
    }
    
    // optional int32 gift_tick = 5;
    if (has_gift_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gift_tick());
    }
    
    // optional int32 flight_tick = 6;
    if (has_flight_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flight_tick());
    }
    
    // optional int32 flight_left = 7;
    if (has_flight_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flight_left());
    }
    
    // optional int32 divine_reset_tick = 8;
    if (has_divine_reset_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->divine_reset_tick());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 divine_reset_left = 9;
    if (has_divine_reset_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->divine_reset_left());
    }
    
    // optional int32 divine_get_tick = 10;
    if (has_divine_get_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->divine_get_tick());
    }
    
    // optional int32 divine_get_left = 11;
    if (has_divine_get_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->divine_get_left());
    }
    
    // optional int32 dg_pra_cool_tick = 12;
    if (has_dg_pra_cool_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dg_pra_cool_tick());
    }
    
    // optional int32 dg_pra_cool_left = 13;
    if (has_dg_pra_cool_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dg_pra_cool_left());
    }
    
    // optional bool need_notify = 14;
    if (has_need_notify()) {
      total_size += 1 + 1;
    }
    
    // optional bool is_acti_fashion = 15;
    if (has_is_acti_fashion()) {
      total_size += 1 + 1;
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 before_gift_vip = 17;
    if (has_before_gift_vip()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->before_gift_vip());
    }
    
    // optional int32 weekly_given = 20;
    if (has_weekly_given()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weekly_given());
    }
    
    // optional int32 is_given_weekly = 21;
    if (has_is_given_weekly()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_given_weekly());
    }
    
    // optional int64 weekly_tick = 22;
    if (has_weekly_tick()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->weekly_tick());
    }
    
    // optional int32 check_flag = 23;
    if (has_check_flag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->check_flag());
    }
    
    // optional string des_mail = 24;
    if (has_des_mail()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->des_mail());
    }
    
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional int32 super_vip_type = 25;
    if (has_super_vip_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->super_vip_type());
    }
    
  }
  // repeated .ProtoPairObj vip_fashion_set = 16;
  total_size += 2 * this->vip_fashion_set_size();
  for (int i = 0; i < this->vip_fashion_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vip_fashion_set(i));
  }
  
  // repeated .ProtoPairObj is_gven = 18;
  total_size += 2 * this->is_gven_size();
  for (int i = 0; i < this->is_gven_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->is_gven(i));
  }
  
  // repeated .ProtoPairObj weekly = 19;
  total_size += 2 * this->weekly_size();
  for (int i = 0; i < this->weekly_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->weekly(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400113::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400113* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400113*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400113::MergeFrom(const Proto31400113& from) {
  GOOGLE_CHECK_NE(&from, this);
  vip_fashion_set_.MergeFrom(from.vip_fashion_set_);
  is_gven_.MergeFrom(from.is_gven_);
  weekly_.MergeFrom(from.weekly_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_vip_type()) {
      set_vip_type(from.vip_type());
    }
    if (from.has_vip_start_time()) {
      set_vip_start_time(from.vip_start_time());
    }
    if (from.has_period_time()) {
      set_period_time(from.period_time());
    }
    if (from.has_bless_tick()) {
      set_bless_tick(from.bless_tick());
    }
    if (from.has_gift_tick()) {
      set_gift_tick(from.gift_tick());
    }
    if (from.has_flight_tick()) {
      set_flight_tick(from.flight_tick());
    }
    if (from.has_flight_left()) {
      set_flight_left(from.flight_left());
    }
    if (from.has_divine_reset_tick()) {
      set_divine_reset_tick(from.divine_reset_tick());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_divine_reset_left()) {
      set_divine_reset_left(from.divine_reset_left());
    }
    if (from.has_divine_get_tick()) {
      set_divine_get_tick(from.divine_get_tick());
    }
    if (from.has_divine_get_left()) {
      set_divine_get_left(from.divine_get_left());
    }
    if (from.has_dg_pra_cool_tick()) {
      set_dg_pra_cool_tick(from.dg_pra_cool_tick());
    }
    if (from.has_dg_pra_cool_left()) {
      set_dg_pra_cool_left(from.dg_pra_cool_left());
    }
    if (from.has_need_notify()) {
      set_need_notify(from.need_notify());
    }
    if (from.has_is_acti_fashion()) {
      set_is_acti_fashion(from.is_acti_fashion());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_before_gift_vip()) {
      set_before_gift_vip(from.before_gift_vip());
    }
    if (from.has_weekly_given()) {
      set_weekly_given(from.weekly_given());
    }
    if (from.has_is_given_weekly()) {
      set_is_given_weekly(from.is_given_weekly());
    }
    if (from.has_weekly_tick()) {
      set_weekly_tick(from.weekly_tick());
    }
    if (from.has_check_flag()) {
      set_check_flag(from.check_flag());
    }
    if (from.has_des_mail()) {
      set_des_mail(from.des_mail());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_super_vip_type()) {
      set_super_vip_type(from.super_vip_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400113::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400113::CopyFrom(const Proto31400113& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400113::IsInitialized() const {
  
  return true;
}

void Proto31400113::Swap(Proto31400113* other) {
  if (other != this) {
    std::swap(vip_type_, other->vip_type_);
    std::swap(vip_start_time_, other->vip_start_time_);
    std::swap(period_time_, other->period_time_);
    std::swap(bless_tick_, other->bless_tick_);
    std::swap(gift_tick_, other->gift_tick_);
    std::swap(flight_tick_, other->flight_tick_);
    std::swap(flight_left_, other->flight_left_);
    std::swap(divine_reset_tick_, other->divine_reset_tick_);
    std::swap(divine_reset_left_, other->divine_reset_left_);
    std::swap(divine_get_tick_, other->divine_get_tick_);
    std::swap(divine_get_left_, other->divine_get_left_);
    std::swap(dg_pra_cool_tick_, other->dg_pra_cool_tick_);
    std::swap(dg_pra_cool_left_, other->dg_pra_cool_left_);
    std::swap(need_notify_, other->need_notify_);
    std::swap(is_acti_fashion_, other->is_acti_fashion_);
    vip_fashion_set_.Swap(&other->vip_fashion_set_);
    std::swap(before_gift_vip_, other->before_gift_vip_);
    is_gven_.Swap(&other->is_gven_);
    weekly_.Swap(&other->weekly_);
    std::swap(weekly_given_, other->weekly_given_);
    std::swap(is_given_weekly_, other->is_given_weekly_);
    std::swap(weekly_tick_, other->weekly_tick_);
    std::swap(check_flag_, other->check_flag_);
    std::swap(des_mail_, other->des_mail_);
    std::swap(super_vip_type_, other->super_vip_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400113::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400113_descriptor_;
  metadata.reflection = Proto31400113_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400114::kMaxTimeFieldNumber;
const int Proto31400114::kLeftTimeFieldNumber;
const int Proto31400114::kMonsterTypeFieldNumber;
const int Proto31400114::kDivineCostFieldNumber;
const int Proto31400114::kDivineSpendFieldNumber;
const int Proto31400114::kFillItemsFieldNumber;
const int Proto31400114::kObtainedItemsFieldNumber;
const int Proto31400114::kMonsterAmountFieldNumber;
const int Proto31400114::kLuckValueFieldNumber;
const int Proto31400114::kOpenTimesFieldNumber;
const int Proto31400114::kSavvyFieldNumber;
const int Proto31400114::kFreeStateFieldNumber;
const int Proto31400114::kBoxIsOpenFieldNumber;
const int Proto31400114::kBoxNextFreeTimeFieldNumber;
const int Proto31400114::kSecondEquipDecomposeFieldNumber;
#endif  // !_MSC_VER

Proto31400114::Proto31400114()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400114::InitAsDefaultInstance() {
}

Proto31400114::Proto31400114(const Proto31400114& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400114::SharedCtor() {
  _cached_size_ = 0;
  max_time_ = 0;
  left_time_ = 0;
  monster_type_ = 0;
  monster_amount_ = 0;
  luck_value_ = 0;
  open_times_ = 0;
  savvy_ = 0;
  free_state_ = 0;
  box_is_open_ = 0;
  box_next_free_time_ = GOOGLE_LONGLONG(0);
  second_equip_decompose_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400114::~Proto31400114() {
  SharedDtor();
}

void Proto31400114::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400114::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400114::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400114_descriptor_;
}

const Proto31400114& Proto31400114::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400114* Proto31400114::default_instance_ = NULL;

Proto31400114* Proto31400114::New() const {
  return new Proto31400114;
}

void Proto31400114::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    max_time_ = 0;
    left_time_ = 0;
    monster_type_ = 0;
    monster_amount_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    luck_value_ = 0;
    open_times_ = 0;
    savvy_ = 0;
    free_state_ = 0;
    box_is_open_ = 0;
    box_next_free_time_ = GOOGLE_LONGLONG(0);
    second_equip_decompose_ = 0;
  }
  divine_cost_.Clear();
  divine_spend_.Clear();
  fill_items_.Clear();
  obtained_items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400114::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 max_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_time_)));
          set_has_max_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_monster_type;
        break;
      }
      
      // optional int32 monster_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_monster_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &monster_type_)));
          set_has_monster_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_divine_cost;
        break;
      }
      
      // repeated .ProtoPairObj divine_cost = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_divine_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_divine_cost()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_divine_cost;
        if (input->ExpectTag(42)) goto parse_divine_spend;
        break;
      }
      
      // repeated .ProtoPairObj divine_spend = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_divine_spend:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_divine_spend()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_divine_spend;
        if (input->ExpectTag(50)) goto parse_fill_items;
        break;
      }
      
      // repeated .ProtoItem fill_items = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fill_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fill_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_fill_items;
        if (input->ExpectTag(58)) goto parse_obtained_items;
        break;
      }
      
      // repeated .ProtoItem obtained_items = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_obtained_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_obtained_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_obtained_items;
        if (input->ExpectTag(64)) goto parse_monster_amount;
        break;
      }
      
      // optional int32 monster_amount = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_monster_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &monster_amount_)));
          set_has_monster_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_luck_value;
        break;
      }
      
      // optional int32 luck_value = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_luck_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &luck_value_)));
          set_has_luck_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_open_times;
        break;
      }
      
      // optional int32 open_times = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_open_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_times_)));
          set_has_open_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_savvy;
        break;
      }
      
      // optional int32 savvy = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_savvy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &savvy_)));
          set_has_savvy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_free_state;
        break;
      }
      
      // optional int32 free_state = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_free_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &free_state_)));
          set_has_free_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_box_is_open;
        break;
      }
      
      // optional int32 box_is_open = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_box_is_open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &box_is_open_)));
          set_has_box_is_open();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_box_next_free_time;
        break;
      }
      
      // optional int64 box_next_free_time = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_box_next_free_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &box_next_free_time_)));
          set_has_box_next_free_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_second_equip_decompose;
        break;
      }
      
      // optional int32 second_equip_decompose = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_equip_decompose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_equip_decompose_)));
          set_has_second_equip_decompose();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400114::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 max_time = 1;
  if (has_max_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->max_time(), output);
  }
  
  // optional int32 left_time = 2;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_time(), output);
  }
  
  // optional int32 monster_type = 3;
  if (has_monster_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->monster_type(), output);
  }
  
  // repeated .ProtoPairObj divine_cost = 4;
  for (int i = 0; i < this->divine_cost_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->divine_cost(i), output);
  }
  
  // repeated .ProtoPairObj divine_spend = 5;
  for (int i = 0; i < this->divine_spend_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->divine_spend(i), output);
  }
  
  // repeated .ProtoItem fill_items = 6;
  for (int i = 0; i < this->fill_items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->fill_items(i), output);
  }
  
  // repeated .ProtoItem obtained_items = 7;
  for (int i = 0; i < this->obtained_items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->obtained_items(i), output);
  }
  
  // optional int32 monster_amount = 8;
  if (has_monster_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->monster_amount(), output);
  }
  
  // optional int32 luck_value = 9;
  if (has_luck_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->luck_value(), output);
  }
  
  // optional int32 open_times = 10;
  if (has_open_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->open_times(), output);
  }
  
  // optional int32 savvy = 11;
  if (has_savvy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->savvy(), output);
  }
  
  // optional int32 free_state = 12;
  if (has_free_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->free_state(), output);
  }
  
  // optional int32 box_is_open = 13;
  if (has_box_is_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->box_is_open(), output);
  }
  
  // optional int64 box_next_free_time = 14;
  if (has_box_next_free_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->box_next_free_time(), output);
  }
  
  // optional int32 second_equip_decompose = 15;
  if (has_second_equip_decompose()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->second_equip_decompose(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400114::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 max_time = 1;
  if (has_max_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->max_time(), target);
  }
  
  // optional int32 left_time = 2;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_time(), target);
  }
  
  // optional int32 monster_type = 3;
  if (has_monster_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->monster_type(), target);
  }
  
  // repeated .ProtoPairObj divine_cost = 4;
  for (int i = 0; i < this->divine_cost_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->divine_cost(i), target);
  }
  
  // repeated .ProtoPairObj divine_spend = 5;
  for (int i = 0; i < this->divine_spend_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->divine_spend(i), target);
  }
  
  // repeated .ProtoItem fill_items = 6;
  for (int i = 0; i < this->fill_items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->fill_items(i), target);
  }
  
  // repeated .ProtoItem obtained_items = 7;
  for (int i = 0; i < this->obtained_items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->obtained_items(i), target);
  }
  
  // optional int32 monster_amount = 8;
  if (has_monster_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->monster_amount(), target);
  }
  
  // optional int32 luck_value = 9;
  if (has_luck_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->luck_value(), target);
  }
  
  // optional int32 open_times = 10;
  if (has_open_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->open_times(), target);
  }
  
  // optional int32 savvy = 11;
  if (has_savvy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->savvy(), target);
  }
  
  // optional int32 free_state = 12;
  if (has_free_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->free_state(), target);
  }
  
  // optional int32 box_is_open = 13;
  if (has_box_is_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->box_is_open(), target);
  }
  
  // optional int64 box_next_free_time = 14;
  if (has_box_next_free_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->box_next_free_time(), target);
  }
  
  // optional int32 second_equip_decompose = 15;
  if (has_second_equip_decompose()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->second_equip_decompose(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400114::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 max_time = 1;
    if (has_max_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_time());
    }
    
    // optional int32 left_time = 2;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 monster_type = 3;
    if (has_monster_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->monster_type());
    }
    
    // optional int32 monster_amount = 8;
    if (has_monster_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->monster_amount());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 luck_value = 9;
    if (has_luck_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->luck_value());
    }
    
    // optional int32 open_times = 10;
    if (has_open_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open_times());
    }
    
    // optional int32 savvy = 11;
    if (has_savvy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->savvy());
    }
    
    // optional int32 free_state = 12;
    if (has_free_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->free_state());
    }
    
    // optional int32 box_is_open = 13;
    if (has_box_is_open()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->box_is_open());
    }
    
    // optional int64 box_next_free_time = 14;
    if (has_box_next_free_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->box_next_free_time());
    }
    
    // optional int32 second_equip_decompose = 15;
    if (has_second_equip_decompose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_equip_decompose());
    }
    
  }
  // repeated .ProtoPairObj divine_cost = 4;
  total_size += 1 * this->divine_cost_size();
  for (int i = 0; i < this->divine_cost_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->divine_cost(i));
  }
  
  // repeated .ProtoPairObj divine_spend = 5;
  total_size += 1 * this->divine_spend_size();
  for (int i = 0; i < this->divine_spend_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->divine_spend(i));
  }
  
  // repeated .ProtoItem fill_items = 6;
  total_size += 1 * this->fill_items_size();
  for (int i = 0; i < this->fill_items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fill_items(i));
  }
  
  // repeated .ProtoItem obtained_items = 7;
  total_size += 1 * this->obtained_items_size();
  for (int i = 0; i < this->obtained_items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->obtained_items(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400114::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400114* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400114*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400114::MergeFrom(const Proto31400114& from) {
  GOOGLE_CHECK_NE(&from, this);
  divine_cost_.MergeFrom(from.divine_cost_);
  divine_spend_.MergeFrom(from.divine_spend_);
  fill_items_.MergeFrom(from.fill_items_);
  obtained_items_.MergeFrom(from.obtained_items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_max_time()) {
      set_max_time(from.max_time());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_monster_type()) {
      set_monster_type(from.monster_type());
    }
    if (from.has_monster_amount()) {
      set_monster_amount(from.monster_amount());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_luck_value()) {
      set_luck_value(from.luck_value());
    }
    if (from.has_open_times()) {
      set_open_times(from.open_times());
    }
    if (from.has_savvy()) {
      set_savvy(from.savvy());
    }
    if (from.has_free_state()) {
      set_free_state(from.free_state());
    }
    if (from.has_box_is_open()) {
      set_box_is_open(from.box_is_open());
    }
    if (from.has_box_next_free_time()) {
      set_box_next_free_time(from.box_next_free_time());
    }
    if (from.has_second_equip_decompose()) {
      set_second_equip_decompose(from.second_equip_decompose());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400114::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400114::CopyFrom(const Proto31400114& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400114::IsInitialized() const {
  
  return true;
}

void Proto31400114::Swap(Proto31400114* other) {
  if (other != this) {
    std::swap(max_time_, other->max_time_);
    std::swap(left_time_, other->left_time_);
    std::swap(monster_type_, other->monster_type_);
    divine_cost_.Swap(&other->divine_cost_);
    divine_spend_.Swap(&other->divine_spend_);
    fill_items_.Swap(&other->fill_items_);
    obtained_items_.Swap(&other->obtained_items_);
    std::swap(monster_amount_, other->monster_amount_);
    std::swap(luck_value_, other->luck_value_);
    std::swap(open_times_, other->open_times_);
    std::swap(savvy_, other->savvy_);
    std::swap(free_state_, other->free_state_);
    std::swap(box_is_open_, other->box_is_open_);
    std::swap(box_next_free_time_, other->box_next_free_time_);
    std::swap(second_equip_decompose_, other->second_equip_decompose_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400114::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400114_descriptor_;
  metadata.reflection = Proto31400114_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400116::kActivityNotifyInfoFieldNumber;
#endif  // !_MSC_VER

Proto31400116::Proto31400116()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400116::InitAsDefaultInstance() {
}

Proto31400116::Proto31400116(const Proto31400116& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400116::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400116::~Proto31400116() {
  SharedDtor();
}

void Proto31400116::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400116::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400116::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400116_descriptor_;
}

const Proto31400116& Proto31400116::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400116* Proto31400116::default_instance_ = NULL;

Proto31400116* Proto31400116::New() const {
  return new Proto31400116;
}

void Proto31400116::Clear() {
  activity_notify_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400116::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoPairObj activity_notify_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_activity_notify_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_activity_notify_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_activity_notify_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400116::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoPairObj activity_notify_info = 1;
  for (int i = 0; i < this->activity_notify_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->activity_notify_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400116::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoPairObj activity_notify_info = 1;
  for (int i = 0; i < this->activity_notify_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->activity_notify_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400116::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoPairObj activity_notify_info = 1;
  total_size += 1 * this->activity_notify_info_size();
  for (int i = 0; i < this->activity_notify_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->activity_notify_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400116::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400116* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400116*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400116::MergeFrom(const Proto31400116& from) {
  GOOGLE_CHECK_NE(&from, this);
  activity_notify_info_.MergeFrom(from.activity_notify_info_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400116::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400116::CopyFrom(const Proto31400116& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400116::IsInitialized() const {
  
  return true;
}

void Proto31400116::Swap(Proto31400116* other) {
  if (other != this) {
    activity_notify_info_.Swap(&other->activity_notify_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400116::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400116_descriptor_;
  metadata.reflection = Proto31400116_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400117::kTeamIdFieldNumber;
const int Proto31400117::kLeaderIdFieldNumber;
const int Proto31400117::kTeamerIdFieldNumber;
#endif  // !_MSC_VER

Proto31400117::Proto31400117()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400117::InitAsDefaultInstance() {
}

Proto31400117::Proto31400117(const Proto31400117& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400117::SharedCtor() {
  _cached_size_ = 0;
  team_id_ = 0;
  leader_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400117::~Proto31400117() {
  SharedDtor();
}

void Proto31400117::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400117::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400117::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400117_descriptor_;
}

const Proto31400117& Proto31400117::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400117* Proto31400117::default_instance_ = NULL;

Proto31400117* Proto31400117::New() const {
  return new Proto31400117;
}

void Proto31400117::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    team_id_ = 0;
    leader_id_ = GOOGLE_LONGLONG(0);
  }
  teamer_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400117::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 team_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_leader_id;
        break;
      }
      
      // optional int64 leader_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leader_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &leader_id_)));
          set_has_leader_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_teamer_id;
        break;
      }
      
      // repeated int64 teamer_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_teamer_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24, input, this->mutable_teamer_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_teamer_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_teamer_id;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400117::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 team_id = 1;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->team_id(), output);
  }
  
  // optional int64 leader_id = 2;
  if (has_leader_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->leader_id(), output);
  }
  
  // repeated int64 teamer_id = 3;
  for (int i = 0; i < this->teamer_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->teamer_id(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400117::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 team_id = 1;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->team_id(), target);
  }
  
  // optional int64 leader_id = 2;
  if (has_leader_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->leader_id(), target);
  }
  
  // repeated int64 teamer_id = 3;
  for (int i = 0; i < this->teamer_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->teamer_id(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400117::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 team_id = 1;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team_id());
    }
    
    // optional int64 leader_id = 2;
    if (has_leader_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->leader_id());
    }
    
  }
  // repeated int64 teamer_id = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->teamer_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->teamer_id(i));
    }
    total_size += 1 * this->teamer_id_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400117::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400117* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400117*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400117::MergeFrom(const Proto31400117& from) {
  GOOGLE_CHECK_NE(&from, this);
  teamer_id_.MergeFrom(from.teamer_id_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
    if (from.has_leader_id()) {
      set_leader_id(from.leader_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400117::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400117::CopyFrom(const Proto31400117& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400117::IsInitialized() const {
  
  return true;
}

void Proto31400117::Swap(Proto31400117* other) {
  if (other != this) {
    std::swap(team_id_, other->team_id_);
    std::swap(leader_id_, other->leader_id_);
    teamer_id_.Swap(&other->teamer_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400117::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400117_descriptor_;
  metadata.reflection = Proto31400117_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400118::kStageFieldNumber;
const int Proto31400118::kPreStageFieldNumber;
const int Proto31400118::kReceivedTickFieldNumber;
const int Proto31400118::kReceivedMarkFieldNumber;
const int Proto31400118::kLoginTimeFieldNumber;
const int Proto31400118::kOnlineSumFieldNumber;
const int Proto31400118::kAwardListFieldNumber;
#endif  // !_MSC_VER

Proto31400118::Proto31400118()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400118::InitAsDefaultInstance() {
}

Proto31400118::Proto31400118(const Proto31400118& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400118::SharedCtor() {
  _cached_size_ = 0;
  stage_ = 0;
  pre_stage_ = 0;
  received_tick_ = GOOGLE_LONGLONG(0);
  received_mark_ = 0;
  login_time_ = GOOGLE_LONGLONG(0);
  online_sum_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400118::~Proto31400118() {
  SharedDtor();
}

void Proto31400118::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400118::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400118::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400118_descriptor_;
}

const Proto31400118& Proto31400118::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400118* Proto31400118::default_instance_ = NULL;

Proto31400118* Proto31400118::New() const {
  return new Proto31400118;
}

void Proto31400118::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stage_ = 0;
    pre_stage_ = 0;
    received_tick_ = GOOGLE_LONGLONG(0);
    received_mark_ = 0;
    login_time_ = GOOGLE_LONGLONG(0);
    online_sum_ = GOOGLE_LONGLONG(0);
  }
  award_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400118::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 stage = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_)));
          set_has_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pre_stage;
        break;
      }
      
      // optional int32 pre_stage = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pre_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pre_stage_)));
          set_has_pre_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_received_tick;
        break;
      }
      
      // optional int64 received_tick = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_received_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &received_tick_)));
          set_has_received_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_received_mark;
        break;
      }
      
      // optional int32 received_mark = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_received_mark:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &received_mark_)));
          set_has_received_mark();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_login_time;
        break;
      }
      
      // optional int64 login_time = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_login_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &login_time_)));
          set_has_login_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_online_sum;
        break;
      }
      
      // optional int64 online_sum = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_online_sum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &online_sum_)));
          set_has_online_sum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_award_list;
        break;
      }
      
      // repeated int32 award_list = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_award_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_award_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_award_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_award_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400118::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 stage = 1;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stage(), output);
  }
  
  // optional int32 pre_stage = 2;
  if (has_pre_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pre_stage(), output);
  }
  
  // optional int64 received_tick = 3;
  if (has_received_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->received_tick(), output);
  }
  
  // optional int32 received_mark = 4;
  if (has_received_mark()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->received_mark(), output);
  }
  
  // optional int64 login_time = 5;
  if (has_login_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->login_time(), output);
  }
  
  // optional int64 online_sum = 6;
  if (has_online_sum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->online_sum(), output);
  }
  
  // repeated int32 award_list = 7;
  for (int i = 0; i < this->award_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->award_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400118::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 stage = 1;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stage(), target);
  }
  
  // optional int32 pre_stage = 2;
  if (has_pre_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pre_stage(), target);
  }
  
  // optional int64 received_tick = 3;
  if (has_received_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->received_tick(), target);
  }
  
  // optional int32 received_mark = 4;
  if (has_received_mark()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->received_mark(), target);
  }
  
  // optional int64 login_time = 5;
  if (has_login_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->login_time(), target);
  }
  
  // optional int64 online_sum = 6;
  if (has_online_sum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->online_sum(), target);
  }
  
  // repeated int32 award_list = 7;
  for (int i = 0; i < this->award_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->award_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400118::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 stage = 1;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stage());
    }
    
    // optional int32 pre_stage = 2;
    if (has_pre_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pre_stage());
    }
    
    // optional int64 received_tick = 3;
    if (has_received_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->received_tick());
    }
    
    // optional int32 received_mark = 4;
    if (has_received_mark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->received_mark());
    }
    
    // optional int64 login_time = 5;
    if (has_login_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->login_time());
    }
    
    // optional int64 online_sum = 6;
    if (has_online_sum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->online_sum());
    }
    
  }
  // repeated int32 award_list = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->award_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->award_list(i));
    }
    total_size += 1 * this->award_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400118::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400118* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400118*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400118::MergeFrom(const Proto31400118& from) {
  GOOGLE_CHECK_NE(&from, this);
  award_list_.MergeFrom(from.award_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stage()) {
      set_stage(from.stage());
    }
    if (from.has_pre_stage()) {
      set_pre_stage(from.pre_stage());
    }
    if (from.has_received_tick()) {
      set_received_tick(from.received_tick());
    }
    if (from.has_received_mark()) {
      set_received_mark(from.received_mark());
    }
    if (from.has_login_time()) {
      set_login_time(from.login_time());
    }
    if (from.has_online_sum()) {
      set_online_sum(from.online_sum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400118::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400118::CopyFrom(const Proto31400118& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400118::IsInitialized() const {
  
  return true;
}

void Proto31400118::Swap(Proto31400118* other) {
  if (other != this) {
    std::swap(stage_, other->stage_);
    std::swap(pre_stage_, other->pre_stage_);
    std::swap(received_tick_, other->received_tick_);
    std::swap(received_mark_, other->received_mark_);
    std::swap(login_time_, other->login_time_);
    std::swap(online_sum_, other->online_sum_);
    award_list_.Swap(&other->award_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400118::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400118_descriptor_;
  metadata.reflection = Proto31400118_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30200118::kPlayerIdFieldNumber;
const int Proto30200118::kChatChannelFieldNumber;
const int Proto30200118::kTeamIdFieldNumber;
const int Proto30200118::kLeagueIdFieldNumber;
const int Proto30200118::kOpraFieldNumber;
#endif  // !_MSC_VER

Proto30200118::Proto30200118()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30200118::InitAsDefaultInstance() {
}

Proto30200118::Proto30200118(const Proto30200118& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30200118::SharedCtor() {
  _cached_size_ = 0;
  player_id_ = GOOGLE_LONGLONG(0);
  chat_channel_ = 0;
  team_id_ = 0;
  league_id_ = GOOGLE_LONGLONG(0);
  opra_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30200118::~Proto30200118() {
  SharedDtor();
}

void Proto30200118::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30200118::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30200118::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30200118_descriptor_;
}

const Proto30200118& Proto30200118::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30200118* Proto30200118::default_instance_ = NULL;

Proto30200118* Proto30200118::New() const {
  return new Proto30200118;
}

void Proto30200118::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    player_id_ = GOOGLE_LONGLONG(0);
    chat_channel_ = 0;
    team_id_ = 0;
    league_id_ = GOOGLE_LONGLONG(0);
    opra_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30200118::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 player_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
          set_has_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_chat_channel;
        break;
      }
      
      // optional int32 chat_channel = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_chat_channel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chat_channel_)));
          set_has_chat_channel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_team_id;
        break;
      }
      
      // optional int32 team_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_team_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_league_id;
        break;
      }
      
      // optional int64 league_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_id_)));
          set_has_league_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_opra;
        break;
      }
      
      // optional int32 opra = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_opra:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opra_)));
          set_has_opra();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30200118::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->player_id(), output);
  }
  
  // optional int32 chat_channel = 2;
  if (has_chat_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chat_channel(), output);
  }
  
  // optional int32 team_id = 3;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->team_id(), output);
  }
  
  // optional int64 league_id = 4;
  if (has_league_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->league_id(), output);
  }
  
  // optional int32 opra = 5;
  if (has_opra()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->opra(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30200118::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->player_id(), target);
  }
  
  // optional int32 chat_channel = 2;
  if (has_chat_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chat_channel(), target);
  }
  
  // optional int32 team_id = 3;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->team_id(), target);
  }
  
  // optional int64 league_id = 4;
  if (has_league_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->league_id(), target);
  }
  
  // optional int32 opra = 5;
  if (has_opra()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->opra(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30200118::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_id());
    }
    
    // optional int32 chat_channel = 2;
    if (has_chat_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chat_channel());
    }
    
    // optional int32 team_id = 3;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team_id());
    }
    
    // optional int64 league_id = 4;
    if (has_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_id());
    }
    
    // optional int32 opra = 5;
    if (has_opra()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opra());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30200118::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30200118* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30200118*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30200118::MergeFrom(const Proto30200118& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
    if (from.has_chat_channel()) {
      set_chat_channel(from.chat_channel());
    }
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
    if (from.has_league_id()) {
      set_league_id(from.league_id());
    }
    if (from.has_opra()) {
      set_opra(from.opra());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30200118::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30200118::CopyFrom(const Proto30200118& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30200118::IsInitialized() const {
  
  return true;
}

void Proto30200118::Swap(Proto30200118* other) {
  if (other != this) {
    std::swap(player_id_, other->player_id_);
    std::swap(chat_channel_, other->chat_channel_);
    std::swap(team_id_, other->team_id_);
    std::swap(league_id_, other->league_id_);
    std::swap(opra_, other->opra_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30200118::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30200118_descriptor_;
  metadata.reflection = Proto30200118_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400261::kRecognFieldNumber;
const int Proto31400261::kSelfIdFieldNumber;
const int Proto31400261::kOtherIdFieldNumber;
const int Proto31400261::kBeastIdFieldNumber;
const int Proto31400261::kMsgBodyFieldNumber;
const int Proto31400261::kQueryTypeFieldNumber;
#endif  // !_MSC_VER

Proto31400261::Proto31400261()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400261::InitAsDefaultInstance() {
}

Proto31400261::Proto31400261(const Proto31400261& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400261::SharedCtor() {
  _cached_size_ = 0;
  recogn_ = 0;
  self_id_ = GOOGLE_LONGLONG(0);
  other_id_ = GOOGLE_LONGLONG(0);
  beast_id_ = GOOGLE_LONGLONG(0);
  msg_body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  query_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400261::~Proto31400261() {
  SharedDtor();
}

void Proto31400261::SharedDtor() {
  if (msg_body_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_body_;
  }
  if (this != default_instance_) {
  }
}

void Proto31400261::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400261::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400261_descriptor_;
}

const Proto31400261& Proto31400261::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400261* Proto31400261::default_instance_ = NULL;

Proto31400261* Proto31400261::New() const {
  return new Proto31400261;
}

void Proto31400261::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    recogn_ = 0;
    self_id_ = GOOGLE_LONGLONG(0);
    other_id_ = GOOGLE_LONGLONG(0);
    beast_id_ = GOOGLE_LONGLONG(0);
    if (has_msg_body()) {
      if (msg_body_ != &::google::protobuf::internal::kEmptyString) {
        msg_body_->clear();
      }
    }
    query_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400261::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 recogn = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recogn_)));
          set_has_recogn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_self_id;
        break;
      }
      
      // optional int64 self_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_self_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &self_id_)));
          set_has_self_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_other_id;
        break;
      }
      
      // optional int64 other_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_other_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &other_id_)));
          set_has_other_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_beast_id;
        break;
      }
      
      // optional int64 beast_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_msg_body;
        break;
      }
      
      // optional bytes msg_body = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_msg_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg_body()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_query_type;
        break;
      }
      
      // optional int32 query_type = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_query_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &query_type_)));
          set_has_query_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400261::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 recogn = 1;
  if (has_recogn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->recogn(), output);
  }
  
  // optional int64 self_id = 2;
  if (has_self_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->self_id(), output);
  }
  
  // optional int64 other_id = 3;
  if (has_other_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->other_id(), output);
  }
  
  // optional int64 beast_id = 4;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->beast_id(), output);
  }
  
  // optional bytes msg_body = 5;
  if (has_msg_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      5, this->msg_body(), output);
  }
  
  // optional int32 query_type = 6;
  if (has_query_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->query_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400261::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 recogn = 1;
  if (has_recogn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->recogn(), target);
  }
  
  // optional int64 self_id = 2;
  if (has_self_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->self_id(), target);
  }
  
  // optional int64 other_id = 3;
  if (has_other_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->other_id(), target);
  }
  
  // optional int64 beast_id = 4;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->beast_id(), target);
  }
  
  // optional bytes msg_body = 5;
  if (has_msg_body()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->msg_body(), target);
  }
  
  // optional int32 query_type = 6;
  if (has_query_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->query_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400261::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 recogn = 1;
    if (has_recogn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recogn());
    }
    
    // optional int64 self_id = 2;
    if (has_self_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->self_id());
    }
    
    // optional int64 other_id = 3;
    if (has_other_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->other_id());
    }
    
    // optional int64 beast_id = 4;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
    // optional bytes msg_body = 5;
    if (has_msg_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->msg_body());
    }
    
    // optional int32 query_type = 6;
    if (has_query_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->query_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400261::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400261* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400261*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400261::MergeFrom(const Proto31400261& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recogn()) {
      set_recogn(from.recogn());
    }
    if (from.has_self_id()) {
      set_self_id(from.self_id());
    }
    if (from.has_other_id()) {
      set_other_id(from.other_id());
    }
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
    if (from.has_msg_body()) {
      set_msg_body(from.msg_body());
    }
    if (from.has_query_type()) {
      set_query_type(from.query_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400261::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400261::CopyFrom(const Proto31400261& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400261::IsInitialized() const {
  
  return true;
}

void Proto31400261::Swap(Proto31400261* other) {
  if (other != this) {
    std::swap(recogn_, other->recogn_);
    std::swap(self_id_, other->self_id_);
    std::swap(other_id_, other->other_id_);
    std::swap(beast_id_, other->beast_id_);
    std::swap(msg_body_, other->msg_body_);
    std::swap(query_type_, other->query_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400261::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400261_descriptor_;
  metadata.reflection = Proto31400261_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400424::kRoleIdFieldNumber;
const int Proto30400424::kRoleNameFieldNumber;
const int Proto30400424::kRoleSexFieldNumber;
const int Proto30400424::kRoleLevelFieldNumber;
const int Proto30400424::kRoleForceFieldNumber;
const int Proto30400424::kLeagueIdFieldNumber;
const int Proto30400424::kLeagueNameFieldNumber;
const int Proto30400424::kLeagueForceFieldNumber;
const int Proto30400424::kLeaderIdFieldNumber;
const int Proto30400424::kLeaderNameFieldNumber;
const int Proto30400424::kRoleCareerFieldNumber;
#endif  // !_MSC_VER

Proto30400424::Proto30400424()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400424::InitAsDefaultInstance() {
}

Proto30400424::Proto30400424(const Proto30400424& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400424::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  role_sex_ = 0;
  role_level_ = 0;
  role_force_ = 0;
  league_id_ = GOOGLE_LONGLONG(0);
  league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  league_force_ = 0;
  leader_id_ = GOOGLE_LONGLONG(0);
  leader_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  role_career_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400424::~Proto30400424() {
  SharedDtor();
}

void Proto30400424::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (league_name_ != &::google::protobuf::internal::kEmptyString) {
    delete league_name_;
  }
  if (leader_name_ != &::google::protobuf::internal::kEmptyString) {
    delete leader_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto30400424::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400424::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400424_descriptor_;
}

const Proto30400424& Proto30400424::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30400424* Proto30400424::default_instance_ = NULL;

Proto30400424* Proto30400424::New() const {
  return new Proto30400424;
}

void Proto30400424::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
    role_sex_ = 0;
    role_level_ = 0;
    role_force_ = 0;
    league_id_ = GOOGLE_LONGLONG(0);
    if (has_league_name()) {
      if (league_name_ != &::google::protobuf::internal::kEmptyString) {
        league_name_->clear();
      }
    }
    league_force_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    leader_id_ = GOOGLE_LONGLONG(0);
    if (has_leader_name()) {
      if (leader_name_ != &::google::protobuf::internal::kEmptyString) {
        leader_name_->clear();
      }
    }
    role_career_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400424::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_role_name;
        break;
      }
      
      // optional string role_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_role_sex;
        break;
      }
      
      // optional int32 role_sex = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_sex_)));
          set_has_role_sex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_role_level;
        break;
      }
      
      // optional int32 role_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_level_)));
          set_has_role_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_role_force;
        break;
      }
      
      // optional int32 role_force = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_force_)));
          set_has_role_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_league_id;
        break;
      }
      
      // optional int64 league_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_id_)));
          set_has_league_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_league_name;
        break;
      }
      
      // optional string league_name = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_league_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->league_name().data(), this->league_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_league_force;
        break;
      }
      
      // optional int32 league_force = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &league_force_)));
          set_has_league_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_leader_id;
        break;
      }
      
      // optional int64 leader_id = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leader_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &leader_id_)));
          set_has_leader_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_leader_name;
        break;
      }
      
      // optional string leader_name = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_leader_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->leader_name().data(), this->leader_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_role_career;
        break;
      }
      
      // optional int32 role_career = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_career:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_career_)));
          set_has_role_career();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400424::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional string role_name = 2;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->role_name(), output);
  }
  
  // optional int32 role_sex = 3;
  if (has_role_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->role_sex(), output);
  }
  
  // optional int32 role_level = 4;
  if (has_role_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->role_level(), output);
  }
  
  // optional int32 role_force = 5;
  if (has_role_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->role_force(), output);
  }
  
  // optional int64 league_id = 6;
  if (has_league_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->league_id(), output);
  }
  
  // optional string league_name = 7;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->league_name(), output);
  }
  
  // optional int32 league_force = 8;
  if (has_league_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->league_force(), output);
  }
  
  // optional int64 leader_id = 9;
  if (has_leader_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->leader_id(), output);
  }
  
  // optional string leader_name = 10;
  if (has_leader_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leader_name().data(), this->leader_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->leader_name(), output);
  }
  
  // optional int32 role_career = 11;
  if (has_role_career()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->role_career(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400424::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional string role_name = 2;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->role_name(), target);
  }
  
  // optional int32 role_sex = 3;
  if (has_role_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->role_sex(), target);
  }
  
  // optional int32 role_level = 4;
  if (has_role_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->role_level(), target);
  }
  
  // optional int32 role_force = 5;
  if (has_role_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->role_force(), target);
  }
  
  // optional int64 league_id = 6;
  if (has_league_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->league_id(), target);
  }
  
  // optional string league_name = 7;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->league_name(), target);
  }
  
  // optional int32 league_force = 8;
  if (has_league_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->league_force(), target);
  }
  
  // optional int64 leader_id = 9;
  if (has_leader_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->leader_id(), target);
  }
  
  // optional string leader_name = 10;
  if (has_leader_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leader_name().data(), this->leader_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->leader_name(), target);
  }
  
  // optional int32 role_career = 11;
  if (has_role_career()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->role_career(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400424::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional string role_name = 2;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
    // optional int32 role_sex = 3;
    if (has_role_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->role_sex());
    }
    
    // optional int32 role_level = 4;
    if (has_role_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->role_level());
    }
    
    // optional int32 role_force = 5;
    if (has_role_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->role_force());
    }
    
    // optional int64 league_id = 6;
    if (has_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_id());
    }
    
    // optional string league_name = 7;
    if (has_league_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->league_name());
    }
    
    // optional int32 league_force = 8;
    if (has_league_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->league_force());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 leader_id = 9;
    if (has_leader_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->leader_id());
    }
    
    // optional string leader_name = 10;
    if (has_leader_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->leader_name());
    }
    
    // optional int32 role_career = 11;
    if (has_role_career()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->role_career());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400424::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400424* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400424*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400424::MergeFrom(const Proto30400424& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
    if (from.has_role_sex()) {
      set_role_sex(from.role_sex());
    }
    if (from.has_role_level()) {
      set_role_level(from.role_level());
    }
    if (from.has_role_force()) {
      set_role_force(from.role_force());
    }
    if (from.has_league_id()) {
      set_league_id(from.league_id());
    }
    if (from.has_league_name()) {
      set_league_name(from.league_name());
    }
    if (from.has_league_force()) {
      set_league_force(from.league_force());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_leader_id()) {
      set_leader_id(from.leader_id());
    }
    if (from.has_leader_name()) {
      set_leader_name(from.leader_name());
    }
    if (from.has_role_career()) {
      set_role_career(from.role_career());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400424::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400424::CopyFrom(const Proto30400424& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400424::IsInitialized() const {
  
  return true;
}

void Proto30400424::Swap(Proto30400424* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(role_name_, other->role_name_);
    std::swap(role_sex_, other->role_sex_);
    std::swap(role_level_, other->role_level_);
    std::swap(role_force_, other->role_force_);
    std::swap(league_id_, other->league_id_);
    std::swap(league_name_, other->league_name_);
    std::swap(league_force_, other->league_force_);
    std::swap(leader_id_, other->leader_id_);
    std::swap(leader_name_, other->leader_name_);
    std::swap(role_career_, other->role_career_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400424::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400424_descriptor_;
  metadata.reflection = Proto30400424_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400115::kUpdateTickFieldNumber;
const int Proto31400115::kVipTypeRecFieldNumber;
const int Proto31400115::kVipStartTimeFieldNumber;
const int Proto31400115::kVipExpriedTimeFieldNumber;
const int Proto31400115::kLevelRecordFieldNumber;
const int Proto31400115::kVipRecordFieldNumber;
const int Proto31400115::kExpRestoreRecordFieldNumber;
const int Proto31400115::kScriptStageInfoFieldNumber;
const int Proto31400115::kPreActMapFieldNumber;
const int Proto31400115::kNowActMapFieldNumber;
#endif  // !_MSC_VER

Proto31400115::Proto31400115()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400115::InitAsDefaultInstance() {
}

Proto31400115::Proto31400115(const Proto31400115& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400115::SharedCtor() {
  _cached_size_ = 0;
  update_tick_ = 0;
  vip_type_rec_ = 0;
  vip_start_time_ = 0;
  vip_expried_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400115::~Proto31400115() {
  SharedDtor();
}

void Proto31400115::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400115::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400115::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400115_descriptor_;
}

const Proto31400115& Proto31400115::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400115* Proto31400115::default_instance_ = NULL;

Proto31400115* Proto31400115::New() const {
  return new Proto31400115;
}

void Proto31400115::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    update_tick_ = 0;
    vip_type_rec_ = 0;
    vip_start_time_ = 0;
    vip_expried_time_ = 0;
  }
  level_record_.Clear();
  vip_record_.Clear();
  exp_restore_record_.Clear();
  script_stage_info_.Clear();
  pre_act_map_.Clear();
  now_act_map_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400115::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 update_tick = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &update_tick_)));
          set_has_update_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_vip_type_rec;
        break;
      }
      
      // optional int32 vip_type_rec = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_type_rec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_type_rec_)));
          set_has_vip_type_rec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_vip_start_time;
        break;
      }
      
      // optional int32 vip_start_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_start_time_)));
          set_has_vip_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_vip_expried_time;
        break;
      }
      
      // optional int32 vip_expried_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_expried_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_expried_time_)));
          set_has_vip_expried_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_level_record;
        break;
      }
      
      // repeated .ProtoPairObj level_record = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_level_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_level_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_level_record;
        if (input->ExpectTag(50)) goto parse_vip_record;
        break;
      }
      
      // repeated .ProtoPairObj vip_record = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_vip_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_vip_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_vip_record;
        if (input->ExpectTag(58)) goto parse_exp_restore_record;
        break;
      }
      
      // repeated .ProtoExpRestoreRecord exp_restore_record = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_exp_restore_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_exp_restore_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_exp_restore_record;
        if (input->ExpectTag(66)) goto parse_script_stage_info;
        break;
      }
      
      // repeated .ProtoERScriptStageInfo script_stage_info = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_script_stage_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_script_stage_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_script_stage_info;
        if (input->ExpectTag(74)) goto parse_pre_act_map;
        break;
      }
      
      // repeated .ProtoThreeObj pre_act_map = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pre_act_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pre_act_map()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_pre_act_map;
        if (input->ExpectTag(82)) goto parse_now_act_map;
        break;
      }
      
      // repeated .ProtoThreeObj now_act_map = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_now_act_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_now_act_map()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_now_act_map;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400115::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 update_tick = 1;
  if (has_update_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->update_tick(), output);
  }
  
  // optional int32 vip_type_rec = 2;
  if (has_vip_type_rec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vip_type_rec(), output);
  }
  
  // optional int32 vip_start_time = 3;
  if (has_vip_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->vip_start_time(), output);
  }
  
  // optional int32 vip_expried_time = 4;
  if (has_vip_expried_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->vip_expried_time(), output);
  }
  
  // repeated .ProtoPairObj level_record = 5;
  for (int i = 0; i < this->level_record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->level_record(i), output);
  }
  
  // repeated .ProtoPairObj vip_record = 6;
  for (int i = 0; i < this->vip_record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->vip_record(i), output);
  }
  
  // repeated .ProtoExpRestoreRecord exp_restore_record = 7;
  for (int i = 0; i < this->exp_restore_record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->exp_restore_record(i), output);
  }
  
  // repeated .ProtoERScriptStageInfo script_stage_info = 8;
  for (int i = 0; i < this->script_stage_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->script_stage_info(i), output);
  }
  
  // repeated .ProtoThreeObj pre_act_map = 9;
  for (int i = 0; i < this->pre_act_map_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->pre_act_map(i), output);
  }
  
  // repeated .ProtoThreeObj now_act_map = 10;
  for (int i = 0; i < this->now_act_map_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->now_act_map(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400115::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 update_tick = 1;
  if (has_update_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->update_tick(), target);
  }
  
  // optional int32 vip_type_rec = 2;
  if (has_vip_type_rec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vip_type_rec(), target);
  }
  
  // optional int32 vip_start_time = 3;
  if (has_vip_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->vip_start_time(), target);
  }
  
  // optional int32 vip_expried_time = 4;
  if (has_vip_expried_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->vip_expried_time(), target);
  }
  
  // repeated .ProtoPairObj level_record = 5;
  for (int i = 0; i < this->level_record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->level_record(i), target);
  }
  
  // repeated .ProtoPairObj vip_record = 6;
  for (int i = 0; i < this->vip_record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->vip_record(i), target);
  }
  
  // repeated .ProtoExpRestoreRecord exp_restore_record = 7;
  for (int i = 0; i < this->exp_restore_record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->exp_restore_record(i), target);
  }
  
  // repeated .ProtoERScriptStageInfo script_stage_info = 8;
  for (int i = 0; i < this->script_stage_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->script_stage_info(i), target);
  }
  
  // repeated .ProtoThreeObj pre_act_map = 9;
  for (int i = 0; i < this->pre_act_map_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->pre_act_map(i), target);
  }
  
  // repeated .ProtoThreeObj now_act_map = 10;
  for (int i = 0; i < this->now_act_map_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->now_act_map(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400115::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 update_tick = 1;
    if (has_update_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->update_tick());
    }
    
    // optional int32 vip_type_rec = 2;
    if (has_vip_type_rec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_type_rec());
    }
    
    // optional int32 vip_start_time = 3;
    if (has_vip_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_start_time());
    }
    
    // optional int32 vip_expried_time = 4;
    if (has_vip_expried_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_expried_time());
    }
    
  }
  // repeated .ProtoPairObj level_record = 5;
  total_size += 1 * this->level_record_size();
  for (int i = 0; i < this->level_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->level_record(i));
  }
  
  // repeated .ProtoPairObj vip_record = 6;
  total_size += 1 * this->vip_record_size();
  for (int i = 0; i < this->vip_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vip_record(i));
  }
  
  // repeated .ProtoExpRestoreRecord exp_restore_record = 7;
  total_size += 1 * this->exp_restore_record_size();
  for (int i = 0; i < this->exp_restore_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->exp_restore_record(i));
  }
  
  // repeated .ProtoERScriptStageInfo script_stage_info = 8;
  total_size += 1 * this->script_stage_info_size();
  for (int i = 0; i < this->script_stage_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->script_stage_info(i));
  }
  
  // repeated .ProtoThreeObj pre_act_map = 9;
  total_size += 1 * this->pre_act_map_size();
  for (int i = 0; i < this->pre_act_map_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pre_act_map(i));
  }
  
  // repeated .ProtoThreeObj now_act_map = 10;
  total_size += 1 * this->now_act_map_size();
  for (int i = 0; i < this->now_act_map_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->now_act_map(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400115::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400115* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400115*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400115::MergeFrom(const Proto31400115& from) {
  GOOGLE_CHECK_NE(&from, this);
  level_record_.MergeFrom(from.level_record_);
  vip_record_.MergeFrom(from.vip_record_);
  exp_restore_record_.MergeFrom(from.exp_restore_record_);
  script_stage_info_.MergeFrom(from.script_stage_info_);
  pre_act_map_.MergeFrom(from.pre_act_map_);
  now_act_map_.MergeFrom(from.now_act_map_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_update_tick()) {
      set_update_tick(from.update_tick());
    }
    if (from.has_vip_type_rec()) {
      set_vip_type_rec(from.vip_type_rec());
    }
    if (from.has_vip_start_time()) {
      set_vip_start_time(from.vip_start_time());
    }
    if (from.has_vip_expried_time()) {
      set_vip_expried_time(from.vip_expried_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400115::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400115::CopyFrom(const Proto31400115& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400115::IsInitialized() const {
  
  return true;
}

void Proto31400115::Swap(Proto31400115* other) {
  if (other != this) {
    std::swap(update_tick_, other->update_tick_);
    std::swap(vip_type_rec_, other->vip_type_rec_);
    std::swap(vip_start_time_, other->vip_start_time_);
    std::swap(vip_expried_time_, other->vip_expried_time_);
    level_record_.Swap(&other->level_record_);
    vip_record_.Swap(&other->vip_record_);
    exp_restore_record_.Swap(&other->exp_restore_record_);
    script_stage_info_.Swap(&other->script_stage_info_);
    pre_act_map_.Swap(&other->pre_act_map_);
    now_act_map_.Swap(&other->now_act_map_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400115::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400115_descriptor_;
  metadata.reflection = Proto31400115_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400426::kWinIdFieldNumber;
const int Proto30400426::kLoseIdFieldNumber;
const int Proto30400426::kFightStateFieldNumber;
const int Proto30400426::kWinIsBotFieldNumber;
const int Proto30400426::kLoseIsBotFieldNumber;
#endif  // !_MSC_VER

Proto30400426::Proto30400426()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400426::InitAsDefaultInstance() {
}

Proto30400426::Proto30400426(const Proto30400426& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400426::SharedCtor() {
  _cached_size_ = 0;
  win_id_ = GOOGLE_LONGLONG(0);
  lose_id_ = GOOGLE_LONGLONG(0);
  fight_state_ = 0;
  win_is_bot_ = 0;
  lose_is_bot_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400426::~Proto30400426() {
  SharedDtor();
}

void Proto30400426::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400426::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400426::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400426_descriptor_;
}

const Proto30400426& Proto30400426::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30400426* Proto30400426::default_instance_ = NULL;

Proto30400426* Proto30400426::New() const {
  return new Proto30400426;
}

void Proto30400426::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    win_id_ = GOOGLE_LONGLONG(0);
    lose_id_ = GOOGLE_LONGLONG(0);
    fight_state_ = 0;
    win_is_bot_ = 0;
    lose_is_bot_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400426::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 win_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &win_id_)));
          set_has_win_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_lose_id;
        break;
      }
      
      // optional int64 lose_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lose_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lose_id_)));
          set_has_lose_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_fight_state;
        break;
      }
      
      // optional int32 fight_state = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_state_)));
          set_has_fight_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_win_is_bot;
        break;
      }
      
      // optional int32 win_is_bot = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_win_is_bot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &win_is_bot_)));
          set_has_win_is_bot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_lose_is_bot;
        break;
      }
      
      // optional int32 lose_is_bot = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lose_is_bot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lose_is_bot_)));
          set_has_lose_is_bot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400426::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 win_id = 1;
  if (has_win_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->win_id(), output);
  }
  
  // optional int64 lose_id = 2;
  if (has_lose_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->lose_id(), output);
  }
  
  // optional int32 fight_state = 3;
  if (has_fight_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fight_state(), output);
  }
  
  // optional int32 win_is_bot = 4;
  if (has_win_is_bot()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->win_is_bot(), output);
  }
  
  // optional int32 lose_is_bot = 5;
  if (has_lose_is_bot()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->lose_is_bot(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400426::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 win_id = 1;
  if (has_win_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->win_id(), target);
  }
  
  // optional int64 lose_id = 2;
  if (has_lose_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->lose_id(), target);
  }
  
  // optional int32 fight_state = 3;
  if (has_fight_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fight_state(), target);
  }
  
  // optional int32 win_is_bot = 4;
  if (has_win_is_bot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->win_is_bot(), target);
  }
  
  // optional int32 lose_is_bot = 5;
  if (has_lose_is_bot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->lose_is_bot(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400426::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 win_id = 1;
    if (has_win_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->win_id());
    }
    
    // optional int64 lose_id = 2;
    if (has_lose_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lose_id());
    }
    
    // optional int32 fight_state = 3;
    if (has_fight_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_state());
    }
    
    // optional int32 win_is_bot = 4;
    if (has_win_is_bot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->win_is_bot());
    }
    
    // optional int32 lose_is_bot = 5;
    if (has_lose_is_bot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lose_is_bot());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400426::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400426* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400426*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400426::MergeFrom(const Proto30400426& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_win_id()) {
      set_win_id(from.win_id());
    }
    if (from.has_lose_id()) {
      set_lose_id(from.lose_id());
    }
    if (from.has_fight_state()) {
      set_fight_state(from.fight_state());
    }
    if (from.has_win_is_bot()) {
      set_win_is_bot(from.win_is_bot());
    }
    if (from.has_lose_is_bot()) {
      set_lose_is_bot(from.lose_is_bot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400426::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400426::CopyFrom(const Proto30400426& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400426::IsInitialized() const {
  
  return true;
}

void Proto30400426::Swap(Proto30400426* other) {
  if (other != this) {
    std::swap(win_id_, other->win_id_);
    std::swap(lose_id_, other->lose_id_);
    std::swap(fight_state_, other->fight_state_);
    std::swap(win_is_bot_, other->win_is_bot_);
    std::swap(lose_is_bot_, other->lose_is_bot_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400426::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400426_descriptor_;
  metadata.reflection = Proto30400426_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400427::kMartialIndexFieldNumber;
const int Proto30400427::kFirstIdFieldNumber;
const int Proto30400427::kFirstNameFieldNumber;
const int Proto30400427::kFirstSexFieldNumber;
const int Proto30400427::kFirstLevelFieldNumber;
const int Proto30400427::kSecondIdFieldNumber;
const int Proto30400427::kSecondNameFieldNumber;
const int Proto30400427::kSecondSexFieldNumber;
const int Proto30400427::kSecondLevelFieldNumber;
const int Proto30400427::kFirstCareerFieldNumber;
const int Proto30400427::kSecondCareerFieldNumber;
#endif  // !_MSC_VER

Proto30400427::Proto30400427()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400427::InitAsDefaultInstance() {
}

Proto30400427::Proto30400427(const Proto30400427& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400427::SharedCtor() {
  _cached_size_ = 0;
  martial_index_ = 0;
  first_id_ = GOOGLE_LONGLONG(0);
  first_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  first_sex_ = 0;
  first_level_ = 0;
  second_id_ = GOOGLE_LONGLONG(0);
  second_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  second_sex_ = 0;
  second_level_ = 0;
  first_career_ = 0;
  second_career_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400427::~Proto30400427() {
  SharedDtor();
}

void Proto30400427::SharedDtor() {
  if (first_name_ != &::google::protobuf::internal::kEmptyString) {
    delete first_name_;
  }
  if (second_name_ != &::google::protobuf::internal::kEmptyString) {
    delete second_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto30400427::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400427::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400427_descriptor_;
}

const Proto30400427& Proto30400427::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto30400427* Proto30400427::default_instance_ = NULL;

Proto30400427* Proto30400427::New() const {
  return new Proto30400427;
}

void Proto30400427::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    martial_index_ = 0;
    first_id_ = GOOGLE_LONGLONG(0);
    if (has_first_name()) {
      if (first_name_ != &::google::protobuf::internal::kEmptyString) {
        first_name_->clear();
      }
    }
    first_sex_ = 0;
    first_level_ = 0;
    second_id_ = GOOGLE_LONGLONG(0);
    if (has_second_name()) {
      if (second_name_ != &::google::protobuf::internal::kEmptyString) {
        second_name_->clear();
      }
    }
    second_sex_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    second_level_ = 0;
    first_career_ = 0;
    second_career_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400427::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 martial_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &martial_index_)));
          set_has_martial_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_first_id;
        break;
      }
      
      // optional int64 first_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &first_id_)));
          set_has_first_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_first_name;
        break;
      }
      
      // optional string first_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_first_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_first_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->first_name().data(), this->first_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_first_sex;
        break;
      }
      
      // optional int32 first_sex = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_sex_)));
          set_has_first_sex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_first_level;
        break;
      }
      
      // optional int32 first_level = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_level_)));
          set_has_first_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_second_id;
        break;
      }
      
      // optional int64 second_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &second_id_)));
          set_has_second_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_second_name;
        break;
      }
      
      // optional string second_name = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_second_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_second_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->second_name().data(), this->second_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_second_sex;
        break;
      }
      
      // optional int32 second_sex = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_sex_)));
          set_has_second_sex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_second_level;
        break;
      }
      
      // optional int32 second_level = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_level_)));
          set_has_second_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_first_career;
        break;
      }
      
      // optional int32 first_career = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_career:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_career_)));
          set_has_first_career();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_second_career;
        break;
      }
      
      // optional int32 second_career = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_career:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_career_)));
          set_has_second_career();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400427::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 martial_index = 1;
  if (has_martial_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->martial_index(), output);
  }
  
  // optional int64 first_id = 2;
  if (has_first_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->first_id(), output);
  }
  
  // optional string first_name = 3;
  if (has_first_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->first_name().data(), this->first_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->first_name(), output);
  }
  
  // optional int32 first_sex = 4;
  if (has_first_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->first_sex(), output);
  }
  
  // optional int32 first_level = 5;
  if (has_first_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->first_level(), output);
  }
  
  // optional int64 second_id = 6;
  if (has_second_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->second_id(), output);
  }
  
  // optional string second_name = 7;
  if (has_second_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->second_name().data(), this->second_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->second_name(), output);
  }
  
  // optional int32 second_sex = 8;
  if (has_second_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->second_sex(), output);
  }
  
  // optional int32 second_level = 9;
  if (has_second_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->second_level(), output);
  }
  
  // optional int32 first_career = 10;
  if (has_first_career()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->first_career(), output);
  }
  
  // optional int32 second_career = 11;
  if (has_second_career()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->second_career(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400427::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 martial_index = 1;
  if (has_martial_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->martial_index(), target);
  }
  
  // optional int64 first_id = 2;
  if (has_first_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->first_id(), target);
  }
  
  // optional string first_name = 3;
  if (has_first_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->first_name().data(), this->first_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->first_name(), target);
  }
  
  // optional int32 first_sex = 4;
  if (has_first_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->first_sex(), target);
  }
  
  // optional int32 first_level = 5;
  if (has_first_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->first_level(), target);
  }
  
  // optional int64 second_id = 6;
  if (has_second_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->second_id(), target);
  }
  
  // optional string second_name = 7;
  if (has_second_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->second_name().data(), this->second_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->second_name(), target);
  }
  
  // optional int32 second_sex = 8;
  if (has_second_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->second_sex(), target);
  }
  
  // optional int32 second_level = 9;
  if (has_second_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->second_level(), target);
  }
  
  // optional int32 first_career = 10;
  if (has_first_career()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->first_career(), target);
  }
  
  // optional int32 second_career = 11;
  if (has_second_career()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->second_career(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400427::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 martial_index = 1;
    if (has_martial_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->martial_index());
    }
    
    // optional int64 first_id = 2;
    if (has_first_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->first_id());
    }
    
    // optional string first_name = 3;
    if (has_first_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->first_name());
    }
    
    // optional int32 first_sex = 4;
    if (has_first_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_sex());
    }
    
    // optional int32 first_level = 5;
    if (has_first_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_level());
    }
    
    // optional int64 second_id = 6;
    if (has_second_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->second_id());
    }
    
    // optional string second_name = 7;
    if (has_second_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->second_name());
    }
    
    // optional int32 second_sex = 8;
    if (has_second_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_sex());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 second_level = 9;
    if (has_second_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_level());
    }
    
    // optional int32 first_career = 10;
    if (has_first_career()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_career());
    }
    
    // optional int32 second_career = 11;
    if (has_second_career()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_career());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400427::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400427* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400427*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400427::MergeFrom(const Proto30400427& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_martial_index()) {
      set_martial_index(from.martial_index());
    }
    if (from.has_first_id()) {
      set_first_id(from.first_id());
    }
    if (from.has_first_name()) {
      set_first_name(from.first_name());
    }
    if (from.has_first_sex()) {
      set_first_sex(from.first_sex());
    }
    if (from.has_first_level()) {
      set_first_level(from.first_level());
    }
    if (from.has_second_id()) {
      set_second_id(from.second_id());
    }
    if (from.has_second_name()) {
      set_second_name(from.second_name());
    }
    if (from.has_second_sex()) {
      set_second_sex(from.second_sex());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_second_level()) {
      set_second_level(from.second_level());
    }
    if (from.has_first_career()) {
      set_first_career(from.first_career());
    }
    if (from.has_second_career()) {
      set_second_career(from.second_career());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400427::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400427::CopyFrom(const Proto30400427& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400427::IsInitialized() const {
  
  return true;
}

void Proto30400427::Swap(Proto30400427* other) {
  if (other != this) {
    std::swap(martial_index_, other->martial_index_);
    std::swap(first_id_, other->first_id_);
    std::swap(first_name_, other->first_name_);
    std::swap(first_sex_, other->first_sex_);
    std::swap(first_level_, other->first_level_);
    std::swap(second_id_, other->second_id_);
    std::swap(second_name_, other->second_name_);
    std::swap(second_sex_, other->second_sex_);
    std::swap(second_level_, other->second_level_);
    std::swap(first_career_, other->first_career_);
    std::swap(second_career_, other->second_career_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400427::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400427_descriptor_;
  metadata.reflection = Proto30400427_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400401::kEventIdFieldNumber;
const int Proto31400401::kTimesFieldNumber;
const int Proto31400401::kValueFieldNumber;
#endif  // !_MSC_VER

Proto31400401::Proto31400401()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400401::InitAsDefaultInstance() {
}

Proto31400401::Proto31400401(const Proto31400401& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400401::SharedCtor() {
  _cached_size_ = 0;
  event_id_ = 0;
  times_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400401::~Proto31400401() {
  SharedDtor();
}

void Proto31400401::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400401::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400401::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400401_descriptor_;
}

const Proto31400401& Proto31400401::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400401* Proto31400401::default_instance_ = NULL;

Proto31400401* Proto31400401::New() const {
  return new Proto31400401;
}

void Proto31400401::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    event_id_ = 0;
    times_ = 0;
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400401::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 event_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &event_id_)));
          set_has_event_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_times;
        break;
      }
      
      // optional int32 times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &times_)));
          set_has_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_value;
        break;
      }
      
      // optional int32 value = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400401::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 event_id = 1;
  if (has_event_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->event_id(), output);
  }
  
  // optional int32 times = 2;
  if (has_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->times(), output);
  }
  
  // optional int32 value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400401::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 event_id = 1;
  if (has_event_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->event_id(), target);
  }
  
  // optional int32 times = 2;
  if (has_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->times(), target);
  }
  
  // optional int32 value = 3;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400401::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 event_id = 1;
    if (has_event_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->event_id());
    }
    
    // optional int32 times = 2;
    if (has_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->times());
    }
    
    // optional int32 value = 3;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400401::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400401* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400401*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400401::MergeFrom(const Proto31400401& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_event_id()) {
      set_event_id(from.event_id());
    }
    if (from.has_times()) {
      set_times(from.times());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400401::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400401::CopyFrom(const Proto31400401& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400401::IsInitialized() const {
  
  return true;
}

void Proto31400401::Swap(Proto31400401* other) {
  if (other != this) {
    std::swap(event_id_, other->event_id_);
    std::swap(times_, other->times_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400401::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400401_descriptor_;
  metadata.reflection = Proto31400401_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400120::kLuckyValueFieldNumber;
const int Proto31400120::kMagicalMapFieldNumber;
const int Proto31400120::kSmeltLevelFieldNumber;
const int Proto31400120::kSmeltExpFieldNumber;
const int Proto31400120::kRecommendFieldNumber;
const int Proto31400120::kOpenFieldNumber;
#endif  // !_MSC_VER

Proto31400120::Proto31400120()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400120::InitAsDefaultInstance() {
}

Proto31400120::Proto31400120(const Proto31400120& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400120::SharedCtor() {
  _cached_size_ = 0;
  lucky_value_ = 0;
  smelt_level_ = 0;
  smelt_exp_ = 0;
  recommend_ = 0;
  open_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400120::~Proto31400120() {
  SharedDtor();
}

void Proto31400120::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400120::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400120::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400120_descriptor_;
}

const Proto31400120& Proto31400120::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner002_2eproto();  return *default_instance_;
}

Proto31400120* Proto31400120::default_instance_ = NULL;

Proto31400120* Proto31400120::New() const {
  return new Proto31400120;
}

void Proto31400120::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    lucky_value_ = 0;
    smelt_level_ = 0;
    smelt_exp_ = 0;
    recommend_ = 0;
    open_ = 0;
  }
  magical_map_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400120::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 lucky_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lucky_value_)));
          set_has_lucky_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_magical_map;
        break;
      }
      
      // repeated .ProtoMagicalPolish magical_map = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_magical_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_magical_map()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_magical_map;
        if (input->ExpectTag(24)) goto parse_smelt_level;
        break;
      }
      
      // optional int32 smelt_level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_smelt_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &smelt_level_)));
          set_has_smelt_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_smelt_exp;
        break;
      }
      
      // optional int32 smelt_exp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_smelt_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &smelt_exp_)));
          set_has_smelt_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_recommend;
        break;
      }
      
      // optional int32 recommend = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recommend:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recommend_)));
          set_has_recommend();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_open;
        break;
      }
      
      // optional int32 open = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_)));
          set_has_open();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400120::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 lucky_value = 1;
  if (has_lucky_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lucky_value(), output);
  }
  
  // repeated .ProtoMagicalPolish magical_map = 2;
  for (int i = 0; i < this->magical_map_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->magical_map(i), output);
  }
  
  // optional int32 smelt_level = 3;
  if (has_smelt_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->smelt_level(), output);
  }
  
  // optional int32 smelt_exp = 4;
  if (has_smelt_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->smelt_exp(), output);
  }
  
  // optional int32 recommend = 5;
  if (has_recommend()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->recommend(), output);
  }
  
  // optional int32 open = 6;
  if (has_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->open(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400120::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 lucky_value = 1;
  if (has_lucky_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lucky_value(), target);
  }
  
  // repeated .ProtoMagicalPolish magical_map = 2;
  for (int i = 0; i < this->magical_map_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->magical_map(i), target);
  }
  
  // optional int32 smelt_level = 3;
  if (has_smelt_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->smelt_level(), target);
  }
  
  // optional int32 smelt_exp = 4;
  if (has_smelt_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->smelt_exp(), target);
  }
  
  // optional int32 recommend = 5;
  if (has_recommend()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->recommend(), target);
  }
  
  // optional int32 open = 6;
  if (has_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->open(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400120::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 lucky_value = 1;
    if (has_lucky_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lucky_value());
    }
    
    // optional int32 smelt_level = 3;
    if (has_smelt_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->smelt_level());
    }
    
    // optional int32 smelt_exp = 4;
    if (has_smelt_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->smelt_exp());
    }
    
    // optional int32 recommend = 5;
    if (has_recommend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recommend());
    }
    
    // optional int32 open = 6;
    if (has_open()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open());
    }
    
  }
  // repeated .ProtoMagicalPolish magical_map = 2;
  total_size += 1 * this->magical_map_size();
  for (int i = 0; i < this->magical_map_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->magical_map(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400120::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400120* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400120*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400120::MergeFrom(const Proto31400120& from) {
  GOOGLE_CHECK_NE(&from, this);
  magical_map_.MergeFrom(from.magical_map_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lucky_value()) {
      set_lucky_value(from.lucky_value());
    }
    if (from.has_smelt_level()) {
      set_smelt_level(from.smelt_level());
    }
    if (from.has_smelt_exp()) {
      set_smelt_exp(from.smelt_exp());
    }
    if (from.has_recommend()) {
      set_recommend(from.recommend());
    }
    if (from.has_open()) {
      set_open(from.open());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400120::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400120::CopyFrom(const Proto31400120& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400120::IsInitialized() const {
  
  return true;
}

void Proto31400120::Swap(Proto31400120* other) {
  if (other != this) {
    std::swap(lucky_value_, other->lucky_value_);
    magical_map_.Swap(&other->magical_map_);
    std::swap(smelt_level_, other->smelt_level_);
    std::swap(smelt_exp_, other->smelt_exp_);
    std::swap(recommend_, other->recommend_);
    std::swap(open_, other->open_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400120::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400120_descriptor_;
  metadata.reflection = Proto31400120_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
