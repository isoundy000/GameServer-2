// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoInner006.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto31400137_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400137_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100021_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100021_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400027_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400027_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400007_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400007_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400138_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400138_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400139_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400139_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31402204_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31402204_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30101601_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30101601_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30101608_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30101608_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30101610_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30101610_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31101602_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31101602_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31101603_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31101603_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31101604_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31101604_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31101605_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31101605_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31101606_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31101606_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31101607_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31101607_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31101609_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31101609_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400006_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400006_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400019_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400019_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400445_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400445_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400910_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400910_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400020_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400020_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30101602_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30101602_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30101603_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30101603_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100604_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100604_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30101604_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30101604_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400315_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400315_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400316_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400316_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100237_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100237_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400317_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400317_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100238_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100238_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30401602_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30401602_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto32101103_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto32101103_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400446_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400446_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100105_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100105_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto32101104_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto32101104_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400028_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400028_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto32101105_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto32101105_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100404_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100404_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400701_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400701_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto32101106_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto32101106_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400318_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400318_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400263_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400263_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100605_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100605_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400030_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400030_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400031_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400031_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400032_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400032_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400036_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400036_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400037_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400037_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400037_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400037_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoInner006_2eproto() {
  protobuf_AddDesc_ProtoInner006_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoInner006.proto");
  GOOGLE_CHECK(file != NULL);
  Proto31400137_descriptor_ = file->message_type(0);
  static const int Proto31400137_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400137, cur_cultivation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400137, round_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400137, extra_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400137, exchange_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400137, total_attack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400137, total_defence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400137, total_crit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400137, total_toughness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400137, total_hit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400137, total_avoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400137, total_magic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400137, total_attack_low_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400137, total_defence_low_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400137, total_health_),
  };
  Proto31400137_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400137_descriptor_,
      Proto31400137::default_instance_,
      Proto31400137_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400137, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400137, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400137));
  Proto30100021_descriptor_ = file->message_type(1);
  static const int Proto30100021_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100021, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100021, shop_type_),
  };
  Proto30100021_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100021_descriptor_,
      Proto30100021::default_instance_,
      Proto30100021_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100021, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100021, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100021));
  Proto31400027_descriptor_ = file->message_type(2);
  static const int Proto31400027_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400027, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400027, shop_type_),
  };
  Proto31400027_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400027_descriptor_,
      Proto31400027::default_instance_,
      Proto31400027_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400027, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400027, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400027));
  Proto30400007_descriptor_ = file->message_type(3);
  static const int Proto30400007_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400007, scene_id_),
  };
  Proto30400007_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400007_descriptor_,
      Proto30400007::default_instance_,
      Proto30400007_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400007, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400007, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400007));
  Proto31400138_descriptor_ = file->message_type(4);
  static const int Proto31400138_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400138, realm_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400138, step_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400138, property_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400138, cur_xianqi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400138, cur_lingqi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400138, total_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400138, total_defence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400138, total_defence_low_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400138, total_crit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400138, total_toughness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400138, total_hit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400138, total_avoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400138, total_attack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400138, total_attack_low_),
  };
  Proto31400138_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400138_descriptor_,
      Proto31400138::default_instance_,
      Proto31400138_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400138, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400138, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400138));
  Proto31400139_descriptor_ = file->message_type(5);
  static const int Proto31400139_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400139, practice_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400139, practice_gold_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400139, practice_clouds_),
  };
  Proto31400139_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400139_descriptor_,
      Proto31400139::default_instance_,
      Proto31400139_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400139, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400139, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400139));
  Proto31402204_descriptor_ = file->message_type(6);
  static const int Proto31402204_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402204, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402204, skill_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402204, higher_level_count_),
  };
  Proto31402204_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31402204_descriptor_,
      Proto31402204::default_instance_,
      Proto31402204_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402204, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402204, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31402204));
  Proto30101601_descriptor_ = file->message_type(7);
  static const int Proto30101601_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101601, res_recogn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101601, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101601, role_list_),
  };
  Proto30101601_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30101601_descriptor_,
      Proto30101601::default_instance_,
      Proto30101601_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101601, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101601, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30101601));
  Proto30101608_descriptor_ = file->message_type(8);
  static const int Proto30101608_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101608, wedding_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101608, wedding_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101608, partner_id_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101608, partner_id_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101608, monster_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101608, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101608, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101608, partner_career_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101608, partner_career_2_),
  };
  Proto30101608_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30101608_descriptor_,
      Proto30101608::default_instance_,
      Proto30101608_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101608, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101608, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30101608));
  Proto30101610_descriptor_ = file->message_type(9);
  static const int Proto30101610_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101610, wedding_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101610, partner_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101610, wedding_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101610, partner_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101610, other_info_),
  };
  Proto30101610_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30101610_descriptor_,
      Proto30101610::default_instance_,
      Proto30101610_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101610, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101610, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30101610));
  Proto31101602_descriptor_ = file->message_type(10);
  static const int Proto31101602_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101602, res_recogn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101602, wedding_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101602, res_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101602, role_list_),
  };
  Proto31101602_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31101602_descriptor_,
      Proto31101602::default_instance_,
      Proto31101602_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101602, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101602, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31101602));
  Proto31101603_descriptor_ = file->message_type(11);
  static const int Proto31101603_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101603, res_code_),
  };
  Proto31101603_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31101603_descriptor_,
      Proto31101603::default_instance_,
      Proto31101603_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101603, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101603, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31101603));
  Proto31101604_descriptor_ = file->message_type(12);
  static const int Proto31101604_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101604, keepsake_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101604, keepsake_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101604, keepsake_sublevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101604, keepsake_progress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101604, res_code_),
  };
  Proto31101604_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31101604_descriptor_,
      Proto31101604::default_instance_,
      Proto31101604_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101604, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101604, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31101604));
  Proto31101605_descriptor_ = file->message_type(13);
  static const int Proto31101605_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101605, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101605, receiver_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101605, res_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101605, item_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101605, receiver_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101605, auto_buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101605, other_info_),
  };
  Proto31101605_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31101605_descriptor_,
      Proto31101605::default_instance_,
      Proto31101605_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101605, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101605, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31101605));
  Proto31101606_descriptor_ = file->message_type(14);
  static const int Proto31101606_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101606, intimacy_),
  };
  Proto31101606_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31101606_descriptor_,
      Proto31101606::default_instance_,
      Proto31101606_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101606, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101606, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31101606));
  Proto31101607_descriptor_ = file->message_type(15);
  static const int Proto31101607_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101607, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101607, role_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101607, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101607, scene_id_),
  };
  Proto31101607_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31101607_descriptor_,
      Proto31101607::default_instance_,
      Proto31101607_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101607, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101607, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31101607));
  Proto31101609_descriptor_ = file->message_type(16);
  static const int Proto31101609_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101609, wedding_id_),
  };
  Proto31101609_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31101609_descriptor_,
      Proto31101609::default_instance_,
      Proto31101609_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101609, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31101609, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31101609));
  Proto31400006_descriptor_ = file->message_type(17);
  static const int Proto31400006_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400006, add_savvy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400006, serial_obj_),
  };
  Proto31400006_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400006_descriptor_,
      Proto31400006::default_instance_,
      Proto31400006_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400006, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400006, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400006));
  Proto30400019_descriptor_ = file->message_type(18);
  static const int Proto30400019_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400019, recovert_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400019, total_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400019, recovert_magic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400019, total_magic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400019, auto_back_main_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400019, auto_random_),
  };
  Proto30400019_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400019_descriptor_,
      Proto30400019::default_instance_,
      Proto30400019_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400019, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400019, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400019));
  Proto30400445_descriptor_ = file->message_type(19);
  static const int Proto30400445_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400445, league_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400445, role_id_),
  };
  Proto30400445_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400445_descriptor_,
      Proto30400445::default_instance_,
      Proto30400445_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400445, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400445, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400445));
  Proto30400910_descriptor_ = file->message_type(20);
  static const int Proto30400910_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400910, level_),
  };
  Proto30400910_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400910_descriptor_,
      Proto30400910::default_instance_,
      Proto30400910_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400910, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400910, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400910));
  Proto30400020_descriptor_ = file->message_type(21);
  static const int Proto30400020_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400020, inc_lucky_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400020, killing_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400020, pk_state_),
  };
  Proto30400020_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400020_descriptor_,
      Proto30400020::default_instance_,
      Proto30400020_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400020, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400020, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400020));
  Proto30101602_descriptor_ = file->message_type(22);
  static const int Proto30101602_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101602, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101602, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101602, pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101602, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101602, enemy_id_),
  };
  Proto30101602_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30101602_descriptor_,
      Proto30101602::default_instance_,
      Proto30101602_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101602, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101602, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30101602));
  Proto30101603_descriptor_ = file->message_type(23);
  static const int Proto30101603_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101603, nearby_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101603, role_id_),
  };
  Proto30101603_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30101603_descriptor_,
      Proto30101603::default_instance_,
      Proto30101603_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101603, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101603, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30101603));
  Proto30100604_descriptor_ = file->message_type(24);
  static const int Proto30100604_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100604, player_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100604, type_),
  };
  Proto30100604_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100604_descriptor_,
      Proto30100604::default_instance_,
      Proto30100604_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100604, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100604, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100604));
  Proto30101604_descriptor_ = file->message_type(25);
  static const int Proto30101604_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101604, sub_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101604, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101604, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101604, pixel_y_),
  };
  Proto30101604_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30101604_descriptor_,
      Proto30101604::default_instance_,
      Proto30101604_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101604, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101604, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30101604));
  Proto31400315_descriptor_ = file->message_type(26);
  static const int Proto31400315_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400315, join_tick_),
  };
  Proto31400315_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400315_descriptor_,
      Proto31400315::default_instance_,
      Proto31400315_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400315, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400315, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400315));
  Proto31400316_descriptor_ = file->message_type(27);
  static const int Proto31400316_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400316, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400316, item_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400316, item_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400316, package_index_),
  };
  Proto31400316_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400316_descriptor_,
      Proto31400316::default_instance_,
      Proto31400316_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400316, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400316, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400316));
  Proto30100237_descriptor_ = file->message_type(28);
  static const int Proto30100237_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100237, package_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100237, item_),
  };
  Proto30100237_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100237_descriptor_,
      Proto30100237::default_instance_,
      Proto30100237_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100237, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100237, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100237));
  Proto31400317_descriptor_ = file->message_type(29);
  static const int Proto31400317_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400317, item_),
  };
  Proto31400317_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400317_descriptor_,
      Proto31400317::default_instance_,
      Proto31400317_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400317, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400317, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400317));
  Proto30100238_descriptor_ = file->message_type(30);
  static const int Proto30100238_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100238, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100238, league_id_),
  };
  Proto30100238_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100238_descriptor_,
      Proto30100238::default_instance_,
      Proto30100238_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100238, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100238, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100238));
  Proto30401602_descriptor_ = file->message_type(31);
  static const int Proto30401602_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401602, ave_lvl_),
  };
  Proto30401602_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30401602_descriptor_,
      Proto30401602::default_instance_,
      Proto30401602_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401602, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401602, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30401602));
  Proto32101103_descriptor_ = file->message_type(32);
  static const int Proto32101103_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101103, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101103, act_list_),
  };
  Proto32101103_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto32101103_descriptor_,
      Proto32101103::default_instance_,
      Proto32101103_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101103, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101103, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto32101103));
  Proto30400446_descriptor_ = file->message_type(33);
  static const int Proto30400446_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400446, page_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400446, src_scene_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400446, self_league_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400446, req_type_),
  };
  Proto30400446_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400446_descriptor_,
      Proto30400446::default_instance_,
      Proto30400446_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400446, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400446, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400446));
  Proto30100105_descriptor_ = file->message_type(34);
  static const int Proto30100105_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100105, kill_normal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100105, kill_evil_),
  };
  Proto30100105_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100105_descriptor_,
      Proto30100105::default_instance_,
      Proto30100105_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100105, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100105, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100105));
  Proto32101104_descriptor_ = file->message_type(35);
  static const int Proto32101104_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101104, act_role_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101104, act_info_),
  };
  Proto32101104_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto32101104_descriptor_,
      Proto32101104::default_instance_,
      Proto32101104_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101104, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101104, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto32101104));
  Proto31400028_descriptor_ = file->message_type(36);
  static const int Proto31400028_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400028, play_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400028, serial_obj_),
  };
  Proto31400028_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400028_descriptor_,
      Proto31400028::default_instance_,
      Proto31400028_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400028, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400028, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400028));
  Proto32101105_descriptor_ = file->message_type(37);
  static const int Proto32101105_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101105, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101105, account_),
  };
  Proto32101105_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto32101105_descriptor_,
      Proto32101105::default_instance_,
      Proto32101105_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101105, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101105, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto32101105));
  Proto30100404_descriptor_ = file->message_type(38);
  static const int Proto30100404_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100404, add_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100404, personal_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100404, role_id_),
  };
  Proto30100404_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100404_descriptor_,
      Proto30100404::default_instance_,
      Proto30100404_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100404, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100404, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100404));
  Proto31400701_descriptor_ = file->message_type(39);
  static const int Proto31400701_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400701, service_count_),
  };
  Proto31400701_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400701_descriptor_,
      Proto31400701::default_instance_,
      Proto31400701_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400701, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400701, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400701));
  Proto32101106_descriptor_ = file->message_type(40);
  static const int Proto32101106_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101106, act_info_),
  };
  Proto32101106_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto32101106_descriptor_,
      Proto32101106::default_instance_,
      Proto32101106_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101106, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101106, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto32101106));
  Proto31400318_descriptor_ = file->message_type(41);
  static const int Proto31400318_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400318, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400318, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400318, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400318, pack_index_),
  };
  Proto31400318_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400318_descriptor_,
      Proto31400318::default_instance_,
      Proto31400318_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400318, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400318, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400318));
  Proto31400263_descriptor_ = file->message_type(42);
  static const int Proto31400263_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400263, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400263, account_),
  };
  Proto31400263_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400263_descriptor_,
      Proto31400263::default_instance_,
      Proto31400263_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400263, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400263, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400263));
  Proto30100605_descriptor_ = file->message_type(43);
  static const int Proto30100605_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100605, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100605, money_),
  };
  Proto30100605_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100605_descriptor_,
      Proto30100605::default_instance_,
      Proto30100605_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100605, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100605, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100605));
  Proto31400030_descriptor_ = file->message_type(44);
  static const int Proto31400030_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400030, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400030, act_index_),
  };
  Proto31400030_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400030_descriptor_,
      Proto31400030::default_instance_,
      Proto31400030_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400030, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400030, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400030));
  Proto31400031_descriptor_ = file->message_type(45);
  static const int Proto31400031_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400031, act_index_),
  };
  Proto31400031_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400031_descriptor_,
      Proto31400031::default_instance_,
      Proto31400031_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400031, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400031, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400031));
  Proto31400032_descriptor_ = file->message_type(46);
  static const int Proto31400032_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400032, act_role_reward_),
  };
  Proto31400032_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400032_descriptor_,
      Proto31400032::default_instance_,
      Proto31400032_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400032, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400032, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400032));
  Proto31400036_descriptor_ = file->message_type(47);
  static const int Proto31400036_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400036, rank_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400036, rank_type_),
  };
  Proto31400036_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400036_descriptor_,
      Proto31400036::default_instance_,
      Proto31400036_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400036, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400036, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400036));
  Proto31400037_descriptor_ = file->message_type(48);
  static const int Proto31400037_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400037, rank_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400037, rank_type_),
  };
  Proto31400037_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400037_descriptor_,
      Proto31400037::default_instance_,
      Proto31400037_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400037, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400037, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400037));
  Proto30400037_descriptor_ = file->message_type(49);
  static const int Proto30400037_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400037, rank_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400037, size_),
  };
  Proto30400037_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400037_descriptor_,
      Proto30400037::default_instance_,
      Proto30400037_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400037, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400037, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400037));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoInner006_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400137_descriptor_, &Proto31400137::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100021_descriptor_, &Proto30100021::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400027_descriptor_, &Proto31400027::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400007_descriptor_, &Proto30400007::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400138_descriptor_, &Proto31400138::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400139_descriptor_, &Proto31400139::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31402204_descriptor_, &Proto31402204::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30101601_descriptor_, &Proto30101601::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30101608_descriptor_, &Proto30101608::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30101610_descriptor_, &Proto30101610::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31101602_descriptor_, &Proto31101602::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31101603_descriptor_, &Proto31101603::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31101604_descriptor_, &Proto31101604::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31101605_descriptor_, &Proto31101605::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31101606_descriptor_, &Proto31101606::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31101607_descriptor_, &Proto31101607::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31101609_descriptor_, &Proto31101609::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400006_descriptor_, &Proto31400006::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400019_descriptor_, &Proto30400019::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400445_descriptor_, &Proto30400445::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400910_descriptor_, &Proto30400910::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400020_descriptor_, &Proto30400020::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30101602_descriptor_, &Proto30101602::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30101603_descriptor_, &Proto30101603::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100604_descriptor_, &Proto30100604::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30101604_descriptor_, &Proto30101604::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400315_descriptor_, &Proto31400315::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400316_descriptor_, &Proto31400316::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100237_descriptor_, &Proto30100237::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400317_descriptor_, &Proto31400317::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100238_descriptor_, &Proto30100238::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30401602_descriptor_, &Proto30401602::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto32101103_descriptor_, &Proto32101103::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400446_descriptor_, &Proto30400446::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100105_descriptor_, &Proto30100105::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto32101104_descriptor_, &Proto32101104::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400028_descriptor_, &Proto31400028::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto32101105_descriptor_, &Proto32101105::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100404_descriptor_, &Proto30100404::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400701_descriptor_, &Proto31400701::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto32101106_descriptor_, &Proto32101106::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400318_descriptor_, &Proto31400318::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400263_descriptor_, &Proto31400263::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100605_descriptor_, &Proto30100605::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400030_descriptor_, &Proto31400030::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400031_descriptor_, &Proto31400031::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400032_descriptor_, &Proto31400032::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400036_descriptor_, &Proto31400036::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400037_descriptor_, &Proto31400037::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400037_descriptor_, &Proto30400037::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoInner006_2eproto() {
  delete Proto31400137::default_instance_;
  delete Proto31400137_reflection_;
  delete Proto30100021::default_instance_;
  delete Proto30100021_reflection_;
  delete Proto31400027::default_instance_;
  delete Proto31400027_reflection_;
  delete Proto30400007::default_instance_;
  delete Proto30400007_reflection_;
  delete Proto31400138::default_instance_;
  delete Proto31400138_reflection_;
  delete Proto31400139::default_instance_;
  delete Proto31400139_reflection_;
  delete Proto31402204::default_instance_;
  delete Proto31402204_reflection_;
  delete Proto30101601::default_instance_;
  delete Proto30101601_reflection_;
  delete Proto30101608::default_instance_;
  delete Proto30101608_reflection_;
  delete Proto30101610::default_instance_;
  delete Proto30101610_reflection_;
  delete Proto31101602::default_instance_;
  delete Proto31101602_reflection_;
  delete Proto31101603::default_instance_;
  delete Proto31101603_reflection_;
  delete Proto31101604::default_instance_;
  delete Proto31101604_reflection_;
  delete Proto31101605::default_instance_;
  delete Proto31101605_reflection_;
  delete Proto31101606::default_instance_;
  delete Proto31101606_reflection_;
  delete Proto31101607::default_instance_;
  delete Proto31101607_reflection_;
  delete Proto31101609::default_instance_;
  delete Proto31101609_reflection_;
  delete Proto31400006::default_instance_;
  delete Proto31400006_reflection_;
  delete Proto30400019::default_instance_;
  delete Proto30400019_reflection_;
  delete Proto30400445::default_instance_;
  delete Proto30400445_reflection_;
  delete Proto30400910::default_instance_;
  delete Proto30400910_reflection_;
  delete Proto30400020::default_instance_;
  delete Proto30400020_reflection_;
  delete Proto30101602::default_instance_;
  delete Proto30101602_reflection_;
  delete Proto30101603::default_instance_;
  delete Proto30101603_reflection_;
  delete Proto30100604::default_instance_;
  delete Proto30100604_reflection_;
  delete Proto30101604::default_instance_;
  delete Proto30101604_reflection_;
  delete Proto31400315::default_instance_;
  delete Proto31400315_reflection_;
  delete Proto31400316::default_instance_;
  delete Proto31400316_reflection_;
  delete Proto30100237::default_instance_;
  delete Proto30100237_reflection_;
  delete Proto31400317::default_instance_;
  delete Proto31400317_reflection_;
  delete Proto30100238::default_instance_;
  delete Proto30100238_reflection_;
  delete Proto30401602::default_instance_;
  delete Proto30401602_reflection_;
  delete Proto32101103::default_instance_;
  delete Proto32101103_reflection_;
  delete Proto30400446::default_instance_;
  delete Proto30400446_reflection_;
  delete Proto30100105::default_instance_;
  delete Proto30100105_reflection_;
  delete Proto32101104::default_instance_;
  delete Proto32101104_reflection_;
  delete Proto31400028::default_instance_;
  delete Proto31400028_reflection_;
  delete Proto32101105::default_instance_;
  delete Proto32101105_reflection_;
  delete Proto30100404::default_instance_;
  delete Proto30100404_reflection_;
  delete Proto31400701::default_instance_;
  delete Proto31400701_reflection_;
  delete Proto32101106::default_instance_;
  delete Proto32101106_reflection_;
  delete Proto31400318::default_instance_;
  delete Proto31400318_reflection_;
  delete Proto31400263::default_instance_;
  delete Proto31400263_reflection_;
  delete Proto30100605::default_instance_;
  delete Proto30100605_reflection_;
  delete Proto31400030::default_instance_;
  delete Proto31400030_reflection_;
  delete Proto31400031::default_instance_;
  delete Proto31400031_reflection_;
  delete Proto31400032::default_instance_;
  delete Proto31400032_reflection_;
  delete Proto31400036::default_instance_;
  delete Proto31400036_reflection_;
  delete Proto31400037::default_instance_;
  delete Proto31400037_reflection_;
  delete Proto30400037::default_instance_;
  delete Proto30400037_reflection_;
}

void protobuf_AddDesc_ProtoInner006_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::protobuf_AddDesc_ProtoInnerPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023ProtoInner006.proto\032\021ProtoPublic.proto"
    "\032\026ProtoInnerPublic.proto\"\304\002\n\rProto314001"
    "37\022\027\n\017cur_cultivation\030\001 \001(\005\022\r\n\005round\030\002 \001"
    "(\005\022\021\n\textra_exp\030\003 \001(\003\022\026\n\016exchange_times\030"
    "\004 \001(\005\022\024\n\014total_attack\030\005 \001(\005\022\025\n\rtotal_def"
    "ence\030\006 \001(\005\022\022\n\ntotal_crit\030\007 \001(\005\022\027\n\017total_"
    "toughness\030\010 \001(\005\022\021\n\ttotal_hit\030\t \001(\005\022\023\n\013to"
    "tal_avoid\030\n \001(\005\022\023\n\013total_magic\030\013 \001(\005\022\030\n\020"
    "total_attack_low\030\014 \001(\005\022\031\n\021total_defence_"
    "low\030\r \001(\005\022\024\n\014total_health\030\016 \001(\005\"<\n\rProto"
    "30100021\022\030\n\004item\030\001 \003(\0132\n.ProtoItem\022\021\n\tsh"
    "op_type\030\002 \001(\005\"3\n\rProto31400027\022\017\n\007item_i"
    "d\030\001 \003(\005\022\021\n\tshop_type\030\002 \001(\005\"!\n\rProto30400"
    "007\022\020\n\010scene_id\030\001 \001(\005\"\273\002\n\rProto31400138\022"
    "\020\n\010realm_id\030\001 \001(\005\022\014\n\004step\030\002 \001(\005\022\026\n\016prope"
    "rty_index\030\003 \001(\005\022\022\n\ncur_xianqi\030\004 \001(\005\022\022\n\nc"
    "ur_lingqi\030\005 \001(\005\022\023\n\013total_blood\030\006 \001(\005\022\025\n\r"
    "total_defence\030\007 \001(\005\022\031\n\021total_defence_low"
    "\030\010 \001(\005\022\022\n\ntotal_crit\030\t \001(\005\022\027\n\017total_toug"
    "hness\030\n \001(\005\022\021\n\ttotal_hit\030\013 \001(\005\022\023\n\013total_"
    "avoid\030\014 \001(\005\022\024\n\014total_attack\030\r \001(\005\022\030\n\020tot"
    "al_attack_low\030\016 \001(\005\"l\n\rProto31400139\022\026\n\016"
    "practice_times\030\001 \001(\005\022\033\n\023practice_gold_ti"
    "mes\030\002 \001(\005\022&\n\017practice_clouds\030\003 \003(\0132\r.Pro"
    "toPairObj\"R\n\rProto31402204\022\020\n\010skill_id\030\001"
    " \001(\005\022\023\n\013skill_level\030\002 \001(\005\022\032\n\022higher_leve"
    "l_count\030\003 \001(\005\"D\n\rProto30101601\022\022\n\nres_re"
    "cogn\030\001 \001(\005\022\014\n\004type\030\002 \001(\005\022\021\n\trole_list\030\003 "
    "\003(\003\"\340\001\n\rProto30101608\022\022\n\nwedding_id\030\001 \001("
    "\003\022\024\n\014wedding_type\030\002 \001(\005\022\024\n\014partner_id_1\030"
    "\003 \001(\003\022\024\n\014partner_id_2\030\004 \001(\003\022\024\n\014monster_s"
    "ort\030\005 \001(\005\022\035\n\010location\030\006 \001(\0132\013.ProtoCoord"
    "\022\020\n\010scene_id\030\007 \001(\005\022\030\n\020partner_career_1\030\010"
    " \001(\005\022\030\n\020partner_career_2\030\t \001(\005\"\207\001\n\rProto"
    "30101610\022\022\n\nwedding_id\030\001 \001(\003\022\022\n\npartner_"
    "id\030\002 \001(\003\022\024\n\014wedding_type\030\003 \001(\005\022\024\n\014partne"
    "r_name\030\004 \001(\t\022\"\n\nother_info\030\005 \001(\0132\016.Proto"
    "ThreeObj\"^\n\rProto31101602\022\022\n\nres_recogn\030"
    "\001 \001(\005\022\024\n\014wedding_type\030\002 \001(\005\022\020\n\010res_code\030"
    "\003 \001(\005\022\021\n\trole_list\030\004 \003(\003\"!\n\rProto3110160"
    "3\022\020\n\010res_code\030\001 \001(\005\"\204\001\n\rProto31101604\022\023\n"
    "\013keepsake_id\030\001 \001(\005\022\026\n\016keepsake_level\030\002 \001"
    "(\005\022\031\n\021keepsake_sublevel\030\003 \001(\005\022\031\n\021keepsak"
    "e_progress\030\004 \001(\001\022\020\n\010res_code\030\005 \001(\005\"\246\001\n\rP"
    "roto31101605\022\017\n\007item_id\030\001 \001(\005\022\023\n\013receive"
    "r_id\030\002 \001(\003\022\020\n\010res_code\030\003 \001(\005\022\020\n\010item_num"
    "\030\004 \001(\005\022\025\n\rreceiver_name\030\005 \001(\t\022\020\n\010auto_bu"
    "y\030\006 \001(\005\022\"\n\nother_info\030\007 \001(\0132\016.ProtoThree"
    "Obj\"!\n\rProto31101606\022\020\n\010intimacy\030\001 \001(\005\"W"
    "\n\rProto31101607\022\014\n\004type\030\001 \001(\005\022\021\n\trole_li"
    "st\030\002 \003(\003\022\023\n\013script_sort\030\003 \001(\005\022\020\n\010scene_i"
    "d\030\004 \001(\005\"#\n\rProto31101609\022\022\n\nwedding_id\030\001"
    " \001(\003\"G\n\rProto31400006\022\021\n\tadd_savvy\030\001 \001(\005"
    "\022#\n\nserial_obj\030\002 \001(\0132\017.ProtoSerialObj\"\226\001"
    "\n\rProto30400019\022\026\n\016recovert_blood\030\001 \001(\005\022"
    "\023\n\013total_blood\030\002 \001(\005\022\026\n\016recovert_magic\030\003"
    " \001(\005\022\023\n\013total_magic\030\004 \001(\005\022\026\n\016auto_back_m"
    "ain\030\005 \001(\005\022\023\n\013auto_random\030\006 \001(\005\"3\n\rProto3"
    "0400445\022\021\n\tleague_id\030\001 \001(\003\022\017\n\007role_id\030\002 "
    "\001(\003\"\036\n\rProto30400910\022\r\n\005level\030\001 \001(\005\"K\n\rP"
    "roto30400020\022\021\n\tinc_lucky\030\001 \001(\005\022\025\n\rkilli"
    "ng_value\030\002 \001(\005\022\020\n\010pk_state\030\003 \001(\005\"f\n\rProt"
    "o30101602\022\020\n\010scene_id\030\001 \001(\005\022\017\n\007pixel_x\030\002"
    " \001(\005\022\017\n\007pixel_y\030\003 \001(\005\022\017\n\007role_id\030\004 \001(\003\022\020"
    "\n\010enemy_id\030\005 \001(\003\"G\n\rProto30101603\022%\n\013nea"
    "rby_list\030\001 \003(\0132\020.ProtoFriendInfo\022\017\n\007role"
    "_id\030\002 \001(\003\"1\n\rProto30100604\022\022\n\nplayer_set"
    "\030\001 \003(\003\022\014\n\004type\030\002 \001(\005\"c\n\rProto30101604\022\036\n"
    "\tsub_money\030\001 \001(\0132\013.ProtoMoney\022\020\n\010scene_i"
    "d\030\002 \001(\005\022\017\n\007pixel_x\030\003 \001(\005\022\017\n\007pixel_y\030\004 \001("
    "\005\"\"\n\rProto31400315\022\021\n\tjoin_tick\030\001 \001(\003\"]\n"
    "\rProto31400316\022\017\n\007item_id\030\001 \001(\005\022\020\n\010item_"
    "num\030\002 \001(\005\022\022\n\nitem_index\030\003 \001(\005\022\025\n\rpackage"
    "_index\030\004 \001(\005\"@\n\rProto30100237\022\025\n\rpackage"
    "_index\030\001 \001(\005\022\030\n\004item\030\002 \001(\0132\n.ProtoItem\")"
    "\n\rProto31400317\022\030\n\004item\030\001 \001(\0132\n.ProtoIte"
    "m\"1\n\rProto30100238\022\r\n\005state\030\001 \001(\005\022\021\n\tlea"
    "gue_id\030\002 \001(\003\" \n\rProto30401602\022\017\n\007ave_lvl"
    "\030\001 \001(\005\"A\n\rProto32101103\022\017\n\007role_id\030\001 \003(\003"
    "\022\037\n\010act_list\030\002 \003(\0132\r.PActTypeItem\"`\n\rPro"
    "to30400446\022\022\n\npage_index\030\001 \001(\005\022\021\n\tsrc_sc"
    "ene\030\002 \001(\005\022\026\n\016self_league_id\030\003 \001(\003\022\020\n\010req"
    "_type\030\004 \001(\005\"7\n\rProto30100105\022\023\n\013kill_nor"
    "mal\030\001 \001(\005\022\021\n\tkill_evil\030\002 \001(\005\"^\n\rProto321"
    "01104\022,\n\017act_role_reward\030\001 \003(\0132\023.ProtoAc"
    "tRoleReward\022\037\n\010act_info\030\002 \001(\0132\r.PActType"
    "Item\"W\n\rProto31400028\022!\n\tplay_list\030\001 \003(\013"
    "2\016.ProtoPairLong\022#\n\nserial_obj\030\002 \001(\0132\017.P"
    "rotoSerialObj\"1\n\rProto32101105\022\017\n\007role_i"
    "d\030\001 \001(\003\022\017\n\007account\030\002 \001(\t\"I\n\rProto3010040"
    "4\022\017\n\007add_num\030\001 \001(\005\022\026\n\016personal_count\030\002 \001"
    "(\005\022\017\n\007role_id\030\003 \001(\003\"&\n\rProto31400701\022\025\n\r"
    "service_count\030\001 \001(\005\"0\n\rProto32101106\022\037\n\010"
    "act_info\030\001 \001(\0132\r.PActTypeItem\"a\n\rProto31"
    "400318\022\016\n\006result\030\001 \001(\005\022\030\n\004item\030\002 \001(\0132\n.P"
    "rotoItem\022\022\n\nerror_code\030\003 \001(\005\022\022\n\npack_ind"
    "ex\030\004 \001(\005\"1\n\rProto31400263\022\017\n\007role_id\030\001 \001"
    "(\003\022\017\n\007account\030\002 \001(\t\"/\n\rProto30100605\022\017\n\007"
    "role_id\030\001 \001(\003\022\r\n\005money\030\002 \001(\005\"3\n\rProto314"
    "00030\022\017\n\007role_id\030\001 \003(\003\022\021\n\tact_index\030\002 \003("
    "\005\"\"\n\rProto31400031\022\021\n\tact_index\030\001 \001(\005\"=\n"
    "\rProto31400032\022,\n\017act_role_reward\030\001 \003(\0132"
    "\023.ProtoActRoleReward\"G\n\rProto31400036\022#\n"
    "\trank_list\030\001 \003(\0132\020.ProtoRankRecord\022\021\n\tra"
    "nk_type\030\002 \001(\005\"G\n\rProto31400037\022#\n\trank_l"
    "ist\030\001 \003(\0132\020.ProtoLeagueItem\022\021\n\trank_type"
    "\030\002 \001(\005\"0\n\rProto30400037\022\021\n\trank_type\030\001 \001"
    "(\005\022\014\n\004size\030\002 \001(\005", 4296);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoInner006.proto", &protobuf_RegisterTypes);
  Proto31400137::default_instance_ = new Proto31400137();
  Proto30100021::default_instance_ = new Proto30100021();
  Proto31400027::default_instance_ = new Proto31400027();
  Proto30400007::default_instance_ = new Proto30400007();
  Proto31400138::default_instance_ = new Proto31400138();
  Proto31400139::default_instance_ = new Proto31400139();
  Proto31402204::default_instance_ = new Proto31402204();
  Proto30101601::default_instance_ = new Proto30101601();
  Proto30101608::default_instance_ = new Proto30101608();
  Proto30101610::default_instance_ = new Proto30101610();
  Proto31101602::default_instance_ = new Proto31101602();
  Proto31101603::default_instance_ = new Proto31101603();
  Proto31101604::default_instance_ = new Proto31101604();
  Proto31101605::default_instance_ = new Proto31101605();
  Proto31101606::default_instance_ = new Proto31101606();
  Proto31101607::default_instance_ = new Proto31101607();
  Proto31101609::default_instance_ = new Proto31101609();
  Proto31400006::default_instance_ = new Proto31400006();
  Proto30400019::default_instance_ = new Proto30400019();
  Proto30400445::default_instance_ = new Proto30400445();
  Proto30400910::default_instance_ = new Proto30400910();
  Proto30400020::default_instance_ = new Proto30400020();
  Proto30101602::default_instance_ = new Proto30101602();
  Proto30101603::default_instance_ = new Proto30101603();
  Proto30100604::default_instance_ = new Proto30100604();
  Proto30101604::default_instance_ = new Proto30101604();
  Proto31400315::default_instance_ = new Proto31400315();
  Proto31400316::default_instance_ = new Proto31400316();
  Proto30100237::default_instance_ = new Proto30100237();
  Proto31400317::default_instance_ = new Proto31400317();
  Proto30100238::default_instance_ = new Proto30100238();
  Proto30401602::default_instance_ = new Proto30401602();
  Proto32101103::default_instance_ = new Proto32101103();
  Proto30400446::default_instance_ = new Proto30400446();
  Proto30100105::default_instance_ = new Proto30100105();
  Proto32101104::default_instance_ = new Proto32101104();
  Proto31400028::default_instance_ = new Proto31400028();
  Proto32101105::default_instance_ = new Proto32101105();
  Proto30100404::default_instance_ = new Proto30100404();
  Proto31400701::default_instance_ = new Proto31400701();
  Proto32101106::default_instance_ = new Proto32101106();
  Proto31400318::default_instance_ = new Proto31400318();
  Proto31400263::default_instance_ = new Proto31400263();
  Proto30100605::default_instance_ = new Proto30100605();
  Proto31400030::default_instance_ = new Proto31400030();
  Proto31400031::default_instance_ = new Proto31400031();
  Proto31400032::default_instance_ = new Proto31400032();
  Proto31400036::default_instance_ = new Proto31400036();
  Proto31400037::default_instance_ = new Proto31400037();
  Proto30400037::default_instance_ = new Proto30400037();
  Proto31400137::default_instance_->InitAsDefaultInstance();
  Proto30100021::default_instance_->InitAsDefaultInstance();
  Proto31400027::default_instance_->InitAsDefaultInstance();
  Proto30400007::default_instance_->InitAsDefaultInstance();
  Proto31400138::default_instance_->InitAsDefaultInstance();
  Proto31400139::default_instance_->InitAsDefaultInstance();
  Proto31402204::default_instance_->InitAsDefaultInstance();
  Proto30101601::default_instance_->InitAsDefaultInstance();
  Proto30101608::default_instance_->InitAsDefaultInstance();
  Proto30101610::default_instance_->InitAsDefaultInstance();
  Proto31101602::default_instance_->InitAsDefaultInstance();
  Proto31101603::default_instance_->InitAsDefaultInstance();
  Proto31101604::default_instance_->InitAsDefaultInstance();
  Proto31101605::default_instance_->InitAsDefaultInstance();
  Proto31101606::default_instance_->InitAsDefaultInstance();
  Proto31101607::default_instance_->InitAsDefaultInstance();
  Proto31101609::default_instance_->InitAsDefaultInstance();
  Proto31400006::default_instance_->InitAsDefaultInstance();
  Proto30400019::default_instance_->InitAsDefaultInstance();
  Proto30400445::default_instance_->InitAsDefaultInstance();
  Proto30400910::default_instance_->InitAsDefaultInstance();
  Proto30400020::default_instance_->InitAsDefaultInstance();
  Proto30101602::default_instance_->InitAsDefaultInstance();
  Proto30101603::default_instance_->InitAsDefaultInstance();
  Proto30100604::default_instance_->InitAsDefaultInstance();
  Proto30101604::default_instance_->InitAsDefaultInstance();
  Proto31400315::default_instance_->InitAsDefaultInstance();
  Proto31400316::default_instance_->InitAsDefaultInstance();
  Proto30100237::default_instance_->InitAsDefaultInstance();
  Proto31400317::default_instance_->InitAsDefaultInstance();
  Proto30100238::default_instance_->InitAsDefaultInstance();
  Proto30401602::default_instance_->InitAsDefaultInstance();
  Proto32101103::default_instance_->InitAsDefaultInstance();
  Proto30400446::default_instance_->InitAsDefaultInstance();
  Proto30100105::default_instance_->InitAsDefaultInstance();
  Proto32101104::default_instance_->InitAsDefaultInstance();
  Proto31400028::default_instance_->InitAsDefaultInstance();
  Proto32101105::default_instance_->InitAsDefaultInstance();
  Proto30100404::default_instance_->InitAsDefaultInstance();
  Proto31400701::default_instance_->InitAsDefaultInstance();
  Proto32101106::default_instance_->InitAsDefaultInstance();
  Proto31400318::default_instance_->InitAsDefaultInstance();
  Proto31400263::default_instance_->InitAsDefaultInstance();
  Proto30100605::default_instance_->InitAsDefaultInstance();
  Proto31400030::default_instance_->InitAsDefaultInstance();
  Proto31400031::default_instance_->InitAsDefaultInstance();
  Proto31400032::default_instance_->InitAsDefaultInstance();
  Proto31400036::default_instance_->InitAsDefaultInstance();
  Proto31400037::default_instance_->InitAsDefaultInstance();
  Proto30400037::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoInner006_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoInner006_2eproto {
  StaticDescriptorInitializer_ProtoInner006_2eproto() {
    protobuf_AddDesc_ProtoInner006_2eproto();
  }
} static_descriptor_initializer_ProtoInner006_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto31400137::kCurCultivationFieldNumber;
const int Proto31400137::kRoundFieldNumber;
const int Proto31400137::kExtraExpFieldNumber;
const int Proto31400137::kExchangeTimesFieldNumber;
const int Proto31400137::kTotalAttackFieldNumber;
const int Proto31400137::kTotalDefenceFieldNumber;
const int Proto31400137::kTotalCritFieldNumber;
const int Proto31400137::kTotalToughnessFieldNumber;
const int Proto31400137::kTotalHitFieldNumber;
const int Proto31400137::kTotalAvoidFieldNumber;
const int Proto31400137::kTotalMagicFieldNumber;
const int Proto31400137::kTotalAttackLowFieldNumber;
const int Proto31400137::kTotalDefenceLowFieldNumber;
const int Proto31400137::kTotalHealthFieldNumber;
#endif  // !_MSC_VER

Proto31400137::Proto31400137()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400137::InitAsDefaultInstance() {
}

Proto31400137::Proto31400137(const Proto31400137& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400137::SharedCtor() {
  _cached_size_ = 0;
  cur_cultivation_ = 0;
  round_ = 0;
  extra_exp_ = GOOGLE_LONGLONG(0);
  exchange_times_ = 0;
  total_attack_ = 0;
  total_defence_ = 0;
  total_crit_ = 0;
  total_toughness_ = 0;
  total_hit_ = 0;
  total_avoid_ = 0;
  total_magic_ = 0;
  total_attack_low_ = 0;
  total_defence_low_ = 0;
  total_health_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400137::~Proto31400137() {
  SharedDtor();
}

void Proto31400137::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400137::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400137::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400137_descriptor_;
}

const Proto31400137& Proto31400137::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31400137* Proto31400137::default_instance_ = NULL;

Proto31400137* Proto31400137::New() const {
  return new Proto31400137;
}

void Proto31400137::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_cultivation_ = 0;
    round_ = 0;
    extra_exp_ = GOOGLE_LONGLONG(0);
    exchange_times_ = 0;
    total_attack_ = 0;
    total_defence_ = 0;
    total_crit_ = 0;
    total_toughness_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    total_hit_ = 0;
    total_avoid_ = 0;
    total_magic_ = 0;
    total_attack_low_ = 0;
    total_defence_low_ = 0;
    total_health_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400137::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_cultivation = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_cultivation_)));
          set_has_cur_cultivation();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_round;
        break;
      }
      
      // optional int32 round = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_round:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &round_)));
          set_has_round();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_extra_exp;
        break;
      }
      
      // optional int64 extra_exp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_extra_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &extra_exp_)));
          set_has_extra_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_exchange_times;
        break;
      }
      
      // optional int32 exchange_times = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exchange_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchange_times_)));
          set_has_exchange_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_total_attack;
        break;
      }
      
      // optional int32 total_attack = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_attack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_attack_)));
          set_has_total_attack();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_total_defence;
        break;
      }
      
      // optional int32 total_defence = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_defence:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_defence_)));
          set_has_total_defence();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_total_crit;
        break;
      }
      
      // optional int32 total_crit = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_crit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_crit_)));
          set_has_total_crit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_total_toughness;
        break;
      }
      
      // optional int32 total_toughness = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_toughness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_toughness_)));
          set_has_total_toughness();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_total_hit;
        break;
      }
      
      // optional int32 total_hit = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_hit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_hit_)));
          set_has_total_hit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_total_avoid;
        break;
      }
      
      // optional int32 total_avoid = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_avoid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_avoid_)));
          set_has_total_avoid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_total_magic;
        break;
      }
      
      // optional int32 total_magic = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_magic:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_magic_)));
          set_has_total_magic();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_total_attack_low;
        break;
      }
      
      // optional int32 total_attack_low = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_attack_low:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_attack_low_)));
          set_has_total_attack_low();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_total_defence_low;
        break;
      }
      
      // optional int32 total_defence_low = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_defence_low:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_defence_low_)));
          set_has_total_defence_low();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_total_health;
        break;
      }
      
      // optional int32 total_health = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_health:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_health_)));
          set_has_total_health();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400137::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_cultivation = 1;
  if (has_cur_cultivation()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_cultivation(), output);
  }
  
  // optional int32 round = 2;
  if (has_round()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->round(), output);
  }
  
  // optional int64 extra_exp = 3;
  if (has_extra_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->extra_exp(), output);
  }
  
  // optional int32 exchange_times = 4;
  if (has_exchange_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->exchange_times(), output);
  }
  
  // optional int32 total_attack = 5;
  if (has_total_attack()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->total_attack(), output);
  }
  
  // optional int32 total_defence = 6;
  if (has_total_defence()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->total_defence(), output);
  }
  
  // optional int32 total_crit = 7;
  if (has_total_crit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->total_crit(), output);
  }
  
  // optional int32 total_toughness = 8;
  if (has_total_toughness()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->total_toughness(), output);
  }
  
  // optional int32 total_hit = 9;
  if (has_total_hit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->total_hit(), output);
  }
  
  // optional int32 total_avoid = 10;
  if (has_total_avoid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->total_avoid(), output);
  }
  
  // optional int32 total_magic = 11;
  if (has_total_magic()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->total_magic(), output);
  }
  
  // optional int32 total_attack_low = 12;
  if (has_total_attack_low()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->total_attack_low(), output);
  }
  
  // optional int32 total_defence_low = 13;
  if (has_total_defence_low()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->total_defence_low(), output);
  }
  
  // optional int32 total_health = 14;
  if (has_total_health()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->total_health(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400137::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_cultivation = 1;
  if (has_cur_cultivation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_cultivation(), target);
  }
  
  // optional int32 round = 2;
  if (has_round()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->round(), target);
  }
  
  // optional int64 extra_exp = 3;
  if (has_extra_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->extra_exp(), target);
  }
  
  // optional int32 exchange_times = 4;
  if (has_exchange_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->exchange_times(), target);
  }
  
  // optional int32 total_attack = 5;
  if (has_total_attack()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->total_attack(), target);
  }
  
  // optional int32 total_defence = 6;
  if (has_total_defence()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->total_defence(), target);
  }
  
  // optional int32 total_crit = 7;
  if (has_total_crit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->total_crit(), target);
  }
  
  // optional int32 total_toughness = 8;
  if (has_total_toughness()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->total_toughness(), target);
  }
  
  // optional int32 total_hit = 9;
  if (has_total_hit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->total_hit(), target);
  }
  
  // optional int32 total_avoid = 10;
  if (has_total_avoid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->total_avoid(), target);
  }
  
  // optional int32 total_magic = 11;
  if (has_total_magic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->total_magic(), target);
  }
  
  // optional int32 total_attack_low = 12;
  if (has_total_attack_low()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->total_attack_low(), target);
  }
  
  // optional int32 total_defence_low = 13;
  if (has_total_defence_low()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->total_defence_low(), target);
  }
  
  // optional int32 total_health = 14;
  if (has_total_health()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->total_health(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400137::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_cultivation = 1;
    if (has_cur_cultivation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_cultivation());
    }
    
    // optional int32 round = 2;
    if (has_round()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->round());
    }
    
    // optional int64 extra_exp = 3;
    if (has_extra_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->extra_exp());
    }
    
    // optional int32 exchange_times = 4;
    if (has_exchange_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exchange_times());
    }
    
    // optional int32 total_attack = 5;
    if (has_total_attack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_attack());
    }
    
    // optional int32 total_defence = 6;
    if (has_total_defence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_defence());
    }
    
    // optional int32 total_crit = 7;
    if (has_total_crit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_crit());
    }
    
    // optional int32 total_toughness = 8;
    if (has_total_toughness()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_toughness());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 total_hit = 9;
    if (has_total_hit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_hit());
    }
    
    // optional int32 total_avoid = 10;
    if (has_total_avoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_avoid());
    }
    
    // optional int32 total_magic = 11;
    if (has_total_magic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_magic());
    }
    
    // optional int32 total_attack_low = 12;
    if (has_total_attack_low()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_attack_low());
    }
    
    // optional int32 total_defence_low = 13;
    if (has_total_defence_low()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_defence_low());
    }
    
    // optional int32 total_health = 14;
    if (has_total_health()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_health());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400137::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400137* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400137*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400137::MergeFrom(const Proto31400137& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_cultivation()) {
      set_cur_cultivation(from.cur_cultivation());
    }
    if (from.has_round()) {
      set_round(from.round());
    }
    if (from.has_extra_exp()) {
      set_extra_exp(from.extra_exp());
    }
    if (from.has_exchange_times()) {
      set_exchange_times(from.exchange_times());
    }
    if (from.has_total_attack()) {
      set_total_attack(from.total_attack());
    }
    if (from.has_total_defence()) {
      set_total_defence(from.total_defence());
    }
    if (from.has_total_crit()) {
      set_total_crit(from.total_crit());
    }
    if (from.has_total_toughness()) {
      set_total_toughness(from.total_toughness());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_total_hit()) {
      set_total_hit(from.total_hit());
    }
    if (from.has_total_avoid()) {
      set_total_avoid(from.total_avoid());
    }
    if (from.has_total_magic()) {
      set_total_magic(from.total_magic());
    }
    if (from.has_total_attack_low()) {
      set_total_attack_low(from.total_attack_low());
    }
    if (from.has_total_defence_low()) {
      set_total_defence_low(from.total_defence_low());
    }
    if (from.has_total_health()) {
      set_total_health(from.total_health());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400137::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400137::CopyFrom(const Proto31400137& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400137::IsInitialized() const {
  
  return true;
}

void Proto31400137::Swap(Proto31400137* other) {
  if (other != this) {
    std::swap(cur_cultivation_, other->cur_cultivation_);
    std::swap(round_, other->round_);
    std::swap(extra_exp_, other->extra_exp_);
    std::swap(exchange_times_, other->exchange_times_);
    std::swap(total_attack_, other->total_attack_);
    std::swap(total_defence_, other->total_defence_);
    std::swap(total_crit_, other->total_crit_);
    std::swap(total_toughness_, other->total_toughness_);
    std::swap(total_hit_, other->total_hit_);
    std::swap(total_avoid_, other->total_avoid_);
    std::swap(total_magic_, other->total_magic_);
    std::swap(total_attack_low_, other->total_attack_low_);
    std::swap(total_defence_low_, other->total_defence_low_);
    std::swap(total_health_, other->total_health_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400137::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400137_descriptor_;
  metadata.reflection = Proto31400137_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100021::kItemFieldNumber;
const int Proto30100021::kShopTypeFieldNumber;
#endif  // !_MSC_VER

Proto30100021::Proto30100021()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100021::InitAsDefaultInstance() {
}

Proto30100021::Proto30100021(const Proto30100021& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100021::SharedCtor() {
  _cached_size_ = 0;
  shop_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100021::~Proto30100021() {
  SharedDtor();
}

void Proto30100021::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100021::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100021::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100021_descriptor_;
}

const Proto30100021& Proto30100021::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30100021* Proto30100021::default_instance_ = NULL;

Proto30100021* Proto30100021::New() const {
  return new Proto30100021;
}

void Proto30100021::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    shop_type_ = 0;
  }
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100021::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item;
        if (input->ExpectTag(16)) goto parse_shop_type;
        break;
      }
      
      // optional int32 shop_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shop_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_type_)));
          set_has_shop_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100021::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem item = 1;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item(i), output);
  }
  
  // optional int32 shop_type = 2;
  if (has_shop_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->shop_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100021::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem item = 1;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item(i), target);
  }
  
  // optional int32 shop_type = 2;
  if (has_shop_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->shop_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100021::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 shop_type = 2;
    if (has_shop_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop_type());
    }
    
  }
  // repeated .ProtoItem item = 1;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100021::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100021* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100021*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100021::MergeFrom(const Proto30100021& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_shop_type()) {
      set_shop_type(from.shop_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100021::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100021::CopyFrom(const Proto30100021& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100021::IsInitialized() const {
  
  return true;
}

void Proto30100021::Swap(Proto30100021* other) {
  if (other != this) {
    item_.Swap(&other->item_);
    std::swap(shop_type_, other->shop_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100021::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100021_descriptor_;
  metadata.reflection = Proto30100021_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400027::kItemIdFieldNumber;
const int Proto31400027::kShopTypeFieldNumber;
#endif  // !_MSC_VER

Proto31400027::Proto31400027()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400027::InitAsDefaultInstance() {
}

Proto31400027::Proto31400027(const Proto31400027& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400027::SharedCtor() {
  _cached_size_ = 0;
  shop_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400027::~Proto31400027() {
  SharedDtor();
}

void Proto31400027::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400027::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400027::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400027_descriptor_;
}

const Proto31400027& Proto31400027::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31400027* Proto31400027::default_instance_ = NULL;

Proto31400027* Proto31400027::New() const {
  return new Proto31400027;
}

void Proto31400027::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    shop_type_ = 0;
  }
  item_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400027::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_item_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_item_id;
        if (input->ExpectTag(16)) goto parse_shop_type;
        break;
      }
      
      // optional int32 shop_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shop_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_type_)));
          set_has_shop_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400027::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 item_id = 1;
  for (int i = 0; i < this->item_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->item_id(i), output);
  }
  
  // optional int32 shop_type = 2;
  if (has_shop_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->shop_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400027::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 item_id = 1;
  for (int i = 0; i < this->item_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->item_id(i), target);
  }
  
  // optional int32 shop_type = 2;
  if (has_shop_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->shop_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400027::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 shop_type = 2;
    if (has_shop_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop_type());
    }
    
  }
  // repeated int32 item_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item_id(i));
    }
    total_size += 1 * this->item_id_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400027::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400027* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400027*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400027::MergeFrom(const Proto31400027& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_id_.MergeFrom(from.item_id_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_shop_type()) {
      set_shop_type(from.shop_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400027::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400027::CopyFrom(const Proto31400027& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400027::IsInitialized() const {
  
  return true;
}

void Proto31400027::Swap(Proto31400027* other) {
  if (other != this) {
    item_id_.Swap(&other->item_id_);
    std::swap(shop_type_, other->shop_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400027::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400027_descriptor_;
  metadata.reflection = Proto31400027_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400007::kSceneIdFieldNumber;
#endif  // !_MSC_VER

Proto30400007::Proto30400007()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400007::InitAsDefaultInstance() {
}

Proto30400007::Proto30400007(const Proto30400007& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400007::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400007::~Proto30400007() {
  SharedDtor();
}

void Proto30400007::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400007::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400007::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400007_descriptor_;
}

const Proto30400007& Proto30400007::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30400007* Proto30400007::default_instance_ = NULL;

Proto30400007* Proto30400007::New() const {
  return new Proto30400007;
}

void Proto30400007::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400007::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400007::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400007::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400007::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400007::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400007* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400007*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400007::MergeFrom(const Proto30400007& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400007::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400007::CopyFrom(const Proto30400007& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400007::IsInitialized() const {
  
  return true;
}

void Proto30400007::Swap(Proto30400007* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400007::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400007_descriptor_;
  metadata.reflection = Proto30400007_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400138::kRealmIdFieldNumber;
const int Proto31400138::kStepFieldNumber;
const int Proto31400138::kPropertyIndexFieldNumber;
const int Proto31400138::kCurXianqiFieldNumber;
const int Proto31400138::kCurLingqiFieldNumber;
const int Proto31400138::kTotalBloodFieldNumber;
const int Proto31400138::kTotalDefenceFieldNumber;
const int Proto31400138::kTotalDefenceLowFieldNumber;
const int Proto31400138::kTotalCritFieldNumber;
const int Proto31400138::kTotalToughnessFieldNumber;
const int Proto31400138::kTotalHitFieldNumber;
const int Proto31400138::kTotalAvoidFieldNumber;
const int Proto31400138::kTotalAttackFieldNumber;
const int Proto31400138::kTotalAttackLowFieldNumber;
#endif  // !_MSC_VER

Proto31400138::Proto31400138()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400138::InitAsDefaultInstance() {
}

Proto31400138::Proto31400138(const Proto31400138& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400138::SharedCtor() {
  _cached_size_ = 0;
  realm_id_ = 0;
  step_ = 0;
  property_index_ = 0;
  cur_xianqi_ = 0;
  cur_lingqi_ = 0;
  total_blood_ = 0;
  total_defence_ = 0;
  total_defence_low_ = 0;
  total_crit_ = 0;
  total_toughness_ = 0;
  total_hit_ = 0;
  total_avoid_ = 0;
  total_attack_ = 0;
  total_attack_low_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400138::~Proto31400138() {
  SharedDtor();
}

void Proto31400138::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400138::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400138::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400138_descriptor_;
}

const Proto31400138& Proto31400138::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31400138* Proto31400138::default_instance_ = NULL;

Proto31400138* Proto31400138::New() const {
  return new Proto31400138;
}

void Proto31400138::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    realm_id_ = 0;
    step_ = 0;
    property_index_ = 0;
    cur_xianqi_ = 0;
    cur_lingqi_ = 0;
    total_blood_ = 0;
    total_defence_ = 0;
    total_defence_low_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    total_crit_ = 0;
    total_toughness_ = 0;
    total_hit_ = 0;
    total_avoid_ = 0;
    total_attack_ = 0;
    total_attack_low_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400138::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 realm_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &realm_id_)));
          set_has_realm_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_step;
        break;
      }
      
      // optional int32 step = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_step:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &step_)));
          set_has_step();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_property_index;
        break;
      }
      
      // optional int32 property_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_property_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &property_index_)));
          set_has_property_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_cur_xianqi;
        break;
      }
      
      // optional int32 cur_xianqi = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_xianqi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_xianqi_)));
          set_has_cur_xianqi();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_cur_lingqi;
        break;
      }
      
      // optional int32 cur_lingqi = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_lingqi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_lingqi_)));
          set_has_cur_lingqi();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_total_blood;
        break;
      }
      
      // optional int32 total_blood = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_blood_)));
          set_has_total_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_total_defence;
        break;
      }
      
      // optional int32 total_defence = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_defence:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_defence_)));
          set_has_total_defence();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_total_defence_low;
        break;
      }
      
      // optional int32 total_defence_low = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_defence_low:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_defence_low_)));
          set_has_total_defence_low();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_total_crit;
        break;
      }
      
      // optional int32 total_crit = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_crit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_crit_)));
          set_has_total_crit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_total_toughness;
        break;
      }
      
      // optional int32 total_toughness = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_toughness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_toughness_)));
          set_has_total_toughness();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_total_hit;
        break;
      }
      
      // optional int32 total_hit = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_hit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_hit_)));
          set_has_total_hit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_total_avoid;
        break;
      }
      
      // optional int32 total_avoid = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_avoid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_avoid_)));
          set_has_total_avoid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_total_attack;
        break;
      }
      
      // optional int32 total_attack = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_attack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_attack_)));
          set_has_total_attack();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_total_attack_low;
        break;
      }
      
      // optional int32 total_attack_low = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_attack_low:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_attack_low_)));
          set_has_total_attack_low();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400138::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 realm_id = 1;
  if (has_realm_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->realm_id(), output);
  }
  
  // optional int32 step = 2;
  if (has_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->step(), output);
  }
  
  // optional int32 property_index = 3;
  if (has_property_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->property_index(), output);
  }
  
  // optional int32 cur_xianqi = 4;
  if (has_cur_xianqi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cur_xianqi(), output);
  }
  
  // optional int32 cur_lingqi = 5;
  if (has_cur_lingqi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cur_lingqi(), output);
  }
  
  // optional int32 total_blood = 6;
  if (has_total_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->total_blood(), output);
  }
  
  // optional int32 total_defence = 7;
  if (has_total_defence()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->total_defence(), output);
  }
  
  // optional int32 total_defence_low = 8;
  if (has_total_defence_low()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->total_defence_low(), output);
  }
  
  // optional int32 total_crit = 9;
  if (has_total_crit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->total_crit(), output);
  }
  
  // optional int32 total_toughness = 10;
  if (has_total_toughness()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->total_toughness(), output);
  }
  
  // optional int32 total_hit = 11;
  if (has_total_hit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->total_hit(), output);
  }
  
  // optional int32 total_avoid = 12;
  if (has_total_avoid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->total_avoid(), output);
  }
  
  // optional int32 total_attack = 13;
  if (has_total_attack()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->total_attack(), output);
  }
  
  // optional int32 total_attack_low = 14;
  if (has_total_attack_low()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->total_attack_low(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400138::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 realm_id = 1;
  if (has_realm_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->realm_id(), target);
  }
  
  // optional int32 step = 2;
  if (has_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->step(), target);
  }
  
  // optional int32 property_index = 3;
  if (has_property_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->property_index(), target);
  }
  
  // optional int32 cur_xianqi = 4;
  if (has_cur_xianqi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cur_xianqi(), target);
  }
  
  // optional int32 cur_lingqi = 5;
  if (has_cur_lingqi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cur_lingqi(), target);
  }
  
  // optional int32 total_blood = 6;
  if (has_total_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->total_blood(), target);
  }
  
  // optional int32 total_defence = 7;
  if (has_total_defence()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->total_defence(), target);
  }
  
  // optional int32 total_defence_low = 8;
  if (has_total_defence_low()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->total_defence_low(), target);
  }
  
  // optional int32 total_crit = 9;
  if (has_total_crit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->total_crit(), target);
  }
  
  // optional int32 total_toughness = 10;
  if (has_total_toughness()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->total_toughness(), target);
  }
  
  // optional int32 total_hit = 11;
  if (has_total_hit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->total_hit(), target);
  }
  
  // optional int32 total_avoid = 12;
  if (has_total_avoid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->total_avoid(), target);
  }
  
  // optional int32 total_attack = 13;
  if (has_total_attack()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->total_attack(), target);
  }
  
  // optional int32 total_attack_low = 14;
  if (has_total_attack_low()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->total_attack_low(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400138::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 realm_id = 1;
    if (has_realm_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->realm_id());
    }
    
    // optional int32 step = 2;
    if (has_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->step());
    }
    
    // optional int32 property_index = 3;
    if (has_property_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->property_index());
    }
    
    // optional int32 cur_xianqi = 4;
    if (has_cur_xianqi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_xianqi());
    }
    
    // optional int32 cur_lingqi = 5;
    if (has_cur_lingqi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_lingqi());
    }
    
    // optional int32 total_blood = 6;
    if (has_total_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_blood());
    }
    
    // optional int32 total_defence = 7;
    if (has_total_defence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_defence());
    }
    
    // optional int32 total_defence_low = 8;
    if (has_total_defence_low()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_defence_low());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 total_crit = 9;
    if (has_total_crit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_crit());
    }
    
    // optional int32 total_toughness = 10;
    if (has_total_toughness()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_toughness());
    }
    
    // optional int32 total_hit = 11;
    if (has_total_hit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_hit());
    }
    
    // optional int32 total_avoid = 12;
    if (has_total_avoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_avoid());
    }
    
    // optional int32 total_attack = 13;
    if (has_total_attack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_attack());
    }
    
    // optional int32 total_attack_low = 14;
    if (has_total_attack_low()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_attack_low());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400138::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400138* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400138*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400138::MergeFrom(const Proto31400138& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_realm_id()) {
      set_realm_id(from.realm_id());
    }
    if (from.has_step()) {
      set_step(from.step());
    }
    if (from.has_property_index()) {
      set_property_index(from.property_index());
    }
    if (from.has_cur_xianqi()) {
      set_cur_xianqi(from.cur_xianqi());
    }
    if (from.has_cur_lingqi()) {
      set_cur_lingqi(from.cur_lingqi());
    }
    if (from.has_total_blood()) {
      set_total_blood(from.total_blood());
    }
    if (from.has_total_defence()) {
      set_total_defence(from.total_defence());
    }
    if (from.has_total_defence_low()) {
      set_total_defence_low(from.total_defence_low());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_total_crit()) {
      set_total_crit(from.total_crit());
    }
    if (from.has_total_toughness()) {
      set_total_toughness(from.total_toughness());
    }
    if (from.has_total_hit()) {
      set_total_hit(from.total_hit());
    }
    if (from.has_total_avoid()) {
      set_total_avoid(from.total_avoid());
    }
    if (from.has_total_attack()) {
      set_total_attack(from.total_attack());
    }
    if (from.has_total_attack_low()) {
      set_total_attack_low(from.total_attack_low());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400138::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400138::CopyFrom(const Proto31400138& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400138::IsInitialized() const {
  
  return true;
}

void Proto31400138::Swap(Proto31400138* other) {
  if (other != this) {
    std::swap(realm_id_, other->realm_id_);
    std::swap(step_, other->step_);
    std::swap(property_index_, other->property_index_);
    std::swap(cur_xianqi_, other->cur_xianqi_);
    std::swap(cur_lingqi_, other->cur_lingqi_);
    std::swap(total_blood_, other->total_blood_);
    std::swap(total_defence_, other->total_defence_);
    std::swap(total_defence_low_, other->total_defence_low_);
    std::swap(total_crit_, other->total_crit_);
    std::swap(total_toughness_, other->total_toughness_);
    std::swap(total_hit_, other->total_hit_);
    std::swap(total_avoid_, other->total_avoid_);
    std::swap(total_attack_, other->total_attack_);
    std::swap(total_attack_low_, other->total_attack_low_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400138::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400138_descriptor_;
  metadata.reflection = Proto31400138_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400139::kPracticeTimesFieldNumber;
const int Proto31400139::kPracticeGoldTimesFieldNumber;
const int Proto31400139::kPracticeCloudsFieldNumber;
#endif  // !_MSC_VER

Proto31400139::Proto31400139()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400139::InitAsDefaultInstance() {
}

Proto31400139::Proto31400139(const Proto31400139& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400139::SharedCtor() {
  _cached_size_ = 0;
  practice_times_ = 0;
  practice_gold_times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400139::~Proto31400139() {
  SharedDtor();
}

void Proto31400139::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400139::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400139::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400139_descriptor_;
}

const Proto31400139& Proto31400139::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31400139* Proto31400139::default_instance_ = NULL;

Proto31400139* Proto31400139::New() const {
  return new Proto31400139;
}

void Proto31400139::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    practice_times_ = 0;
    practice_gold_times_ = 0;
  }
  practice_clouds_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400139::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 practice_times = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &practice_times_)));
          set_has_practice_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_practice_gold_times;
        break;
      }
      
      // optional int32 practice_gold_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_practice_gold_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &practice_gold_times_)));
          set_has_practice_gold_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_practice_clouds;
        break;
      }
      
      // repeated .ProtoPairObj practice_clouds = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_practice_clouds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_practice_clouds()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_practice_clouds;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400139::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 practice_times = 1;
  if (has_practice_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->practice_times(), output);
  }
  
  // optional int32 practice_gold_times = 2;
  if (has_practice_gold_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->practice_gold_times(), output);
  }
  
  // repeated .ProtoPairObj practice_clouds = 3;
  for (int i = 0; i < this->practice_clouds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->practice_clouds(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400139::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 practice_times = 1;
  if (has_practice_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->practice_times(), target);
  }
  
  // optional int32 practice_gold_times = 2;
  if (has_practice_gold_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->practice_gold_times(), target);
  }
  
  // repeated .ProtoPairObj practice_clouds = 3;
  for (int i = 0; i < this->practice_clouds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->practice_clouds(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400139::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 practice_times = 1;
    if (has_practice_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->practice_times());
    }
    
    // optional int32 practice_gold_times = 2;
    if (has_practice_gold_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->practice_gold_times());
    }
    
  }
  // repeated .ProtoPairObj practice_clouds = 3;
  total_size += 1 * this->practice_clouds_size();
  for (int i = 0; i < this->practice_clouds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->practice_clouds(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400139::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400139* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400139*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400139::MergeFrom(const Proto31400139& from) {
  GOOGLE_CHECK_NE(&from, this);
  practice_clouds_.MergeFrom(from.practice_clouds_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_practice_times()) {
      set_practice_times(from.practice_times());
    }
    if (from.has_practice_gold_times()) {
      set_practice_gold_times(from.practice_gold_times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400139::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400139::CopyFrom(const Proto31400139& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400139::IsInitialized() const {
  
  return true;
}

void Proto31400139::Swap(Proto31400139* other) {
  if (other != this) {
    std::swap(practice_times_, other->practice_times_);
    std::swap(practice_gold_times_, other->practice_gold_times_);
    practice_clouds_.Swap(&other->practice_clouds_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400139::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400139_descriptor_;
  metadata.reflection = Proto31400139_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31402204::kSkillIdFieldNumber;
const int Proto31402204::kSkillLevelFieldNumber;
const int Proto31402204::kHigherLevelCountFieldNumber;
#endif  // !_MSC_VER

Proto31402204::Proto31402204()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31402204::InitAsDefaultInstance() {
}

Proto31402204::Proto31402204(const Proto31402204& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31402204::SharedCtor() {
  _cached_size_ = 0;
  skill_id_ = 0;
  skill_level_ = 0;
  higher_level_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31402204::~Proto31402204() {
  SharedDtor();
}

void Proto31402204::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31402204::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31402204::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31402204_descriptor_;
}

const Proto31402204& Proto31402204::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31402204* Proto31402204::default_instance_ = NULL;

Proto31402204* Proto31402204::New() const {
  return new Proto31402204;
}

void Proto31402204::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skill_id_ = 0;
    skill_level_ = 0;
    higher_level_count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31402204::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 skill_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_skill_level;
        break;
      }
      
      // optional int32 skill_level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_level_)));
          set_has_skill_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_higher_level_count;
        break;
      }
      
      // optional int32 higher_level_count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_higher_level_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &higher_level_count_)));
          set_has_higher_level_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31402204::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skill_id(), output);
  }
  
  // optional int32 skill_level = 2;
  if (has_skill_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skill_level(), output);
  }
  
  // optional int32 higher_level_count = 3;
  if (has_higher_level_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->higher_level_count(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31402204::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skill_id(), target);
  }
  
  // optional int32 skill_level = 2;
  if (has_skill_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skill_level(), target);
  }
  
  // optional int32 higher_level_count = 3;
  if (has_higher_level_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->higher_level_count(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31402204::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 skill_id = 1;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
    // optional int32 skill_level = 2;
    if (has_skill_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_level());
    }
    
    // optional int32 higher_level_count = 3;
    if (has_higher_level_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->higher_level_count());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31402204::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31402204* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31402204*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31402204::MergeFrom(const Proto31402204& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_skill_level()) {
      set_skill_level(from.skill_level());
    }
    if (from.has_higher_level_count()) {
      set_higher_level_count(from.higher_level_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31402204::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31402204::CopyFrom(const Proto31402204& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31402204::IsInitialized() const {
  
  return true;
}

void Proto31402204::Swap(Proto31402204* other) {
  if (other != this) {
    std::swap(skill_id_, other->skill_id_);
    std::swap(skill_level_, other->skill_level_);
    std::swap(higher_level_count_, other->higher_level_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31402204::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31402204_descriptor_;
  metadata.reflection = Proto31402204_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30101601::kResRecognFieldNumber;
const int Proto30101601::kTypeFieldNumber;
const int Proto30101601::kRoleListFieldNumber;
#endif  // !_MSC_VER

Proto30101601::Proto30101601()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30101601::InitAsDefaultInstance() {
}

Proto30101601::Proto30101601(const Proto30101601& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30101601::SharedCtor() {
  _cached_size_ = 0;
  res_recogn_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30101601::~Proto30101601() {
  SharedDtor();
}

void Proto30101601::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30101601::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30101601::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30101601_descriptor_;
}

const Proto30101601& Proto30101601::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30101601* Proto30101601::default_instance_ = NULL;

Proto30101601* Proto30101601::New() const {
  return new Proto30101601;
}

void Proto30101601::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    res_recogn_ = 0;
    type_ = 0;
  }
  role_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30101601::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 res_recogn = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &res_recogn_)));
          set_has_res_recogn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_role_list;
        break;
      }
      
      // repeated int64 role_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24, input, this->mutable_role_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_role_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30101601::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 res_recogn = 1;
  if (has_res_recogn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->res_recogn(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  // repeated int64 role_list = 3;
  for (int i = 0; i < this->role_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->role_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30101601::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 res_recogn = 1;
  if (has_res_recogn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->res_recogn(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  // repeated int64 role_list = 3;
  for (int i = 0; i < this->role_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->role_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30101601::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 res_recogn = 1;
    if (has_res_recogn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->res_recogn());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  // repeated int64 role_list = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_list(i));
    }
    total_size += 1 * this->role_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30101601::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30101601* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30101601*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30101601::MergeFrom(const Proto30101601& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_list_.MergeFrom(from.role_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_res_recogn()) {
      set_res_recogn(from.res_recogn());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30101601::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30101601::CopyFrom(const Proto30101601& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30101601::IsInitialized() const {
  
  return true;
}

void Proto30101601::Swap(Proto30101601* other) {
  if (other != this) {
    std::swap(res_recogn_, other->res_recogn_);
    std::swap(type_, other->type_);
    role_list_.Swap(&other->role_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30101601::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30101601_descriptor_;
  metadata.reflection = Proto30101601_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30101608::kWeddingIdFieldNumber;
const int Proto30101608::kWeddingTypeFieldNumber;
const int Proto30101608::kPartnerId1FieldNumber;
const int Proto30101608::kPartnerId2FieldNumber;
const int Proto30101608::kMonsterSortFieldNumber;
const int Proto30101608::kLocationFieldNumber;
const int Proto30101608::kSceneIdFieldNumber;
const int Proto30101608::kPartnerCareer1FieldNumber;
const int Proto30101608::kPartnerCareer2FieldNumber;
#endif  // !_MSC_VER

Proto30101608::Proto30101608()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30101608::InitAsDefaultInstance() {
  location_ = const_cast< ::ProtoCoord*>(&::ProtoCoord::default_instance());
}

Proto30101608::Proto30101608(const Proto30101608& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30101608::SharedCtor() {
  _cached_size_ = 0;
  wedding_id_ = GOOGLE_LONGLONG(0);
  wedding_type_ = 0;
  partner_id_1_ = GOOGLE_LONGLONG(0);
  partner_id_2_ = GOOGLE_LONGLONG(0);
  monster_sort_ = 0;
  location_ = NULL;
  scene_id_ = 0;
  partner_career_1_ = 0;
  partner_career_2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30101608::~Proto30101608() {
  SharedDtor();
}

void Proto30101608::SharedDtor() {
  if (this != default_instance_) {
    delete location_;
  }
}

void Proto30101608::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30101608::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30101608_descriptor_;
}

const Proto30101608& Proto30101608::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30101608* Proto30101608::default_instance_ = NULL;

Proto30101608* Proto30101608::New() const {
  return new Proto30101608;
}

void Proto30101608::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    wedding_id_ = GOOGLE_LONGLONG(0);
    wedding_type_ = 0;
    partner_id_1_ = GOOGLE_LONGLONG(0);
    partner_id_2_ = GOOGLE_LONGLONG(0);
    monster_sort_ = 0;
    if (has_location()) {
      if (location_ != NULL) location_->::ProtoCoord::Clear();
    }
    scene_id_ = 0;
    partner_career_1_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    partner_career_2_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30101608::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 wedding_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &wedding_id_)));
          set_has_wedding_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_wedding_type;
        break;
      }
      
      // optional int32 wedding_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wedding_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wedding_type_)));
          set_has_wedding_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_partner_id_1;
        break;
      }
      
      // optional int64 partner_id_1 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_partner_id_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &partner_id_1_)));
          set_has_partner_id_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_partner_id_2;
        break;
      }
      
      // optional int64 partner_id_2 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_partner_id_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &partner_id_2_)));
          set_has_partner_id_2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_monster_sort;
        break;
      }
      
      // optional int32 monster_sort = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_monster_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &monster_sort_)));
          set_has_monster_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_location;
        break;
      }
      
      // optional .ProtoCoord location = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_partner_career_1;
        break;
      }
      
      // optional int32 partner_career_1 = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_partner_career_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partner_career_1_)));
          set_has_partner_career_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_partner_career_2;
        break;
      }
      
      // optional int32 partner_career_2 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_partner_career_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partner_career_2_)));
          set_has_partner_career_2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30101608::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 wedding_id = 1;
  if (has_wedding_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->wedding_id(), output);
  }
  
  // optional int32 wedding_type = 2;
  if (has_wedding_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->wedding_type(), output);
  }
  
  // optional int64 partner_id_1 = 3;
  if (has_partner_id_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->partner_id_1(), output);
  }
  
  // optional int64 partner_id_2 = 4;
  if (has_partner_id_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->partner_id_2(), output);
  }
  
  // optional int32 monster_sort = 5;
  if (has_monster_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->monster_sort(), output);
  }
  
  // optional .ProtoCoord location = 6;
  if (has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->location(), output);
  }
  
  // optional int32 scene_id = 7;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->scene_id(), output);
  }
  
  // optional int32 partner_career_1 = 8;
  if (has_partner_career_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->partner_career_1(), output);
  }
  
  // optional int32 partner_career_2 = 9;
  if (has_partner_career_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->partner_career_2(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30101608::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 wedding_id = 1;
  if (has_wedding_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->wedding_id(), target);
  }
  
  // optional int32 wedding_type = 2;
  if (has_wedding_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->wedding_type(), target);
  }
  
  // optional int64 partner_id_1 = 3;
  if (has_partner_id_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->partner_id_1(), target);
  }
  
  // optional int64 partner_id_2 = 4;
  if (has_partner_id_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->partner_id_2(), target);
  }
  
  // optional int32 monster_sort = 5;
  if (has_monster_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->monster_sort(), target);
  }
  
  // optional .ProtoCoord location = 6;
  if (has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->location(), target);
  }
  
  // optional int32 scene_id = 7;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->scene_id(), target);
  }
  
  // optional int32 partner_career_1 = 8;
  if (has_partner_career_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->partner_career_1(), target);
  }
  
  // optional int32 partner_career_2 = 9;
  if (has_partner_career_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->partner_career_2(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30101608::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 wedding_id = 1;
    if (has_wedding_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->wedding_id());
    }
    
    // optional int32 wedding_type = 2;
    if (has_wedding_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wedding_type());
    }
    
    // optional int64 partner_id_1 = 3;
    if (has_partner_id_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->partner_id_1());
    }
    
    // optional int64 partner_id_2 = 4;
    if (has_partner_id_2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->partner_id_2());
    }
    
    // optional int32 monster_sort = 5;
    if (has_monster_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->monster_sort());
    }
    
    // optional .ProtoCoord location = 6;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }
    
    // optional int32 scene_id = 7;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 partner_career_1 = 8;
    if (has_partner_career_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->partner_career_1());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 partner_career_2 = 9;
    if (has_partner_career_2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->partner_career_2());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30101608::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30101608* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30101608*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30101608::MergeFrom(const Proto30101608& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wedding_id()) {
      set_wedding_id(from.wedding_id());
    }
    if (from.has_wedding_type()) {
      set_wedding_type(from.wedding_type());
    }
    if (from.has_partner_id_1()) {
      set_partner_id_1(from.partner_id_1());
    }
    if (from.has_partner_id_2()) {
      set_partner_id_2(from.partner_id_2());
    }
    if (from.has_monster_sort()) {
      set_monster_sort(from.monster_sort());
    }
    if (from.has_location()) {
      mutable_location()->::ProtoCoord::MergeFrom(from.location());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_partner_career_1()) {
      set_partner_career_1(from.partner_career_1());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_partner_career_2()) {
      set_partner_career_2(from.partner_career_2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30101608::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30101608::CopyFrom(const Proto30101608& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30101608::IsInitialized() const {
  
  return true;
}

void Proto30101608::Swap(Proto30101608* other) {
  if (other != this) {
    std::swap(wedding_id_, other->wedding_id_);
    std::swap(wedding_type_, other->wedding_type_);
    std::swap(partner_id_1_, other->partner_id_1_);
    std::swap(partner_id_2_, other->partner_id_2_);
    std::swap(monster_sort_, other->monster_sort_);
    std::swap(location_, other->location_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(partner_career_1_, other->partner_career_1_);
    std::swap(partner_career_2_, other->partner_career_2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30101608::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30101608_descriptor_;
  metadata.reflection = Proto30101608_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30101610::kWeddingIdFieldNumber;
const int Proto30101610::kPartnerIdFieldNumber;
const int Proto30101610::kWeddingTypeFieldNumber;
const int Proto30101610::kPartnerNameFieldNumber;
const int Proto30101610::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto30101610::Proto30101610()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30101610::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto30101610::Proto30101610(const Proto30101610& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30101610::SharedCtor() {
  _cached_size_ = 0;
  wedding_id_ = GOOGLE_LONGLONG(0);
  partner_id_ = GOOGLE_LONGLONG(0);
  wedding_type_ = 0;
  partner_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30101610::~Proto30101610() {
  SharedDtor();
}

void Proto30101610::SharedDtor() {
  if (partner_name_ != &::google::protobuf::internal::kEmptyString) {
    delete partner_name_;
  }
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto30101610::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30101610::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30101610_descriptor_;
}

const Proto30101610& Proto30101610::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30101610* Proto30101610::default_instance_ = NULL;

Proto30101610* Proto30101610::New() const {
  return new Proto30101610;
}

void Proto30101610::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    wedding_id_ = GOOGLE_LONGLONG(0);
    partner_id_ = GOOGLE_LONGLONG(0);
    wedding_type_ = 0;
    if (has_partner_name()) {
      if (partner_name_ != &::google::protobuf::internal::kEmptyString) {
        partner_name_->clear();
      }
    }
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30101610::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 wedding_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &wedding_id_)));
          set_has_wedding_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_partner_id;
        break;
      }
      
      // optional int64 partner_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_partner_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &partner_id_)));
          set_has_partner_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_wedding_type;
        break;
      }
      
      // optional int32 wedding_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wedding_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wedding_type_)));
          set_has_wedding_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_partner_name;
        break;
      }
      
      // optional string partner_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_partner_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partner_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->partner_name().data(), this->partner_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30101610::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 wedding_id = 1;
  if (has_wedding_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->wedding_id(), output);
  }
  
  // optional int64 partner_id = 2;
  if (has_partner_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->partner_id(), output);
  }
  
  // optional int32 wedding_type = 3;
  if (has_wedding_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->wedding_type(), output);
  }
  
  // optional string partner_name = 4;
  if (has_partner_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->partner_name().data(), this->partner_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->partner_name(), output);
  }
  
  // optional .ProtoThreeObj other_info = 5;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30101610::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 wedding_id = 1;
  if (has_wedding_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->wedding_id(), target);
  }
  
  // optional int64 partner_id = 2;
  if (has_partner_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->partner_id(), target);
  }
  
  // optional int32 wedding_type = 3;
  if (has_wedding_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->wedding_type(), target);
  }
  
  // optional string partner_name = 4;
  if (has_partner_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->partner_name().data(), this->partner_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->partner_name(), target);
  }
  
  // optional .ProtoThreeObj other_info = 5;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30101610::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 wedding_id = 1;
    if (has_wedding_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->wedding_id());
    }
    
    // optional int64 partner_id = 2;
    if (has_partner_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->partner_id());
    }
    
    // optional int32 wedding_type = 3;
    if (has_wedding_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wedding_type());
    }
    
    // optional string partner_name = 4;
    if (has_partner_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->partner_name());
    }
    
    // optional .ProtoThreeObj other_info = 5;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30101610::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30101610* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30101610*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30101610::MergeFrom(const Proto30101610& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wedding_id()) {
      set_wedding_id(from.wedding_id());
    }
    if (from.has_partner_id()) {
      set_partner_id(from.partner_id());
    }
    if (from.has_wedding_type()) {
      set_wedding_type(from.wedding_type());
    }
    if (from.has_partner_name()) {
      set_partner_name(from.partner_name());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30101610::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30101610::CopyFrom(const Proto30101610& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30101610::IsInitialized() const {
  
  return true;
}

void Proto30101610::Swap(Proto30101610* other) {
  if (other != this) {
    std::swap(wedding_id_, other->wedding_id_);
    std::swap(partner_id_, other->partner_id_);
    std::swap(wedding_type_, other->wedding_type_);
    std::swap(partner_name_, other->partner_name_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30101610::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30101610_descriptor_;
  metadata.reflection = Proto30101610_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31101602::kResRecognFieldNumber;
const int Proto31101602::kWeddingTypeFieldNumber;
const int Proto31101602::kResCodeFieldNumber;
const int Proto31101602::kRoleListFieldNumber;
#endif  // !_MSC_VER

Proto31101602::Proto31101602()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31101602::InitAsDefaultInstance() {
}

Proto31101602::Proto31101602(const Proto31101602& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31101602::SharedCtor() {
  _cached_size_ = 0;
  res_recogn_ = 0;
  wedding_type_ = 0;
  res_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31101602::~Proto31101602() {
  SharedDtor();
}

void Proto31101602::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31101602::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31101602::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31101602_descriptor_;
}

const Proto31101602& Proto31101602::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31101602* Proto31101602::default_instance_ = NULL;

Proto31101602* Proto31101602::New() const {
  return new Proto31101602;
}

void Proto31101602::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    res_recogn_ = 0;
    wedding_type_ = 0;
    res_code_ = 0;
  }
  role_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31101602::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 res_recogn = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &res_recogn_)));
          set_has_res_recogn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_wedding_type;
        break;
      }
      
      // optional int32 wedding_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wedding_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wedding_type_)));
          set_has_wedding_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_res_code;
        break;
      }
      
      // optional int32 res_code = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_res_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &res_code_)));
          set_has_res_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_role_list;
        break;
      }
      
      // repeated int64 role_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 32, input, this->mutable_role_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_role_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31101602::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 res_recogn = 1;
  if (has_res_recogn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->res_recogn(), output);
  }
  
  // optional int32 wedding_type = 2;
  if (has_wedding_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->wedding_type(), output);
  }
  
  // optional int32 res_code = 3;
  if (has_res_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->res_code(), output);
  }
  
  // repeated int64 role_list = 4;
  for (int i = 0; i < this->role_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->role_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31101602::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 res_recogn = 1;
  if (has_res_recogn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->res_recogn(), target);
  }
  
  // optional int32 wedding_type = 2;
  if (has_wedding_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->wedding_type(), target);
  }
  
  // optional int32 res_code = 3;
  if (has_res_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->res_code(), target);
  }
  
  // repeated int64 role_list = 4;
  for (int i = 0; i < this->role_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(4, this->role_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31101602::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 res_recogn = 1;
    if (has_res_recogn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->res_recogn());
    }
    
    // optional int32 wedding_type = 2;
    if (has_wedding_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wedding_type());
    }
    
    // optional int32 res_code = 3;
    if (has_res_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->res_code());
    }
    
  }
  // repeated int64 role_list = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_list(i));
    }
    total_size += 1 * this->role_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31101602::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31101602* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31101602*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31101602::MergeFrom(const Proto31101602& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_list_.MergeFrom(from.role_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_res_recogn()) {
      set_res_recogn(from.res_recogn());
    }
    if (from.has_wedding_type()) {
      set_wedding_type(from.wedding_type());
    }
    if (from.has_res_code()) {
      set_res_code(from.res_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31101602::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31101602::CopyFrom(const Proto31101602& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31101602::IsInitialized() const {
  
  return true;
}

void Proto31101602::Swap(Proto31101602* other) {
  if (other != this) {
    std::swap(res_recogn_, other->res_recogn_);
    std::swap(wedding_type_, other->wedding_type_);
    std::swap(res_code_, other->res_code_);
    role_list_.Swap(&other->role_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31101602::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31101602_descriptor_;
  metadata.reflection = Proto31101602_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31101603::kResCodeFieldNumber;
#endif  // !_MSC_VER

Proto31101603::Proto31101603()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31101603::InitAsDefaultInstance() {
}

Proto31101603::Proto31101603(const Proto31101603& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31101603::SharedCtor() {
  _cached_size_ = 0;
  res_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31101603::~Proto31101603() {
  SharedDtor();
}

void Proto31101603::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31101603::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31101603::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31101603_descriptor_;
}

const Proto31101603& Proto31101603::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31101603* Proto31101603::default_instance_ = NULL;

Proto31101603* Proto31101603::New() const {
  return new Proto31101603;
}

void Proto31101603::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    res_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31101603::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 res_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &res_code_)));
          set_has_res_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31101603::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 res_code = 1;
  if (has_res_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->res_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31101603::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 res_code = 1;
  if (has_res_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->res_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31101603::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 res_code = 1;
    if (has_res_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->res_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31101603::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31101603* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31101603*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31101603::MergeFrom(const Proto31101603& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_res_code()) {
      set_res_code(from.res_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31101603::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31101603::CopyFrom(const Proto31101603& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31101603::IsInitialized() const {
  
  return true;
}

void Proto31101603::Swap(Proto31101603* other) {
  if (other != this) {
    std::swap(res_code_, other->res_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31101603::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31101603_descriptor_;
  metadata.reflection = Proto31101603_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31101604::kKeepsakeIdFieldNumber;
const int Proto31101604::kKeepsakeLevelFieldNumber;
const int Proto31101604::kKeepsakeSublevelFieldNumber;
const int Proto31101604::kKeepsakeProgressFieldNumber;
const int Proto31101604::kResCodeFieldNumber;
#endif  // !_MSC_VER

Proto31101604::Proto31101604()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31101604::InitAsDefaultInstance() {
}

Proto31101604::Proto31101604(const Proto31101604& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31101604::SharedCtor() {
  _cached_size_ = 0;
  keepsake_id_ = 0;
  keepsake_level_ = 0;
  keepsake_sublevel_ = 0;
  keepsake_progress_ = 0;
  res_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31101604::~Proto31101604() {
  SharedDtor();
}

void Proto31101604::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31101604::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31101604::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31101604_descriptor_;
}

const Proto31101604& Proto31101604::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31101604* Proto31101604::default_instance_ = NULL;

Proto31101604* Proto31101604::New() const {
  return new Proto31101604;
}

void Proto31101604::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    keepsake_id_ = 0;
    keepsake_level_ = 0;
    keepsake_sublevel_ = 0;
    keepsake_progress_ = 0;
    res_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31101604::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 keepsake_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keepsake_id_)));
          set_has_keepsake_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_keepsake_level;
        break;
      }
      
      // optional int32 keepsake_level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_keepsake_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keepsake_level_)));
          set_has_keepsake_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_keepsake_sublevel;
        break;
      }
      
      // optional int32 keepsake_sublevel = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_keepsake_sublevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keepsake_sublevel_)));
          set_has_keepsake_sublevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(33)) goto parse_keepsake_progress;
        break;
      }
      
      // optional double keepsake_progress = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_keepsake_progress:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &keepsake_progress_)));
          set_has_keepsake_progress();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_res_code;
        break;
      }
      
      // optional int32 res_code = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_res_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &res_code_)));
          set_has_res_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31101604::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 keepsake_id = 1;
  if (has_keepsake_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->keepsake_id(), output);
  }
  
  // optional int32 keepsake_level = 2;
  if (has_keepsake_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->keepsake_level(), output);
  }
  
  // optional int32 keepsake_sublevel = 3;
  if (has_keepsake_sublevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->keepsake_sublevel(), output);
  }
  
  // optional double keepsake_progress = 4;
  if (has_keepsake_progress()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->keepsake_progress(), output);
  }
  
  // optional int32 res_code = 5;
  if (has_res_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->res_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31101604::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 keepsake_id = 1;
  if (has_keepsake_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->keepsake_id(), target);
  }
  
  // optional int32 keepsake_level = 2;
  if (has_keepsake_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->keepsake_level(), target);
  }
  
  // optional int32 keepsake_sublevel = 3;
  if (has_keepsake_sublevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->keepsake_sublevel(), target);
  }
  
  // optional double keepsake_progress = 4;
  if (has_keepsake_progress()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->keepsake_progress(), target);
  }
  
  // optional int32 res_code = 5;
  if (has_res_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->res_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31101604::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 keepsake_id = 1;
    if (has_keepsake_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->keepsake_id());
    }
    
    // optional int32 keepsake_level = 2;
    if (has_keepsake_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->keepsake_level());
    }
    
    // optional int32 keepsake_sublevel = 3;
    if (has_keepsake_sublevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->keepsake_sublevel());
    }
    
    // optional double keepsake_progress = 4;
    if (has_keepsake_progress()) {
      total_size += 1 + 8;
    }
    
    // optional int32 res_code = 5;
    if (has_res_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->res_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31101604::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31101604* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31101604*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31101604::MergeFrom(const Proto31101604& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_keepsake_id()) {
      set_keepsake_id(from.keepsake_id());
    }
    if (from.has_keepsake_level()) {
      set_keepsake_level(from.keepsake_level());
    }
    if (from.has_keepsake_sublevel()) {
      set_keepsake_sublevel(from.keepsake_sublevel());
    }
    if (from.has_keepsake_progress()) {
      set_keepsake_progress(from.keepsake_progress());
    }
    if (from.has_res_code()) {
      set_res_code(from.res_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31101604::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31101604::CopyFrom(const Proto31101604& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31101604::IsInitialized() const {
  
  return true;
}

void Proto31101604::Swap(Proto31101604* other) {
  if (other != this) {
    std::swap(keepsake_id_, other->keepsake_id_);
    std::swap(keepsake_level_, other->keepsake_level_);
    std::swap(keepsake_sublevel_, other->keepsake_sublevel_);
    std::swap(keepsake_progress_, other->keepsake_progress_);
    std::swap(res_code_, other->res_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31101604::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31101604_descriptor_;
  metadata.reflection = Proto31101604_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31101605::kItemIdFieldNumber;
const int Proto31101605::kReceiverIdFieldNumber;
const int Proto31101605::kResCodeFieldNumber;
const int Proto31101605::kItemNumFieldNumber;
const int Proto31101605::kReceiverNameFieldNumber;
const int Proto31101605::kAutoBuyFieldNumber;
const int Proto31101605::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto31101605::Proto31101605()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31101605::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto31101605::Proto31101605(const Proto31101605& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31101605::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  receiver_id_ = GOOGLE_LONGLONG(0);
  res_code_ = 0;
  item_num_ = 0;
  receiver_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  auto_buy_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31101605::~Proto31101605() {
  SharedDtor();
}

void Proto31101605::SharedDtor() {
  if (receiver_name_ != &::google::protobuf::internal::kEmptyString) {
    delete receiver_name_;
  }
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto31101605::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31101605::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31101605_descriptor_;
}

const Proto31101605& Proto31101605::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31101605* Proto31101605::default_instance_ = NULL;

Proto31101605* Proto31101605::New() const {
  return new Proto31101605;
}

void Proto31101605::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    receiver_id_ = GOOGLE_LONGLONG(0);
    res_code_ = 0;
    item_num_ = 0;
    if (has_receiver_name()) {
      if (receiver_name_ != &::google::protobuf::internal::kEmptyString) {
        receiver_name_->clear();
      }
    }
    auto_buy_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31101605::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_receiver_id;
        break;
      }
      
      // optional int64 receiver_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_receiver_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &receiver_id_)));
          set_has_receiver_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_res_code;
        break;
      }
      
      // optional int32 res_code = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_res_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &res_code_)));
          set_has_res_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_item_num;
        break;
      }
      
      // optional int32 item_num = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
          set_has_item_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_receiver_name;
        break;
      }
      
      // optional string receiver_name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_receiver_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receiver_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->receiver_name().data(), this->receiver_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_auto_buy;
        break;
      }
      
      // optional int32 auto_buy = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_buy_)));
          set_has_auto_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31101605::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int64 receiver_id = 2;
  if (has_receiver_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->receiver_id(), output);
  }
  
  // optional int32 res_code = 3;
  if (has_res_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->res_code(), output);
  }
  
  // optional int32 item_num = 4;
  if (has_item_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->item_num(), output);
  }
  
  // optional string receiver_name = 5;
  if (has_receiver_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiver_name().data(), this->receiver_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->receiver_name(), output);
  }
  
  // optional int32 auto_buy = 6;
  if (has_auto_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->auto_buy(), output);
  }
  
  // optional .ProtoThreeObj other_info = 7;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31101605::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int64 receiver_id = 2;
  if (has_receiver_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->receiver_id(), target);
  }
  
  // optional int32 res_code = 3;
  if (has_res_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->res_code(), target);
  }
  
  // optional int32 item_num = 4;
  if (has_item_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->item_num(), target);
  }
  
  // optional string receiver_name = 5;
  if (has_receiver_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiver_name().data(), this->receiver_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->receiver_name(), target);
  }
  
  // optional int32 auto_buy = 6;
  if (has_auto_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->auto_buy(), target);
  }
  
  // optional .ProtoThreeObj other_info = 7;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31101605::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int64 receiver_id = 2;
    if (has_receiver_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->receiver_id());
    }
    
    // optional int32 res_code = 3;
    if (has_res_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->res_code());
    }
    
    // optional int32 item_num = 4;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_num());
    }
    
    // optional string receiver_name = 5;
    if (has_receiver_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->receiver_name());
    }
    
    // optional int32 auto_buy = 6;
    if (has_auto_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_buy());
    }
    
    // optional .ProtoThreeObj other_info = 7;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31101605::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31101605* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31101605*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31101605::MergeFrom(const Proto31101605& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_receiver_id()) {
      set_receiver_id(from.receiver_id());
    }
    if (from.has_res_code()) {
      set_res_code(from.res_code());
    }
    if (from.has_item_num()) {
      set_item_num(from.item_num());
    }
    if (from.has_receiver_name()) {
      set_receiver_name(from.receiver_name());
    }
    if (from.has_auto_buy()) {
      set_auto_buy(from.auto_buy());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31101605::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31101605::CopyFrom(const Proto31101605& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31101605::IsInitialized() const {
  
  return true;
}

void Proto31101605::Swap(Proto31101605* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(receiver_id_, other->receiver_id_);
    std::swap(res_code_, other->res_code_);
    std::swap(item_num_, other->item_num_);
    std::swap(receiver_name_, other->receiver_name_);
    std::swap(auto_buy_, other->auto_buy_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31101605::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31101605_descriptor_;
  metadata.reflection = Proto31101605_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31101606::kIntimacyFieldNumber;
#endif  // !_MSC_VER

Proto31101606::Proto31101606()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31101606::InitAsDefaultInstance() {
}

Proto31101606::Proto31101606(const Proto31101606& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31101606::SharedCtor() {
  _cached_size_ = 0;
  intimacy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31101606::~Proto31101606() {
  SharedDtor();
}

void Proto31101606::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31101606::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31101606::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31101606_descriptor_;
}

const Proto31101606& Proto31101606::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31101606* Proto31101606::default_instance_ = NULL;

Proto31101606* Proto31101606::New() const {
  return new Proto31101606;
}

void Proto31101606::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    intimacy_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31101606::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 intimacy = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intimacy_)));
          set_has_intimacy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31101606::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 intimacy = 1;
  if (has_intimacy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->intimacy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31101606::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 intimacy = 1;
  if (has_intimacy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->intimacy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31101606::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 intimacy = 1;
    if (has_intimacy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->intimacy());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31101606::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31101606* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31101606*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31101606::MergeFrom(const Proto31101606& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intimacy()) {
      set_intimacy(from.intimacy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31101606::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31101606::CopyFrom(const Proto31101606& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31101606::IsInitialized() const {
  
  return true;
}

void Proto31101606::Swap(Proto31101606* other) {
  if (other != this) {
    std::swap(intimacy_, other->intimacy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31101606::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31101606_descriptor_;
  metadata.reflection = Proto31101606_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31101607::kTypeFieldNumber;
const int Proto31101607::kRoleListFieldNumber;
const int Proto31101607::kScriptSortFieldNumber;
const int Proto31101607::kSceneIdFieldNumber;
#endif  // !_MSC_VER

Proto31101607::Proto31101607()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31101607::InitAsDefaultInstance() {
}

Proto31101607::Proto31101607(const Proto31101607& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31101607::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  script_sort_ = 0;
  scene_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31101607::~Proto31101607() {
  SharedDtor();
}

void Proto31101607::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31101607::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31101607::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31101607_descriptor_;
}

const Proto31101607& Proto31101607::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31101607* Proto31101607::default_instance_ = NULL;

Proto31101607* Proto31101607::New() const {
  return new Proto31101607;
}

void Proto31101607::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    script_sort_ = 0;
    scene_id_ = 0;
  }
  role_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31101607::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_list;
        break;
      }
      
      // repeated int64 role_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16, input, this->mutable_role_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_list;
        if (input->ExpectTag(24)) goto parse_script_sort;
        break;
      }
      
      // optional int32 script_sort = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31101607::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // repeated int64 role_list = 2;
  for (int i = 0; i < this->role_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->role_list(i), output);
  }
  
  // optional int32 script_sort = 3;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->script_sort(), output);
  }
  
  // optional int32 scene_id = 4;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->scene_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31101607::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // repeated int64 role_list = 2;
  for (int i = 0; i < this->role_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->role_list(i), target);
  }
  
  // optional int32 script_sort = 3;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->script_sort(), target);
  }
  
  // optional int32 scene_id = 4;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->scene_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31101607::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 script_sort = 3;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 scene_id = 4;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
  }
  // repeated int64 role_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_list(i));
    }
    total_size += 1 * this->role_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31101607::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31101607* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31101607*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31101607::MergeFrom(const Proto31101607& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_list_.MergeFrom(from.role_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31101607::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31101607::CopyFrom(const Proto31101607& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31101607::IsInitialized() const {
  
  return true;
}

void Proto31101607::Swap(Proto31101607* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    role_list_.Swap(&other->role_list_);
    std::swap(script_sort_, other->script_sort_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31101607::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31101607_descriptor_;
  metadata.reflection = Proto31101607_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31101609::kWeddingIdFieldNumber;
#endif  // !_MSC_VER

Proto31101609::Proto31101609()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31101609::InitAsDefaultInstance() {
}

Proto31101609::Proto31101609(const Proto31101609& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31101609::SharedCtor() {
  _cached_size_ = 0;
  wedding_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31101609::~Proto31101609() {
  SharedDtor();
}

void Proto31101609::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31101609::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31101609::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31101609_descriptor_;
}

const Proto31101609& Proto31101609::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31101609* Proto31101609::default_instance_ = NULL;

Proto31101609* Proto31101609::New() const {
  return new Proto31101609;
}

void Proto31101609::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    wedding_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31101609::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 wedding_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &wedding_id_)));
          set_has_wedding_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31101609::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 wedding_id = 1;
  if (has_wedding_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->wedding_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31101609::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 wedding_id = 1;
  if (has_wedding_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->wedding_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31101609::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 wedding_id = 1;
    if (has_wedding_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->wedding_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31101609::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31101609* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31101609*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31101609::MergeFrom(const Proto31101609& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wedding_id()) {
      set_wedding_id(from.wedding_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31101609::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31101609::CopyFrom(const Proto31101609& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31101609::IsInitialized() const {
  
  return true;
}

void Proto31101609::Swap(Proto31101609* other) {
  if (other != this) {
    std::swap(wedding_id_, other->wedding_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31101609::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31101609_descriptor_;
  metadata.reflection = Proto31101609_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400006::kAddSavvyFieldNumber;
const int Proto31400006::kSerialObjFieldNumber;
#endif  // !_MSC_VER

Proto31400006::Proto31400006()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400006::InitAsDefaultInstance() {
  serial_obj_ = const_cast< ::ProtoSerialObj*>(&::ProtoSerialObj::default_instance());
}

Proto31400006::Proto31400006(const Proto31400006& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400006::SharedCtor() {
  _cached_size_ = 0;
  add_savvy_ = 0;
  serial_obj_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400006::~Proto31400006() {
  SharedDtor();
}

void Proto31400006::SharedDtor() {
  if (this != default_instance_) {
    delete serial_obj_;
  }
}

void Proto31400006::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400006::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400006_descriptor_;
}

const Proto31400006& Proto31400006::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31400006* Proto31400006::default_instance_ = NULL;

Proto31400006* Proto31400006::New() const {
  return new Proto31400006;
}

void Proto31400006::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    add_savvy_ = 0;
    if (has_serial_obj()) {
      if (serial_obj_ != NULL) serial_obj_->::ProtoSerialObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400006::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 add_savvy = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_savvy_)));
          set_has_add_savvy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_serial_obj;
        break;
      }
      
      // optional .ProtoSerialObj serial_obj = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_serial_obj:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serial_obj()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400006::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 add_savvy = 1;
  if (has_add_savvy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->add_savvy(), output);
  }
  
  // optional .ProtoSerialObj serial_obj = 2;
  if (has_serial_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->serial_obj(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400006::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 add_savvy = 1;
  if (has_add_savvy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->add_savvy(), target);
  }
  
  // optional .ProtoSerialObj serial_obj = 2;
  if (has_serial_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->serial_obj(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400006::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 add_savvy = 1;
    if (has_add_savvy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_savvy());
    }
    
    // optional .ProtoSerialObj serial_obj = 2;
    if (has_serial_obj()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serial_obj());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400006::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400006* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400006*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400006::MergeFrom(const Proto31400006& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_add_savvy()) {
      set_add_savvy(from.add_savvy());
    }
    if (from.has_serial_obj()) {
      mutable_serial_obj()->::ProtoSerialObj::MergeFrom(from.serial_obj());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400006::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400006::CopyFrom(const Proto31400006& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400006::IsInitialized() const {
  
  return true;
}

void Proto31400006::Swap(Proto31400006* other) {
  if (other != this) {
    std::swap(add_savvy_, other->add_savvy_);
    std::swap(serial_obj_, other->serial_obj_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400006::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400006_descriptor_;
  metadata.reflection = Proto31400006_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400019::kRecovertBloodFieldNumber;
const int Proto30400019::kTotalBloodFieldNumber;
const int Proto30400019::kRecovertMagicFieldNumber;
const int Proto30400019::kTotalMagicFieldNumber;
const int Proto30400019::kAutoBackMainFieldNumber;
const int Proto30400019::kAutoRandomFieldNumber;
#endif  // !_MSC_VER

Proto30400019::Proto30400019()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400019::InitAsDefaultInstance() {
}

Proto30400019::Proto30400019(const Proto30400019& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400019::SharedCtor() {
  _cached_size_ = 0;
  recovert_blood_ = 0;
  total_blood_ = 0;
  recovert_magic_ = 0;
  total_magic_ = 0;
  auto_back_main_ = 0;
  auto_random_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400019::~Proto30400019() {
  SharedDtor();
}

void Proto30400019::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400019::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400019::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400019_descriptor_;
}

const Proto30400019& Proto30400019::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30400019* Proto30400019::default_instance_ = NULL;

Proto30400019* Proto30400019::New() const {
  return new Proto30400019;
}

void Proto30400019::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    recovert_blood_ = 0;
    total_blood_ = 0;
    recovert_magic_ = 0;
    total_magic_ = 0;
    auto_back_main_ = 0;
    auto_random_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400019::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 recovert_blood = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recovert_blood_)));
          set_has_recovert_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_blood;
        break;
      }
      
      // optional int32 total_blood = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_blood_)));
          set_has_total_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_recovert_magic;
        break;
      }
      
      // optional int32 recovert_magic = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recovert_magic:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recovert_magic_)));
          set_has_recovert_magic();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_total_magic;
        break;
      }
      
      // optional int32 total_magic = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_magic:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_magic_)));
          set_has_total_magic();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_auto_back_main;
        break;
      }
      
      // optional int32 auto_back_main = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_back_main:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_back_main_)));
          set_has_auto_back_main();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_auto_random;
        break;
      }
      
      // optional int32 auto_random = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_random:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_random_)));
          set_has_auto_random();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400019::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 recovert_blood = 1;
  if (has_recovert_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->recovert_blood(), output);
  }
  
  // optional int32 total_blood = 2;
  if (has_total_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_blood(), output);
  }
  
  // optional int32 recovert_magic = 3;
  if (has_recovert_magic()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->recovert_magic(), output);
  }
  
  // optional int32 total_magic = 4;
  if (has_total_magic()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->total_magic(), output);
  }
  
  // optional int32 auto_back_main = 5;
  if (has_auto_back_main()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->auto_back_main(), output);
  }
  
  // optional int32 auto_random = 6;
  if (has_auto_random()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->auto_random(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400019::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 recovert_blood = 1;
  if (has_recovert_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->recovert_blood(), target);
  }
  
  // optional int32 total_blood = 2;
  if (has_total_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_blood(), target);
  }
  
  // optional int32 recovert_magic = 3;
  if (has_recovert_magic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->recovert_magic(), target);
  }
  
  // optional int32 total_magic = 4;
  if (has_total_magic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->total_magic(), target);
  }
  
  // optional int32 auto_back_main = 5;
  if (has_auto_back_main()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->auto_back_main(), target);
  }
  
  // optional int32 auto_random = 6;
  if (has_auto_random()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->auto_random(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400019::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 recovert_blood = 1;
    if (has_recovert_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recovert_blood());
    }
    
    // optional int32 total_blood = 2;
    if (has_total_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_blood());
    }
    
    // optional int32 recovert_magic = 3;
    if (has_recovert_magic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recovert_magic());
    }
    
    // optional int32 total_magic = 4;
    if (has_total_magic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_magic());
    }
    
    // optional int32 auto_back_main = 5;
    if (has_auto_back_main()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_back_main());
    }
    
    // optional int32 auto_random = 6;
    if (has_auto_random()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_random());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400019::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400019* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400019*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400019::MergeFrom(const Proto30400019& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recovert_blood()) {
      set_recovert_blood(from.recovert_blood());
    }
    if (from.has_total_blood()) {
      set_total_blood(from.total_blood());
    }
    if (from.has_recovert_magic()) {
      set_recovert_magic(from.recovert_magic());
    }
    if (from.has_total_magic()) {
      set_total_magic(from.total_magic());
    }
    if (from.has_auto_back_main()) {
      set_auto_back_main(from.auto_back_main());
    }
    if (from.has_auto_random()) {
      set_auto_random(from.auto_random());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400019::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400019::CopyFrom(const Proto30400019& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400019::IsInitialized() const {
  
  return true;
}

void Proto30400019::Swap(Proto30400019* other) {
  if (other != this) {
    std::swap(recovert_blood_, other->recovert_blood_);
    std::swap(total_blood_, other->total_blood_);
    std::swap(recovert_magic_, other->recovert_magic_);
    std::swap(total_magic_, other->total_magic_);
    std::swap(auto_back_main_, other->auto_back_main_);
    std::swap(auto_random_, other->auto_random_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400019::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400019_descriptor_;
  metadata.reflection = Proto30400019_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400445::kLeagueIdFieldNumber;
const int Proto30400445::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto30400445::Proto30400445()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400445::InitAsDefaultInstance() {
}

Proto30400445::Proto30400445(const Proto30400445& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400445::SharedCtor() {
  _cached_size_ = 0;
  league_id_ = GOOGLE_LONGLONG(0);
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400445::~Proto30400445() {
  SharedDtor();
}

void Proto30400445::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400445::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400445::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400445_descriptor_;
}

const Proto30400445& Proto30400445::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30400445* Proto30400445::default_instance_ = NULL;

Proto30400445* Proto30400445::New() const {
  return new Proto30400445;
}

void Proto30400445::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_id_ = GOOGLE_LONGLONG(0);
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400445::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 league_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_id_)));
          set_has_league_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400445::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 league_id = 1;
  if (has_league_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->league_id(), output);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400445::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 league_id = 1;
  if (has_league_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->league_id(), target);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400445::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 league_id = 1;
    if (has_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_id());
    }
    
    // optional int64 role_id = 2;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400445::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400445* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400445*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400445::MergeFrom(const Proto30400445& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_id()) {
      set_league_id(from.league_id());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400445::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400445::CopyFrom(const Proto30400445& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400445::IsInitialized() const {
  
  return true;
}

void Proto30400445::Swap(Proto30400445* other) {
  if (other != this) {
    std::swap(league_id_, other->league_id_);
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400445::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400445_descriptor_;
  metadata.reflection = Proto30400445_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400910::kLevelFieldNumber;
#endif  // !_MSC_VER

Proto30400910::Proto30400910()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400910::InitAsDefaultInstance() {
}

Proto30400910::Proto30400910(const Proto30400910& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400910::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400910::~Proto30400910() {
  SharedDtor();
}

void Proto30400910::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400910::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400910::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400910_descriptor_;
}

const Proto30400910& Proto30400910::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30400910* Proto30400910::default_instance_ = NULL;

Proto30400910* Proto30400910::New() const {
  return new Proto30400910;
}

void Proto30400910::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400910::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400910::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400910::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400910::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400910::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400910* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400910*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400910::MergeFrom(const Proto30400910& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400910::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400910::CopyFrom(const Proto30400910& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400910::IsInitialized() const {
  
  return true;
}

void Proto30400910::Swap(Proto30400910* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400910::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400910_descriptor_;
  metadata.reflection = Proto30400910_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400020::kIncLuckyFieldNumber;
const int Proto30400020::kKillingValueFieldNumber;
const int Proto30400020::kPkStateFieldNumber;
#endif  // !_MSC_VER

Proto30400020::Proto30400020()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400020::InitAsDefaultInstance() {
}

Proto30400020::Proto30400020(const Proto30400020& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400020::SharedCtor() {
  _cached_size_ = 0;
  inc_lucky_ = 0;
  killing_value_ = 0;
  pk_state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400020::~Proto30400020() {
  SharedDtor();
}

void Proto30400020::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400020::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400020::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400020_descriptor_;
}

const Proto30400020& Proto30400020::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30400020* Proto30400020::default_instance_ = NULL;

Proto30400020* Proto30400020::New() const {
  return new Proto30400020;
}

void Proto30400020::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    inc_lucky_ = 0;
    killing_value_ = 0;
    pk_state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400020::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 inc_lucky = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inc_lucky_)));
          set_has_inc_lucky();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_killing_value;
        break;
      }
      
      // optional int32 killing_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_killing_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &killing_value_)));
          set_has_killing_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pk_state;
        break;
      }
      
      // optional int32 pk_state = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pk_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pk_state_)));
          set_has_pk_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400020::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 inc_lucky = 1;
  if (has_inc_lucky()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->inc_lucky(), output);
  }
  
  // optional int32 killing_value = 2;
  if (has_killing_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->killing_value(), output);
  }
  
  // optional int32 pk_state = 3;
  if (has_pk_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pk_state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400020::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 inc_lucky = 1;
  if (has_inc_lucky()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->inc_lucky(), target);
  }
  
  // optional int32 killing_value = 2;
  if (has_killing_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->killing_value(), target);
  }
  
  // optional int32 pk_state = 3;
  if (has_pk_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pk_state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400020::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 inc_lucky = 1;
    if (has_inc_lucky()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->inc_lucky());
    }
    
    // optional int32 killing_value = 2;
    if (has_killing_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->killing_value());
    }
    
    // optional int32 pk_state = 3;
    if (has_pk_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pk_state());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400020::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400020* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400020*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400020::MergeFrom(const Proto30400020& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_inc_lucky()) {
      set_inc_lucky(from.inc_lucky());
    }
    if (from.has_killing_value()) {
      set_killing_value(from.killing_value());
    }
    if (from.has_pk_state()) {
      set_pk_state(from.pk_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400020::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400020::CopyFrom(const Proto30400020& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400020::IsInitialized() const {
  
  return true;
}

void Proto30400020::Swap(Proto30400020* other) {
  if (other != this) {
    std::swap(inc_lucky_, other->inc_lucky_);
    std::swap(killing_value_, other->killing_value_);
    std::swap(pk_state_, other->pk_state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400020::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400020_descriptor_;
  metadata.reflection = Proto30400020_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30101602::kSceneIdFieldNumber;
const int Proto30101602::kPixelXFieldNumber;
const int Proto30101602::kPixelYFieldNumber;
const int Proto30101602::kRoleIdFieldNumber;
const int Proto30101602::kEnemyIdFieldNumber;
#endif  // !_MSC_VER

Proto30101602::Proto30101602()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30101602::InitAsDefaultInstance() {
}

Proto30101602::Proto30101602(const Proto30101602& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30101602::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  enemy_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30101602::~Proto30101602() {
  SharedDtor();
}

void Proto30101602::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30101602::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30101602::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30101602_descriptor_;
}

const Proto30101602& Proto30101602::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30101602* Proto30101602::default_instance_ = NULL;

Proto30101602* Proto30101602::New() const {
  return new Proto30101602;
}

void Proto30101602::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
    role_id_ = GOOGLE_LONGLONG(0);
    enemy_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30101602::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_enemy_id;
        break;
      }
      
      // optional int64 enemy_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_enemy_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &enemy_id_)));
          set_has_enemy_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30101602::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_y(), output);
  }
  
  // optional int64 role_id = 4;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->role_id(), output);
  }
  
  // optional int64 enemy_id = 5;
  if (has_enemy_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->enemy_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30101602::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_y(), target);
  }
  
  // optional int64 role_id = 4;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->role_id(), target);
  }
  
  // optional int64 enemy_id = 5;
  if (has_enemy_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->enemy_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30101602::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 pixel_x = 2;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 3;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
    // optional int64 role_id = 4;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int64 enemy_id = 5;
    if (has_enemy_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->enemy_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30101602::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30101602* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30101602*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30101602::MergeFrom(const Proto30101602& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_enemy_id()) {
      set_enemy_id(from.enemy_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30101602::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30101602::CopyFrom(const Proto30101602& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30101602::IsInitialized() const {
  
  return true;
}

void Proto30101602::Swap(Proto30101602* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(role_id_, other->role_id_);
    std::swap(enemy_id_, other->enemy_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30101602::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30101602_descriptor_;
  metadata.reflection = Proto30101602_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30101603::kNearbyListFieldNumber;
const int Proto30101603::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto30101603::Proto30101603()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30101603::InitAsDefaultInstance() {
}

Proto30101603::Proto30101603(const Proto30101603& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30101603::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30101603::~Proto30101603() {
  SharedDtor();
}

void Proto30101603::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30101603::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30101603::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30101603_descriptor_;
}

const Proto30101603& Proto30101603::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30101603* Proto30101603::default_instance_ = NULL;

Proto30101603* Proto30101603::New() const {
  return new Proto30101603;
}

void Proto30101603::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  nearby_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30101603::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoFriendInfo nearby_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nearby_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nearby_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_nearby_list;
        if (input->ExpectTag(16)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30101603::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoFriendInfo nearby_list = 1;
  for (int i = 0; i < this->nearby_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nearby_list(i), output);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30101603::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoFriendInfo nearby_list = 1;
  for (int i = 0; i < this->nearby_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->nearby_list(i), target);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30101603::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int64 role_id = 2;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  // repeated .ProtoFriendInfo nearby_list = 1;
  total_size += 1 * this->nearby_list_size();
  for (int i = 0; i < this->nearby_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nearby_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30101603::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30101603* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30101603*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30101603::MergeFrom(const Proto30101603& from) {
  GOOGLE_CHECK_NE(&from, this);
  nearby_list_.MergeFrom(from.nearby_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30101603::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30101603::CopyFrom(const Proto30101603& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30101603::IsInitialized() const {
  
  return true;
}

void Proto30101603::Swap(Proto30101603* other) {
  if (other != this) {
    nearby_list_.Swap(&other->nearby_list_);
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30101603::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30101603_descriptor_;
  metadata.reflection = Proto30101603_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100604::kPlayerSetFieldNumber;
const int Proto30100604::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto30100604::Proto30100604()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100604::InitAsDefaultInstance() {
}

Proto30100604::Proto30100604(const Proto30100604& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100604::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100604::~Proto30100604() {
  SharedDtor();
}

void Proto30100604::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100604::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100604::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100604_descriptor_;
}

const Proto30100604& Proto30100604::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30100604* Proto30100604::default_instance_ = NULL;

Proto30100604* Proto30100604::New() const {
  return new Proto30100604;
}

void Proto30100604::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    type_ = 0;
  }
  player_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100604::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 player_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_player_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_player_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_player_set;
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100604::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 player_set = 1;
  for (int i = 0; i < this->player_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->player_set(i), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100604::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 player_set = 1;
  for (int i = 0; i < this->player_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->player_set(i), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100604::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  // repeated int64 player_set = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->player_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->player_set(i));
    }
    total_size += 1 * this->player_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100604::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100604* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100604*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100604::MergeFrom(const Proto30100604& from) {
  GOOGLE_CHECK_NE(&from, this);
  player_set_.MergeFrom(from.player_set_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100604::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100604::CopyFrom(const Proto30100604& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100604::IsInitialized() const {
  
  return true;
}

void Proto30100604::Swap(Proto30100604* other) {
  if (other != this) {
    player_set_.Swap(&other->player_set_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100604::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100604_descriptor_;
  metadata.reflection = Proto30100604_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30101604::kSubMoneyFieldNumber;
const int Proto30101604::kSceneIdFieldNumber;
const int Proto30101604::kPixelXFieldNumber;
const int Proto30101604::kPixelYFieldNumber;
#endif  // !_MSC_VER

Proto30101604::Proto30101604()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30101604::InitAsDefaultInstance() {
  sub_money_ = const_cast< ::ProtoMoney*>(&::ProtoMoney::default_instance());
}

Proto30101604::Proto30101604(const Proto30101604& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30101604::SharedCtor() {
  _cached_size_ = 0;
  sub_money_ = NULL;
  scene_id_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30101604::~Proto30101604() {
  SharedDtor();
}

void Proto30101604::SharedDtor() {
  if (this != default_instance_) {
    delete sub_money_;
  }
}

void Proto30101604::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30101604::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30101604_descriptor_;
}

const Proto30101604& Proto30101604::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30101604* Proto30101604::default_instance_ = NULL;

Proto30101604* Proto30101604::New() const {
  return new Proto30101604;
}

void Proto30101604::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_sub_money()) {
      if (sub_money_ != NULL) sub_money_->::ProtoMoney::Clear();
    }
    scene_id_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30101604::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoMoney sub_money = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sub_money()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30101604::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoMoney sub_money = 1;
  if (has_sub_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sub_money(), output);
  }
  
  // optional int32 scene_id = 2;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->scene_id(), output);
  }
  
  // optional int32 pixel_x = 3;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 4;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pixel_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30101604::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoMoney sub_money = 1;
  if (has_sub_money()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sub_money(), target);
  }
  
  // optional int32 scene_id = 2;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->scene_id(), target);
  }
  
  // optional int32 pixel_x = 3;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 4;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pixel_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30101604::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoMoney sub_money = 1;
    if (has_sub_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sub_money());
    }
    
    // optional int32 scene_id = 2;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 pixel_x = 3;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 4;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30101604::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30101604* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30101604*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30101604::MergeFrom(const Proto30101604& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sub_money()) {
      mutable_sub_money()->::ProtoMoney::MergeFrom(from.sub_money());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30101604::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30101604::CopyFrom(const Proto30101604& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30101604::IsInitialized() const {
  
  return true;
}

void Proto30101604::Swap(Proto30101604* other) {
  if (other != this) {
    std::swap(sub_money_, other->sub_money_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30101604::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30101604_descriptor_;
  metadata.reflection = Proto30101604_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400315::kJoinTickFieldNumber;
#endif  // !_MSC_VER

Proto31400315::Proto31400315()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400315::InitAsDefaultInstance() {
}

Proto31400315::Proto31400315(const Proto31400315& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400315::SharedCtor() {
  _cached_size_ = 0;
  join_tick_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400315::~Proto31400315() {
  SharedDtor();
}

void Proto31400315::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400315::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400315::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400315_descriptor_;
}

const Proto31400315& Proto31400315::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31400315* Proto31400315::default_instance_ = NULL;

Proto31400315* Proto31400315::New() const {
  return new Proto31400315;
}

void Proto31400315::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    join_tick_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400315::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 join_tick = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &join_tick_)));
          set_has_join_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400315::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 join_tick = 1;
  if (has_join_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->join_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400315::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 join_tick = 1;
  if (has_join_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->join_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400315::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 join_tick = 1;
    if (has_join_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->join_tick());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400315::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400315* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400315*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400315::MergeFrom(const Proto31400315& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_join_tick()) {
      set_join_tick(from.join_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400315::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400315::CopyFrom(const Proto31400315& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400315::IsInitialized() const {
  
  return true;
}

void Proto31400315::Swap(Proto31400315* other) {
  if (other != this) {
    std::swap(join_tick_, other->join_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400315::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400315_descriptor_;
  metadata.reflection = Proto31400315_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400316::kItemIdFieldNumber;
const int Proto31400316::kItemNumFieldNumber;
const int Proto31400316::kItemIndexFieldNumber;
const int Proto31400316::kPackageIndexFieldNumber;
#endif  // !_MSC_VER

Proto31400316::Proto31400316()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400316::InitAsDefaultInstance() {
}

Proto31400316::Proto31400316(const Proto31400316& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400316::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  item_num_ = 0;
  item_index_ = 0;
  package_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400316::~Proto31400316() {
  SharedDtor();
}

void Proto31400316::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400316::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400316::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400316_descriptor_;
}

const Proto31400316& Proto31400316::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31400316* Proto31400316::default_instance_ = NULL;

Proto31400316* Proto31400316::New() const {
  return new Proto31400316;
}

void Proto31400316::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    item_num_ = 0;
    item_index_ = 0;
    package_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400316::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_num;
        break;
      }
      
      // optional int32 item_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
          set_has_item_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_index;
        break;
      }
      
      // optional int32 item_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_index_)));
          set_has_item_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_package_index;
        break;
      }
      
      // optional int32 package_index = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_package_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &package_index_)));
          set_has_package_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400316::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 item_num = 2;
  if (has_item_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_num(), output);
  }
  
  // optional int32 item_index = 3;
  if (has_item_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_index(), output);
  }
  
  // optional int32 package_index = 4;
  if (has_package_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->package_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400316::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 item_num = 2;
  if (has_item_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_num(), target);
  }
  
  // optional int32 item_index = 3;
  if (has_item_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_index(), target);
  }
  
  // optional int32 package_index = 4;
  if (has_package_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->package_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400316::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_num = 2;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_num());
    }
    
    // optional int32 item_index = 3;
    if (has_item_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_index());
    }
    
    // optional int32 package_index = 4;
    if (has_package_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->package_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400316::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400316* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400316*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400316::MergeFrom(const Proto31400316& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_num()) {
      set_item_num(from.item_num());
    }
    if (from.has_item_index()) {
      set_item_index(from.item_index());
    }
    if (from.has_package_index()) {
      set_package_index(from.package_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400316::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400316::CopyFrom(const Proto31400316& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400316::IsInitialized() const {
  
  return true;
}

void Proto31400316::Swap(Proto31400316* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(item_num_, other->item_num_);
    std::swap(item_index_, other->item_index_);
    std::swap(package_index_, other->package_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400316::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400316_descriptor_;
  metadata.reflection = Proto31400316_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100237::kPackageIndexFieldNumber;
const int Proto30100237::kItemFieldNumber;
#endif  // !_MSC_VER

Proto30100237::Proto30100237()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100237::InitAsDefaultInstance() {
  item_ = const_cast< ::ProtoItem*>(&::ProtoItem::default_instance());
}

Proto30100237::Proto30100237(const Proto30100237& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100237::SharedCtor() {
  _cached_size_ = 0;
  package_index_ = 0;
  item_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100237::~Proto30100237() {
  SharedDtor();
}

void Proto30100237::SharedDtor() {
  if (this != default_instance_) {
    delete item_;
  }
}

void Proto30100237::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100237::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100237_descriptor_;
}

const Proto30100237& Proto30100237::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30100237* Proto30100237::default_instance_ = NULL;

Proto30100237* Proto30100237::New() const {
  return new Proto30100237;
}

void Proto30100237::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    package_index_ = 0;
    if (has_item()) {
      if (item_ != NULL) item_->::ProtoItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100237::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 package_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &package_index_)));
          set_has_package_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item;
        break;
      }
      
      // optional .ProtoItem item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100237::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 package_index = 1;
  if (has_package_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->package_index(), output);
  }
  
  // optional .ProtoItem item = 2;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100237::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 package_index = 1;
  if (has_package_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->package_index(), target);
  }
  
  // optional .ProtoItem item = 2;
  if (has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100237::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 package_index = 1;
    if (has_package_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->package_index());
    }
    
    // optional .ProtoItem item = 2;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100237::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100237* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100237*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100237::MergeFrom(const Proto30100237& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_package_index()) {
      set_package_index(from.package_index());
    }
    if (from.has_item()) {
      mutable_item()->::ProtoItem::MergeFrom(from.item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100237::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100237::CopyFrom(const Proto30100237& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100237::IsInitialized() const {
  
  return true;
}

void Proto30100237::Swap(Proto30100237* other) {
  if (other != this) {
    std::swap(package_index_, other->package_index_);
    std::swap(item_, other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100237::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100237_descriptor_;
  metadata.reflection = Proto30100237_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400317::kItemFieldNumber;
#endif  // !_MSC_VER

Proto31400317::Proto31400317()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400317::InitAsDefaultInstance() {
  item_ = const_cast< ::ProtoItem*>(&::ProtoItem::default_instance());
}

Proto31400317::Proto31400317(const Proto31400317& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400317::SharedCtor() {
  _cached_size_ = 0;
  item_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400317::~Proto31400317() {
  SharedDtor();
}

void Proto31400317::SharedDtor() {
  if (this != default_instance_) {
    delete item_;
  }
}

void Proto31400317::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400317::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400317_descriptor_;
}

const Proto31400317& Proto31400317::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31400317* Proto31400317::default_instance_ = NULL;

Proto31400317* Proto31400317::New() const {
  return new Proto31400317;
}

void Proto31400317::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_item()) {
      if (item_ != NULL) item_->::ProtoItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400317::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoItem item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400317::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoItem item = 1;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400317::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoItem item = 1;
  if (has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400317::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoItem item = 1;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400317::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400317* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400317*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400317::MergeFrom(const Proto31400317& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item()) {
      mutable_item()->::ProtoItem::MergeFrom(from.item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400317::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400317::CopyFrom(const Proto31400317& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400317::IsInitialized() const {
  
  return true;
}

void Proto31400317::Swap(Proto31400317* other) {
  if (other != this) {
    std::swap(item_, other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400317::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400317_descriptor_;
  metadata.reflection = Proto31400317_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100238::kStateFieldNumber;
const int Proto30100238::kLeagueIdFieldNumber;
#endif  // !_MSC_VER

Proto30100238::Proto30100238()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100238::InitAsDefaultInstance() {
}

Proto30100238::Proto30100238(const Proto30100238& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100238::SharedCtor() {
  _cached_size_ = 0;
  state_ = 0;
  league_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100238::~Proto30100238() {
  SharedDtor();
}

void Proto30100238::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100238::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100238::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100238_descriptor_;
}

const Proto30100238& Proto30100238::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30100238* Proto30100238::default_instance_ = NULL;

Proto30100238* Proto30100238::New() const {
  return new Proto30100238;
}

void Proto30100238::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    state_ = 0;
    league_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100238::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_league_id;
        break;
      }
      
      // optional int64 league_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_id_)));
          set_has_league_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100238::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->state(), output);
  }
  
  // optional int64 league_id = 2;
  if (has_league_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->league_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100238::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->state(), target);
  }
  
  // optional int64 league_id = 2;
  if (has_league_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->league_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100238::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 state = 1;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
    // optional int64 league_id = 2;
    if (has_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100238::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100238* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100238*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100238::MergeFrom(const Proto30100238& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_league_id()) {
      set_league_id(from.league_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100238::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100238::CopyFrom(const Proto30100238& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100238::IsInitialized() const {
  
  return true;
}

void Proto30100238::Swap(Proto30100238* other) {
  if (other != this) {
    std::swap(state_, other->state_);
    std::swap(league_id_, other->league_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100238::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100238_descriptor_;
  metadata.reflection = Proto30100238_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30401602::kAveLvlFieldNumber;
#endif  // !_MSC_VER

Proto30401602::Proto30401602()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30401602::InitAsDefaultInstance() {
}

Proto30401602::Proto30401602(const Proto30401602& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30401602::SharedCtor() {
  _cached_size_ = 0;
  ave_lvl_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30401602::~Proto30401602() {
  SharedDtor();
}

void Proto30401602::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30401602::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30401602::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30401602_descriptor_;
}

const Proto30401602& Proto30401602::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30401602* Proto30401602::default_instance_ = NULL;

Proto30401602* Proto30401602::New() const {
  return new Proto30401602;
}

void Proto30401602::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ave_lvl_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30401602::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ave_lvl = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ave_lvl_)));
          set_has_ave_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30401602::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ave_lvl = 1;
  if (has_ave_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ave_lvl(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30401602::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ave_lvl = 1;
  if (has_ave_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ave_lvl(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30401602::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ave_lvl = 1;
    if (has_ave_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ave_lvl());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30401602::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30401602* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30401602*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30401602::MergeFrom(const Proto30401602& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ave_lvl()) {
      set_ave_lvl(from.ave_lvl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30401602::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30401602::CopyFrom(const Proto30401602& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30401602::IsInitialized() const {
  
  return true;
}

void Proto30401602::Swap(Proto30401602* other) {
  if (other != this) {
    std::swap(ave_lvl_, other->ave_lvl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30401602::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30401602_descriptor_;
  metadata.reflection = Proto30401602_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto32101103::kRoleIdFieldNumber;
const int Proto32101103::kActListFieldNumber;
#endif  // !_MSC_VER

Proto32101103::Proto32101103()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto32101103::InitAsDefaultInstance() {
}

Proto32101103::Proto32101103(const Proto32101103& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto32101103::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto32101103::~Proto32101103() {
  SharedDtor();
}

void Proto32101103::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto32101103::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto32101103::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto32101103_descriptor_;
}

const Proto32101103& Proto32101103::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto32101103* Proto32101103::default_instance_ = NULL;

Proto32101103* Proto32101103::New() const {
  return new Proto32101103;
}

void Proto32101103::Clear() {
  role_id_.Clear();
  act_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto32101103::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_role_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_role_id;
        if (input->ExpectTag(18)) goto parse_act_list;
        break;
      }
      
      // repeated .PActTypeItem act_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_act_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_act_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto32101103::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 role_id = 1;
  for (int i = 0; i < this->role_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->role_id(i), output);
  }
  
  // repeated .PActTypeItem act_list = 2;
  for (int i = 0; i < this->act_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->act_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto32101103::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 role_id = 1;
  for (int i = 0; i < this->role_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->role_id(i), target);
  }
  
  // repeated .PActTypeItem act_list = 2;
  for (int i = 0; i < this->act_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->act_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto32101103::ByteSize() const {
  int total_size = 0;
  
  // repeated int64 role_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_id(i));
    }
    total_size += 1 * this->role_id_size() + data_size;
  }
  
  // repeated .PActTypeItem act_list = 2;
  total_size += 1 * this->act_list_size();
  for (int i = 0; i < this->act_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->act_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto32101103::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto32101103* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto32101103*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto32101103::MergeFrom(const Proto32101103& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_id_.MergeFrom(from.role_id_);
  act_list_.MergeFrom(from.act_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto32101103::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto32101103::CopyFrom(const Proto32101103& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto32101103::IsInitialized() const {
  
  return true;
}

void Proto32101103::Swap(Proto32101103* other) {
  if (other != this) {
    role_id_.Swap(&other->role_id_);
    act_list_.Swap(&other->act_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto32101103::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto32101103_descriptor_;
  metadata.reflection = Proto32101103_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400446::kPageIndexFieldNumber;
const int Proto30400446::kSrcSceneFieldNumber;
const int Proto30400446::kSelfLeagueIdFieldNumber;
const int Proto30400446::kReqTypeFieldNumber;
#endif  // !_MSC_VER

Proto30400446::Proto30400446()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400446::InitAsDefaultInstance() {
}

Proto30400446::Proto30400446(const Proto30400446& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400446::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  src_scene_ = 0;
  self_league_id_ = GOOGLE_LONGLONG(0);
  req_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400446::~Proto30400446() {
  SharedDtor();
}

void Proto30400446::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400446::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400446::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400446_descriptor_;
}

const Proto30400446& Proto30400446::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30400446* Proto30400446::default_instance_ = NULL;

Proto30400446* Proto30400446::New() const {
  return new Proto30400446;
}

void Proto30400446::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
    src_scene_ = 0;
    self_league_id_ = GOOGLE_LONGLONG(0);
    req_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400446::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_src_scene;
        break;
      }
      
      // optional int32 src_scene = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_src_scene:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &src_scene_)));
          set_has_src_scene();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_self_league_id;
        break;
      }
      
      // optional int64 self_league_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_self_league_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &self_league_id_)));
          set_has_self_league_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_req_type;
        break;
      }
      
      // optional int32 req_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_req_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &req_type_)));
          set_has_req_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400446::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  // optional int32 src_scene = 2;
  if (has_src_scene()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->src_scene(), output);
  }
  
  // optional int64 self_league_id = 3;
  if (has_self_league_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->self_league_id(), output);
  }
  
  // optional int32 req_type = 4;
  if (has_req_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->req_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400446::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  // optional int32 src_scene = 2;
  if (has_src_scene()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->src_scene(), target);
  }
  
  // optional int64 self_league_id = 3;
  if (has_self_league_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->self_league_id(), target);
  }
  
  // optional int32 req_type = 4;
  if (has_req_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->req_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400446::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
    // optional int32 src_scene = 2;
    if (has_src_scene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->src_scene());
    }
    
    // optional int64 self_league_id = 3;
    if (has_self_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->self_league_id());
    }
    
    // optional int32 req_type = 4;
    if (has_req_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->req_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400446::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400446* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400446*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400446::MergeFrom(const Proto30400446& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
    if (from.has_src_scene()) {
      set_src_scene(from.src_scene());
    }
    if (from.has_self_league_id()) {
      set_self_league_id(from.self_league_id());
    }
    if (from.has_req_type()) {
      set_req_type(from.req_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400446::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400446::CopyFrom(const Proto30400446& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400446::IsInitialized() const {
  
  return true;
}

void Proto30400446::Swap(Proto30400446* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(src_scene_, other->src_scene_);
    std::swap(self_league_id_, other->self_league_id_);
    std::swap(req_type_, other->req_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400446::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400446_descriptor_;
  metadata.reflection = Proto30400446_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100105::kKillNormalFieldNumber;
const int Proto30100105::kKillEvilFieldNumber;
#endif  // !_MSC_VER

Proto30100105::Proto30100105()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100105::InitAsDefaultInstance() {
}

Proto30100105::Proto30100105(const Proto30100105& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100105::SharedCtor() {
  _cached_size_ = 0;
  kill_normal_ = 0;
  kill_evil_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100105::~Proto30100105() {
  SharedDtor();
}

void Proto30100105::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100105::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100105::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100105_descriptor_;
}

const Proto30100105& Proto30100105::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30100105* Proto30100105::default_instance_ = NULL;

Proto30100105* Proto30100105::New() const {
  return new Proto30100105;
}

void Proto30100105::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    kill_normal_ = 0;
    kill_evil_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100105::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 kill_normal = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kill_normal_)));
          set_has_kill_normal();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_kill_evil;
        break;
      }
      
      // optional int32 kill_evil = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_kill_evil:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kill_evil_)));
          set_has_kill_evil();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100105::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 kill_normal = 1;
  if (has_kill_normal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->kill_normal(), output);
  }
  
  // optional int32 kill_evil = 2;
  if (has_kill_evil()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->kill_evil(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100105::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 kill_normal = 1;
  if (has_kill_normal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->kill_normal(), target);
  }
  
  // optional int32 kill_evil = 2;
  if (has_kill_evil()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->kill_evil(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100105::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 kill_normal = 1;
    if (has_kill_normal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->kill_normal());
    }
    
    // optional int32 kill_evil = 2;
    if (has_kill_evil()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->kill_evil());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100105::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100105* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100105*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100105::MergeFrom(const Proto30100105& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_kill_normal()) {
      set_kill_normal(from.kill_normal());
    }
    if (from.has_kill_evil()) {
      set_kill_evil(from.kill_evil());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100105::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100105::CopyFrom(const Proto30100105& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100105::IsInitialized() const {
  
  return true;
}

void Proto30100105::Swap(Proto30100105* other) {
  if (other != this) {
    std::swap(kill_normal_, other->kill_normal_);
    std::swap(kill_evil_, other->kill_evil_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100105::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100105_descriptor_;
  metadata.reflection = Proto30100105_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto32101104::kActRoleRewardFieldNumber;
const int Proto32101104::kActInfoFieldNumber;
#endif  // !_MSC_VER

Proto32101104::Proto32101104()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto32101104::InitAsDefaultInstance() {
  act_info_ = const_cast< ::PActTypeItem*>(&::PActTypeItem::default_instance());
}

Proto32101104::Proto32101104(const Proto32101104& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto32101104::SharedCtor() {
  _cached_size_ = 0;
  act_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto32101104::~Proto32101104() {
  SharedDtor();
}

void Proto32101104::SharedDtor() {
  if (this != default_instance_) {
    delete act_info_;
  }
}

void Proto32101104::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto32101104::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto32101104_descriptor_;
}

const Proto32101104& Proto32101104::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto32101104* Proto32101104::default_instance_ = NULL;

Proto32101104* Proto32101104::New() const {
  return new Proto32101104;
}

void Proto32101104::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_act_info()) {
      if (act_info_ != NULL) act_info_->::PActTypeItem::Clear();
    }
  }
  act_role_reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto32101104::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoActRoleReward act_role_reward = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_role_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_act_role_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_act_role_reward;
        if (input->ExpectTag(18)) goto parse_act_info;
        break;
      }
      
      // optional .PActTypeItem act_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_act_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto32101104::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoActRoleReward act_role_reward = 1;
  for (int i = 0; i < this->act_role_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->act_role_reward(i), output);
  }
  
  // optional .PActTypeItem act_info = 2;
  if (has_act_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->act_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto32101104::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoActRoleReward act_role_reward = 1;
  for (int i = 0; i < this->act_role_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->act_role_reward(i), target);
  }
  
  // optional .PActTypeItem act_info = 2;
  if (has_act_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->act_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto32101104::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .PActTypeItem act_info = 2;
    if (has_act_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->act_info());
    }
    
  }
  // repeated .ProtoActRoleReward act_role_reward = 1;
  total_size += 1 * this->act_role_reward_size();
  for (int i = 0; i < this->act_role_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->act_role_reward(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto32101104::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto32101104* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto32101104*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto32101104::MergeFrom(const Proto32101104& from) {
  GOOGLE_CHECK_NE(&from, this);
  act_role_reward_.MergeFrom(from.act_role_reward_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_act_info()) {
      mutable_act_info()->::PActTypeItem::MergeFrom(from.act_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto32101104::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto32101104::CopyFrom(const Proto32101104& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto32101104::IsInitialized() const {
  
  return true;
}

void Proto32101104::Swap(Proto32101104* other) {
  if (other != this) {
    act_role_reward_.Swap(&other->act_role_reward_);
    std::swap(act_info_, other->act_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto32101104::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto32101104_descriptor_;
  metadata.reflection = Proto32101104_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400028::kPlayListFieldNumber;
const int Proto31400028::kSerialObjFieldNumber;
#endif  // !_MSC_VER

Proto31400028::Proto31400028()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400028::InitAsDefaultInstance() {
  serial_obj_ = const_cast< ::ProtoSerialObj*>(&::ProtoSerialObj::default_instance());
}

Proto31400028::Proto31400028(const Proto31400028& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400028::SharedCtor() {
  _cached_size_ = 0;
  serial_obj_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400028::~Proto31400028() {
  SharedDtor();
}

void Proto31400028::SharedDtor() {
  if (this != default_instance_) {
    delete serial_obj_;
  }
}

void Proto31400028::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400028::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400028_descriptor_;
}

const Proto31400028& Proto31400028::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31400028* Proto31400028::default_instance_ = NULL;

Proto31400028* Proto31400028::New() const {
  return new Proto31400028;
}

void Proto31400028::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_serial_obj()) {
      if (serial_obj_ != NULL) serial_obj_->::ProtoSerialObj::Clear();
    }
  }
  play_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400028::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoPairLong play_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_play_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_play_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_play_list;
        if (input->ExpectTag(18)) goto parse_serial_obj;
        break;
      }
      
      // optional .ProtoSerialObj serial_obj = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_serial_obj:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serial_obj()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400028::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoPairLong play_list = 1;
  for (int i = 0; i < this->play_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->play_list(i), output);
  }
  
  // optional .ProtoSerialObj serial_obj = 2;
  if (has_serial_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->serial_obj(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400028::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoPairLong play_list = 1;
  for (int i = 0; i < this->play_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->play_list(i), target);
  }
  
  // optional .ProtoSerialObj serial_obj = 2;
  if (has_serial_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->serial_obj(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400028::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .ProtoSerialObj serial_obj = 2;
    if (has_serial_obj()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serial_obj());
    }
    
  }
  // repeated .ProtoPairLong play_list = 1;
  total_size += 1 * this->play_list_size();
  for (int i = 0; i < this->play_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->play_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400028::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400028* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400028*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400028::MergeFrom(const Proto31400028& from) {
  GOOGLE_CHECK_NE(&from, this);
  play_list_.MergeFrom(from.play_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_serial_obj()) {
      mutable_serial_obj()->::ProtoSerialObj::MergeFrom(from.serial_obj());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400028::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400028::CopyFrom(const Proto31400028& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400028::IsInitialized() const {
  
  return true;
}

void Proto31400028::Swap(Proto31400028* other) {
  if (other != this) {
    play_list_.Swap(&other->play_list_);
    std::swap(serial_obj_, other->serial_obj_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400028::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400028_descriptor_;
  metadata.reflection = Proto31400028_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto32101105::kRoleIdFieldNumber;
const int Proto32101105::kAccountFieldNumber;
#endif  // !_MSC_VER

Proto32101105::Proto32101105()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto32101105::InitAsDefaultInstance() {
}

Proto32101105::Proto32101105(const Proto32101105& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto32101105::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto32101105::~Proto32101105() {
  SharedDtor();
}

void Proto32101105::SharedDtor() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (this != default_instance_) {
  }
}

void Proto32101105::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto32101105::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto32101105_descriptor_;
}

const Proto32101105& Proto32101105::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto32101105* Proto32101105::default_instance_ = NULL;

Proto32101105* Proto32101105::New() const {
  return new Proto32101105;
}

void Proto32101105::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_account()) {
      if (account_ != &::google::protobuf::internal::kEmptyString) {
        account_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto32101105::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_account;
        break;
      }
      
      // optional string account = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto32101105::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional string account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->account(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto32101105::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional string account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto32101105::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional string account = 2;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto32101105::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto32101105* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto32101105*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto32101105::MergeFrom(const Proto32101105& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_account()) {
      set_account(from.account());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto32101105::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto32101105::CopyFrom(const Proto32101105& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto32101105::IsInitialized() const {
  
  return true;
}

void Proto32101105::Swap(Proto32101105* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(account_, other->account_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto32101105::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto32101105_descriptor_;
  metadata.reflection = Proto32101105_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100404::kAddNumFieldNumber;
const int Proto30100404::kPersonalCountFieldNumber;
const int Proto30100404::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto30100404::Proto30100404()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100404::InitAsDefaultInstance() {
}

Proto30100404::Proto30100404(const Proto30100404& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100404::SharedCtor() {
  _cached_size_ = 0;
  add_num_ = 0;
  personal_count_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100404::~Proto30100404() {
  SharedDtor();
}

void Proto30100404::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100404::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100404::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100404_descriptor_;
}

const Proto30100404& Proto30100404::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30100404* Proto30100404::default_instance_ = NULL;

Proto30100404* Proto30100404::New() const {
  return new Proto30100404;
}

void Proto30100404::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    add_num_ = 0;
    personal_count_ = 0;
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100404::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 add_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_num_)));
          set_has_add_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_personal_count;
        break;
      }
      
      // optional int32 personal_count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_personal_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &personal_count_)));
          set_has_personal_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100404::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 add_num = 1;
  if (has_add_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->add_num(), output);
  }
  
  // optional int32 personal_count = 2;
  if (has_personal_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->personal_count(), output);
  }
  
  // optional int64 role_id = 3;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100404::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 add_num = 1;
  if (has_add_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->add_num(), target);
  }
  
  // optional int32 personal_count = 2;
  if (has_personal_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->personal_count(), target);
  }
  
  // optional int64 role_id = 3;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100404::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 add_num = 1;
    if (has_add_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_num());
    }
    
    // optional int32 personal_count = 2;
    if (has_personal_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->personal_count());
    }
    
    // optional int64 role_id = 3;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100404::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100404* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100404*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100404::MergeFrom(const Proto30100404& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_add_num()) {
      set_add_num(from.add_num());
    }
    if (from.has_personal_count()) {
      set_personal_count(from.personal_count());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100404::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100404::CopyFrom(const Proto30100404& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100404::IsInitialized() const {
  
  return true;
}

void Proto30100404::Swap(Proto30100404* other) {
  if (other != this) {
    std::swap(add_num_, other->add_num_);
    std::swap(personal_count_, other->personal_count_);
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100404::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100404_descriptor_;
  metadata.reflection = Proto30100404_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400701::kServiceCountFieldNumber;
#endif  // !_MSC_VER

Proto31400701::Proto31400701()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400701::InitAsDefaultInstance() {
}

Proto31400701::Proto31400701(const Proto31400701& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400701::SharedCtor() {
  _cached_size_ = 0;
  service_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400701::~Proto31400701() {
  SharedDtor();
}

void Proto31400701::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400701::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400701::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400701_descriptor_;
}

const Proto31400701& Proto31400701::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31400701* Proto31400701::default_instance_ = NULL;

Proto31400701* Proto31400701::New() const {
  return new Proto31400701;
}

void Proto31400701::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    service_count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400701::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 service_count = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &service_count_)));
          set_has_service_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400701::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 service_count = 1;
  if (has_service_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->service_count(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400701::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 service_count = 1;
  if (has_service_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->service_count(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400701::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 service_count = 1;
    if (has_service_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->service_count());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400701::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400701* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400701*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400701::MergeFrom(const Proto31400701& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_service_count()) {
      set_service_count(from.service_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400701::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400701::CopyFrom(const Proto31400701& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400701::IsInitialized() const {
  
  return true;
}

void Proto31400701::Swap(Proto31400701* other) {
  if (other != this) {
    std::swap(service_count_, other->service_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400701::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400701_descriptor_;
  metadata.reflection = Proto31400701_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto32101106::kActInfoFieldNumber;
#endif  // !_MSC_VER

Proto32101106::Proto32101106()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto32101106::InitAsDefaultInstance() {
  act_info_ = const_cast< ::PActTypeItem*>(&::PActTypeItem::default_instance());
}

Proto32101106::Proto32101106(const Proto32101106& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto32101106::SharedCtor() {
  _cached_size_ = 0;
  act_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto32101106::~Proto32101106() {
  SharedDtor();
}

void Proto32101106::SharedDtor() {
  if (this != default_instance_) {
    delete act_info_;
  }
}

void Proto32101106::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto32101106::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto32101106_descriptor_;
}

const Proto32101106& Proto32101106::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto32101106* Proto32101106::default_instance_ = NULL;

Proto32101106* Proto32101106::New() const {
  return new Proto32101106;
}

void Proto32101106::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_act_info()) {
      if (act_info_ != NULL) act_info_->::PActTypeItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto32101106::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PActTypeItem act_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_act_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto32101106::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .PActTypeItem act_info = 1;
  if (has_act_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->act_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto32101106::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .PActTypeItem act_info = 1;
  if (has_act_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->act_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto32101106::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PActTypeItem act_info = 1;
    if (has_act_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->act_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto32101106::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto32101106* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto32101106*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto32101106::MergeFrom(const Proto32101106& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_act_info()) {
      mutable_act_info()->::PActTypeItem::MergeFrom(from.act_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto32101106::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto32101106::CopyFrom(const Proto32101106& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto32101106::IsInitialized() const {
  
  return true;
}

void Proto32101106::Swap(Proto32101106* other) {
  if (other != this) {
    std::swap(act_info_, other->act_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto32101106::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto32101106_descriptor_;
  metadata.reflection = Proto32101106_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400318::kResultFieldNumber;
const int Proto31400318::kItemFieldNumber;
const int Proto31400318::kErrorCodeFieldNumber;
const int Proto31400318::kPackIndexFieldNumber;
#endif  // !_MSC_VER

Proto31400318::Proto31400318()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400318::InitAsDefaultInstance() {
  item_ = const_cast< ::ProtoItem*>(&::ProtoItem::default_instance());
}

Proto31400318::Proto31400318(const Proto31400318& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400318::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  item_ = NULL;
  error_code_ = 0;
  pack_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400318::~Proto31400318() {
  SharedDtor();
}

void Proto31400318::SharedDtor() {
  if (this != default_instance_) {
    delete item_;
  }
}

void Proto31400318::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400318::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400318_descriptor_;
}

const Proto31400318& Proto31400318::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31400318* Proto31400318::default_instance_ = NULL;

Proto31400318* Proto31400318::New() const {
  return new Proto31400318;
}

void Proto31400318::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    if (has_item()) {
      if (item_ != NULL) item_->::ProtoItem::Clear();
    }
    error_code_ = 0;
    pack_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400318::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item;
        break;
      }
      
      // optional .ProtoItem item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_error_code;
        break;
      }
      
      // optional int32 error_code = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_error_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pack_index;
        break;
      }
      
      // optional int32 pack_index = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pack_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pack_index_)));
          set_has_pack_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400318::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // optional .ProtoItem item = 2;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item(), output);
  }
  
  // optional int32 error_code = 3;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->error_code(), output);
  }
  
  // optional int32 pack_index = 4;
  if (has_pack_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pack_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400318::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // optional .ProtoItem item = 2;
  if (has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item(), target);
  }
  
  // optional int32 error_code = 3;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->error_code(), target);
  }
  
  // optional int32 pack_index = 4;
  if (has_pack_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pack_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400318::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
    // optional .ProtoItem item = 2;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item());
    }
    
    // optional int32 error_code = 3;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->error_code());
    }
    
    // optional int32 pack_index = 4;
    if (has_pack_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pack_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400318::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400318* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400318*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400318::MergeFrom(const Proto31400318& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_item()) {
      mutable_item()->::ProtoItem::MergeFrom(from.item());
    }
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
    if (from.has_pack_index()) {
      set_pack_index(from.pack_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400318::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400318::CopyFrom(const Proto31400318& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400318::IsInitialized() const {
  
  return true;
}

void Proto31400318::Swap(Proto31400318* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(item_, other->item_);
    std::swap(error_code_, other->error_code_);
    std::swap(pack_index_, other->pack_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400318::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400318_descriptor_;
  metadata.reflection = Proto31400318_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400263::kRoleIdFieldNumber;
const int Proto31400263::kAccountFieldNumber;
#endif  // !_MSC_VER

Proto31400263::Proto31400263()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400263::InitAsDefaultInstance() {
}

Proto31400263::Proto31400263(const Proto31400263& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400263::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400263::~Proto31400263() {
  SharedDtor();
}

void Proto31400263::SharedDtor() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (this != default_instance_) {
  }
}

void Proto31400263::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400263::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400263_descriptor_;
}

const Proto31400263& Proto31400263::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31400263* Proto31400263::default_instance_ = NULL;

Proto31400263* Proto31400263::New() const {
  return new Proto31400263;
}

void Proto31400263::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_account()) {
      if (account_ != &::google::protobuf::internal::kEmptyString) {
        account_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400263::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_account;
        break;
      }
      
      // optional string account = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400263::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional string account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->account(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400263::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional string account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400263::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional string account = 2;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400263::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400263* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400263*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400263::MergeFrom(const Proto31400263& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_account()) {
      set_account(from.account());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400263::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400263::CopyFrom(const Proto31400263& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400263::IsInitialized() const {
  
  return true;
}

void Proto31400263::Swap(Proto31400263* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(account_, other->account_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400263::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400263_descriptor_;
  metadata.reflection = Proto31400263_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100605::kRoleIdFieldNumber;
const int Proto30100605::kMoneyFieldNumber;
#endif  // !_MSC_VER

Proto30100605::Proto30100605()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100605::InitAsDefaultInstance() {
}

Proto30100605::Proto30100605(const Proto30100605& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100605::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  money_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100605::~Proto30100605() {
  SharedDtor();
}

void Proto30100605::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100605::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100605::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100605_descriptor_;
}

const Proto30100605& Proto30100605::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30100605* Proto30100605::default_instance_ = NULL;

Proto30100605* Proto30100605::New() const {
  return new Proto30100605;
}

void Proto30100605::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    money_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100605::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_money;
        break;
      }
      
      // optional int32 money = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100605::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 money = 2;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->money(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100605::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 money = 2;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->money(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100605::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100605::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100605* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100605*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100605::MergeFrom(const Proto30100605& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100605::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100605::CopyFrom(const Proto30100605& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100605::IsInitialized() const {
  
  return true;
}

void Proto30100605::Swap(Proto30100605* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(money_, other->money_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100605::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100605_descriptor_;
  metadata.reflection = Proto30100605_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400030::kRoleIdFieldNumber;
const int Proto31400030::kActIndexFieldNumber;
#endif  // !_MSC_VER

Proto31400030::Proto31400030()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400030::InitAsDefaultInstance() {
}

Proto31400030::Proto31400030(const Proto31400030& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400030::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400030::~Proto31400030() {
  SharedDtor();
}

void Proto31400030::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400030::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400030::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400030_descriptor_;
}

const Proto31400030& Proto31400030::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31400030* Proto31400030::default_instance_ = NULL;

Proto31400030* Proto31400030::New() const {
  return new Proto31400030;
}

void Proto31400030::Clear() {
  role_id_.Clear();
  act_index_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400030::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_role_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_role_id;
        if (input->ExpectTag(16)) goto parse_act_index;
        break;
      }
      
      // repeated int32 act_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_act_index())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_act_index())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_act_index;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400030::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 role_id = 1;
  for (int i = 0; i < this->role_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->role_id(i), output);
  }
  
  // repeated int32 act_index = 2;
  for (int i = 0; i < this->act_index_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->act_index(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400030::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 role_id = 1;
  for (int i = 0; i < this->role_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->role_id(i), target);
  }
  
  // repeated int32 act_index = 2;
  for (int i = 0; i < this->act_index_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->act_index(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400030::ByteSize() const {
  int total_size = 0;
  
  // repeated int64 role_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_id(i));
    }
    total_size += 1 * this->role_id_size() + data_size;
  }
  
  // repeated int32 act_index = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->act_index_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->act_index(i));
    }
    total_size += 1 * this->act_index_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400030::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400030* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400030*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400030::MergeFrom(const Proto31400030& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_id_.MergeFrom(from.role_id_);
  act_index_.MergeFrom(from.act_index_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400030::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400030::CopyFrom(const Proto31400030& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400030::IsInitialized() const {
  
  return true;
}

void Proto31400030::Swap(Proto31400030* other) {
  if (other != this) {
    role_id_.Swap(&other->role_id_);
    act_index_.Swap(&other->act_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400030::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400030_descriptor_;
  metadata.reflection = Proto31400030_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400031::kActIndexFieldNumber;
#endif  // !_MSC_VER

Proto31400031::Proto31400031()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400031::InitAsDefaultInstance() {
}

Proto31400031::Proto31400031(const Proto31400031& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400031::SharedCtor() {
  _cached_size_ = 0;
  act_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400031::~Proto31400031() {
  SharedDtor();
}

void Proto31400031::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400031::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400031::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400031_descriptor_;
}

const Proto31400031& Proto31400031::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31400031* Proto31400031::default_instance_ = NULL;

Proto31400031* Proto31400031::New() const {
  return new Proto31400031;
}

void Proto31400031::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    act_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400031::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 act_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_index_)));
          set_has_act_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400031::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 act_index = 1;
  if (has_act_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->act_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400031::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 act_index = 1;
  if (has_act_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->act_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400031::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 act_index = 1;
    if (has_act_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400031::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400031* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400031*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400031::MergeFrom(const Proto31400031& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_act_index()) {
      set_act_index(from.act_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400031::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400031::CopyFrom(const Proto31400031& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400031::IsInitialized() const {
  
  return true;
}

void Proto31400031::Swap(Proto31400031* other) {
  if (other != this) {
    std::swap(act_index_, other->act_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400031::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400031_descriptor_;
  metadata.reflection = Proto31400031_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400032::kActRoleRewardFieldNumber;
#endif  // !_MSC_VER

Proto31400032::Proto31400032()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400032::InitAsDefaultInstance() {
}

Proto31400032::Proto31400032(const Proto31400032& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400032::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400032::~Proto31400032() {
  SharedDtor();
}

void Proto31400032::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400032::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400032::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400032_descriptor_;
}

const Proto31400032& Proto31400032::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31400032* Proto31400032::default_instance_ = NULL;

Proto31400032* Proto31400032::New() const {
  return new Proto31400032;
}

void Proto31400032::Clear() {
  act_role_reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400032::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoActRoleReward act_role_reward = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_role_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_act_role_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_act_role_reward;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400032::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoActRoleReward act_role_reward = 1;
  for (int i = 0; i < this->act_role_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->act_role_reward(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400032::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoActRoleReward act_role_reward = 1;
  for (int i = 0; i < this->act_role_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->act_role_reward(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400032::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoActRoleReward act_role_reward = 1;
  total_size += 1 * this->act_role_reward_size();
  for (int i = 0; i < this->act_role_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->act_role_reward(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400032::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400032* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400032*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400032::MergeFrom(const Proto31400032& from) {
  GOOGLE_CHECK_NE(&from, this);
  act_role_reward_.MergeFrom(from.act_role_reward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400032::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400032::CopyFrom(const Proto31400032& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400032::IsInitialized() const {
  
  return true;
}

void Proto31400032::Swap(Proto31400032* other) {
  if (other != this) {
    act_role_reward_.Swap(&other->act_role_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400032::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400032_descriptor_;
  metadata.reflection = Proto31400032_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400036::kRankListFieldNumber;
const int Proto31400036::kRankTypeFieldNumber;
#endif  // !_MSC_VER

Proto31400036::Proto31400036()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400036::InitAsDefaultInstance() {
}

Proto31400036::Proto31400036(const Proto31400036& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400036::SharedCtor() {
  _cached_size_ = 0;
  rank_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400036::~Proto31400036() {
  SharedDtor();
}

void Proto31400036::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400036::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400036::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400036_descriptor_;
}

const Proto31400036& Proto31400036::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31400036* Proto31400036::default_instance_ = NULL;

Proto31400036* Proto31400036::New() const {
  return new Proto31400036;
}

void Proto31400036::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    rank_type_ = 0;
  }
  rank_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400036::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoRankRecord rank_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rank_list;
        if (input->ExpectTag(16)) goto parse_rank_type;
        break;
      }
      
      // optional int32 rank_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_type_)));
          set_has_rank_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400036::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoRankRecord rank_list = 1;
  for (int i = 0; i < this->rank_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rank_list(i), output);
  }
  
  // optional int32 rank_type = 2;
  if (has_rank_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rank_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400036::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoRankRecord rank_list = 1;
  for (int i = 0; i < this->rank_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rank_list(i), target);
  }
  
  // optional int32 rank_type = 2;
  if (has_rank_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rank_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400036::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 rank_type = 2;
    if (has_rank_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_type());
    }
    
  }
  // repeated .ProtoRankRecord rank_list = 1;
  total_size += 1 * this->rank_list_size();
  for (int i = 0; i < this->rank_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400036::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400036* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400036*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400036::MergeFrom(const Proto31400036& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_list_.MergeFrom(from.rank_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_rank_type()) {
      set_rank_type(from.rank_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400036::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400036::CopyFrom(const Proto31400036& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400036::IsInitialized() const {
  
  return true;
}

void Proto31400036::Swap(Proto31400036* other) {
  if (other != this) {
    rank_list_.Swap(&other->rank_list_);
    std::swap(rank_type_, other->rank_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400036::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400036_descriptor_;
  metadata.reflection = Proto31400036_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400037::kRankListFieldNumber;
const int Proto31400037::kRankTypeFieldNumber;
#endif  // !_MSC_VER

Proto31400037::Proto31400037()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400037::InitAsDefaultInstance() {
}

Proto31400037::Proto31400037(const Proto31400037& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400037::SharedCtor() {
  _cached_size_ = 0;
  rank_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400037::~Proto31400037() {
  SharedDtor();
}

void Proto31400037::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400037::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400037::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400037_descriptor_;
}

const Proto31400037& Proto31400037::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto31400037* Proto31400037::default_instance_ = NULL;

Proto31400037* Proto31400037::New() const {
  return new Proto31400037;
}

void Proto31400037::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    rank_type_ = 0;
  }
  rank_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400037::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoLeagueItem rank_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rank_list;
        if (input->ExpectTag(16)) goto parse_rank_type;
        break;
      }
      
      // optional int32 rank_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_type_)));
          set_has_rank_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400037::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoLeagueItem rank_list = 1;
  for (int i = 0; i < this->rank_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rank_list(i), output);
  }
  
  // optional int32 rank_type = 2;
  if (has_rank_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rank_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400037::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoLeagueItem rank_list = 1;
  for (int i = 0; i < this->rank_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rank_list(i), target);
  }
  
  // optional int32 rank_type = 2;
  if (has_rank_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rank_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400037::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 rank_type = 2;
    if (has_rank_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_type());
    }
    
  }
  // repeated .ProtoLeagueItem rank_list = 1;
  total_size += 1 * this->rank_list_size();
  for (int i = 0; i < this->rank_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400037::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400037* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400037*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400037::MergeFrom(const Proto31400037& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_list_.MergeFrom(from.rank_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_rank_type()) {
      set_rank_type(from.rank_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400037::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400037::CopyFrom(const Proto31400037& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400037::IsInitialized() const {
  
  return true;
}

void Proto31400037::Swap(Proto31400037* other) {
  if (other != this) {
    rank_list_.Swap(&other->rank_list_);
    std::swap(rank_type_, other->rank_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400037::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400037_descriptor_;
  metadata.reflection = Proto31400037_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400037::kRankTypeFieldNumber;
const int Proto30400037::kSizeFieldNumber;
#endif  // !_MSC_VER

Proto30400037::Proto30400037()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400037::InitAsDefaultInstance() {
}

Proto30400037::Proto30400037(const Proto30400037& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400037::SharedCtor() {
  _cached_size_ = 0;
  rank_type_ = 0;
  size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400037::~Proto30400037() {
  SharedDtor();
}

void Proto30400037::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400037::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400037::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400037_descriptor_;
}

const Proto30400037& Proto30400037::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner006_2eproto();  return *default_instance_;
}

Proto30400037* Proto30400037::default_instance_ = NULL;

Proto30400037* Proto30400037::New() const {
  return new Proto30400037;
}

void Proto30400037::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rank_type_ = 0;
    size_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400037::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rank_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_type_)));
          set_has_rank_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_size;
        break;
      }
      
      // optional int32 size = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
          set_has_size();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400037::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 rank_type = 1;
  if (has_rank_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank_type(), output);
  }
  
  // optional int32 size = 2;
  if (has_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400037::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 rank_type = 1;
  if (has_rank_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank_type(), target);
  }
  
  // optional int32 size = 2;
  if (has_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400037::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 rank_type = 1;
    if (has_rank_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_type());
    }
    
    // optional int32 size = 2;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->size());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400037::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400037* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400037*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400037::MergeFrom(const Proto30400037& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rank_type()) {
      set_rank_type(from.rank_type());
    }
    if (from.has_size()) {
      set_size(from.size());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400037::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400037::CopyFrom(const Proto30400037& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400037::IsInitialized() const {
  
  return true;
}

void Proto30400037::Swap(Proto30400037* other) {
  if (other != this) {
    std::swap(rank_type_, other->rank_type_);
    std::swap(size_, other->size_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400037::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400037_descriptor_;
  metadata.reflection = Proto30400037_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
