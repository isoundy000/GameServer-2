// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient012.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto51400617_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400617_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400618_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400618_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400618_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400618_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400619_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400619_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400619_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400619_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400620_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400620_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400620_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400620_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400516_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400516_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400621_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400621_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400621_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400621_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400345_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400345_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400345_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400345_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400346_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400346_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400346_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400346_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400347_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400347_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101402_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101402_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101403_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101403_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101405_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101405_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101406_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101406_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101408_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101408_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101401_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101401_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101402_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101402_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101406_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101406_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101407_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101407_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80101401_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80101401_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80101403_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80101403_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80101404_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80101404_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80101405_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80101405_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400226_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400226_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400227_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400227_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400228_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400228_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100101_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100101_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400918_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400918_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10600105_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10600105_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50600105_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50600105_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400108_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400108_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400378_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400378_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400118_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400118_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400919_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400919_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400229_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400229_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400920_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400920_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400921_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400921_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400922_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400922_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400902_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400902_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400230_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400230_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100157_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100157_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400404_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400404_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400405_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400405_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400406_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400406_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400231_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400231_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient012_2eproto() {
  protobuf_AddDesc_ProtoClient012_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient012.proto");
  GOOGLE_CHECK(file != NULL);
  Proto51400617_descriptor_ = file->message_type(0);
  static const int Proto51400617_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400617, equip_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400617, result_),
  };
  Proto51400617_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400617_descriptor_,
      Proto51400617::default_instance_,
      Proto51400617_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400617, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400617, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400617));
  Proto11400618_descriptor_ = file->message_type(1);
  static const int Proto11400618_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400618, color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400618, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400618, item_list_),
  };
  Proto11400618_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400618_descriptor_,
      Proto11400618::default_instance_,
      Proto11400618_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400618, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400618, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400618));
  Proto51400618_descriptor_ = file->message_type(2);
  static const int Proto51400618_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400618, color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400618, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400618, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400618, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400618, is_exist_extras_attr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400618, extras_attr_),
  };
  Proto51400618_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400618_descriptor_,
      Proto51400618::default_instance_,
      Proto51400618_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400618, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400618, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400618));
  Proto11400619_descriptor_ = file->message_type(3);
  static const int Proto11400619_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400619, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400619, item_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400619, item_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400619, is_special_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400619, is_batch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400619, is_auto_buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400619, lock_list_),
  };
  Proto11400619_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400619_descriptor_,
      Proto11400619::default_instance_,
      Proto11400619_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400619, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400619, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400619));
  Proto51400619_descriptor_ = file->message_type(4);
  static const int Proto51400619_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400619, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400619, is_special_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400619, luck_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400619, equip_polish_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400619, cost_jewel_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400619, cost_lock_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400619, cost_money_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400619, cost_money_amount_),
  };
  Proto51400619_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400619_descriptor_,
      Proto51400619::default_instance_,
      Proto51400619_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400619, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400619, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400619));
  Proto11400620_descriptor_ = file->message_type(5);
  static const int Proto11400620_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400620, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400620, item_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400620, item_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400620, is_batch_),
  };
  Proto11400620_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400620_descriptor_,
      Proto11400620::default_instance_,
      Proto11400620_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400620, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400620, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400620));
  Proto51400620_descriptor_ = file->message_type(6);
  static const int Proto51400620_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400620, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400620, is_batch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400620, attr_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400620, luck_value_),
  };
  Proto51400620_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400620_descriptor_,
      Proto51400620::default_instance_,
      Proto51400620_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400620, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400620, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400620));
  Proto11400516_descriptor_ = file->message_type(7);
  static const int Proto11400516_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400516, beast_id_),
  };
  Proto11400516_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400516_descriptor_,
      Proto11400516::default_instance_,
      Proto11400516_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400516, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400516, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400516));
  Proto11400621_descriptor_ = file->message_type(8);
  static const int Proto11400621_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400621, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400621, item_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400621, item_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400621, is_select_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400621, select_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400621, lock_list_),
  };
  Proto11400621_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400621_descriptor_,
      Proto11400621::default_instance_,
      Proto11400621_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400621, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400621, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400621));
  Proto51400621_descriptor_ = file->message_type(9);
  static const int Proto51400621_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400621, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400621, is_select_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400621, select_result_),
  };
  Proto51400621_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400621_descriptor_,
      Proto51400621::default_instance_,
      Proto51400621_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400621, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400621, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400621));
  Proto11400345_descriptor_ = file->message_type(10);
  static const int Proto11400345_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400345, task_id_),
  };
  Proto11400345_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400345_descriptor_,
      Proto11400345::default_instance_,
      Proto11400345_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400345, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400345, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400345));
  Proto51400345_descriptor_ = file->message_type(11);
  static const int Proto51400345_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400345, task_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400345, star_level_),
  };
  Proto51400345_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400345_descriptor_,
      Proto51400345::default_instance_,
      Proto51400345_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400345, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400345, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400345));
  Proto11400346_descriptor_ = file->message_type(12);
  static const int Proto11400346_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400346, type_),
  };
  Proto11400346_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400346_descriptor_,
      Proto11400346::default_instance_,
      Proto11400346_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400346, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400346, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400346));
  Proto51400346_descriptor_ = file->message_type(13);
  static const int Proto51400346_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400346, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400346, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400346, return_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400346, scale_),
  };
  Proto51400346_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400346_descriptor_,
      Proto51400346::default_instance_,
      Proto51400346_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400346, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400346, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400346));
  Proto51400347_descriptor_ = file->message_type(14);
  static const int Proto51400347_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400347, left_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400347, total_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400347, task_list_),
  };
  Proto51400347_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400347_descriptor_,
      Proto51400347::default_instance_,
      Proto51400347_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400347, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400347, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400347));
  Proto10101402_descriptor_ = file->message_type(15);
  static const int Proto10101402_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101402, type_),
  };
  Proto10101402_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101402_descriptor_,
      Proto10101402::default_instance_,
      Proto10101402_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101402, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101402, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101402));
  Proto10101403_descriptor_ = file->message_type(16);
  static const int Proto10101403_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101403, type_),
  };
  Proto10101403_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101403_descriptor_,
      Proto10101403::default_instance_,
      Proto10101403_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101403, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101403, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101403));
  Proto10101405_descriptor_ = file->message_type(17);
  static const int Proto10101405_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101405, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101405, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101405, item_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101405, other_info_),
  };
  Proto10101405_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101405_descriptor_,
      Proto10101405::default_instance_,
      Proto10101405_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101405, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101405, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101405));
  Proto10101406_descriptor_ = file->message_type(18);
  static const int Proto10101406_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101406, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101406, receiver_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101406, item_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101406, auto_buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101406, other_info_),
  };
  Proto10101406_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101406_descriptor_,
      Proto10101406::default_instance_,
      Proto10101406_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101406, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101406, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101406));
  Proto10101408_descriptor_ = file->message_type(19);
  static const int Proto10101408_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101408, reply_),
  };
  Proto10101408_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101408_descriptor_,
      Proto10101408::default_instance_,
      Proto10101408_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101408, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101408, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101408));
  Proto50101401_descriptor_ = file->message_type(20);
  static const int Proto50101401_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101401, partner_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101401, partnet_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101401, partner_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101401, wed_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101401, sex_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101401, level_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101401, online_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101401, intimacy_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101401, ring_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101401, team_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101401, side_ring_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101401, self_ring_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101401, other_info_),
  };
  Proto50101401_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101401_descriptor_,
      Proto50101401::default_instance_,
      Proto50101401_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101401, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101401, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101401));
  Proto50101402_descriptor_ = file->message_type(21);
  static const int Proto50101402_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101402, leader_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101402, leader_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101402, teamer_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101402, teamer_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101402, other_info_),
  };
  Proto50101402_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101402_descriptor_,
      Proto50101402::default_instance_,
      Proto50101402_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101402, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101402, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101402));
  Proto50101406_descriptor_ = file->message_type(22);
  static const int Proto50101406_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101406, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101406, sender_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101406, sender_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101406, receiver_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101406, receiver_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101406, other_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101406, item_num_),
  };
  Proto50101406_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101406_descriptor_,
      Proto50101406::default_instance_,
      Proto50101406_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101406, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101406, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101406));
  Proto50101407_descriptor_ = file->message_type(23);
  static const int Proto50101407_offsets_[19] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, wedding_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, partner_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, partner_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, partner_sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, intimacy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, keepsake_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, keepsake_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, keepsake_sublevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, keepsake_progress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, left_day_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, label_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, left_script_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, partner_career_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, sweet_degree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, ring_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, sys_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, tree_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, self_treasure_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, side_treasure_),
  };
  Proto50101407_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101407_descriptor_,
      Proto50101407::default_instance_,
      Proto50101407_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101407, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101407));
  Proto80101401_descriptor_ = file->message_type(24);
  static const int Proto80101401_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101401, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101401, cartoon_left_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101401, partner_id_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101401, partner_name_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101401, partner_career_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101401, partner_id_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101401, partner_name_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101401, partner_career_2_),
  };
  Proto80101401_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80101401_descriptor_,
      Proto80101401::default_instance_,
      Proto80101401_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101401, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101401, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80101401));
  Proto80101403_descriptor_ = file->message_type(25);
  static const int Proto80101403_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101403, wedding_icon_list_),
  };
  Proto80101403_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80101403_descriptor_,
      Proto80101403::default_instance_,
      Proto80101403_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101403, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101403, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80101403));
  Proto80101404_descriptor_ = file->message_type(26);
  static const int Proto80101404_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101404, reply_),
  };
  Proto80101404_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80101404_descriptor_,
      Proto80101404::default_instance_,
      Proto80101404_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101404, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101404, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80101404));
  Proto80101405_descriptor_ = file->message_type(27);
  static const int Proto80101405_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101405, wedding_type_),
  };
  Proto80101405_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80101405_descriptor_,
      Proto80101405::default_instance_,
      Proto80101405_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101405, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101405, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80101405));
  Proto80400226_descriptor_ = file->message_type(28);
  static const int Proto80400226_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400226, fighter_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400226, float_id_),
  };
  Proto80400226_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400226_descriptor_,
      Proto80400226::default_instance_,
      Proto80400226_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400226, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400226, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400226));
  Proto80400227_descriptor_ = file->message_type(29);
  static const int Proto80400227_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400227, mover_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400227, step_list_),
  };
  Proto80400227_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400227_descriptor_,
      Proto80400227::default_instance_,
      Proto80400227_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400227, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400227, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400227));
  Proto80400228_descriptor_ = file->message_type(30);
  static const int Proto80400228_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400228, mover_id_),
  };
  Proto80400228_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400228_descriptor_,
      Proto80400228::default_instance_,
      Proto80400228_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400228, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400228, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400228));
  Proto50100101_descriptor_ = file->message_type(31);
  static const int Proto50100101_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100101, server_flag_),
  };
  Proto50100101_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100101_descriptor_,
      Proto50100101::default_instance_,
      Proto50100101_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100101, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100101, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100101));
  Proto80400918_descriptor_ = file->message_type(32);
  static const int Proto80400918_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400918, poem_text_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400918, ai_id_),
  };
  Proto80400918_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400918_descriptor_,
      Proto80400918::default_instance_,
      Proto80400918_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400918, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400918, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400918));
  Proto10600105_descriptor_ = file->message_type(33);
  static const int Proto10600105_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10600105, sex_),
  };
  Proto10600105_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10600105_descriptor_,
      Proto10600105::default_instance_,
      Proto10600105_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10600105, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10600105, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10600105));
  Proto50600105_descriptor_ = file->message_type(34);
  static const int Proto50600105_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50600105, name_),
  };
  Proto50600105_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50600105_descriptor_,
      Proto50600105::default_instance_,
      Proto50600105_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50600105, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50600105, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50600105));
  Proto81400108_descriptor_ = file->message_type(35);
  static const int Proto81400108_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400108, pass_ui_),
  };
  Proto81400108_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400108_descriptor_,
      Proto81400108::default_instance_,
      Proto81400108_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400108, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400108, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400108));
  Proto80400378_descriptor_ = file->message_type(36);
  static const int Proto80400378_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400378, escort_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400378, protect_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400378, rob_times_),
  };
  Proto80400378_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400378_descriptor_,
      Proto80400378::default_instance_,
      Proto80400378_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400378, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400378, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400378));
  Proto10400118_descriptor_ = file->message_type(37);
  static const int Proto10400118_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400118, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400118, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400118, pixel_y_),
  };
  Proto10400118_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400118_descriptor_,
      Proto10400118::default_instance_,
      Proto10400118_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400118, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400118, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400118));
  Proto80400919_descriptor_ = file->message_type(38);
  static const int Proto80400919_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400919, wave_id_),
  };
  Proto80400919_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400919_descriptor_,
      Proto80400919::default_instance_,
      Proto80400919_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400919, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400919, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400919));
  Proto80400229_descriptor_ = file->message_type(39);
  static const int Proto80400229_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400229, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400229, role_name_),
  };
  Proto80400229_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400229_descriptor_,
      Proto80400229::default_instance_,
      Proto80400229_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400229, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400229, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400229));
  Proto80400920_descriptor_ = file->message_type(40);
  static const int Proto80400920_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400920, killer_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400920, killer_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400920, bekill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400920, bekill_name_),
  };
  Proto80400920_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400920_descriptor_,
      Proto80400920::default_instance_,
      Proto80400920_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400920, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400920, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400920));
  Proto80400921_descriptor_ = file->message_type(41);
  static const int Proto80400921_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400921, boss_id_),
  };
  Proto80400921_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400921_descriptor_,
      Proto80400921::default_instance_,
      Proto80400921_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400921, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400921, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400921));
  Proto80400922_descriptor_ = file->message_type(42);
  static const int Proto80400922_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400922, test_arg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400922, red_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400922, red_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400922, bekill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400922, bekill_name_),
  };
  Proto80400922_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400922_descriptor_,
      Proto80400922::default_instance_,
      Proto80400922_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400922, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400922, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400922));
  Proto81400902_descriptor_ = file->message_type(43);
  static const int Proto81400902_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400902, left_time_),
  };
  Proto81400902_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400902_descriptor_,
      Proto81400902::default_instance_,
      Proto81400902_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400902, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400902, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400902));
  Proto80400230_descriptor_ = file->message_type(44);
  static const int Proto80400230_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400230, item_id_),
  };
  Proto80400230_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400230_descriptor_,
      Proto80400230::default_instance_,
      Proto80400230_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400230, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400230, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400230));
  Proto10100157_descriptor_ = file->message_type(45);
  static const int Proto10100157_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100157, role_id_),
  };
  Proto10100157_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100157_descriptor_,
      Proto10100157::default_instance_,
      Proto10100157_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100157, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100157, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100157));
  Proto80400404_descriptor_ = file->message_type(46);
  static const int Proto80400404_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400404, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400404, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400404, role_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400404, career_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400404, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400404, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400404, pixel_y_),
  };
  Proto80400404_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400404_descriptor_,
      Proto80400404::default_instance_,
      Proto80400404_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400404, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400404, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400404));
  Proto80400405_descriptor_ = file->message_type(47);
  static const int Proto80400405_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400405, role_id_),
  };
  Proto80400405_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400405_descriptor_,
      Proto80400405::default_instance_,
      Proto80400405_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400405, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400405, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400405));
  Proto80400406_descriptor_ = file->message_type(48);
  static const int Proto80400406_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400406, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400406, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400406, pixel_y_),
  };
  Proto80400406_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400406_descriptor_,
      Proto80400406::default_instance_,
      Proto80400406_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400406, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400406, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400406));
  Proto80400231_descriptor_ = file->message_type(49);
  static const int Proto80400231_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400231, mover_id_),
  };
  Proto80400231_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400231_descriptor_,
      Proto80400231::default_instance_,
      Proto80400231_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400231, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400231, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400231));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient012_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400617_descriptor_, &Proto51400617::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400618_descriptor_, &Proto11400618::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400618_descriptor_, &Proto51400618::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400619_descriptor_, &Proto11400619::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400619_descriptor_, &Proto51400619::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400620_descriptor_, &Proto11400620::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400620_descriptor_, &Proto51400620::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400516_descriptor_, &Proto11400516::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400621_descriptor_, &Proto11400621::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400621_descriptor_, &Proto51400621::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400345_descriptor_, &Proto11400345::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400345_descriptor_, &Proto51400345::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400346_descriptor_, &Proto11400346::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400346_descriptor_, &Proto51400346::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400347_descriptor_, &Proto51400347::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101402_descriptor_, &Proto10101402::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101403_descriptor_, &Proto10101403::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101405_descriptor_, &Proto10101405::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101406_descriptor_, &Proto10101406::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101408_descriptor_, &Proto10101408::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101401_descriptor_, &Proto50101401::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101402_descriptor_, &Proto50101402::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101406_descriptor_, &Proto50101406::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101407_descriptor_, &Proto50101407::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80101401_descriptor_, &Proto80101401::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80101403_descriptor_, &Proto80101403::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80101404_descriptor_, &Proto80101404::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80101405_descriptor_, &Proto80101405::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400226_descriptor_, &Proto80400226::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400227_descriptor_, &Proto80400227::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400228_descriptor_, &Proto80400228::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100101_descriptor_, &Proto50100101::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400918_descriptor_, &Proto80400918::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10600105_descriptor_, &Proto10600105::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50600105_descriptor_, &Proto50600105::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400108_descriptor_, &Proto81400108::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400378_descriptor_, &Proto80400378::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400118_descriptor_, &Proto10400118::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400919_descriptor_, &Proto80400919::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400229_descriptor_, &Proto80400229::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400920_descriptor_, &Proto80400920::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400921_descriptor_, &Proto80400921::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400922_descriptor_, &Proto80400922::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400902_descriptor_, &Proto81400902::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400230_descriptor_, &Proto80400230::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100157_descriptor_, &Proto10100157::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400404_descriptor_, &Proto80400404::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400405_descriptor_, &Proto80400405::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400406_descriptor_, &Proto80400406::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400231_descriptor_, &Proto80400231::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient012_2eproto() {
  delete Proto51400617::default_instance_;
  delete Proto51400617_reflection_;
  delete Proto11400618::default_instance_;
  delete Proto11400618_reflection_;
  delete Proto51400618::default_instance_;
  delete Proto51400618_reflection_;
  delete Proto11400619::default_instance_;
  delete Proto11400619_reflection_;
  delete Proto51400619::default_instance_;
  delete Proto51400619_reflection_;
  delete Proto11400620::default_instance_;
  delete Proto11400620_reflection_;
  delete Proto51400620::default_instance_;
  delete Proto51400620_reflection_;
  delete Proto11400516::default_instance_;
  delete Proto11400516_reflection_;
  delete Proto11400621::default_instance_;
  delete Proto11400621_reflection_;
  delete Proto51400621::default_instance_;
  delete Proto51400621_reflection_;
  delete Proto11400345::default_instance_;
  delete Proto11400345_reflection_;
  delete Proto51400345::default_instance_;
  delete Proto51400345_reflection_;
  delete Proto11400346::default_instance_;
  delete Proto11400346_reflection_;
  delete Proto51400346::default_instance_;
  delete Proto51400346_reflection_;
  delete Proto51400347::default_instance_;
  delete Proto51400347_reflection_;
  delete Proto10101402::default_instance_;
  delete Proto10101402_reflection_;
  delete Proto10101403::default_instance_;
  delete Proto10101403_reflection_;
  delete Proto10101405::default_instance_;
  delete Proto10101405_reflection_;
  delete Proto10101406::default_instance_;
  delete Proto10101406_reflection_;
  delete Proto10101408::default_instance_;
  delete Proto10101408_reflection_;
  delete Proto50101401::default_instance_;
  delete Proto50101401_reflection_;
  delete Proto50101402::default_instance_;
  delete Proto50101402_reflection_;
  delete Proto50101406::default_instance_;
  delete Proto50101406_reflection_;
  delete Proto50101407::default_instance_;
  delete Proto50101407_reflection_;
  delete Proto80101401::default_instance_;
  delete Proto80101401_reflection_;
  delete Proto80101403::default_instance_;
  delete Proto80101403_reflection_;
  delete Proto80101404::default_instance_;
  delete Proto80101404_reflection_;
  delete Proto80101405::default_instance_;
  delete Proto80101405_reflection_;
  delete Proto80400226::default_instance_;
  delete Proto80400226_reflection_;
  delete Proto80400227::default_instance_;
  delete Proto80400227_reflection_;
  delete Proto80400228::default_instance_;
  delete Proto80400228_reflection_;
  delete Proto50100101::default_instance_;
  delete Proto50100101_reflection_;
  delete Proto80400918::default_instance_;
  delete Proto80400918_reflection_;
  delete Proto10600105::default_instance_;
  delete Proto10600105_reflection_;
  delete Proto50600105::default_instance_;
  delete Proto50600105_reflection_;
  delete Proto81400108::default_instance_;
  delete Proto81400108_reflection_;
  delete Proto80400378::default_instance_;
  delete Proto80400378_reflection_;
  delete Proto10400118::default_instance_;
  delete Proto10400118_reflection_;
  delete Proto80400919::default_instance_;
  delete Proto80400919_reflection_;
  delete Proto80400229::default_instance_;
  delete Proto80400229_reflection_;
  delete Proto80400920::default_instance_;
  delete Proto80400920_reflection_;
  delete Proto80400921::default_instance_;
  delete Proto80400921_reflection_;
  delete Proto80400922::default_instance_;
  delete Proto80400922_reflection_;
  delete Proto81400902::default_instance_;
  delete Proto81400902_reflection_;
  delete Proto80400230::default_instance_;
  delete Proto80400230_reflection_;
  delete Proto10100157::default_instance_;
  delete Proto10100157_reflection_;
  delete Proto80400404::default_instance_;
  delete Proto80400404_reflection_;
  delete Proto80400405::default_instance_;
  delete Proto80400405_reflection_;
  delete Proto80400406::default_instance_;
  delete Proto80400406_reflection_;
  delete Proto80400231::default_instance_;
  delete Proto80400231_reflection_;
}

void protobuf_AddDesc_ProtoClient012_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient012.proto\032\021ProtoPublic.prot"
    "o\"1\n\rProto51400617\022\020\n\010equip_id\030\001 \001(\005\022\016\n\006"
    "result\030\002 \001(\005\"S\n\rProto11400618\022\r\n\005color\030\001"
    " \001(\005\022\r\n\005level\030\002 \001(\005\022$\n\titem_list\030\003 \003(\0132\021"
    ".ProtoPackageItem\"\232\001\n\rProto51400618\022\r\n\005c"
    "olor\030\001 \001(\005\022\r\n\005level\030\002 \001(\005\022\017\n\007item_id\030\003 \001"
    "(\005\022\016\n\006result\030\004 \001(\005\022\034\n\024is_exist_extras_at"
    "tr\030\005 \001(\005\022,\n\013extras_attr\030\006 \001(\0132\027.ProtoEqu"
    "ipPolishStruct\"\225\001\n\rProto11400619\022\017\n\007item"
    "_id\030\001 \001(\005\022\021\n\titem_type\030\002 \001(\005\022\022\n\nitem_ind"
    "ex\030\003 \001(\005\022\022\n\nis_special\030\004 \001(\005\022\020\n\010is_batch"
    "\030\005 \001(\005\022\023\n\013is_auto_buy\030\006 \001(\005\022\021\n\tlock_list"
    "\030\007 \003(\005\"\201\002\n\rProto51400619\022\017\n\007item_id\030\001 \001("
    "\005\022\022\n\nis_special\030\002 \001(\005\022\020\n\010luck_num\030\003 \001(\005\022"
    "2\n\021equip_polish_list\030\004 \003(\0132\027.ProtoEquipP"
    "olishStruct\022(\n\021cost_jewel_amount\030\005 \001(\0132\r"
    ".ProtoPairObj\022\'\n\020cost_lock_amount\030\006 \001(\0132"
    "\r.ProtoPairObj\022\027\n\017cost_money_type\030\007 \001(\005\022"
    "\031\n\021cost_money_amount\030\010 \001(\005\"Y\n\rProto11400"
    "620\022\017\n\007item_id\030\001 \001(\005\022\021\n\titem_type\030\002 \001(\005\022"
    "\022\n\nitem_index\030\003 \001(\005\022\020\n\010is_batch\030\004 \001(\005\"r\n"
    "\rProto51400620\022\017\n\007item_id\030\001 \001(\005\022\020\n\010is_ba"
    "tch\030\002 \001(\005\022*\n\tattr_list\030\003 \003(\0132\027.ProtoEqui"
    "pPolishStruct\022\022\n\nluck_value\030\004 \001(\005\"!\n\rPro"
    "to11400516\022\020\n\010beast_id\030\001 \001(\003\"\203\001\n\rProto11"
    "400621\022\017\n\007item_id\030\001 \001(\005\022\021\n\titem_type\030\002 \001"
    "(\005\022\022\n\nitem_index\030\003 \001(\005\022\021\n\tis_select\030\004 \001("
    "\005\022\024\n\014select_index\030\005 \001(\005\022\021\n\tlock_list\030\006 \003"
    "(\005\"c\n\rProto51400621\022\017\n\007item_id\030\001 \001(\005\022\021\n\t"
    "is_select\030\002 \001(\005\022.\n\rselect_result\030\003 \001(\0132\027"
    ".ProtoEquipPolishStruct\" \n\rProto11400345"
    "\022\017\n\007task_id\030\001 \001(\005\"4\n\rProto51400345\022\017\n\007ta"
    "sk_id\030\001 \001(\005\022\022\n\nstar_level\030\002 \001(\005\"\035\n\rProto"
    "11400346\022\014\n\004type\030\001 \001(\005\"k\n\rProto51400346\022"
    "\014\n\004type\030\001 \001(\005\022\032\n\005money\030\002 \001(\0132\013.ProtoMone"
    "y\022!\n\014return_money\030\003 \001(\0132\013.ProtoMoney\022\r\n\005"
    "scale\030\004 \001(\005\"\\\n\rProto51400347\022\022\n\nleft_tim"
    "es\030\001 \001(\005\022\023\n\013total_times\030\002 \001(\005\022\"\n\ttask_li"
    "st\030\003 \003(\0132\017.ProtoTrialTask\"\035\n\rProto101014"
    "02\022\014\n\004type\030\001 \001(\005\"\035\n\rProto10101403\022\014\n\004typ"
    "e\030\001 \001(\005\"d\n\rProto10101405\022\014\n\004type\030\001 \001(\005\022\017"
    "\n\007item_id\030\002 \001(\005\022\020\n\010item_num\030\003 \001(\005\022\"\n\noth"
    "er_info\030\004 \001(\0132\016.ProtoThreeObj\"}\n\rProto10"
    "101406\022\017\n\007item_id\030\001 \001(\005\022\023\n\013receiver_id\030\002"
    " \001(\003\022\020\n\010item_num\030\003 \001(\005\022\020\n\010auto_buy\030\004 \001(\005"
    "\022\"\n\nother_info\030\005 \001(\0132\016.ProtoThreeObj\"\036\n\r"
    "Proto10101408\022\r\n\005reply\030\001 \001(\005\"\267\002\n\rProto50"
    "101401\022\022\n\npartner_id\030\001 \001(\003\022\024\n\014partnet_na"
    "me\030\002 \001(\t\022\025\n\rpartner_level\030\003 \001(\005\022\021\n\twed_l"
    "imit\030\004 \001(\005\022\021\n\tsex_limit\030\005 \001(\005\022\023\n\013level_l"
    "imit\030\006 \001(\005\022\024\n\014online_limit\030\007 \001(\005\022\026\n\016inti"
    "macy_limit\030\010 \001(\005\022\022\n\nring_limit\030\t \001(\005\022\022\n\n"
    "team_limit\030\n \001(\005\022\027\n\017side_ring_level\030\013 \001("
    "\005\022\027\n\017self_ring_level\030\014 \001(\005\022\"\n\nother_info"
    "\030\r \001(\0132\016.ProtoThreeObj\"\203\001\n\rProto50101402"
    "\022\021\n\tleader_id\030\001 \001(\003\022\023\n\013leader_name\030\002 \001(\t"
    "\022\021\n\tteamer_id\030\003 \001(\003\022\023\n\013teamer_name\030\004 \001(\t"
    "\022\"\n\nother_info\030\005 \001(\0132\016.ProtoThreeObj\"\252\001\n"
    "\rProto50101406\022\017\n\007item_id\030\001 \001(\005\022\021\n\tsende"
    "r_id\030\002 \001(\003\022\023\n\013sender_name\030\003 \001(\t\022\023\n\013recei"
    "ver_id\030\004 \001(\003\022\025\n\rreceiver_name\030\005 \001(\t\022\"\n\no"
    "ther_info\030\006 \001(\0132\016.ProtoThreeObj\022\020\n\010item_"
    "num\030\007 \001(\005\"\231\004\n\rProto50101407\022\024\n\014wedding_t"
    "ick\030\001 \001(\005\022\022\n\npartner_id\030\002 \001(\003\022\024\n\014partner"
    "_name\030\003 \001(\t\022\023\n\013partner_sex\030\004 \001(\005\022\020\n\010inti"
    "macy\030\005 \001(\005\022\023\n\013keepsake_id\030\006 \001(\005\022\026\n\016keeps"
    "ake_level\030\007 \001(\005\022\031\n\021keepsake_sublevel\030\010 \001"
    "(\005\022\031\n\021keepsake_progress\030\t \001(\001\022\026\n\016left_da"
    "y_times\030\n \001(\005\022\020\n\010label_id\030\013 \001(\005\022\031\n\021left_"
    "script_times\030\014 \001(\005\022\026\n\016partner_career\030\r \001"
    "(\005\022\024\n\014sweet_degree\030\016 \001(\005\022&\n\tring_info\030\017 "
    "\001(\0132\023.ProtoWeddingDetail\022%\n\010sys_info\030\020 \001"
    "(\0132\023.ProtoWeddingDetail\022&\n\ttree_info\030\021 \001"
    "(\0132\023.ProtoWeddingDetail\022)\n\rself_treasure"
    "\030\022 \001(\0132\022.ProtoWedTreasures\022)\n\rside_treas"
    "ure\030\023 \001(\0132\022.ProtoWedTreasures\"\310\001\n\rProto8"
    "0101401\022\014\n\004type\030\001 \001(\005\022\031\n\021cartoon_left_ti"
    "ck\030\002 \001(\005\022\024\n\014partner_id_1\030\003 \001(\003\022\026\n\016partne"
    "r_name_1\030\004 \001(\t\022\030\n\020partner_career_1\030\005 \001(\005"
    "\022\024\n\014partner_id_2\030\006 \001(\003\022\026\n\016partner_name_2"
    "\030\007 \001(\t\022\030\n\020partner_career_2\030\010 \001(\005\"=\n\rProt"
    "o80101403\022,\n\021wedding_icon_list\030\001 \003(\0132\021.P"
    "rotoWeddingIcon\"\036\n\rProto80101404\022\r\n\005repl"
    "y\030\001 \001(\005\"%\n\rProto80101405\022\024\n\014wedding_type"
    "\030\001 \001(\005\"5\n\rProto80400226\022\022\n\nfighter_id\030\001 "
    "\001(\003\022\020\n\010float_id\030\002 \001(\003\"A\n\rProto80400227\022\020"
    "\n\010mover_id\030\001 \001(\003\022\036\n\tstep_list\030\002 \003(\0132\013.Pr"
    "otoCoord\"!\n\rProto80400228\022\020\n\010mover_id\030\001 "
    "\001(\003\"$\n\rProto50100101\022\023\n\013server_flag\030\001 \001("
    "\t\"7\n\rProto80400918\022\027\n\017poem_text_index\030\001 "
    "\001(\005\022\r\n\005ai_id\030\002 \001(\005\"\034\n\rProto10600105\022\013\n\003s"
    "ex\030\001 \001(\005\"\035\n\rProto50600105\022\014\n\004name\030\001 \001(\t\""
    " \n\rProto81400108\022\017\n\007pass_ui\030\001 \003(\t\"O\n\rPro"
    "to80400378\022\024\n\014escort_times\030\001 \001(\005\022\025\n\rprot"
    "ect_times\030\002 \001(\005\022\021\n\trob_times\030\003 \001(\005\"C\n\rPr"
    "oto10400118\022\020\n\010scene_id\030\001 \001(\005\022\017\n\007pixel_x"
    "\030\002 \001(\005\022\017\n\007pixel_y\030\003 \001(\005\" \n\rProto80400919"
    "\022\017\n\007wave_id\030\001 \001(\005\"3\n\rProto80400229\022\017\n\007ro"
    "le_id\030\001 \001(\003\022\021\n\trole_name\030\002 \001(\t\"_\n\rProto8"
    "0400920\022\021\n\tkiller_id\030\001 \001(\003\022\023\n\013killer_nam"
    "e\030\002 \001(\t\022\021\n\tbekill_id\030\003 \001(\003\022\023\n\013bekill_nam"
    "e\030\004 \001(\t\" \n\rProto80400921\022\017\n\007boss_id\030\001 \001("
    "\003\"k\n\rProto80400922\022\020\n\010test_arg\030\001 \001(\005\022\016\n\006"
    "red_id\030\002 \001(\003\022\020\n\010red_name\030\003 \001(\t\022\021\n\tbekill"
    "_id\030\004 \001(\003\022\023\n\013bekill_name\030\005 \001(\t\"\"\n\rProto8"
    "1400902\022\021\n\tleft_time\030\001 \001(\005\" \n\rProto80400"
    "230\022\017\n\007item_id\030\001 \001(\005\" \n\rProto10100157\022\017\n"
    "\007role_id\030\001 \001(\003\"\203\001\n\rProto80400404\022\017\n\007role"
    "_id\030\001 \001(\003\022\017\n\007team_id\030\002 \001(\003\022\021\n\trole_name\030"
    "\003 \001(\t\022\016\n\006career\030\004 \001(\005\022\013\n\003sex\030\005 \001(\005\022\017\n\007pi"
    "xel_x\030\006 \001(\005\022\017\n\007pixel_y\030\007 \001(\005\" \n\rProto804"
    "00405\022\017\n\007role_id\030\001 \001(\003\"B\n\rProto80400406\022"
    "\017\n\007role_id\030\001 \001(\003\022\017\n\007pixel_x\030\002 \001(\005\022\017\n\007pix"
    "el_y\030\003 \001(\005\"!\n\rProto80400231\022\020\n\010mover_id\030"
    "\001 \001(\003", 4565);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient012.proto", &protobuf_RegisterTypes);
  Proto51400617::default_instance_ = new Proto51400617();
  Proto11400618::default_instance_ = new Proto11400618();
  Proto51400618::default_instance_ = new Proto51400618();
  Proto11400619::default_instance_ = new Proto11400619();
  Proto51400619::default_instance_ = new Proto51400619();
  Proto11400620::default_instance_ = new Proto11400620();
  Proto51400620::default_instance_ = new Proto51400620();
  Proto11400516::default_instance_ = new Proto11400516();
  Proto11400621::default_instance_ = new Proto11400621();
  Proto51400621::default_instance_ = new Proto51400621();
  Proto11400345::default_instance_ = new Proto11400345();
  Proto51400345::default_instance_ = new Proto51400345();
  Proto11400346::default_instance_ = new Proto11400346();
  Proto51400346::default_instance_ = new Proto51400346();
  Proto51400347::default_instance_ = new Proto51400347();
  Proto10101402::default_instance_ = new Proto10101402();
  Proto10101403::default_instance_ = new Proto10101403();
  Proto10101405::default_instance_ = new Proto10101405();
  Proto10101406::default_instance_ = new Proto10101406();
  Proto10101408::default_instance_ = new Proto10101408();
  Proto50101401::default_instance_ = new Proto50101401();
  Proto50101402::default_instance_ = new Proto50101402();
  Proto50101406::default_instance_ = new Proto50101406();
  Proto50101407::default_instance_ = new Proto50101407();
  Proto80101401::default_instance_ = new Proto80101401();
  Proto80101403::default_instance_ = new Proto80101403();
  Proto80101404::default_instance_ = new Proto80101404();
  Proto80101405::default_instance_ = new Proto80101405();
  Proto80400226::default_instance_ = new Proto80400226();
  Proto80400227::default_instance_ = new Proto80400227();
  Proto80400228::default_instance_ = new Proto80400228();
  Proto50100101::default_instance_ = new Proto50100101();
  Proto80400918::default_instance_ = new Proto80400918();
  Proto10600105::default_instance_ = new Proto10600105();
  Proto50600105::default_instance_ = new Proto50600105();
  Proto81400108::default_instance_ = new Proto81400108();
  Proto80400378::default_instance_ = new Proto80400378();
  Proto10400118::default_instance_ = new Proto10400118();
  Proto80400919::default_instance_ = new Proto80400919();
  Proto80400229::default_instance_ = new Proto80400229();
  Proto80400920::default_instance_ = new Proto80400920();
  Proto80400921::default_instance_ = new Proto80400921();
  Proto80400922::default_instance_ = new Proto80400922();
  Proto81400902::default_instance_ = new Proto81400902();
  Proto80400230::default_instance_ = new Proto80400230();
  Proto10100157::default_instance_ = new Proto10100157();
  Proto80400404::default_instance_ = new Proto80400404();
  Proto80400405::default_instance_ = new Proto80400405();
  Proto80400406::default_instance_ = new Proto80400406();
  Proto80400231::default_instance_ = new Proto80400231();
  Proto51400617::default_instance_->InitAsDefaultInstance();
  Proto11400618::default_instance_->InitAsDefaultInstance();
  Proto51400618::default_instance_->InitAsDefaultInstance();
  Proto11400619::default_instance_->InitAsDefaultInstance();
  Proto51400619::default_instance_->InitAsDefaultInstance();
  Proto11400620::default_instance_->InitAsDefaultInstance();
  Proto51400620::default_instance_->InitAsDefaultInstance();
  Proto11400516::default_instance_->InitAsDefaultInstance();
  Proto11400621::default_instance_->InitAsDefaultInstance();
  Proto51400621::default_instance_->InitAsDefaultInstance();
  Proto11400345::default_instance_->InitAsDefaultInstance();
  Proto51400345::default_instance_->InitAsDefaultInstance();
  Proto11400346::default_instance_->InitAsDefaultInstance();
  Proto51400346::default_instance_->InitAsDefaultInstance();
  Proto51400347::default_instance_->InitAsDefaultInstance();
  Proto10101402::default_instance_->InitAsDefaultInstance();
  Proto10101403::default_instance_->InitAsDefaultInstance();
  Proto10101405::default_instance_->InitAsDefaultInstance();
  Proto10101406::default_instance_->InitAsDefaultInstance();
  Proto10101408::default_instance_->InitAsDefaultInstance();
  Proto50101401::default_instance_->InitAsDefaultInstance();
  Proto50101402::default_instance_->InitAsDefaultInstance();
  Proto50101406::default_instance_->InitAsDefaultInstance();
  Proto50101407::default_instance_->InitAsDefaultInstance();
  Proto80101401::default_instance_->InitAsDefaultInstance();
  Proto80101403::default_instance_->InitAsDefaultInstance();
  Proto80101404::default_instance_->InitAsDefaultInstance();
  Proto80101405::default_instance_->InitAsDefaultInstance();
  Proto80400226::default_instance_->InitAsDefaultInstance();
  Proto80400227::default_instance_->InitAsDefaultInstance();
  Proto80400228::default_instance_->InitAsDefaultInstance();
  Proto50100101::default_instance_->InitAsDefaultInstance();
  Proto80400918::default_instance_->InitAsDefaultInstance();
  Proto10600105::default_instance_->InitAsDefaultInstance();
  Proto50600105::default_instance_->InitAsDefaultInstance();
  Proto81400108::default_instance_->InitAsDefaultInstance();
  Proto80400378::default_instance_->InitAsDefaultInstance();
  Proto10400118::default_instance_->InitAsDefaultInstance();
  Proto80400919::default_instance_->InitAsDefaultInstance();
  Proto80400229::default_instance_->InitAsDefaultInstance();
  Proto80400920::default_instance_->InitAsDefaultInstance();
  Proto80400921::default_instance_->InitAsDefaultInstance();
  Proto80400922::default_instance_->InitAsDefaultInstance();
  Proto81400902::default_instance_->InitAsDefaultInstance();
  Proto80400230::default_instance_->InitAsDefaultInstance();
  Proto10100157::default_instance_->InitAsDefaultInstance();
  Proto80400404::default_instance_->InitAsDefaultInstance();
  Proto80400405::default_instance_->InitAsDefaultInstance();
  Proto80400406::default_instance_->InitAsDefaultInstance();
  Proto80400231::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient012_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient012_2eproto {
  StaticDescriptorInitializer_ProtoClient012_2eproto() {
    protobuf_AddDesc_ProtoClient012_2eproto();
  }
} static_descriptor_initializer_ProtoClient012_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto51400617::kEquipIdFieldNumber;
const int Proto51400617::kResultFieldNumber;
#endif  // !_MSC_VER

Proto51400617::Proto51400617()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400617::InitAsDefaultInstance() {
}

Proto51400617::Proto51400617(const Proto51400617& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400617::SharedCtor() {
  _cached_size_ = 0;
  equip_id_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400617::~Proto51400617() {
  SharedDtor();
}

void Proto51400617::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400617::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400617::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400617_descriptor_;
}

const Proto51400617& Proto51400617::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto51400617* Proto51400617::default_instance_ = NULL;

Proto51400617* Proto51400617::New() const {
  return new Proto51400617;
}

void Proto51400617::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    equip_id_ = 0;
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400617::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 equip_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equip_id_)));
          set_has_equip_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }
      
      // optional int32 result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400617::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 equip_id = 1;
  if (has_equip_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->equip_id(), output);
  }
  
  // optional int32 result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400617::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 equip_id = 1;
  if (has_equip_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->equip_id(), target);
  }
  
  // optional int32 result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400617::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 equip_id = 1;
    if (has_equip_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equip_id());
    }
    
    // optional int32 result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400617::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400617* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400617*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400617::MergeFrom(const Proto51400617& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equip_id()) {
      set_equip_id(from.equip_id());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400617::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400617::CopyFrom(const Proto51400617& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400617::IsInitialized() const {
  
  return true;
}

void Proto51400617::Swap(Proto51400617* other) {
  if (other != this) {
    std::swap(equip_id_, other->equip_id_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400617::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400617_descriptor_;
  metadata.reflection = Proto51400617_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400618::kColorFieldNumber;
const int Proto11400618::kLevelFieldNumber;
const int Proto11400618::kItemListFieldNumber;
#endif  // !_MSC_VER

Proto11400618::Proto11400618()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400618::InitAsDefaultInstance() {
}

Proto11400618::Proto11400618(const Proto11400618& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400618::SharedCtor() {
  _cached_size_ = 0;
  color_ = 0;
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400618::~Proto11400618() {
  SharedDtor();
}

void Proto11400618::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400618::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400618::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400618_descriptor_;
}

const Proto11400618& Proto11400618::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto11400618* Proto11400618::default_instance_ = NULL;

Proto11400618* Proto11400618::New() const {
  return new Proto11400618;
}

void Proto11400618::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    color_ = 0;
    level_ = 0;
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400618::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 color = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &color_)));
          set_has_color();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }
      
      // optional int32 level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoPackageItem item_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400618::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 color = 1;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->color(), output);
  }
  
  // optional int32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }
  
  // repeated .ProtoPackageItem item_list = 3;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->item_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400618::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 color = 1;
  if (has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->color(), target);
  }
  
  // optional int32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }
  
  // repeated .ProtoPackageItem item_list = 3;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->item_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400618::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 color = 1;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->color());
    }
    
    // optional int32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
  }
  // repeated .ProtoPackageItem item_list = 3;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400618::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400618* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400618*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400618::MergeFrom(const Proto11400618& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_color()) {
      set_color(from.color());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400618::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400618::CopyFrom(const Proto11400618& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400618::IsInitialized() const {
  
  return true;
}

void Proto11400618::Swap(Proto11400618* other) {
  if (other != this) {
    std::swap(color_, other->color_);
    std::swap(level_, other->level_);
    item_list_.Swap(&other->item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400618::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400618_descriptor_;
  metadata.reflection = Proto11400618_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400618::kColorFieldNumber;
const int Proto51400618::kLevelFieldNumber;
const int Proto51400618::kItemIdFieldNumber;
const int Proto51400618::kResultFieldNumber;
const int Proto51400618::kIsExistExtrasAttrFieldNumber;
const int Proto51400618::kExtrasAttrFieldNumber;
#endif  // !_MSC_VER

Proto51400618::Proto51400618()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400618::InitAsDefaultInstance() {
  extras_attr_ = const_cast< ::ProtoEquipPolishStruct*>(&::ProtoEquipPolishStruct::default_instance());
}

Proto51400618::Proto51400618(const Proto51400618& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400618::SharedCtor() {
  _cached_size_ = 0;
  color_ = 0;
  level_ = 0;
  item_id_ = 0;
  result_ = 0;
  is_exist_extras_attr_ = 0;
  extras_attr_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400618::~Proto51400618() {
  SharedDtor();
}

void Proto51400618::SharedDtor() {
  if (this != default_instance_) {
    delete extras_attr_;
  }
}

void Proto51400618::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400618::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400618_descriptor_;
}

const Proto51400618& Proto51400618::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto51400618* Proto51400618::default_instance_ = NULL;

Proto51400618* Proto51400618::New() const {
  return new Proto51400618;
}

void Proto51400618::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    color_ = 0;
    level_ = 0;
    item_id_ = 0;
    result_ = 0;
    is_exist_extras_attr_ = 0;
    if (has_extras_attr()) {
      if (extras_attr_ != NULL) extras_attr_->::ProtoEquipPolishStruct::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400618::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 color = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &color_)));
          set_has_color();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }
      
      // optional int32 level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_id;
        break;
      }
      
      // optional int32 item_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_result;
        break;
      }
      
      // optional int32 result = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_is_exist_extras_attr;
        break;
      }
      
      // optional int32 is_exist_extras_attr = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_exist_extras_attr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_exist_extras_attr_)));
          set_has_is_exist_extras_attr();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_extras_attr;
        break;
      }
      
      // optional .ProtoEquipPolishStruct extras_attr = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_extras_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extras_attr()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400618::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 color = 1;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->color(), output);
  }
  
  // optional int32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }
  
  // optional int32 item_id = 3;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_id(), output);
  }
  
  // optional int32 result = 4;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->result(), output);
  }
  
  // optional int32 is_exist_extras_attr = 5;
  if (has_is_exist_extras_attr()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->is_exist_extras_attr(), output);
  }
  
  // optional .ProtoEquipPolishStruct extras_attr = 6;
  if (has_extras_attr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->extras_attr(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400618::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 color = 1;
  if (has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->color(), target);
  }
  
  // optional int32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }
  
  // optional int32 item_id = 3;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_id(), target);
  }
  
  // optional int32 result = 4;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->result(), target);
  }
  
  // optional int32 is_exist_extras_attr = 5;
  if (has_is_exist_extras_attr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->is_exist_extras_attr(), target);
  }
  
  // optional .ProtoEquipPolishStruct extras_attr = 6;
  if (has_extras_attr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->extras_attr(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400618::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 color = 1;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->color());
    }
    
    // optional int32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 item_id = 3;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 result = 4;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
    // optional int32 is_exist_extras_attr = 5;
    if (has_is_exist_extras_attr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_exist_extras_attr());
    }
    
    // optional .ProtoEquipPolishStruct extras_attr = 6;
    if (has_extras_attr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->extras_attr());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400618::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400618* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400618*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400618::MergeFrom(const Proto51400618& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_color()) {
      set_color(from.color());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_is_exist_extras_attr()) {
      set_is_exist_extras_attr(from.is_exist_extras_attr());
    }
    if (from.has_extras_attr()) {
      mutable_extras_attr()->::ProtoEquipPolishStruct::MergeFrom(from.extras_attr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400618::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400618::CopyFrom(const Proto51400618& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400618::IsInitialized() const {
  
  return true;
}

void Proto51400618::Swap(Proto51400618* other) {
  if (other != this) {
    std::swap(color_, other->color_);
    std::swap(level_, other->level_);
    std::swap(item_id_, other->item_id_);
    std::swap(result_, other->result_);
    std::swap(is_exist_extras_attr_, other->is_exist_extras_attr_);
    std::swap(extras_attr_, other->extras_attr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400618::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400618_descriptor_;
  metadata.reflection = Proto51400618_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400619::kItemIdFieldNumber;
const int Proto11400619::kItemTypeFieldNumber;
const int Proto11400619::kItemIndexFieldNumber;
const int Proto11400619::kIsSpecialFieldNumber;
const int Proto11400619::kIsBatchFieldNumber;
const int Proto11400619::kIsAutoBuyFieldNumber;
const int Proto11400619::kLockListFieldNumber;
#endif  // !_MSC_VER

Proto11400619::Proto11400619()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400619::InitAsDefaultInstance() {
}

Proto11400619::Proto11400619(const Proto11400619& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400619::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  item_type_ = 0;
  item_index_ = 0;
  is_special_ = 0;
  is_batch_ = 0;
  is_auto_buy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400619::~Proto11400619() {
  SharedDtor();
}

void Proto11400619::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400619::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400619::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400619_descriptor_;
}

const Proto11400619& Proto11400619::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto11400619* Proto11400619::default_instance_ = NULL;

Proto11400619* Proto11400619::New() const {
  return new Proto11400619;
}

void Proto11400619::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    item_type_ = 0;
    item_index_ = 0;
    is_special_ = 0;
    is_batch_ = 0;
    is_auto_buy_ = 0;
  }
  lock_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400619::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_type;
        break;
      }
      
      // optional int32 item_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_type_)));
          set_has_item_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_index;
        break;
      }
      
      // optional int32 item_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_index_)));
          set_has_item_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_is_special;
        break;
      }
      
      // optional int32 is_special = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_special:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_special_)));
          set_has_is_special();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_is_batch;
        break;
      }
      
      // optional int32 is_batch = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_batch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_batch_)));
          set_has_is_batch();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_is_auto_buy;
        break;
      }
      
      // optional int32 is_auto_buy = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_auto_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_auto_buy_)));
          set_has_is_auto_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_lock_list;
        break;
      }
      
      // repeated int32 lock_list = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lock_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_lock_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_lock_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_lock_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400619::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 item_type = 2;
  if (has_item_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_type(), output);
  }
  
  // optional int32 item_index = 3;
  if (has_item_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_index(), output);
  }
  
  // optional int32 is_special = 4;
  if (has_is_special()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->is_special(), output);
  }
  
  // optional int32 is_batch = 5;
  if (has_is_batch()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->is_batch(), output);
  }
  
  // optional int32 is_auto_buy = 6;
  if (has_is_auto_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->is_auto_buy(), output);
  }
  
  // repeated int32 lock_list = 7;
  for (int i = 0; i < this->lock_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->lock_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400619::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 item_type = 2;
  if (has_item_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_type(), target);
  }
  
  // optional int32 item_index = 3;
  if (has_item_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_index(), target);
  }
  
  // optional int32 is_special = 4;
  if (has_is_special()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->is_special(), target);
  }
  
  // optional int32 is_batch = 5;
  if (has_is_batch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->is_batch(), target);
  }
  
  // optional int32 is_auto_buy = 6;
  if (has_is_auto_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->is_auto_buy(), target);
  }
  
  // repeated int32 lock_list = 7;
  for (int i = 0; i < this->lock_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->lock_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400619::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_type = 2;
    if (has_item_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_type());
    }
    
    // optional int32 item_index = 3;
    if (has_item_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_index());
    }
    
    // optional int32 is_special = 4;
    if (has_is_special()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_special());
    }
    
    // optional int32 is_batch = 5;
    if (has_is_batch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_batch());
    }
    
    // optional int32 is_auto_buy = 6;
    if (has_is_auto_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_auto_buy());
    }
    
  }
  // repeated int32 lock_list = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->lock_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->lock_list(i));
    }
    total_size += 1 * this->lock_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400619::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400619* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400619*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400619::MergeFrom(const Proto11400619& from) {
  GOOGLE_CHECK_NE(&from, this);
  lock_list_.MergeFrom(from.lock_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_type()) {
      set_item_type(from.item_type());
    }
    if (from.has_item_index()) {
      set_item_index(from.item_index());
    }
    if (from.has_is_special()) {
      set_is_special(from.is_special());
    }
    if (from.has_is_batch()) {
      set_is_batch(from.is_batch());
    }
    if (from.has_is_auto_buy()) {
      set_is_auto_buy(from.is_auto_buy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400619::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400619::CopyFrom(const Proto11400619& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400619::IsInitialized() const {
  
  return true;
}

void Proto11400619::Swap(Proto11400619* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(item_type_, other->item_type_);
    std::swap(item_index_, other->item_index_);
    std::swap(is_special_, other->is_special_);
    std::swap(is_batch_, other->is_batch_);
    std::swap(is_auto_buy_, other->is_auto_buy_);
    lock_list_.Swap(&other->lock_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400619::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400619_descriptor_;
  metadata.reflection = Proto11400619_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400619::kItemIdFieldNumber;
const int Proto51400619::kIsSpecialFieldNumber;
const int Proto51400619::kLuckNumFieldNumber;
const int Proto51400619::kEquipPolishListFieldNumber;
const int Proto51400619::kCostJewelAmountFieldNumber;
const int Proto51400619::kCostLockAmountFieldNumber;
const int Proto51400619::kCostMoneyTypeFieldNumber;
const int Proto51400619::kCostMoneyAmountFieldNumber;
#endif  // !_MSC_VER

Proto51400619::Proto51400619()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400619::InitAsDefaultInstance() {
  cost_jewel_amount_ = const_cast< ::ProtoPairObj*>(&::ProtoPairObj::default_instance());
  cost_lock_amount_ = const_cast< ::ProtoPairObj*>(&::ProtoPairObj::default_instance());
}

Proto51400619::Proto51400619(const Proto51400619& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400619::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  is_special_ = 0;
  luck_num_ = 0;
  cost_jewel_amount_ = NULL;
  cost_lock_amount_ = NULL;
  cost_money_type_ = 0;
  cost_money_amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400619::~Proto51400619() {
  SharedDtor();
}

void Proto51400619::SharedDtor() {
  if (this != default_instance_) {
    delete cost_jewel_amount_;
    delete cost_lock_amount_;
  }
}

void Proto51400619::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400619::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400619_descriptor_;
}

const Proto51400619& Proto51400619::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto51400619* Proto51400619::default_instance_ = NULL;

Proto51400619* Proto51400619::New() const {
  return new Proto51400619;
}

void Proto51400619::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    is_special_ = 0;
    luck_num_ = 0;
    if (has_cost_jewel_amount()) {
      if (cost_jewel_amount_ != NULL) cost_jewel_amount_->::ProtoPairObj::Clear();
    }
    if (has_cost_lock_amount()) {
      if (cost_lock_amount_ != NULL) cost_lock_amount_->::ProtoPairObj::Clear();
    }
    cost_money_type_ = 0;
    cost_money_amount_ = 0;
  }
  equip_polish_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400619::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_special;
        break;
      }
      
      // optional int32 is_special = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_special:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_special_)));
          set_has_is_special();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_luck_num;
        break;
      }
      
      // optional int32 luck_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_luck_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &luck_num_)));
          set_has_luck_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_equip_polish_list;
        break;
      }
      
      // repeated .ProtoEquipPolishStruct equip_polish_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equip_polish_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equip_polish_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_equip_polish_list;
        if (input->ExpectTag(42)) goto parse_cost_jewel_amount;
        break;
      }
      
      // optional .ProtoPairObj cost_jewel_amount = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cost_jewel_amount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cost_jewel_amount()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_cost_lock_amount;
        break;
      }
      
      // optional .ProtoPairObj cost_lock_amount = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cost_lock_amount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cost_lock_amount()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_cost_money_type;
        break;
      }
      
      // optional int32 cost_money_type = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cost_money_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cost_money_type_)));
          set_has_cost_money_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_cost_money_amount;
        break;
      }
      
      // optional int32 cost_money_amount = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cost_money_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cost_money_amount_)));
          set_has_cost_money_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400619::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 is_special = 2;
  if (has_is_special()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_special(), output);
  }
  
  // optional int32 luck_num = 3;
  if (has_luck_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->luck_num(), output);
  }
  
  // repeated .ProtoEquipPolishStruct equip_polish_list = 4;
  for (int i = 0; i < this->equip_polish_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->equip_polish_list(i), output);
  }
  
  // optional .ProtoPairObj cost_jewel_amount = 5;
  if (has_cost_jewel_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->cost_jewel_amount(), output);
  }
  
  // optional .ProtoPairObj cost_lock_amount = 6;
  if (has_cost_lock_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->cost_lock_amount(), output);
  }
  
  // optional int32 cost_money_type = 7;
  if (has_cost_money_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->cost_money_type(), output);
  }
  
  // optional int32 cost_money_amount = 8;
  if (has_cost_money_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->cost_money_amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400619::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 is_special = 2;
  if (has_is_special()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_special(), target);
  }
  
  // optional int32 luck_num = 3;
  if (has_luck_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->luck_num(), target);
  }
  
  // repeated .ProtoEquipPolishStruct equip_polish_list = 4;
  for (int i = 0; i < this->equip_polish_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->equip_polish_list(i), target);
  }
  
  // optional .ProtoPairObj cost_jewel_amount = 5;
  if (has_cost_jewel_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->cost_jewel_amount(), target);
  }
  
  // optional .ProtoPairObj cost_lock_amount = 6;
  if (has_cost_lock_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->cost_lock_amount(), target);
  }
  
  // optional int32 cost_money_type = 7;
  if (has_cost_money_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->cost_money_type(), target);
  }
  
  // optional int32 cost_money_amount = 8;
  if (has_cost_money_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->cost_money_amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400619::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 is_special = 2;
    if (has_is_special()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_special());
    }
    
    // optional int32 luck_num = 3;
    if (has_luck_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->luck_num());
    }
    
    // optional .ProtoPairObj cost_jewel_amount = 5;
    if (has_cost_jewel_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cost_jewel_amount());
    }
    
    // optional .ProtoPairObj cost_lock_amount = 6;
    if (has_cost_lock_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cost_lock_amount());
    }
    
    // optional int32 cost_money_type = 7;
    if (has_cost_money_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cost_money_type());
    }
    
    // optional int32 cost_money_amount = 8;
    if (has_cost_money_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cost_money_amount());
    }
    
  }
  // repeated .ProtoEquipPolishStruct equip_polish_list = 4;
  total_size += 1 * this->equip_polish_list_size();
  for (int i = 0; i < this->equip_polish_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equip_polish_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400619::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400619* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400619*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400619::MergeFrom(const Proto51400619& from) {
  GOOGLE_CHECK_NE(&from, this);
  equip_polish_list_.MergeFrom(from.equip_polish_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_is_special()) {
      set_is_special(from.is_special());
    }
    if (from.has_luck_num()) {
      set_luck_num(from.luck_num());
    }
    if (from.has_cost_jewel_amount()) {
      mutable_cost_jewel_amount()->::ProtoPairObj::MergeFrom(from.cost_jewel_amount());
    }
    if (from.has_cost_lock_amount()) {
      mutable_cost_lock_amount()->::ProtoPairObj::MergeFrom(from.cost_lock_amount());
    }
    if (from.has_cost_money_type()) {
      set_cost_money_type(from.cost_money_type());
    }
    if (from.has_cost_money_amount()) {
      set_cost_money_amount(from.cost_money_amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400619::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400619::CopyFrom(const Proto51400619& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400619::IsInitialized() const {
  
  return true;
}

void Proto51400619::Swap(Proto51400619* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(is_special_, other->is_special_);
    std::swap(luck_num_, other->luck_num_);
    equip_polish_list_.Swap(&other->equip_polish_list_);
    std::swap(cost_jewel_amount_, other->cost_jewel_amount_);
    std::swap(cost_lock_amount_, other->cost_lock_amount_);
    std::swap(cost_money_type_, other->cost_money_type_);
    std::swap(cost_money_amount_, other->cost_money_amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400619::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400619_descriptor_;
  metadata.reflection = Proto51400619_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400620::kItemIdFieldNumber;
const int Proto11400620::kItemTypeFieldNumber;
const int Proto11400620::kItemIndexFieldNumber;
const int Proto11400620::kIsBatchFieldNumber;
#endif  // !_MSC_VER

Proto11400620::Proto11400620()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400620::InitAsDefaultInstance() {
}

Proto11400620::Proto11400620(const Proto11400620& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400620::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  item_type_ = 0;
  item_index_ = 0;
  is_batch_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400620::~Proto11400620() {
  SharedDtor();
}

void Proto11400620::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400620::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400620::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400620_descriptor_;
}

const Proto11400620& Proto11400620::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto11400620* Proto11400620::default_instance_ = NULL;

Proto11400620* Proto11400620::New() const {
  return new Proto11400620;
}

void Proto11400620::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    item_type_ = 0;
    item_index_ = 0;
    is_batch_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400620::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_type;
        break;
      }
      
      // optional int32 item_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_type_)));
          set_has_item_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_index;
        break;
      }
      
      // optional int32 item_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_index_)));
          set_has_item_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_is_batch;
        break;
      }
      
      // optional int32 is_batch = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_batch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_batch_)));
          set_has_is_batch();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400620::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 item_type = 2;
  if (has_item_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_type(), output);
  }
  
  // optional int32 item_index = 3;
  if (has_item_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_index(), output);
  }
  
  // optional int32 is_batch = 4;
  if (has_is_batch()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->is_batch(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400620::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 item_type = 2;
  if (has_item_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_type(), target);
  }
  
  // optional int32 item_index = 3;
  if (has_item_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_index(), target);
  }
  
  // optional int32 is_batch = 4;
  if (has_is_batch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->is_batch(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400620::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_type = 2;
    if (has_item_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_type());
    }
    
    // optional int32 item_index = 3;
    if (has_item_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_index());
    }
    
    // optional int32 is_batch = 4;
    if (has_is_batch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_batch());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400620::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400620* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400620*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400620::MergeFrom(const Proto11400620& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_type()) {
      set_item_type(from.item_type());
    }
    if (from.has_item_index()) {
      set_item_index(from.item_index());
    }
    if (from.has_is_batch()) {
      set_is_batch(from.is_batch());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400620::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400620::CopyFrom(const Proto11400620& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400620::IsInitialized() const {
  
  return true;
}

void Proto11400620::Swap(Proto11400620* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(item_type_, other->item_type_);
    std::swap(item_index_, other->item_index_);
    std::swap(is_batch_, other->is_batch_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400620::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400620_descriptor_;
  metadata.reflection = Proto11400620_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400620::kItemIdFieldNumber;
const int Proto51400620::kIsBatchFieldNumber;
const int Proto51400620::kAttrListFieldNumber;
const int Proto51400620::kLuckValueFieldNumber;
#endif  // !_MSC_VER

Proto51400620::Proto51400620()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400620::InitAsDefaultInstance() {
}

Proto51400620::Proto51400620(const Proto51400620& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400620::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  is_batch_ = 0;
  luck_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400620::~Proto51400620() {
  SharedDtor();
}

void Proto51400620::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400620::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400620::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400620_descriptor_;
}

const Proto51400620& Proto51400620::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto51400620* Proto51400620::default_instance_ = NULL;

Proto51400620* Proto51400620::New() const {
  return new Proto51400620;
}

void Proto51400620::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    is_batch_ = 0;
    luck_value_ = 0;
  }
  attr_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400620::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_batch;
        break;
      }
      
      // optional int32 is_batch = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_batch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_batch_)));
          set_has_is_batch();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_attr_list;
        break;
      }
      
      // repeated .ProtoEquipPolishStruct attr_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attr_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attr_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_attr_list;
        if (input->ExpectTag(32)) goto parse_luck_value;
        break;
      }
      
      // optional int32 luck_value = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_luck_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &luck_value_)));
          set_has_luck_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400620::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 is_batch = 2;
  if (has_is_batch()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_batch(), output);
  }
  
  // repeated .ProtoEquipPolishStruct attr_list = 3;
  for (int i = 0; i < this->attr_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->attr_list(i), output);
  }
  
  // optional int32 luck_value = 4;
  if (has_luck_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->luck_value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400620::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 is_batch = 2;
  if (has_is_batch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_batch(), target);
  }
  
  // repeated .ProtoEquipPolishStruct attr_list = 3;
  for (int i = 0; i < this->attr_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->attr_list(i), target);
  }
  
  // optional int32 luck_value = 4;
  if (has_luck_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->luck_value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400620::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 is_batch = 2;
    if (has_is_batch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_batch());
    }
    
    // optional int32 luck_value = 4;
    if (has_luck_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->luck_value());
    }
    
  }
  // repeated .ProtoEquipPolishStruct attr_list = 3;
  total_size += 1 * this->attr_list_size();
  for (int i = 0; i < this->attr_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attr_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400620::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400620* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400620*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400620::MergeFrom(const Proto51400620& from) {
  GOOGLE_CHECK_NE(&from, this);
  attr_list_.MergeFrom(from.attr_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_is_batch()) {
      set_is_batch(from.is_batch());
    }
    if (from.has_luck_value()) {
      set_luck_value(from.luck_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400620::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400620::CopyFrom(const Proto51400620& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400620::IsInitialized() const {
  
  return true;
}

void Proto51400620::Swap(Proto51400620* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(is_batch_, other->is_batch_);
    attr_list_.Swap(&other->attr_list_);
    std::swap(luck_value_, other->luck_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400620::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400620_descriptor_;
  metadata.reflection = Proto51400620_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400516::kBeastIdFieldNumber;
#endif  // !_MSC_VER

Proto11400516::Proto11400516()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400516::InitAsDefaultInstance() {
}

Proto11400516::Proto11400516(const Proto11400516& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400516::SharedCtor() {
  _cached_size_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400516::~Proto11400516() {
  SharedDtor();
}

void Proto11400516::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400516::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400516::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400516_descriptor_;
}

const Proto11400516& Proto11400516::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto11400516* Proto11400516::default_instance_ = NULL;

Proto11400516* Proto11400516::New() const {
  return new Proto11400516;
}

void Proto11400516::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    beast_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400516::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 beast_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400516::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->beast_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400516::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->beast_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400516::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 beast_id = 1;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400516::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400516* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400516*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400516::MergeFrom(const Proto11400516& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400516::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400516::CopyFrom(const Proto11400516& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400516::IsInitialized() const {
  
  return true;
}

void Proto11400516::Swap(Proto11400516* other) {
  if (other != this) {
    std::swap(beast_id_, other->beast_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400516::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400516_descriptor_;
  metadata.reflection = Proto11400516_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400621::kItemIdFieldNumber;
const int Proto11400621::kItemTypeFieldNumber;
const int Proto11400621::kItemIndexFieldNumber;
const int Proto11400621::kIsSelectFieldNumber;
const int Proto11400621::kSelectIndexFieldNumber;
const int Proto11400621::kLockListFieldNumber;
#endif  // !_MSC_VER

Proto11400621::Proto11400621()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400621::InitAsDefaultInstance() {
}

Proto11400621::Proto11400621(const Proto11400621& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400621::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  item_type_ = 0;
  item_index_ = 0;
  is_select_ = 0;
  select_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400621::~Proto11400621() {
  SharedDtor();
}

void Proto11400621::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400621::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400621::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400621_descriptor_;
}

const Proto11400621& Proto11400621::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto11400621* Proto11400621::default_instance_ = NULL;

Proto11400621* Proto11400621::New() const {
  return new Proto11400621;
}

void Proto11400621::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    item_type_ = 0;
    item_index_ = 0;
    is_select_ = 0;
    select_index_ = 0;
  }
  lock_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400621::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_type;
        break;
      }
      
      // optional int32 item_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_type_)));
          set_has_item_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_index;
        break;
      }
      
      // optional int32 item_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_index_)));
          set_has_item_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_is_select;
        break;
      }
      
      // optional int32 is_select = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_select:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_select_)));
          set_has_is_select();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_select_index;
        break;
      }
      
      // optional int32 select_index = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_select_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &select_index_)));
          set_has_select_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_lock_list;
        break;
      }
      
      // repeated int32 lock_list = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lock_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_lock_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_lock_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_lock_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400621::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 item_type = 2;
  if (has_item_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_type(), output);
  }
  
  // optional int32 item_index = 3;
  if (has_item_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_index(), output);
  }
  
  // optional int32 is_select = 4;
  if (has_is_select()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->is_select(), output);
  }
  
  // optional int32 select_index = 5;
  if (has_select_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->select_index(), output);
  }
  
  // repeated int32 lock_list = 6;
  for (int i = 0; i < this->lock_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->lock_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400621::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 item_type = 2;
  if (has_item_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_type(), target);
  }
  
  // optional int32 item_index = 3;
  if (has_item_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_index(), target);
  }
  
  // optional int32 is_select = 4;
  if (has_is_select()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->is_select(), target);
  }
  
  // optional int32 select_index = 5;
  if (has_select_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->select_index(), target);
  }
  
  // repeated int32 lock_list = 6;
  for (int i = 0; i < this->lock_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->lock_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400621::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_type = 2;
    if (has_item_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_type());
    }
    
    // optional int32 item_index = 3;
    if (has_item_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_index());
    }
    
    // optional int32 is_select = 4;
    if (has_is_select()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_select());
    }
    
    // optional int32 select_index = 5;
    if (has_select_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->select_index());
    }
    
  }
  // repeated int32 lock_list = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->lock_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->lock_list(i));
    }
    total_size += 1 * this->lock_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400621::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400621* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400621*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400621::MergeFrom(const Proto11400621& from) {
  GOOGLE_CHECK_NE(&from, this);
  lock_list_.MergeFrom(from.lock_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_type()) {
      set_item_type(from.item_type());
    }
    if (from.has_item_index()) {
      set_item_index(from.item_index());
    }
    if (from.has_is_select()) {
      set_is_select(from.is_select());
    }
    if (from.has_select_index()) {
      set_select_index(from.select_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400621::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400621::CopyFrom(const Proto11400621& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400621::IsInitialized() const {
  
  return true;
}

void Proto11400621::Swap(Proto11400621* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(item_type_, other->item_type_);
    std::swap(item_index_, other->item_index_);
    std::swap(is_select_, other->is_select_);
    std::swap(select_index_, other->select_index_);
    lock_list_.Swap(&other->lock_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400621::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400621_descriptor_;
  metadata.reflection = Proto11400621_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400621::kItemIdFieldNumber;
const int Proto51400621::kIsSelectFieldNumber;
const int Proto51400621::kSelectResultFieldNumber;
#endif  // !_MSC_VER

Proto51400621::Proto51400621()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400621::InitAsDefaultInstance() {
  select_result_ = const_cast< ::ProtoEquipPolishStruct*>(&::ProtoEquipPolishStruct::default_instance());
}

Proto51400621::Proto51400621(const Proto51400621& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400621::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  is_select_ = 0;
  select_result_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400621::~Proto51400621() {
  SharedDtor();
}

void Proto51400621::SharedDtor() {
  if (this != default_instance_) {
    delete select_result_;
  }
}

void Proto51400621::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400621::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400621_descriptor_;
}

const Proto51400621& Proto51400621::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto51400621* Proto51400621::default_instance_ = NULL;

Proto51400621* Proto51400621::New() const {
  return new Proto51400621;
}

void Proto51400621::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    is_select_ = 0;
    if (has_select_result()) {
      if (select_result_ != NULL) select_result_->::ProtoEquipPolishStruct::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400621::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_select;
        break;
      }
      
      // optional int32 is_select = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_select:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_select_)));
          set_has_is_select();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_select_result;
        break;
      }
      
      // optional .ProtoEquipPolishStruct select_result = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_select_result:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_select_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400621::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 is_select = 2;
  if (has_is_select()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_select(), output);
  }
  
  // optional .ProtoEquipPolishStruct select_result = 3;
  if (has_select_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->select_result(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400621::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 is_select = 2;
  if (has_is_select()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_select(), target);
  }
  
  // optional .ProtoEquipPolishStruct select_result = 3;
  if (has_select_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->select_result(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400621::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 is_select = 2;
    if (has_is_select()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_select());
    }
    
    // optional .ProtoEquipPolishStruct select_result = 3;
    if (has_select_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->select_result());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400621::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400621* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400621*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400621::MergeFrom(const Proto51400621& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_is_select()) {
      set_is_select(from.is_select());
    }
    if (from.has_select_result()) {
      mutable_select_result()->::ProtoEquipPolishStruct::MergeFrom(from.select_result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400621::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400621::CopyFrom(const Proto51400621& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400621::IsInitialized() const {
  
  return true;
}

void Proto51400621::Swap(Proto51400621* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(is_select_, other->is_select_);
    std::swap(select_result_, other->select_result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400621::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400621_descriptor_;
  metadata.reflection = Proto51400621_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400345::kTaskIdFieldNumber;
#endif  // !_MSC_VER

Proto11400345::Proto11400345()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400345::InitAsDefaultInstance() {
}

Proto11400345::Proto11400345(const Proto11400345& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400345::SharedCtor() {
  _cached_size_ = 0;
  task_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400345::~Proto11400345() {
  SharedDtor();
}

void Proto11400345::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400345::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400345::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400345_descriptor_;
}

const Proto11400345& Proto11400345::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto11400345* Proto11400345::default_instance_ = NULL;

Proto11400345* Proto11400345::New() const {
  return new Proto11400345;
}

void Proto11400345::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    task_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400345::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 task_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
          set_has_task_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400345::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->task_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400345::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->task_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400345::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 task_id = 1;
    if (has_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400345::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400345* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400345*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400345::MergeFrom(const Proto11400345& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_task_id()) {
      set_task_id(from.task_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400345::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400345::CopyFrom(const Proto11400345& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400345::IsInitialized() const {
  
  return true;
}

void Proto11400345::Swap(Proto11400345* other) {
  if (other != this) {
    std::swap(task_id_, other->task_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400345::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400345_descriptor_;
  metadata.reflection = Proto11400345_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400345::kTaskIdFieldNumber;
const int Proto51400345::kStarLevelFieldNumber;
#endif  // !_MSC_VER

Proto51400345::Proto51400345()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400345::InitAsDefaultInstance() {
}

Proto51400345::Proto51400345(const Proto51400345& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400345::SharedCtor() {
  _cached_size_ = 0;
  task_id_ = 0;
  star_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400345::~Proto51400345() {
  SharedDtor();
}

void Proto51400345::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400345::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400345::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400345_descriptor_;
}

const Proto51400345& Proto51400345::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto51400345* Proto51400345::default_instance_ = NULL;

Proto51400345* Proto51400345::New() const {
  return new Proto51400345;
}

void Proto51400345::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    task_id_ = 0;
    star_level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400345::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 task_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
          set_has_task_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_star_level;
        break;
      }
      
      // optional int32 star_level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_star_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &star_level_)));
          set_has_star_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400345::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->task_id(), output);
  }
  
  // optional int32 star_level = 2;
  if (has_star_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->star_level(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400345::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->task_id(), target);
  }
  
  // optional int32 star_level = 2;
  if (has_star_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->star_level(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400345::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 task_id = 1;
    if (has_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task_id());
    }
    
    // optional int32 star_level = 2;
    if (has_star_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->star_level());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400345::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400345* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400345*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400345::MergeFrom(const Proto51400345& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_task_id()) {
      set_task_id(from.task_id());
    }
    if (from.has_star_level()) {
      set_star_level(from.star_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400345::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400345::CopyFrom(const Proto51400345& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400345::IsInitialized() const {
  
  return true;
}

void Proto51400345::Swap(Proto51400345* other) {
  if (other != this) {
    std::swap(task_id_, other->task_id_);
    std::swap(star_level_, other->star_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400345::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400345_descriptor_;
  metadata.reflection = Proto51400345_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400346::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto11400346::Proto11400346()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400346::InitAsDefaultInstance() {
}

Proto11400346::Proto11400346(const Proto11400346& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400346::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400346::~Proto11400346() {
  SharedDtor();
}

void Proto11400346::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400346::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400346::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400346_descriptor_;
}

const Proto11400346& Proto11400346::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto11400346* Proto11400346::default_instance_ = NULL;

Proto11400346* Proto11400346::New() const {
  return new Proto11400346;
}

void Proto11400346::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400346::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400346::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400346::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400346::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400346::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400346* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400346*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400346::MergeFrom(const Proto11400346& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400346::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400346::CopyFrom(const Proto11400346& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400346::IsInitialized() const {
  
  return true;
}

void Proto11400346::Swap(Proto11400346* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400346::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400346_descriptor_;
  metadata.reflection = Proto11400346_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400346::kTypeFieldNumber;
const int Proto51400346::kMoneyFieldNumber;
const int Proto51400346::kReturnMoneyFieldNumber;
const int Proto51400346::kScaleFieldNumber;
#endif  // !_MSC_VER

Proto51400346::Proto51400346()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400346::InitAsDefaultInstance() {
  money_ = const_cast< ::ProtoMoney*>(&::ProtoMoney::default_instance());
  return_money_ = const_cast< ::ProtoMoney*>(&::ProtoMoney::default_instance());
}

Proto51400346::Proto51400346(const Proto51400346& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400346::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  money_ = NULL;
  return_money_ = NULL;
  scale_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400346::~Proto51400346() {
  SharedDtor();
}

void Proto51400346::SharedDtor() {
  if (this != default_instance_) {
    delete money_;
    delete return_money_;
  }
}

void Proto51400346::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400346::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400346_descriptor_;
}

const Proto51400346& Proto51400346::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto51400346* Proto51400346::default_instance_ = NULL;

Proto51400346* Proto51400346::New() const {
  return new Proto51400346;
}

void Proto51400346::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_money()) {
      if (money_ != NULL) money_->::ProtoMoney::Clear();
    }
    if (has_return_money()) {
      if (return_money_ != NULL) return_money_->::ProtoMoney::Clear();
    }
    scale_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400346::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_money;
        break;
      }
      
      // optional .ProtoMoney money = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_money:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_money()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_return_money;
        break;
      }
      
      // optional .ProtoMoney return_money = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_return_money:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_return_money()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_scale;
        break;
      }
      
      // optional int32 scale = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scale:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scale_)));
          set_has_scale();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400346::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional .ProtoMoney money = 2;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->money(), output);
  }
  
  // optional .ProtoMoney return_money = 3;
  if (has_return_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->return_money(), output);
  }
  
  // optional int32 scale = 4;
  if (has_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->scale(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400346::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional .ProtoMoney money = 2;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->money(), target);
  }
  
  // optional .ProtoMoney return_money = 3;
  if (has_return_money()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->return_money(), target);
  }
  
  // optional int32 scale = 4;
  if (has_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->scale(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400346::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional .ProtoMoney money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->money());
    }
    
    // optional .ProtoMoney return_money = 3;
    if (has_return_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->return_money());
    }
    
    // optional int32 scale = 4;
    if (has_scale()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scale());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400346::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400346* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400346*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400346::MergeFrom(const Proto51400346& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_money()) {
      mutable_money()->::ProtoMoney::MergeFrom(from.money());
    }
    if (from.has_return_money()) {
      mutable_return_money()->::ProtoMoney::MergeFrom(from.return_money());
    }
    if (from.has_scale()) {
      set_scale(from.scale());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400346::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400346::CopyFrom(const Proto51400346& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400346::IsInitialized() const {
  
  return true;
}

void Proto51400346::Swap(Proto51400346* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(money_, other->money_);
    std::swap(return_money_, other->return_money_);
    std::swap(scale_, other->scale_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400346::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400346_descriptor_;
  metadata.reflection = Proto51400346_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400347::kLeftTimesFieldNumber;
const int Proto51400347::kTotalTimesFieldNumber;
const int Proto51400347::kTaskListFieldNumber;
#endif  // !_MSC_VER

Proto51400347::Proto51400347()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400347::InitAsDefaultInstance() {
}

Proto51400347::Proto51400347(const Proto51400347& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400347::SharedCtor() {
  _cached_size_ = 0;
  left_times_ = 0;
  total_times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400347::~Proto51400347() {
  SharedDtor();
}

void Proto51400347::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400347::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400347::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400347_descriptor_;
}

const Proto51400347& Proto51400347::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto51400347* Proto51400347::default_instance_ = NULL;

Proto51400347* Proto51400347::New() const {
  return new Proto51400347;
}

void Proto51400347::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_times_ = 0;
    total_times_ = 0;
  }
  task_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400347::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_times = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_times_)));
          set_has_left_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_times;
        break;
      }
      
      // optional int32 total_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_times_)));
          set_has_total_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_task_list;
        break;
      }
      
      // repeated .ProtoTrialTask task_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_task_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_task_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_task_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400347::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_times = 1;
  if (has_left_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_times(), output);
  }
  
  // optional int32 total_times = 2;
  if (has_total_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_times(), output);
  }
  
  // repeated .ProtoTrialTask task_list = 3;
  for (int i = 0; i < this->task_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->task_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400347::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_times = 1;
  if (has_left_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_times(), target);
  }
  
  // optional int32 total_times = 2;
  if (has_total_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_times(), target);
  }
  
  // repeated .ProtoTrialTask task_list = 3;
  for (int i = 0; i < this->task_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->task_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400347::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_times = 1;
    if (has_left_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_times());
    }
    
    // optional int32 total_times = 2;
    if (has_total_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_times());
    }
    
  }
  // repeated .ProtoTrialTask task_list = 3;
  total_size += 1 * this->task_list_size();
  for (int i = 0; i < this->task_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->task_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400347::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400347* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400347*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400347::MergeFrom(const Proto51400347& from) {
  GOOGLE_CHECK_NE(&from, this);
  task_list_.MergeFrom(from.task_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_times()) {
      set_left_times(from.left_times());
    }
    if (from.has_total_times()) {
      set_total_times(from.total_times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400347::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400347::CopyFrom(const Proto51400347& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400347::IsInitialized() const {
  
  return true;
}

void Proto51400347::Swap(Proto51400347* other) {
  if (other != this) {
    std::swap(left_times_, other->left_times_);
    std::swap(total_times_, other->total_times_);
    task_list_.Swap(&other->task_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400347::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400347_descriptor_;
  metadata.reflection = Proto51400347_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101402::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto10101402::Proto10101402()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101402::InitAsDefaultInstance() {
}

Proto10101402::Proto10101402(const Proto10101402& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101402::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101402::~Proto10101402() {
  SharedDtor();
}

void Proto10101402::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101402::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101402::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101402_descriptor_;
}

const Proto10101402& Proto10101402::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto10101402* Proto10101402::default_instance_ = NULL;

Proto10101402* Proto10101402::New() const {
  return new Proto10101402;
}

void Proto10101402::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101402::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101402::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101402::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101402::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101402::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101402* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101402*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101402::MergeFrom(const Proto10101402& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101402::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101402::CopyFrom(const Proto10101402& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101402::IsInitialized() const {
  
  return true;
}

void Proto10101402::Swap(Proto10101402* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101402::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101402_descriptor_;
  metadata.reflection = Proto10101402_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101403::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto10101403::Proto10101403()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101403::InitAsDefaultInstance() {
}

Proto10101403::Proto10101403(const Proto10101403& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101403::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101403::~Proto10101403() {
  SharedDtor();
}

void Proto10101403::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101403::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101403::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101403_descriptor_;
}

const Proto10101403& Proto10101403::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto10101403* Proto10101403::default_instance_ = NULL;

Proto10101403* Proto10101403::New() const {
  return new Proto10101403;
}

void Proto10101403::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101403::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101403::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101403::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101403::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101403::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101403* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101403*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101403::MergeFrom(const Proto10101403& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101403::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101403::CopyFrom(const Proto10101403& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101403::IsInitialized() const {
  
  return true;
}

void Proto10101403::Swap(Proto10101403* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101403::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101403_descriptor_;
  metadata.reflection = Proto10101403_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101405::kTypeFieldNumber;
const int Proto10101405::kItemIdFieldNumber;
const int Proto10101405::kItemNumFieldNumber;
const int Proto10101405::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto10101405::Proto10101405()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101405::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto10101405::Proto10101405(const Proto10101405& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101405::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  item_id_ = 0;
  item_num_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101405::~Proto10101405() {
  SharedDtor();
}

void Proto10101405::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto10101405::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101405::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101405_descriptor_;
}

const Proto10101405& Proto10101405::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto10101405* Proto10101405::default_instance_ = NULL;

Proto10101405* Proto10101405::New() const {
  return new Proto10101405;
}

void Proto10101405::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    item_id_ = 0;
    item_num_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101405::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }
      
      // optional int32 item_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_num;
        break;
      }
      
      // optional int32 item_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
          set_has_item_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101405::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_id(), output);
  }
  
  // optional int32 item_num = 3;
  if (has_item_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_num(), output);
  }
  
  // optional .ProtoThreeObj other_info = 4;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101405::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_id(), target);
  }
  
  // optional int32 item_num = 3;
  if (has_item_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_num(), target);
  }
  
  // optional .ProtoThreeObj other_info = 4;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101405::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_num = 3;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_num());
    }
    
    // optional .ProtoThreeObj other_info = 4;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101405::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101405* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101405*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101405::MergeFrom(const Proto10101405& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_num()) {
      set_item_num(from.item_num());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101405::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101405::CopyFrom(const Proto10101405& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101405::IsInitialized() const {
  
  return true;
}

void Proto10101405::Swap(Proto10101405* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(item_id_, other->item_id_);
    std::swap(item_num_, other->item_num_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101405::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101405_descriptor_;
  metadata.reflection = Proto10101405_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101406::kItemIdFieldNumber;
const int Proto10101406::kReceiverIdFieldNumber;
const int Proto10101406::kItemNumFieldNumber;
const int Proto10101406::kAutoBuyFieldNumber;
const int Proto10101406::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto10101406::Proto10101406()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101406::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto10101406::Proto10101406(const Proto10101406& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101406::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  receiver_id_ = GOOGLE_LONGLONG(0);
  item_num_ = 0;
  auto_buy_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101406::~Proto10101406() {
  SharedDtor();
}

void Proto10101406::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto10101406::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101406::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101406_descriptor_;
}

const Proto10101406& Proto10101406::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto10101406* Proto10101406::default_instance_ = NULL;

Proto10101406* Proto10101406::New() const {
  return new Proto10101406;
}

void Proto10101406::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    receiver_id_ = GOOGLE_LONGLONG(0);
    item_num_ = 0;
    auto_buy_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101406::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_receiver_id;
        break;
      }
      
      // optional int64 receiver_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_receiver_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &receiver_id_)));
          set_has_receiver_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_num;
        break;
      }
      
      // optional int32 item_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
          set_has_item_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_auto_buy;
        break;
      }
      
      // optional int32 auto_buy = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_buy_)));
          set_has_auto_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101406::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int64 receiver_id = 2;
  if (has_receiver_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->receiver_id(), output);
  }
  
  // optional int32 item_num = 3;
  if (has_item_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_num(), output);
  }
  
  // optional int32 auto_buy = 4;
  if (has_auto_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->auto_buy(), output);
  }
  
  // optional .ProtoThreeObj other_info = 5;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101406::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int64 receiver_id = 2;
  if (has_receiver_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->receiver_id(), target);
  }
  
  // optional int32 item_num = 3;
  if (has_item_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_num(), target);
  }
  
  // optional int32 auto_buy = 4;
  if (has_auto_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->auto_buy(), target);
  }
  
  // optional .ProtoThreeObj other_info = 5;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101406::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int64 receiver_id = 2;
    if (has_receiver_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->receiver_id());
    }
    
    // optional int32 item_num = 3;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_num());
    }
    
    // optional int32 auto_buy = 4;
    if (has_auto_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_buy());
    }
    
    // optional .ProtoThreeObj other_info = 5;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101406::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101406* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101406*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101406::MergeFrom(const Proto10101406& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_receiver_id()) {
      set_receiver_id(from.receiver_id());
    }
    if (from.has_item_num()) {
      set_item_num(from.item_num());
    }
    if (from.has_auto_buy()) {
      set_auto_buy(from.auto_buy());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101406::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101406::CopyFrom(const Proto10101406& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101406::IsInitialized() const {
  
  return true;
}

void Proto10101406::Swap(Proto10101406* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(receiver_id_, other->receiver_id_);
    std::swap(item_num_, other->item_num_);
    std::swap(auto_buy_, other->auto_buy_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101406::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101406_descriptor_;
  metadata.reflection = Proto10101406_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101408::kReplyFieldNumber;
#endif  // !_MSC_VER

Proto10101408::Proto10101408()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101408::InitAsDefaultInstance() {
}

Proto10101408::Proto10101408(const Proto10101408& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101408::SharedCtor() {
  _cached_size_ = 0;
  reply_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101408::~Proto10101408() {
  SharedDtor();
}

void Proto10101408::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101408::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101408::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101408_descriptor_;
}

const Proto10101408& Proto10101408::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto10101408* Proto10101408::default_instance_ = NULL;

Proto10101408* Proto10101408::New() const {
  return new Proto10101408;
}

void Proto10101408::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    reply_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101408::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 reply = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reply_)));
          set_has_reply();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101408::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 reply = 1;
  if (has_reply()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reply(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101408::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 reply = 1;
  if (has_reply()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reply(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101408::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 reply = 1;
    if (has_reply()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reply());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101408::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101408* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101408*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101408::MergeFrom(const Proto10101408& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reply()) {
      set_reply(from.reply());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101408::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101408::CopyFrom(const Proto10101408& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101408::IsInitialized() const {
  
  return true;
}

void Proto10101408::Swap(Proto10101408* other) {
  if (other != this) {
    std::swap(reply_, other->reply_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101408::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101408_descriptor_;
  metadata.reflection = Proto10101408_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101401::kPartnerIdFieldNumber;
const int Proto50101401::kPartnetNameFieldNumber;
const int Proto50101401::kPartnerLevelFieldNumber;
const int Proto50101401::kWedLimitFieldNumber;
const int Proto50101401::kSexLimitFieldNumber;
const int Proto50101401::kLevelLimitFieldNumber;
const int Proto50101401::kOnlineLimitFieldNumber;
const int Proto50101401::kIntimacyLimitFieldNumber;
const int Proto50101401::kRingLimitFieldNumber;
const int Proto50101401::kTeamLimitFieldNumber;
const int Proto50101401::kSideRingLevelFieldNumber;
const int Proto50101401::kSelfRingLevelFieldNumber;
const int Proto50101401::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto50101401::Proto50101401()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101401::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto50101401::Proto50101401(const Proto50101401& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101401::SharedCtor() {
  _cached_size_ = 0;
  partner_id_ = GOOGLE_LONGLONG(0);
  partnet_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  partner_level_ = 0;
  wed_limit_ = 0;
  sex_limit_ = 0;
  level_limit_ = 0;
  online_limit_ = 0;
  intimacy_limit_ = 0;
  ring_limit_ = 0;
  team_limit_ = 0;
  side_ring_level_ = 0;
  self_ring_level_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101401::~Proto50101401() {
  SharedDtor();
}

void Proto50101401::SharedDtor() {
  if (partnet_name_ != &::google::protobuf::internal::kEmptyString) {
    delete partnet_name_;
  }
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto50101401::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101401::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101401_descriptor_;
}

const Proto50101401& Proto50101401::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto50101401* Proto50101401::default_instance_ = NULL;

Proto50101401* Proto50101401::New() const {
  return new Proto50101401;
}

void Proto50101401::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    partner_id_ = GOOGLE_LONGLONG(0);
    if (has_partnet_name()) {
      if (partnet_name_ != &::google::protobuf::internal::kEmptyString) {
        partnet_name_->clear();
      }
    }
    partner_level_ = 0;
    wed_limit_ = 0;
    sex_limit_ = 0;
    level_limit_ = 0;
    online_limit_ = 0;
    intimacy_limit_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    ring_limit_ = 0;
    team_limit_ = 0;
    side_ring_level_ = 0;
    self_ring_level_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101401::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 partner_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &partner_id_)));
          set_has_partner_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_partnet_name;
        break;
      }
      
      // optional string partnet_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_partnet_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partnet_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->partnet_name().data(), this->partnet_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_partner_level;
        break;
      }
      
      // optional int32 partner_level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_partner_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partner_level_)));
          set_has_partner_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_wed_limit;
        break;
      }
      
      // optional int32 wed_limit = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wed_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wed_limit_)));
          set_has_wed_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_sex_limit;
        break;
      }
      
      // optional int32 sex_limit = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sex_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_limit_)));
          set_has_sex_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_level_limit;
        break;
      }
      
      // optional int32 level_limit = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_limit_)));
          set_has_level_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_online_limit;
        break;
      }
      
      // optional int32 online_limit = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_online_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &online_limit_)));
          set_has_online_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_intimacy_limit;
        break;
      }
      
      // optional int32 intimacy_limit = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_intimacy_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intimacy_limit_)));
          set_has_intimacy_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_ring_limit;
        break;
      }
      
      // optional int32 ring_limit = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ring_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ring_limit_)));
          set_has_ring_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_team_limit;
        break;
      }
      
      // optional int32 team_limit = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_team_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_limit_)));
          set_has_team_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_side_ring_level;
        break;
      }
      
      // optional int32 side_ring_level = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_side_ring_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &side_ring_level_)));
          set_has_side_ring_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_self_ring_level;
        break;
      }
      
      // optional int32 self_ring_level = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_self_ring_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &self_ring_level_)));
          set_has_self_ring_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101401::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 partner_id = 1;
  if (has_partner_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->partner_id(), output);
  }
  
  // optional string partnet_name = 2;
  if (has_partnet_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->partnet_name().data(), this->partnet_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->partnet_name(), output);
  }
  
  // optional int32 partner_level = 3;
  if (has_partner_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->partner_level(), output);
  }
  
  // optional int32 wed_limit = 4;
  if (has_wed_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->wed_limit(), output);
  }
  
  // optional int32 sex_limit = 5;
  if (has_sex_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sex_limit(), output);
  }
  
  // optional int32 level_limit = 6;
  if (has_level_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->level_limit(), output);
  }
  
  // optional int32 online_limit = 7;
  if (has_online_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->online_limit(), output);
  }
  
  // optional int32 intimacy_limit = 8;
  if (has_intimacy_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->intimacy_limit(), output);
  }
  
  // optional int32 ring_limit = 9;
  if (has_ring_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->ring_limit(), output);
  }
  
  // optional int32 team_limit = 10;
  if (has_team_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->team_limit(), output);
  }
  
  // optional int32 side_ring_level = 11;
  if (has_side_ring_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->side_ring_level(), output);
  }
  
  // optional int32 self_ring_level = 12;
  if (has_self_ring_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->self_ring_level(), output);
  }
  
  // optional .ProtoThreeObj other_info = 13;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101401::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 partner_id = 1;
  if (has_partner_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->partner_id(), target);
  }
  
  // optional string partnet_name = 2;
  if (has_partnet_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->partnet_name().data(), this->partnet_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->partnet_name(), target);
  }
  
  // optional int32 partner_level = 3;
  if (has_partner_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->partner_level(), target);
  }
  
  // optional int32 wed_limit = 4;
  if (has_wed_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->wed_limit(), target);
  }
  
  // optional int32 sex_limit = 5;
  if (has_sex_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sex_limit(), target);
  }
  
  // optional int32 level_limit = 6;
  if (has_level_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->level_limit(), target);
  }
  
  // optional int32 online_limit = 7;
  if (has_online_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->online_limit(), target);
  }
  
  // optional int32 intimacy_limit = 8;
  if (has_intimacy_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->intimacy_limit(), target);
  }
  
  // optional int32 ring_limit = 9;
  if (has_ring_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->ring_limit(), target);
  }
  
  // optional int32 team_limit = 10;
  if (has_team_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->team_limit(), target);
  }
  
  // optional int32 side_ring_level = 11;
  if (has_side_ring_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->side_ring_level(), target);
  }
  
  // optional int32 self_ring_level = 12;
  if (has_self_ring_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->self_ring_level(), target);
  }
  
  // optional .ProtoThreeObj other_info = 13;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101401::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 partner_id = 1;
    if (has_partner_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->partner_id());
    }
    
    // optional string partnet_name = 2;
    if (has_partnet_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->partnet_name());
    }
    
    // optional int32 partner_level = 3;
    if (has_partner_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->partner_level());
    }
    
    // optional int32 wed_limit = 4;
    if (has_wed_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wed_limit());
    }
    
    // optional int32 sex_limit = 5;
    if (has_sex_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex_limit());
    }
    
    // optional int32 level_limit = 6;
    if (has_level_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level_limit());
    }
    
    // optional int32 online_limit = 7;
    if (has_online_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->online_limit());
    }
    
    // optional int32 intimacy_limit = 8;
    if (has_intimacy_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->intimacy_limit());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 ring_limit = 9;
    if (has_ring_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ring_limit());
    }
    
    // optional int32 team_limit = 10;
    if (has_team_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team_limit());
    }
    
    // optional int32 side_ring_level = 11;
    if (has_side_ring_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->side_ring_level());
    }
    
    // optional int32 self_ring_level = 12;
    if (has_self_ring_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->self_ring_level());
    }
    
    // optional .ProtoThreeObj other_info = 13;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101401::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101401* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101401*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101401::MergeFrom(const Proto50101401& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_partner_id()) {
      set_partner_id(from.partner_id());
    }
    if (from.has_partnet_name()) {
      set_partnet_name(from.partnet_name());
    }
    if (from.has_partner_level()) {
      set_partner_level(from.partner_level());
    }
    if (from.has_wed_limit()) {
      set_wed_limit(from.wed_limit());
    }
    if (from.has_sex_limit()) {
      set_sex_limit(from.sex_limit());
    }
    if (from.has_level_limit()) {
      set_level_limit(from.level_limit());
    }
    if (from.has_online_limit()) {
      set_online_limit(from.online_limit());
    }
    if (from.has_intimacy_limit()) {
      set_intimacy_limit(from.intimacy_limit());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_ring_limit()) {
      set_ring_limit(from.ring_limit());
    }
    if (from.has_team_limit()) {
      set_team_limit(from.team_limit());
    }
    if (from.has_side_ring_level()) {
      set_side_ring_level(from.side_ring_level());
    }
    if (from.has_self_ring_level()) {
      set_self_ring_level(from.self_ring_level());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101401::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101401::CopyFrom(const Proto50101401& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101401::IsInitialized() const {
  
  return true;
}

void Proto50101401::Swap(Proto50101401* other) {
  if (other != this) {
    std::swap(partner_id_, other->partner_id_);
    std::swap(partnet_name_, other->partnet_name_);
    std::swap(partner_level_, other->partner_level_);
    std::swap(wed_limit_, other->wed_limit_);
    std::swap(sex_limit_, other->sex_limit_);
    std::swap(level_limit_, other->level_limit_);
    std::swap(online_limit_, other->online_limit_);
    std::swap(intimacy_limit_, other->intimacy_limit_);
    std::swap(ring_limit_, other->ring_limit_);
    std::swap(team_limit_, other->team_limit_);
    std::swap(side_ring_level_, other->side_ring_level_);
    std::swap(self_ring_level_, other->self_ring_level_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101401::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101401_descriptor_;
  metadata.reflection = Proto50101401_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101402::kLeaderIdFieldNumber;
const int Proto50101402::kLeaderNameFieldNumber;
const int Proto50101402::kTeamerIdFieldNumber;
const int Proto50101402::kTeamerNameFieldNumber;
const int Proto50101402::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto50101402::Proto50101402()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101402::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto50101402::Proto50101402(const Proto50101402& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101402::SharedCtor() {
  _cached_size_ = 0;
  leader_id_ = GOOGLE_LONGLONG(0);
  leader_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  teamer_id_ = GOOGLE_LONGLONG(0);
  teamer_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101402::~Proto50101402() {
  SharedDtor();
}

void Proto50101402::SharedDtor() {
  if (leader_name_ != &::google::protobuf::internal::kEmptyString) {
    delete leader_name_;
  }
  if (teamer_name_ != &::google::protobuf::internal::kEmptyString) {
    delete teamer_name_;
  }
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto50101402::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101402::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101402_descriptor_;
}

const Proto50101402& Proto50101402::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto50101402* Proto50101402::default_instance_ = NULL;

Proto50101402* Proto50101402::New() const {
  return new Proto50101402;
}

void Proto50101402::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    leader_id_ = GOOGLE_LONGLONG(0);
    if (has_leader_name()) {
      if (leader_name_ != &::google::protobuf::internal::kEmptyString) {
        leader_name_->clear();
      }
    }
    teamer_id_ = GOOGLE_LONGLONG(0);
    if (has_teamer_name()) {
      if (teamer_name_ != &::google::protobuf::internal::kEmptyString) {
        teamer_name_->clear();
      }
    }
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101402::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 leader_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &leader_id_)));
          set_has_leader_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_leader_name;
        break;
      }
      
      // optional string leader_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_leader_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->leader_name().data(), this->leader_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_teamer_id;
        break;
      }
      
      // optional int64 teamer_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_teamer_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &teamer_id_)));
          set_has_teamer_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_teamer_name;
        break;
      }
      
      // optional string teamer_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_teamer_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_teamer_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->teamer_name().data(), this->teamer_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101402::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 leader_id = 1;
  if (has_leader_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->leader_id(), output);
  }
  
  // optional string leader_name = 2;
  if (has_leader_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leader_name().data(), this->leader_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->leader_name(), output);
  }
  
  // optional int64 teamer_id = 3;
  if (has_teamer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->teamer_id(), output);
  }
  
  // optional string teamer_name = 4;
  if (has_teamer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->teamer_name().data(), this->teamer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->teamer_name(), output);
  }
  
  // optional .ProtoThreeObj other_info = 5;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101402::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 leader_id = 1;
  if (has_leader_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->leader_id(), target);
  }
  
  // optional string leader_name = 2;
  if (has_leader_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leader_name().data(), this->leader_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->leader_name(), target);
  }
  
  // optional int64 teamer_id = 3;
  if (has_teamer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->teamer_id(), target);
  }
  
  // optional string teamer_name = 4;
  if (has_teamer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->teamer_name().data(), this->teamer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->teamer_name(), target);
  }
  
  // optional .ProtoThreeObj other_info = 5;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101402::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 leader_id = 1;
    if (has_leader_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->leader_id());
    }
    
    // optional string leader_name = 2;
    if (has_leader_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->leader_name());
    }
    
    // optional int64 teamer_id = 3;
    if (has_teamer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->teamer_id());
    }
    
    // optional string teamer_name = 4;
    if (has_teamer_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->teamer_name());
    }
    
    // optional .ProtoThreeObj other_info = 5;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101402::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101402* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101402*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101402::MergeFrom(const Proto50101402& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_leader_id()) {
      set_leader_id(from.leader_id());
    }
    if (from.has_leader_name()) {
      set_leader_name(from.leader_name());
    }
    if (from.has_teamer_id()) {
      set_teamer_id(from.teamer_id());
    }
    if (from.has_teamer_name()) {
      set_teamer_name(from.teamer_name());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101402::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101402::CopyFrom(const Proto50101402& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101402::IsInitialized() const {
  
  return true;
}

void Proto50101402::Swap(Proto50101402* other) {
  if (other != this) {
    std::swap(leader_id_, other->leader_id_);
    std::swap(leader_name_, other->leader_name_);
    std::swap(teamer_id_, other->teamer_id_);
    std::swap(teamer_name_, other->teamer_name_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101402::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101402_descriptor_;
  metadata.reflection = Proto50101402_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101406::kItemIdFieldNumber;
const int Proto50101406::kSenderIdFieldNumber;
const int Proto50101406::kSenderNameFieldNumber;
const int Proto50101406::kReceiverIdFieldNumber;
const int Proto50101406::kReceiverNameFieldNumber;
const int Proto50101406::kOtherInfoFieldNumber;
const int Proto50101406::kItemNumFieldNumber;
#endif  // !_MSC_VER

Proto50101406::Proto50101406()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101406::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto50101406::Proto50101406(const Proto50101406& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101406::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  sender_id_ = GOOGLE_LONGLONG(0);
  sender_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  receiver_id_ = GOOGLE_LONGLONG(0);
  receiver_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  other_info_ = NULL;
  item_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101406::~Proto50101406() {
  SharedDtor();
}

void Proto50101406::SharedDtor() {
  if (sender_name_ != &::google::protobuf::internal::kEmptyString) {
    delete sender_name_;
  }
  if (receiver_name_ != &::google::protobuf::internal::kEmptyString) {
    delete receiver_name_;
  }
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto50101406::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101406::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101406_descriptor_;
}

const Proto50101406& Proto50101406::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto50101406* Proto50101406::default_instance_ = NULL;

Proto50101406* Proto50101406::New() const {
  return new Proto50101406;
}

void Proto50101406::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    sender_id_ = GOOGLE_LONGLONG(0);
    if (has_sender_name()) {
      if (sender_name_ != &::google::protobuf::internal::kEmptyString) {
        sender_name_->clear();
      }
    }
    receiver_id_ = GOOGLE_LONGLONG(0);
    if (has_receiver_name()) {
      if (receiver_name_ != &::google::protobuf::internal::kEmptyString) {
        receiver_name_->clear();
      }
    }
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
    item_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101406::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sender_id;
        break;
      }
      
      // optional int64 sender_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sender_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sender_id_)));
          set_has_sender_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_sender_name;
        break;
      }
      
      // optional string sender_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sender_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sender_name().data(), this->sender_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_receiver_id;
        break;
      }
      
      // optional int64 receiver_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_receiver_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &receiver_id_)));
          set_has_receiver_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_receiver_name;
        break;
      }
      
      // optional string receiver_name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_receiver_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receiver_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->receiver_name().data(), this->receiver_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_item_num;
        break;
      }
      
      // optional int32 item_num = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
          set_has_item_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101406::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int64 sender_id = 2;
  if (has_sender_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->sender_id(), output);
  }
  
  // optional string sender_name = 3;
  if (has_sender_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sender_name().data(), this->sender_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->sender_name(), output);
  }
  
  // optional int64 receiver_id = 4;
  if (has_receiver_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->receiver_id(), output);
  }
  
  // optional string receiver_name = 5;
  if (has_receiver_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiver_name().data(), this->receiver_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->receiver_name(), output);
  }
  
  // optional .ProtoThreeObj other_info = 6;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->other_info(), output);
  }
  
  // optional int32 item_num = 7;
  if (has_item_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->item_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101406::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int64 sender_id = 2;
  if (has_sender_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->sender_id(), target);
  }
  
  // optional string sender_name = 3;
  if (has_sender_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sender_name().data(), this->sender_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sender_name(), target);
  }
  
  // optional int64 receiver_id = 4;
  if (has_receiver_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->receiver_id(), target);
  }
  
  // optional string receiver_name = 5;
  if (has_receiver_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiver_name().data(), this->receiver_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->receiver_name(), target);
  }
  
  // optional .ProtoThreeObj other_info = 6;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->other_info(), target);
  }
  
  // optional int32 item_num = 7;
  if (has_item_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->item_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101406::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int64 sender_id = 2;
    if (has_sender_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->sender_id());
    }
    
    // optional string sender_name = 3;
    if (has_sender_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sender_name());
    }
    
    // optional int64 receiver_id = 4;
    if (has_receiver_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->receiver_id());
    }
    
    // optional string receiver_name = 5;
    if (has_receiver_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->receiver_name());
    }
    
    // optional .ProtoThreeObj other_info = 6;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
    // optional int32 item_num = 7;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101406::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101406* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101406*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101406::MergeFrom(const Proto50101406& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_sender_id()) {
      set_sender_id(from.sender_id());
    }
    if (from.has_sender_name()) {
      set_sender_name(from.sender_name());
    }
    if (from.has_receiver_id()) {
      set_receiver_id(from.receiver_id());
    }
    if (from.has_receiver_name()) {
      set_receiver_name(from.receiver_name());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
    if (from.has_item_num()) {
      set_item_num(from.item_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101406::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101406::CopyFrom(const Proto50101406& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101406::IsInitialized() const {
  
  return true;
}

void Proto50101406::Swap(Proto50101406* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(sender_id_, other->sender_id_);
    std::swap(sender_name_, other->sender_name_);
    std::swap(receiver_id_, other->receiver_id_);
    std::swap(receiver_name_, other->receiver_name_);
    std::swap(other_info_, other->other_info_);
    std::swap(item_num_, other->item_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101406::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101406_descriptor_;
  metadata.reflection = Proto50101406_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101407::kWeddingTickFieldNumber;
const int Proto50101407::kPartnerIdFieldNumber;
const int Proto50101407::kPartnerNameFieldNumber;
const int Proto50101407::kPartnerSexFieldNumber;
const int Proto50101407::kIntimacyFieldNumber;
const int Proto50101407::kKeepsakeIdFieldNumber;
const int Proto50101407::kKeepsakeLevelFieldNumber;
const int Proto50101407::kKeepsakeSublevelFieldNumber;
const int Proto50101407::kKeepsakeProgressFieldNumber;
const int Proto50101407::kLeftDayTimesFieldNumber;
const int Proto50101407::kLabelIdFieldNumber;
const int Proto50101407::kLeftScriptTimesFieldNumber;
const int Proto50101407::kPartnerCareerFieldNumber;
const int Proto50101407::kSweetDegreeFieldNumber;
const int Proto50101407::kRingInfoFieldNumber;
const int Proto50101407::kSysInfoFieldNumber;
const int Proto50101407::kTreeInfoFieldNumber;
const int Proto50101407::kSelfTreasureFieldNumber;
const int Proto50101407::kSideTreasureFieldNumber;
#endif  // !_MSC_VER

Proto50101407::Proto50101407()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101407::InitAsDefaultInstance() {
  ring_info_ = const_cast< ::ProtoWeddingDetail*>(&::ProtoWeddingDetail::default_instance());
  sys_info_ = const_cast< ::ProtoWeddingDetail*>(&::ProtoWeddingDetail::default_instance());
  tree_info_ = const_cast< ::ProtoWeddingDetail*>(&::ProtoWeddingDetail::default_instance());
  self_treasure_ = const_cast< ::ProtoWedTreasures*>(&::ProtoWedTreasures::default_instance());
  side_treasure_ = const_cast< ::ProtoWedTreasures*>(&::ProtoWedTreasures::default_instance());
}

Proto50101407::Proto50101407(const Proto50101407& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101407::SharedCtor() {
  _cached_size_ = 0;
  wedding_tick_ = 0;
  partner_id_ = GOOGLE_LONGLONG(0);
  partner_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  partner_sex_ = 0;
  intimacy_ = 0;
  keepsake_id_ = 0;
  keepsake_level_ = 0;
  keepsake_sublevel_ = 0;
  keepsake_progress_ = 0;
  left_day_times_ = 0;
  label_id_ = 0;
  left_script_times_ = 0;
  partner_career_ = 0;
  sweet_degree_ = 0;
  ring_info_ = NULL;
  sys_info_ = NULL;
  tree_info_ = NULL;
  self_treasure_ = NULL;
  side_treasure_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101407::~Proto50101407() {
  SharedDtor();
}

void Proto50101407::SharedDtor() {
  if (partner_name_ != &::google::protobuf::internal::kEmptyString) {
    delete partner_name_;
  }
  if (this != default_instance_) {
    delete ring_info_;
    delete sys_info_;
    delete tree_info_;
    delete self_treasure_;
    delete side_treasure_;
  }
}

void Proto50101407::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101407::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101407_descriptor_;
}

const Proto50101407& Proto50101407::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto50101407* Proto50101407::default_instance_ = NULL;

Proto50101407* Proto50101407::New() const {
  return new Proto50101407;
}

void Proto50101407::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    wedding_tick_ = 0;
    partner_id_ = GOOGLE_LONGLONG(0);
    if (has_partner_name()) {
      if (partner_name_ != &::google::protobuf::internal::kEmptyString) {
        partner_name_->clear();
      }
    }
    partner_sex_ = 0;
    intimacy_ = 0;
    keepsake_id_ = 0;
    keepsake_level_ = 0;
    keepsake_sublevel_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    keepsake_progress_ = 0;
    left_day_times_ = 0;
    label_id_ = 0;
    left_script_times_ = 0;
    partner_career_ = 0;
    sweet_degree_ = 0;
    if (has_ring_info()) {
      if (ring_info_ != NULL) ring_info_->::ProtoWeddingDetail::Clear();
    }
    if (has_sys_info()) {
      if (sys_info_ != NULL) sys_info_->::ProtoWeddingDetail::Clear();
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_tree_info()) {
      if (tree_info_ != NULL) tree_info_->::ProtoWeddingDetail::Clear();
    }
    if (has_self_treasure()) {
      if (self_treasure_ != NULL) self_treasure_->::ProtoWedTreasures::Clear();
    }
    if (has_side_treasure()) {
      if (side_treasure_ != NULL) side_treasure_->::ProtoWedTreasures::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101407::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 wedding_tick = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wedding_tick_)));
          set_has_wedding_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_partner_id;
        break;
      }
      
      // optional int64 partner_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_partner_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &partner_id_)));
          set_has_partner_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_partner_name;
        break;
      }
      
      // optional string partner_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_partner_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partner_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->partner_name().data(), this->partner_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_partner_sex;
        break;
      }
      
      // optional int32 partner_sex = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_partner_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partner_sex_)));
          set_has_partner_sex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_intimacy;
        break;
      }
      
      // optional int32 intimacy = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_intimacy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intimacy_)));
          set_has_intimacy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_keepsake_id;
        break;
      }
      
      // optional int32 keepsake_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_keepsake_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keepsake_id_)));
          set_has_keepsake_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_keepsake_level;
        break;
      }
      
      // optional int32 keepsake_level = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_keepsake_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keepsake_level_)));
          set_has_keepsake_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_keepsake_sublevel;
        break;
      }
      
      // optional int32 keepsake_sublevel = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_keepsake_sublevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keepsake_sublevel_)));
          set_has_keepsake_sublevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(73)) goto parse_keepsake_progress;
        break;
      }
      
      // optional double keepsake_progress = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_keepsake_progress:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &keepsake_progress_)));
          set_has_keepsake_progress();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_left_day_times;
        break;
      }
      
      // optional int32 left_day_times = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_day_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_day_times_)));
          set_has_left_day_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_label_id;
        break;
      }
      
      // optional int32 label_id = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_label_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_id_)));
          set_has_label_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_left_script_times;
        break;
      }
      
      // optional int32 left_script_times = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_script_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_script_times_)));
          set_has_left_script_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_partner_career;
        break;
      }
      
      // optional int32 partner_career = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_partner_career:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partner_career_)));
          set_has_partner_career();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_sweet_degree;
        break;
      }
      
      // optional int32 sweet_degree = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sweet_degree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sweet_degree_)));
          set_has_sweet_degree();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_ring_info;
        break;
      }
      
      // optional .ProtoWeddingDetail ring_info = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ring_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ring_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_sys_info;
        break;
      }
      
      // optional .ProtoWeddingDetail sys_info = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sys_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sys_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_tree_info;
        break;
      }
      
      // optional .ProtoWeddingDetail tree_info = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tree_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tree_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_self_treasure;
        break;
      }
      
      // optional .ProtoWedTreasures self_treasure = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_self_treasure:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self_treasure()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_side_treasure;
        break;
      }
      
      // optional .ProtoWedTreasures side_treasure = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_side_treasure:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_side_treasure()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101407::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 wedding_tick = 1;
  if (has_wedding_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wedding_tick(), output);
  }
  
  // optional int64 partner_id = 2;
  if (has_partner_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->partner_id(), output);
  }
  
  // optional string partner_name = 3;
  if (has_partner_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->partner_name().data(), this->partner_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->partner_name(), output);
  }
  
  // optional int32 partner_sex = 4;
  if (has_partner_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->partner_sex(), output);
  }
  
  // optional int32 intimacy = 5;
  if (has_intimacy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->intimacy(), output);
  }
  
  // optional int32 keepsake_id = 6;
  if (has_keepsake_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->keepsake_id(), output);
  }
  
  // optional int32 keepsake_level = 7;
  if (has_keepsake_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->keepsake_level(), output);
  }
  
  // optional int32 keepsake_sublevel = 8;
  if (has_keepsake_sublevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->keepsake_sublevel(), output);
  }
  
  // optional double keepsake_progress = 9;
  if (has_keepsake_progress()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->keepsake_progress(), output);
  }
  
  // optional int32 left_day_times = 10;
  if (has_left_day_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->left_day_times(), output);
  }
  
  // optional int32 label_id = 11;
  if (has_label_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->label_id(), output);
  }
  
  // optional int32 left_script_times = 12;
  if (has_left_script_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->left_script_times(), output);
  }
  
  // optional int32 partner_career = 13;
  if (has_partner_career()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->partner_career(), output);
  }
  
  // optional int32 sweet_degree = 14;
  if (has_sweet_degree()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->sweet_degree(), output);
  }
  
  // optional .ProtoWeddingDetail ring_info = 15;
  if (has_ring_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->ring_info(), output);
  }
  
  // optional .ProtoWeddingDetail sys_info = 16;
  if (has_sys_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->sys_info(), output);
  }
  
  // optional .ProtoWeddingDetail tree_info = 17;
  if (has_tree_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->tree_info(), output);
  }
  
  // optional .ProtoWedTreasures self_treasure = 18;
  if (has_self_treasure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->self_treasure(), output);
  }
  
  // optional .ProtoWedTreasures side_treasure = 19;
  if (has_side_treasure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->side_treasure(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101407::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 wedding_tick = 1;
  if (has_wedding_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wedding_tick(), target);
  }
  
  // optional int64 partner_id = 2;
  if (has_partner_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->partner_id(), target);
  }
  
  // optional string partner_name = 3;
  if (has_partner_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->partner_name().data(), this->partner_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->partner_name(), target);
  }
  
  // optional int32 partner_sex = 4;
  if (has_partner_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->partner_sex(), target);
  }
  
  // optional int32 intimacy = 5;
  if (has_intimacy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->intimacy(), target);
  }
  
  // optional int32 keepsake_id = 6;
  if (has_keepsake_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->keepsake_id(), target);
  }
  
  // optional int32 keepsake_level = 7;
  if (has_keepsake_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->keepsake_level(), target);
  }
  
  // optional int32 keepsake_sublevel = 8;
  if (has_keepsake_sublevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->keepsake_sublevel(), target);
  }
  
  // optional double keepsake_progress = 9;
  if (has_keepsake_progress()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->keepsake_progress(), target);
  }
  
  // optional int32 left_day_times = 10;
  if (has_left_day_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->left_day_times(), target);
  }
  
  // optional int32 label_id = 11;
  if (has_label_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->label_id(), target);
  }
  
  // optional int32 left_script_times = 12;
  if (has_left_script_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->left_script_times(), target);
  }
  
  // optional int32 partner_career = 13;
  if (has_partner_career()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->partner_career(), target);
  }
  
  // optional int32 sweet_degree = 14;
  if (has_sweet_degree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->sweet_degree(), target);
  }
  
  // optional .ProtoWeddingDetail ring_info = 15;
  if (has_ring_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->ring_info(), target);
  }
  
  // optional .ProtoWeddingDetail sys_info = 16;
  if (has_sys_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->sys_info(), target);
  }
  
  // optional .ProtoWeddingDetail tree_info = 17;
  if (has_tree_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->tree_info(), target);
  }
  
  // optional .ProtoWedTreasures self_treasure = 18;
  if (has_self_treasure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->self_treasure(), target);
  }
  
  // optional .ProtoWedTreasures side_treasure = 19;
  if (has_side_treasure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->side_treasure(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101407::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 wedding_tick = 1;
    if (has_wedding_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wedding_tick());
    }
    
    // optional int64 partner_id = 2;
    if (has_partner_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->partner_id());
    }
    
    // optional string partner_name = 3;
    if (has_partner_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->partner_name());
    }
    
    // optional int32 partner_sex = 4;
    if (has_partner_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->partner_sex());
    }
    
    // optional int32 intimacy = 5;
    if (has_intimacy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->intimacy());
    }
    
    // optional int32 keepsake_id = 6;
    if (has_keepsake_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->keepsake_id());
    }
    
    // optional int32 keepsake_level = 7;
    if (has_keepsake_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->keepsake_level());
    }
    
    // optional int32 keepsake_sublevel = 8;
    if (has_keepsake_sublevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->keepsake_sublevel());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional double keepsake_progress = 9;
    if (has_keepsake_progress()) {
      total_size += 1 + 8;
    }
    
    // optional int32 left_day_times = 10;
    if (has_left_day_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_day_times());
    }
    
    // optional int32 label_id = 11;
    if (has_label_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_id());
    }
    
    // optional int32 left_script_times = 12;
    if (has_left_script_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_script_times());
    }
    
    // optional int32 partner_career = 13;
    if (has_partner_career()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->partner_career());
    }
    
    // optional int32 sweet_degree = 14;
    if (has_sweet_degree()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sweet_degree());
    }
    
    // optional .ProtoWeddingDetail ring_info = 15;
    if (has_ring_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ring_info());
    }
    
    // optional .ProtoWeddingDetail sys_info = 16;
    if (has_sys_info()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sys_info());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .ProtoWeddingDetail tree_info = 17;
    if (has_tree_info()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tree_info());
    }
    
    // optional .ProtoWedTreasures self_treasure = 18;
    if (has_self_treasure()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->self_treasure());
    }
    
    // optional .ProtoWedTreasures side_treasure = 19;
    if (has_side_treasure()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->side_treasure());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101407::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101407* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101407*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101407::MergeFrom(const Proto50101407& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wedding_tick()) {
      set_wedding_tick(from.wedding_tick());
    }
    if (from.has_partner_id()) {
      set_partner_id(from.partner_id());
    }
    if (from.has_partner_name()) {
      set_partner_name(from.partner_name());
    }
    if (from.has_partner_sex()) {
      set_partner_sex(from.partner_sex());
    }
    if (from.has_intimacy()) {
      set_intimacy(from.intimacy());
    }
    if (from.has_keepsake_id()) {
      set_keepsake_id(from.keepsake_id());
    }
    if (from.has_keepsake_level()) {
      set_keepsake_level(from.keepsake_level());
    }
    if (from.has_keepsake_sublevel()) {
      set_keepsake_sublevel(from.keepsake_sublevel());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_keepsake_progress()) {
      set_keepsake_progress(from.keepsake_progress());
    }
    if (from.has_left_day_times()) {
      set_left_day_times(from.left_day_times());
    }
    if (from.has_label_id()) {
      set_label_id(from.label_id());
    }
    if (from.has_left_script_times()) {
      set_left_script_times(from.left_script_times());
    }
    if (from.has_partner_career()) {
      set_partner_career(from.partner_career());
    }
    if (from.has_sweet_degree()) {
      set_sweet_degree(from.sweet_degree());
    }
    if (from.has_ring_info()) {
      mutable_ring_info()->::ProtoWeddingDetail::MergeFrom(from.ring_info());
    }
    if (from.has_sys_info()) {
      mutable_sys_info()->::ProtoWeddingDetail::MergeFrom(from.sys_info());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_tree_info()) {
      mutable_tree_info()->::ProtoWeddingDetail::MergeFrom(from.tree_info());
    }
    if (from.has_self_treasure()) {
      mutable_self_treasure()->::ProtoWedTreasures::MergeFrom(from.self_treasure());
    }
    if (from.has_side_treasure()) {
      mutable_side_treasure()->::ProtoWedTreasures::MergeFrom(from.side_treasure());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101407::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101407::CopyFrom(const Proto50101407& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101407::IsInitialized() const {
  
  return true;
}

void Proto50101407::Swap(Proto50101407* other) {
  if (other != this) {
    std::swap(wedding_tick_, other->wedding_tick_);
    std::swap(partner_id_, other->partner_id_);
    std::swap(partner_name_, other->partner_name_);
    std::swap(partner_sex_, other->partner_sex_);
    std::swap(intimacy_, other->intimacy_);
    std::swap(keepsake_id_, other->keepsake_id_);
    std::swap(keepsake_level_, other->keepsake_level_);
    std::swap(keepsake_sublevel_, other->keepsake_sublevel_);
    std::swap(keepsake_progress_, other->keepsake_progress_);
    std::swap(left_day_times_, other->left_day_times_);
    std::swap(label_id_, other->label_id_);
    std::swap(left_script_times_, other->left_script_times_);
    std::swap(partner_career_, other->partner_career_);
    std::swap(sweet_degree_, other->sweet_degree_);
    std::swap(ring_info_, other->ring_info_);
    std::swap(sys_info_, other->sys_info_);
    std::swap(tree_info_, other->tree_info_);
    std::swap(self_treasure_, other->self_treasure_);
    std::swap(side_treasure_, other->side_treasure_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101407::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101407_descriptor_;
  metadata.reflection = Proto50101407_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80101401::kTypeFieldNumber;
const int Proto80101401::kCartoonLeftTickFieldNumber;
const int Proto80101401::kPartnerId1FieldNumber;
const int Proto80101401::kPartnerName1FieldNumber;
const int Proto80101401::kPartnerCareer1FieldNumber;
const int Proto80101401::kPartnerId2FieldNumber;
const int Proto80101401::kPartnerName2FieldNumber;
const int Proto80101401::kPartnerCareer2FieldNumber;
#endif  // !_MSC_VER

Proto80101401::Proto80101401()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80101401::InitAsDefaultInstance() {
}

Proto80101401::Proto80101401(const Proto80101401& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80101401::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  cartoon_left_tick_ = 0;
  partner_id_1_ = GOOGLE_LONGLONG(0);
  partner_name_1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  partner_career_1_ = 0;
  partner_id_2_ = GOOGLE_LONGLONG(0);
  partner_name_2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  partner_career_2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80101401::~Proto80101401() {
  SharedDtor();
}

void Proto80101401::SharedDtor() {
  if (partner_name_1_ != &::google::protobuf::internal::kEmptyString) {
    delete partner_name_1_;
  }
  if (partner_name_2_ != &::google::protobuf::internal::kEmptyString) {
    delete partner_name_2_;
  }
  if (this != default_instance_) {
  }
}

void Proto80101401::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80101401::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80101401_descriptor_;
}

const Proto80101401& Proto80101401::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80101401* Proto80101401::default_instance_ = NULL;

Proto80101401* Proto80101401::New() const {
  return new Proto80101401;
}

void Proto80101401::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    cartoon_left_tick_ = 0;
    partner_id_1_ = GOOGLE_LONGLONG(0);
    if (has_partner_name_1()) {
      if (partner_name_1_ != &::google::protobuf::internal::kEmptyString) {
        partner_name_1_->clear();
      }
    }
    partner_career_1_ = 0;
    partner_id_2_ = GOOGLE_LONGLONG(0);
    if (has_partner_name_2()) {
      if (partner_name_2_ != &::google::protobuf::internal::kEmptyString) {
        partner_name_2_->clear();
      }
    }
    partner_career_2_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80101401::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cartoon_left_tick;
        break;
      }
      
      // optional int32 cartoon_left_tick = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cartoon_left_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cartoon_left_tick_)));
          set_has_cartoon_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_partner_id_1;
        break;
      }
      
      // optional int64 partner_id_1 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_partner_id_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &partner_id_1_)));
          set_has_partner_id_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_partner_name_1;
        break;
      }
      
      // optional string partner_name_1 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_partner_name_1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partner_name_1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->partner_name_1().data(), this->partner_name_1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_partner_career_1;
        break;
      }
      
      // optional int32 partner_career_1 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_partner_career_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partner_career_1_)));
          set_has_partner_career_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_partner_id_2;
        break;
      }
      
      // optional int64 partner_id_2 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_partner_id_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &partner_id_2_)));
          set_has_partner_id_2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_partner_name_2;
        break;
      }
      
      // optional string partner_name_2 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_partner_name_2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partner_name_2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->partner_name_2().data(), this->partner_name_2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_partner_career_2;
        break;
      }
      
      // optional int32 partner_career_2 = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_partner_career_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partner_career_2_)));
          set_has_partner_career_2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80101401::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 cartoon_left_tick = 2;
  if (has_cartoon_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cartoon_left_tick(), output);
  }
  
  // optional int64 partner_id_1 = 3;
  if (has_partner_id_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->partner_id_1(), output);
  }
  
  // optional string partner_name_1 = 4;
  if (has_partner_name_1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->partner_name_1().data(), this->partner_name_1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->partner_name_1(), output);
  }
  
  // optional int32 partner_career_1 = 5;
  if (has_partner_career_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->partner_career_1(), output);
  }
  
  // optional int64 partner_id_2 = 6;
  if (has_partner_id_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->partner_id_2(), output);
  }
  
  // optional string partner_name_2 = 7;
  if (has_partner_name_2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->partner_name_2().data(), this->partner_name_2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->partner_name_2(), output);
  }
  
  // optional int32 partner_career_2 = 8;
  if (has_partner_career_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->partner_career_2(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80101401::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 cartoon_left_tick = 2;
  if (has_cartoon_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cartoon_left_tick(), target);
  }
  
  // optional int64 partner_id_1 = 3;
  if (has_partner_id_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->partner_id_1(), target);
  }
  
  // optional string partner_name_1 = 4;
  if (has_partner_name_1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->partner_name_1().data(), this->partner_name_1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->partner_name_1(), target);
  }
  
  // optional int32 partner_career_1 = 5;
  if (has_partner_career_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->partner_career_1(), target);
  }
  
  // optional int64 partner_id_2 = 6;
  if (has_partner_id_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->partner_id_2(), target);
  }
  
  // optional string partner_name_2 = 7;
  if (has_partner_name_2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->partner_name_2().data(), this->partner_name_2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->partner_name_2(), target);
  }
  
  // optional int32 partner_career_2 = 8;
  if (has_partner_career_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->partner_career_2(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80101401::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 cartoon_left_tick = 2;
    if (has_cartoon_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cartoon_left_tick());
    }
    
    // optional int64 partner_id_1 = 3;
    if (has_partner_id_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->partner_id_1());
    }
    
    // optional string partner_name_1 = 4;
    if (has_partner_name_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->partner_name_1());
    }
    
    // optional int32 partner_career_1 = 5;
    if (has_partner_career_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->partner_career_1());
    }
    
    // optional int64 partner_id_2 = 6;
    if (has_partner_id_2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->partner_id_2());
    }
    
    // optional string partner_name_2 = 7;
    if (has_partner_name_2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->partner_name_2());
    }
    
    // optional int32 partner_career_2 = 8;
    if (has_partner_career_2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->partner_career_2());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80101401::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80101401* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80101401*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80101401::MergeFrom(const Proto80101401& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_cartoon_left_tick()) {
      set_cartoon_left_tick(from.cartoon_left_tick());
    }
    if (from.has_partner_id_1()) {
      set_partner_id_1(from.partner_id_1());
    }
    if (from.has_partner_name_1()) {
      set_partner_name_1(from.partner_name_1());
    }
    if (from.has_partner_career_1()) {
      set_partner_career_1(from.partner_career_1());
    }
    if (from.has_partner_id_2()) {
      set_partner_id_2(from.partner_id_2());
    }
    if (from.has_partner_name_2()) {
      set_partner_name_2(from.partner_name_2());
    }
    if (from.has_partner_career_2()) {
      set_partner_career_2(from.partner_career_2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80101401::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80101401::CopyFrom(const Proto80101401& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80101401::IsInitialized() const {
  
  return true;
}

void Proto80101401::Swap(Proto80101401* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(cartoon_left_tick_, other->cartoon_left_tick_);
    std::swap(partner_id_1_, other->partner_id_1_);
    std::swap(partner_name_1_, other->partner_name_1_);
    std::swap(partner_career_1_, other->partner_career_1_);
    std::swap(partner_id_2_, other->partner_id_2_);
    std::swap(partner_name_2_, other->partner_name_2_);
    std::swap(partner_career_2_, other->partner_career_2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80101401::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80101401_descriptor_;
  metadata.reflection = Proto80101401_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80101403::kWeddingIconListFieldNumber;
#endif  // !_MSC_VER

Proto80101403::Proto80101403()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80101403::InitAsDefaultInstance() {
}

Proto80101403::Proto80101403(const Proto80101403& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80101403::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80101403::~Proto80101403() {
  SharedDtor();
}

void Proto80101403::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80101403::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80101403::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80101403_descriptor_;
}

const Proto80101403& Proto80101403::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80101403* Proto80101403::default_instance_ = NULL;

Proto80101403* Proto80101403::New() const {
  return new Proto80101403;
}

void Proto80101403::Clear() {
  wedding_icon_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80101403::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoWeddingIcon wedding_icon_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_wedding_icon_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_wedding_icon_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_wedding_icon_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80101403::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoWeddingIcon wedding_icon_list = 1;
  for (int i = 0; i < this->wedding_icon_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->wedding_icon_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80101403::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoWeddingIcon wedding_icon_list = 1;
  for (int i = 0; i < this->wedding_icon_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->wedding_icon_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80101403::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoWeddingIcon wedding_icon_list = 1;
  total_size += 1 * this->wedding_icon_list_size();
  for (int i = 0; i < this->wedding_icon_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->wedding_icon_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80101403::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80101403* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80101403*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80101403::MergeFrom(const Proto80101403& from) {
  GOOGLE_CHECK_NE(&from, this);
  wedding_icon_list_.MergeFrom(from.wedding_icon_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80101403::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80101403::CopyFrom(const Proto80101403& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80101403::IsInitialized() const {
  
  return true;
}

void Proto80101403::Swap(Proto80101403* other) {
  if (other != this) {
    wedding_icon_list_.Swap(&other->wedding_icon_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80101403::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80101403_descriptor_;
  metadata.reflection = Proto80101403_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80101404::kReplyFieldNumber;
#endif  // !_MSC_VER

Proto80101404::Proto80101404()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80101404::InitAsDefaultInstance() {
}

Proto80101404::Proto80101404(const Proto80101404& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80101404::SharedCtor() {
  _cached_size_ = 0;
  reply_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80101404::~Proto80101404() {
  SharedDtor();
}

void Proto80101404::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80101404::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80101404::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80101404_descriptor_;
}

const Proto80101404& Proto80101404::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80101404* Proto80101404::default_instance_ = NULL;

Proto80101404* Proto80101404::New() const {
  return new Proto80101404;
}

void Proto80101404::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    reply_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80101404::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 reply = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reply_)));
          set_has_reply();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80101404::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 reply = 1;
  if (has_reply()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reply(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80101404::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 reply = 1;
  if (has_reply()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reply(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80101404::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 reply = 1;
    if (has_reply()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reply());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80101404::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80101404* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80101404*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80101404::MergeFrom(const Proto80101404& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reply()) {
      set_reply(from.reply());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80101404::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80101404::CopyFrom(const Proto80101404& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80101404::IsInitialized() const {
  
  return true;
}

void Proto80101404::Swap(Proto80101404* other) {
  if (other != this) {
    std::swap(reply_, other->reply_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80101404::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80101404_descriptor_;
  metadata.reflection = Proto80101404_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80101405::kWeddingTypeFieldNumber;
#endif  // !_MSC_VER

Proto80101405::Proto80101405()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80101405::InitAsDefaultInstance() {
}

Proto80101405::Proto80101405(const Proto80101405& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80101405::SharedCtor() {
  _cached_size_ = 0;
  wedding_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80101405::~Proto80101405() {
  SharedDtor();
}

void Proto80101405::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80101405::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80101405::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80101405_descriptor_;
}

const Proto80101405& Proto80101405::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80101405* Proto80101405::default_instance_ = NULL;

Proto80101405* Proto80101405::New() const {
  return new Proto80101405;
}

void Proto80101405::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    wedding_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80101405::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 wedding_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wedding_type_)));
          set_has_wedding_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80101405::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 wedding_type = 1;
  if (has_wedding_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wedding_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80101405::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 wedding_type = 1;
  if (has_wedding_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wedding_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80101405::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 wedding_type = 1;
    if (has_wedding_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wedding_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80101405::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80101405* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80101405*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80101405::MergeFrom(const Proto80101405& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wedding_type()) {
      set_wedding_type(from.wedding_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80101405::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80101405::CopyFrom(const Proto80101405& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80101405::IsInitialized() const {
  
  return true;
}

void Proto80101405::Swap(Proto80101405* other) {
  if (other != this) {
    std::swap(wedding_type_, other->wedding_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80101405::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80101405_descriptor_;
  metadata.reflection = Proto80101405_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400226::kFighterIdFieldNumber;
const int Proto80400226::kFloatIdFieldNumber;
#endif  // !_MSC_VER

Proto80400226::Proto80400226()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400226::InitAsDefaultInstance() {
}

Proto80400226::Proto80400226(const Proto80400226& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400226::SharedCtor() {
  _cached_size_ = 0;
  fighter_id_ = GOOGLE_LONGLONG(0);
  float_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400226::~Proto80400226() {
  SharedDtor();
}

void Proto80400226::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400226::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400226::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400226_descriptor_;
}

const Proto80400226& Proto80400226::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80400226* Proto80400226::default_instance_ = NULL;

Proto80400226* Proto80400226::New() const {
  return new Proto80400226;
}

void Proto80400226::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fighter_id_ = GOOGLE_LONGLONG(0);
    float_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400226::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 fighter_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fighter_id_)));
          set_has_fighter_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_float_id;
        break;
      }
      
      // optional int64 float_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_float_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &float_id_)));
          set_has_float_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400226::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->fighter_id(), output);
  }
  
  // optional int64 float_id = 2;
  if (has_float_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->float_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400226::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->fighter_id(), target);
  }
  
  // optional int64 float_id = 2;
  if (has_float_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->float_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400226::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 fighter_id = 1;
    if (has_fighter_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fighter_id());
    }
    
    // optional int64 float_id = 2;
    if (has_float_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->float_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400226::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400226* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400226*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400226::MergeFrom(const Proto80400226& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fighter_id()) {
      set_fighter_id(from.fighter_id());
    }
    if (from.has_float_id()) {
      set_float_id(from.float_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400226::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400226::CopyFrom(const Proto80400226& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400226::IsInitialized() const {
  
  return true;
}

void Proto80400226::Swap(Proto80400226* other) {
  if (other != this) {
    std::swap(fighter_id_, other->fighter_id_);
    std::swap(float_id_, other->float_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400226::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400226_descriptor_;
  metadata.reflection = Proto80400226_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400227::kMoverIdFieldNumber;
const int Proto80400227::kStepListFieldNumber;
#endif  // !_MSC_VER

Proto80400227::Proto80400227()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400227::InitAsDefaultInstance() {
}

Proto80400227::Proto80400227(const Proto80400227& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400227::SharedCtor() {
  _cached_size_ = 0;
  mover_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400227::~Proto80400227() {
  SharedDtor();
}

void Proto80400227::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400227::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400227::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400227_descriptor_;
}

const Proto80400227& Proto80400227::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80400227* Proto80400227::default_instance_ = NULL;

Proto80400227* Proto80400227::New() const {
  return new Proto80400227;
}

void Proto80400227::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mover_id_ = GOOGLE_LONGLONG(0);
  }
  step_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400227::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 mover_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mover_id_)));
          set_has_mover_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_step_list;
        break;
      }
      
      // repeated .ProtoCoord step_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_step_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_step_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_step_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400227::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->mover_id(), output);
  }
  
  // repeated .ProtoCoord step_list = 2;
  for (int i = 0; i < this->step_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->step_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400227::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->mover_id(), target);
  }
  
  // repeated .ProtoCoord step_list = 2;
  for (int i = 0; i < this->step_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->step_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400227::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 mover_id = 1;
    if (has_mover_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mover_id());
    }
    
  }
  // repeated .ProtoCoord step_list = 2;
  total_size += 1 * this->step_list_size();
  for (int i = 0; i < this->step_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->step_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400227::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400227* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400227*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400227::MergeFrom(const Proto80400227& from) {
  GOOGLE_CHECK_NE(&from, this);
  step_list_.MergeFrom(from.step_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mover_id()) {
      set_mover_id(from.mover_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400227::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400227::CopyFrom(const Proto80400227& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400227::IsInitialized() const {
  
  return true;
}

void Proto80400227::Swap(Proto80400227* other) {
  if (other != this) {
    std::swap(mover_id_, other->mover_id_);
    step_list_.Swap(&other->step_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400227::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400227_descriptor_;
  metadata.reflection = Proto80400227_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400228::kMoverIdFieldNumber;
#endif  // !_MSC_VER

Proto80400228::Proto80400228()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400228::InitAsDefaultInstance() {
}

Proto80400228::Proto80400228(const Proto80400228& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400228::SharedCtor() {
  _cached_size_ = 0;
  mover_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400228::~Proto80400228() {
  SharedDtor();
}

void Proto80400228::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400228::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400228::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400228_descriptor_;
}

const Proto80400228& Proto80400228::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80400228* Proto80400228::default_instance_ = NULL;

Proto80400228* Proto80400228::New() const {
  return new Proto80400228;
}

void Proto80400228::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mover_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400228::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 mover_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mover_id_)));
          set_has_mover_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400228::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->mover_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400228::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->mover_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400228::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 mover_id = 1;
    if (has_mover_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mover_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400228::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400228* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400228*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400228::MergeFrom(const Proto80400228& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mover_id()) {
      set_mover_id(from.mover_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400228::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400228::CopyFrom(const Proto80400228& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400228::IsInitialized() const {
  
  return true;
}

void Proto80400228::Swap(Proto80400228* other) {
  if (other != this) {
    std::swap(mover_id_, other->mover_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400228::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400228_descriptor_;
  metadata.reflection = Proto80400228_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100101::kServerFlagFieldNumber;
#endif  // !_MSC_VER

Proto50100101::Proto50100101()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100101::InitAsDefaultInstance() {
}

Proto50100101::Proto50100101(const Proto50100101& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100101::SharedCtor() {
  _cached_size_ = 0;
  server_flag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100101::~Proto50100101() {
  SharedDtor();
}

void Proto50100101::SharedDtor() {
  if (server_flag_ != &::google::protobuf::internal::kEmptyString) {
    delete server_flag_;
  }
  if (this != default_instance_) {
  }
}

void Proto50100101::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100101::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100101_descriptor_;
}

const Proto50100101& Proto50100101::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto50100101* Proto50100101::default_instance_ = NULL;

Proto50100101* Proto50100101::New() const {
  return new Proto50100101;
}

void Proto50100101::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_server_flag()) {
      if (server_flag_ != &::google::protobuf::internal::kEmptyString) {
        server_flag_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100101::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string server_flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_flag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->server_flag().data(), this->server_flag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100101::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string server_flag = 1;
  if (has_server_flag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_flag().data(), this->server_flag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->server_flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100101::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string server_flag = 1;
  if (has_server_flag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_flag().data(), this->server_flag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server_flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100101::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string server_flag = 1;
    if (has_server_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_flag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100101::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100101* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100101*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100101::MergeFrom(const Proto50100101& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_server_flag()) {
      set_server_flag(from.server_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100101::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100101::CopyFrom(const Proto50100101& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100101::IsInitialized() const {
  
  return true;
}

void Proto50100101::Swap(Proto50100101* other) {
  if (other != this) {
    std::swap(server_flag_, other->server_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100101::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100101_descriptor_;
  metadata.reflection = Proto50100101_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400918::kPoemTextIndexFieldNumber;
const int Proto80400918::kAiIdFieldNumber;
#endif  // !_MSC_VER

Proto80400918::Proto80400918()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400918::InitAsDefaultInstance() {
}

Proto80400918::Proto80400918(const Proto80400918& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400918::SharedCtor() {
  _cached_size_ = 0;
  poem_text_index_ = 0;
  ai_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400918::~Proto80400918() {
  SharedDtor();
}

void Proto80400918::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400918::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400918::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400918_descriptor_;
}

const Proto80400918& Proto80400918::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80400918* Proto80400918::default_instance_ = NULL;

Proto80400918* Proto80400918::New() const {
  return new Proto80400918;
}

void Proto80400918::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    poem_text_index_ = 0;
    ai_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400918::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 poem_text_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &poem_text_index_)));
          set_has_poem_text_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ai_id;
        break;
      }
      
      // optional int32 ai_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ai_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ai_id_)));
          set_has_ai_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400918::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 poem_text_index = 1;
  if (has_poem_text_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->poem_text_index(), output);
  }
  
  // optional int32 ai_id = 2;
  if (has_ai_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ai_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400918::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 poem_text_index = 1;
  if (has_poem_text_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->poem_text_index(), target);
  }
  
  // optional int32 ai_id = 2;
  if (has_ai_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ai_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400918::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 poem_text_index = 1;
    if (has_poem_text_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->poem_text_index());
    }
    
    // optional int32 ai_id = 2;
    if (has_ai_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ai_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400918::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400918* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400918*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400918::MergeFrom(const Proto80400918& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_poem_text_index()) {
      set_poem_text_index(from.poem_text_index());
    }
    if (from.has_ai_id()) {
      set_ai_id(from.ai_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400918::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400918::CopyFrom(const Proto80400918& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400918::IsInitialized() const {
  
  return true;
}

void Proto80400918::Swap(Proto80400918* other) {
  if (other != this) {
    std::swap(poem_text_index_, other->poem_text_index_);
    std::swap(ai_id_, other->ai_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400918::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400918_descriptor_;
  metadata.reflection = Proto80400918_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10600105::kSexFieldNumber;
#endif  // !_MSC_VER

Proto10600105::Proto10600105()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10600105::InitAsDefaultInstance() {
}

Proto10600105::Proto10600105(const Proto10600105& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10600105::SharedCtor() {
  _cached_size_ = 0;
  sex_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10600105::~Proto10600105() {
  SharedDtor();
}

void Proto10600105::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10600105::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10600105::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10600105_descriptor_;
}

const Proto10600105& Proto10600105::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto10600105* Proto10600105::default_instance_ = NULL;

Proto10600105* Proto10600105::New() const {
  return new Proto10600105;
}

void Proto10600105::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    sex_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10600105::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sex = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10600105::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 sex = 1;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sex(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10600105::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 sex = 1;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sex(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10600105::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 sex = 1;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10600105::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10600105* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10600105*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10600105::MergeFrom(const Proto10600105& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sex()) {
      set_sex(from.sex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10600105::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10600105::CopyFrom(const Proto10600105& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10600105::IsInitialized() const {
  
  return true;
}

void Proto10600105::Swap(Proto10600105* other) {
  if (other != this) {
    std::swap(sex_, other->sex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10600105::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10600105_descriptor_;
  metadata.reflection = Proto10600105_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50600105::kNameFieldNumber;
#endif  // !_MSC_VER

Proto50600105::Proto50600105()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50600105::InitAsDefaultInstance() {
}

Proto50600105::Proto50600105(const Proto50600105& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50600105::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50600105::~Proto50600105() {
  SharedDtor();
}

void Proto50600105::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Proto50600105::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50600105::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50600105_descriptor_;
}

const Proto50600105& Proto50600105::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto50600105* Proto50600105::default_instance_ = NULL;

Proto50600105* Proto50600105::New() const {
  return new Proto50600105;
}

void Proto50600105::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50600105::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50600105::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50600105::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50600105::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50600105::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50600105* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50600105*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50600105::MergeFrom(const Proto50600105& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50600105::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50600105::CopyFrom(const Proto50600105& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50600105::IsInitialized() const {
  
  return true;
}

void Proto50600105::Swap(Proto50600105* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50600105::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50600105_descriptor_;
  metadata.reflection = Proto50600105_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400108::kPassUiFieldNumber;
#endif  // !_MSC_VER

Proto81400108::Proto81400108()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400108::InitAsDefaultInstance() {
}

Proto81400108::Proto81400108(const Proto81400108& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400108::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400108::~Proto81400108() {
  SharedDtor();
}

void Proto81400108::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400108::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400108::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400108_descriptor_;
}

const Proto81400108& Proto81400108::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto81400108* Proto81400108::default_instance_ = NULL;

Proto81400108* Proto81400108::New() const {
  return new Proto81400108;
}

void Proto81400108::Clear() {
  pass_ui_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400108::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string pass_ui = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pass_ui:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_pass_ui()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->pass_ui(0).data(), this->pass_ui(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_pass_ui;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400108::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string pass_ui = 1;
  for (int i = 0; i < this->pass_ui_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->pass_ui(i).data(), this->pass_ui(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->pass_ui(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400108::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string pass_ui = 1;
  for (int i = 0; i < this->pass_ui_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pass_ui(i).data(), this->pass_ui(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->pass_ui(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400108::ByteSize() const {
  int total_size = 0;
  
  // repeated string pass_ui = 1;
  total_size += 1 * this->pass_ui_size();
  for (int i = 0; i < this->pass_ui_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->pass_ui(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400108::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400108* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400108*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400108::MergeFrom(const Proto81400108& from) {
  GOOGLE_CHECK_NE(&from, this);
  pass_ui_.MergeFrom(from.pass_ui_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400108::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400108::CopyFrom(const Proto81400108& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400108::IsInitialized() const {
  
  return true;
}

void Proto81400108::Swap(Proto81400108* other) {
  if (other != this) {
    pass_ui_.Swap(&other->pass_ui_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400108::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400108_descriptor_;
  metadata.reflection = Proto81400108_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400378::kEscortTimesFieldNumber;
const int Proto80400378::kProtectTimesFieldNumber;
const int Proto80400378::kRobTimesFieldNumber;
#endif  // !_MSC_VER

Proto80400378::Proto80400378()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400378::InitAsDefaultInstance() {
}

Proto80400378::Proto80400378(const Proto80400378& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400378::SharedCtor() {
  _cached_size_ = 0;
  escort_times_ = 0;
  protect_times_ = 0;
  rob_times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400378::~Proto80400378() {
  SharedDtor();
}

void Proto80400378::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400378::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400378::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400378_descriptor_;
}

const Proto80400378& Proto80400378::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80400378* Proto80400378::default_instance_ = NULL;

Proto80400378* Proto80400378::New() const {
  return new Proto80400378;
}

void Proto80400378::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    escort_times_ = 0;
    protect_times_ = 0;
    rob_times_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400378::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 escort_times = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &escort_times_)));
          set_has_escort_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_protect_times;
        break;
      }
      
      // optional int32 protect_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_protect_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &protect_times_)));
          set_has_protect_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_rob_times;
        break;
      }
      
      // optional int32 rob_times = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rob_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rob_times_)));
          set_has_rob_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400378::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 escort_times = 1;
  if (has_escort_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->escort_times(), output);
  }
  
  // optional int32 protect_times = 2;
  if (has_protect_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->protect_times(), output);
  }
  
  // optional int32 rob_times = 3;
  if (has_rob_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rob_times(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400378::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 escort_times = 1;
  if (has_escort_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->escort_times(), target);
  }
  
  // optional int32 protect_times = 2;
  if (has_protect_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->protect_times(), target);
  }
  
  // optional int32 rob_times = 3;
  if (has_rob_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rob_times(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400378::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 escort_times = 1;
    if (has_escort_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->escort_times());
    }
    
    // optional int32 protect_times = 2;
    if (has_protect_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->protect_times());
    }
    
    // optional int32 rob_times = 3;
    if (has_rob_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rob_times());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400378::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400378* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400378*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400378::MergeFrom(const Proto80400378& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_escort_times()) {
      set_escort_times(from.escort_times());
    }
    if (from.has_protect_times()) {
      set_protect_times(from.protect_times());
    }
    if (from.has_rob_times()) {
      set_rob_times(from.rob_times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400378::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400378::CopyFrom(const Proto80400378& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400378::IsInitialized() const {
  
  return true;
}

void Proto80400378::Swap(Proto80400378* other) {
  if (other != this) {
    std::swap(escort_times_, other->escort_times_);
    std::swap(protect_times_, other->protect_times_);
    std::swap(rob_times_, other->rob_times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400378::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400378_descriptor_;
  metadata.reflection = Proto80400378_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400118::kSceneIdFieldNumber;
const int Proto10400118::kPixelXFieldNumber;
const int Proto10400118::kPixelYFieldNumber;
#endif  // !_MSC_VER

Proto10400118::Proto10400118()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400118::InitAsDefaultInstance() {
}

Proto10400118::Proto10400118(const Proto10400118& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400118::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400118::~Proto10400118() {
  SharedDtor();
}

void Proto10400118::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400118::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400118::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400118_descriptor_;
}

const Proto10400118& Proto10400118::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto10400118* Proto10400118::default_instance_ = NULL;

Proto10400118* Proto10400118::New() const {
  return new Proto10400118;
}

void Proto10400118::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400118::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400118::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400118::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400118::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 pixel_x = 2;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 3;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400118::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400118* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400118*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400118::MergeFrom(const Proto10400118& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400118::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400118::CopyFrom(const Proto10400118& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400118::IsInitialized() const {
  
  return true;
}

void Proto10400118::Swap(Proto10400118* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400118::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400118_descriptor_;
  metadata.reflection = Proto10400118_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400919::kWaveIdFieldNumber;
#endif  // !_MSC_VER

Proto80400919::Proto80400919()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400919::InitAsDefaultInstance() {
}

Proto80400919::Proto80400919(const Proto80400919& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400919::SharedCtor() {
  _cached_size_ = 0;
  wave_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400919::~Proto80400919() {
  SharedDtor();
}

void Proto80400919::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400919::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400919::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400919_descriptor_;
}

const Proto80400919& Proto80400919::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80400919* Proto80400919::default_instance_ = NULL;

Proto80400919* Proto80400919::New() const {
  return new Proto80400919;
}

void Proto80400919::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    wave_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400919::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 wave_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wave_id_)));
          set_has_wave_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400919::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 wave_id = 1;
  if (has_wave_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wave_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400919::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 wave_id = 1;
  if (has_wave_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wave_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400919::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 wave_id = 1;
    if (has_wave_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wave_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400919::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400919* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400919*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400919::MergeFrom(const Proto80400919& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wave_id()) {
      set_wave_id(from.wave_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400919::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400919::CopyFrom(const Proto80400919& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400919::IsInitialized() const {
  
  return true;
}

void Proto80400919::Swap(Proto80400919* other) {
  if (other != this) {
    std::swap(wave_id_, other->wave_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400919::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400919_descriptor_;
  metadata.reflection = Proto80400919_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400229::kRoleIdFieldNumber;
const int Proto80400229::kRoleNameFieldNumber;
#endif  // !_MSC_VER

Proto80400229::Proto80400229()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400229::InitAsDefaultInstance() {
}

Proto80400229::Proto80400229(const Proto80400229& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400229::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400229::~Proto80400229() {
  SharedDtor();
}

void Proto80400229::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400229::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400229::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400229_descriptor_;
}

const Proto80400229& Proto80400229::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80400229* Proto80400229::default_instance_ = NULL;

Proto80400229* Proto80400229::New() const {
  return new Proto80400229;
}

void Proto80400229::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400229::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_role_name;
        break;
      }
      
      // optional string role_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400229::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional string role_name = 2;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->role_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400229::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional string role_name = 2;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->role_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400229::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional string role_name = 2;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400229::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400229* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400229*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400229::MergeFrom(const Proto80400229& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400229::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400229::CopyFrom(const Proto80400229& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400229::IsInitialized() const {
  
  return true;
}

void Proto80400229::Swap(Proto80400229* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(role_name_, other->role_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400229::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400229_descriptor_;
  metadata.reflection = Proto80400229_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400920::kKillerIdFieldNumber;
const int Proto80400920::kKillerNameFieldNumber;
const int Proto80400920::kBekillIdFieldNumber;
const int Proto80400920::kBekillNameFieldNumber;
#endif  // !_MSC_VER

Proto80400920::Proto80400920()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400920::InitAsDefaultInstance() {
}

Proto80400920::Proto80400920(const Proto80400920& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400920::SharedCtor() {
  _cached_size_ = 0;
  killer_id_ = GOOGLE_LONGLONG(0);
  killer_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bekill_id_ = GOOGLE_LONGLONG(0);
  bekill_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400920::~Proto80400920() {
  SharedDtor();
}

void Proto80400920::SharedDtor() {
  if (killer_name_ != &::google::protobuf::internal::kEmptyString) {
    delete killer_name_;
  }
  if (bekill_name_ != &::google::protobuf::internal::kEmptyString) {
    delete bekill_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400920::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400920::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400920_descriptor_;
}

const Proto80400920& Proto80400920::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80400920* Proto80400920::default_instance_ = NULL;

Proto80400920* Proto80400920::New() const {
  return new Proto80400920;
}

void Proto80400920::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    killer_id_ = GOOGLE_LONGLONG(0);
    if (has_killer_name()) {
      if (killer_name_ != &::google::protobuf::internal::kEmptyString) {
        killer_name_->clear();
      }
    }
    bekill_id_ = GOOGLE_LONGLONG(0);
    if (has_bekill_name()) {
      if (bekill_name_ != &::google::protobuf::internal::kEmptyString) {
        bekill_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400920::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 killer_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &killer_id_)));
          set_has_killer_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_killer_name;
        break;
      }
      
      // optional string killer_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_killer_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_killer_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->killer_name().data(), this->killer_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_bekill_id;
        break;
      }
      
      // optional int64 bekill_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bekill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bekill_id_)));
          set_has_bekill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_bekill_name;
        break;
      }
      
      // optional string bekill_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bekill_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bekill_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bekill_name().data(), this->bekill_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400920::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 killer_id = 1;
  if (has_killer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->killer_id(), output);
  }
  
  // optional string killer_name = 2;
  if (has_killer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->killer_name().data(), this->killer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->killer_name(), output);
  }
  
  // optional int64 bekill_id = 3;
  if (has_bekill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->bekill_id(), output);
  }
  
  // optional string bekill_name = 4;
  if (has_bekill_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bekill_name().data(), this->bekill_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->bekill_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400920::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 killer_id = 1;
  if (has_killer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->killer_id(), target);
  }
  
  // optional string killer_name = 2;
  if (has_killer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->killer_name().data(), this->killer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->killer_name(), target);
  }
  
  // optional int64 bekill_id = 3;
  if (has_bekill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->bekill_id(), target);
  }
  
  // optional string bekill_name = 4;
  if (has_bekill_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bekill_name().data(), this->bekill_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->bekill_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400920::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 killer_id = 1;
    if (has_killer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->killer_id());
    }
    
    // optional string killer_name = 2;
    if (has_killer_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->killer_name());
    }
    
    // optional int64 bekill_id = 3;
    if (has_bekill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->bekill_id());
    }
    
    // optional string bekill_name = 4;
    if (has_bekill_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bekill_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400920::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400920* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400920*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400920::MergeFrom(const Proto80400920& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_killer_id()) {
      set_killer_id(from.killer_id());
    }
    if (from.has_killer_name()) {
      set_killer_name(from.killer_name());
    }
    if (from.has_bekill_id()) {
      set_bekill_id(from.bekill_id());
    }
    if (from.has_bekill_name()) {
      set_bekill_name(from.bekill_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400920::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400920::CopyFrom(const Proto80400920& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400920::IsInitialized() const {
  
  return true;
}

void Proto80400920::Swap(Proto80400920* other) {
  if (other != this) {
    std::swap(killer_id_, other->killer_id_);
    std::swap(killer_name_, other->killer_name_);
    std::swap(bekill_id_, other->bekill_id_);
    std::swap(bekill_name_, other->bekill_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400920::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400920_descriptor_;
  metadata.reflection = Proto80400920_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400921::kBossIdFieldNumber;
#endif  // !_MSC_VER

Proto80400921::Proto80400921()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400921::InitAsDefaultInstance() {
}

Proto80400921::Proto80400921(const Proto80400921& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400921::SharedCtor() {
  _cached_size_ = 0;
  boss_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400921::~Proto80400921() {
  SharedDtor();
}

void Proto80400921::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400921::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400921::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400921_descriptor_;
}

const Proto80400921& Proto80400921::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80400921* Proto80400921::default_instance_ = NULL;

Proto80400921* Proto80400921::New() const {
  return new Proto80400921;
}

void Proto80400921::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    boss_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400921::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 boss_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &boss_id_)));
          set_has_boss_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400921::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 boss_id = 1;
  if (has_boss_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->boss_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400921::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 boss_id = 1;
  if (has_boss_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->boss_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400921::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 boss_id = 1;
    if (has_boss_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->boss_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400921::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400921* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400921*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400921::MergeFrom(const Proto80400921& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_boss_id()) {
      set_boss_id(from.boss_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400921::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400921::CopyFrom(const Proto80400921& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400921::IsInitialized() const {
  
  return true;
}

void Proto80400921::Swap(Proto80400921* other) {
  if (other != this) {
    std::swap(boss_id_, other->boss_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400921::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400921_descriptor_;
  metadata.reflection = Proto80400921_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400922::kTestArgFieldNumber;
const int Proto80400922::kRedIdFieldNumber;
const int Proto80400922::kRedNameFieldNumber;
const int Proto80400922::kBekillIdFieldNumber;
const int Proto80400922::kBekillNameFieldNumber;
#endif  // !_MSC_VER

Proto80400922::Proto80400922()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400922::InitAsDefaultInstance() {
}

Proto80400922::Proto80400922(const Proto80400922& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400922::SharedCtor() {
  _cached_size_ = 0;
  test_arg_ = 0;
  red_id_ = GOOGLE_LONGLONG(0);
  red_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bekill_id_ = GOOGLE_LONGLONG(0);
  bekill_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400922::~Proto80400922() {
  SharedDtor();
}

void Proto80400922::SharedDtor() {
  if (red_name_ != &::google::protobuf::internal::kEmptyString) {
    delete red_name_;
  }
  if (bekill_name_ != &::google::protobuf::internal::kEmptyString) {
    delete bekill_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400922::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400922::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400922_descriptor_;
}

const Proto80400922& Proto80400922::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80400922* Proto80400922::default_instance_ = NULL;

Proto80400922* Proto80400922::New() const {
  return new Proto80400922;
}

void Proto80400922::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    test_arg_ = 0;
    red_id_ = GOOGLE_LONGLONG(0);
    if (has_red_name()) {
      if (red_name_ != &::google::protobuf::internal::kEmptyString) {
        red_name_->clear();
      }
    }
    bekill_id_ = GOOGLE_LONGLONG(0);
    if (has_bekill_name()) {
      if (bekill_name_ != &::google::protobuf::internal::kEmptyString) {
        bekill_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400922::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 test_arg = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &test_arg_)));
          set_has_test_arg();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_red_id;
        break;
      }
      
      // optional int64 red_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_red_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &red_id_)));
          set_has_red_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_red_name;
        break;
      }
      
      // optional string red_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_red_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_red_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->red_name().data(), this->red_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_bekill_id;
        break;
      }
      
      // optional int64 bekill_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bekill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bekill_id_)));
          set_has_bekill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_bekill_name;
        break;
      }
      
      // optional string bekill_name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bekill_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bekill_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bekill_name().data(), this->bekill_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400922::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 test_arg = 1;
  if (has_test_arg()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->test_arg(), output);
  }
  
  // optional int64 red_id = 2;
  if (has_red_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->red_id(), output);
  }
  
  // optional string red_name = 3;
  if (has_red_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->red_name().data(), this->red_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->red_name(), output);
  }
  
  // optional int64 bekill_id = 4;
  if (has_bekill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->bekill_id(), output);
  }
  
  // optional string bekill_name = 5;
  if (has_bekill_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bekill_name().data(), this->bekill_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->bekill_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400922::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 test_arg = 1;
  if (has_test_arg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->test_arg(), target);
  }
  
  // optional int64 red_id = 2;
  if (has_red_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->red_id(), target);
  }
  
  // optional string red_name = 3;
  if (has_red_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->red_name().data(), this->red_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->red_name(), target);
  }
  
  // optional int64 bekill_id = 4;
  if (has_bekill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->bekill_id(), target);
  }
  
  // optional string bekill_name = 5;
  if (has_bekill_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bekill_name().data(), this->bekill_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->bekill_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400922::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 test_arg = 1;
    if (has_test_arg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->test_arg());
    }
    
    // optional int64 red_id = 2;
    if (has_red_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->red_id());
    }
    
    // optional string red_name = 3;
    if (has_red_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->red_name());
    }
    
    // optional int64 bekill_id = 4;
    if (has_bekill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->bekill_id());
    }
    
    // optional string bekill_name = 5;
    if (has_bekill_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bekill_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400922::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400922* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400922*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400922::MergeFrom(const Proto80400922& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test_arg()) {
      set_test_arg(from.test_arg());
    }
    if (from.has_red_id()) {
      set_red_id(from.red_id());
    }
    if (from.has_red_name()) {
      set_red_name(from.red_name());
    }
    if (from.has_bekill_id()) {
      set_bekill_id(from.bekill_id());
    }
    if (from.has_bekill_name()) {
      set_bekill_name(from.bekill_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400922::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400922::CopyFrom(const Proto80400922& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400922::IsInitialized() const {
  
  return true;
}

void Proto80400922::Swap(Proto80400922* other) {
  if (other != this) {
    std::swap(test_arg_, other->test_arg_);
    std::swap(red_id_, other->red_id_);
    std::swap(red_name_, other->red_name_);
    std::swap(bekill_id_, other->bekill_id_);
    std::swap(bekill_name_, other->bekill_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400922::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400922_descriptor_;
  metadata.reflection = Proto80400922_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400902::kLeftTimeFieldNumber;
#endif  // !_MSC_VER

Proto81400902::Proto81400902()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400902::InitAsDefaultInstance() {
}

Proto81400902::Proto81400902(const Proto81400902& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400902::SharedCtor() {
  _cached_size_ = 0;
  left_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400902::~Proto81400902() {
  SharedDtor();
}

void Proto81400902::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400902::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400902::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400902_descriptor_;
}

const Proto81400902& Proto81400902::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto81400902* Proto81400902::default_instance_ = NULL;

Proto81400902* Proto81400902::New() const {
  return new Proto81400902;
}

void Proto81400902::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400902::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400902::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_time = 1;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400902::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_time = 1;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400902::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_time = 1;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400902::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400902* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400902*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400902::MergeFrom(const Proto81400902& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400902::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400902::CopyFrom(const Proto81400902& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400902::IsInitialized() const {
  
  return true;
}

void Proto81400902::Swap(Proto81400902* other) {
  if (other != this) {
    std::swap(left_time_, other->left_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400902::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400902_descriptor_;
  metadata.reflection = Proto81400902_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400230::kItemIdFieldNumber;
#endif  // !_MSC_VER

Proto80400230::Proto80400230()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400230::InitAsDefaultInstance() {
}

Proto80400230::Proto80400230(const Proto80400230& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400230::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400230::~Proto80400230() {
  SharedDtor();
}

void Proto80400230::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400230::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400230::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400230_descriptor_;
}

const Proto80400230& Proto80400230::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80400230* Proto80400230::default_instance_ = NULL;

Proto80400230* Proto80400230::New() const {
  return new Proto80400230;
}

void Proto80400230::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400230::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400230::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400230::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400230::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400230::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400230* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400230*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400230::MergeFrom(const Proto80400230& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400230::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400230::CopyFrom(const Proto80400230& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400230::IsInitialized() const {
  
  return true;
}

void Proto80400230::Swap(Proto80400230* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400230::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400230_descriptor_;
  metadata.reflection = Proto80400230_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100157::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto10100157::Proto10100157()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100157::InitAsDefaultInstance() {
}

Proto10100157::Proto10100157(const Proto10100157& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100157::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100157::~Proto10100157() {
  SharedDtor();
}

void Proto10100157::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100157::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100157::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100157_descriptor_;
}

const Proto10100157& Proto10100157::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto10100157* Proto10100157::default_instance_ = NULL;

Proto10100157* Proto10100157::New() const {
  return new Proto10100157;
}

void Proto10100157::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100157::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100157::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100157::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100157::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100157::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100157* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100157*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100157::MergeFrom(const Proto10100157& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100157::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100157::CopyFrom(const Proto10100157& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100157::IsInitialized() const {
  
  return true;
}

void Proto10100157::Swap(Proto10100157* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100157::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100157_descriptor_;
  metadata.reflection = Proto10100157_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400404::kRoleIdFieldNumber;
const int Proto80400404::kTeamIdFieldNumber;
const int Proto80400404::kRoleNameFieldNumber;
const int Proto80400404::kCareerFieldNumber;
const int Proto80400404::kSexFieldNumber;
const int Proto80400404::kPixelXFieldNumber;
const int Proto80400404::kPixelYFieldNumber;
#endif  // !_MSC_VER

Proto80400404::Proto80400404()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400404::InitAsDefaultInstance() {
}

Proto80400404::Proto80400404(const Proto80400404& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400404::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  team_id_ = GOOGLE_LONGLONG(0);
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  career_ = 0;
  sex_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400404::~Proto80400404() {
  SharedDtor();
}

void Proto80400404::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400404::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400404::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400404_descriptor_;
}

const Proto80400404& Proto80400404::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80400404* Proto80400404::default_instance_ = NULL;

Proto80400404* Proto80400404::New() const {
  return new Proto80400404;
}

void Proto80400404::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    team_id_ = GOOGLE_LONGLONG(0);
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
    career_ = 0;
    sex_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400404::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_team_id;
        break;
      }
      
      // optional int64 team_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_team_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_role_name;
        break;
      }
      
      // optional string role_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_career;
        break;
      }
      
      // optional int32 career = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_career:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &career_)));
          set_has_career();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_sex;
        break;
      }
      
      // optional int32 sex = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400404::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int64 team_id = 2;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->team_id(), output);
  }
  
  // optional string role_name = 3;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->role_name(), output);
  }
  
  // optional int32 career = 4;
  if (has_career()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->career(), output);
  }
  
  // optional int32 sex = 5;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sex(), output);
  }
  
  // optional int32 pixel_x = 6;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 7;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->pixel_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400404::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int64 team_id = 2;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->team_id(), target);
  }
  
  // optional string role_name = 3;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->role_name(), target);
  }
  
  // optional int32 career = 4;
  if (has_career()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->career(), target);
  }
  
  // optional int32 sex = 5;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sex(), target);
  }
  
  // optional int32 pixel_x = 6;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 7;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->pixel_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400404::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int64 team_id = 2;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->team_id());
    }
    
    // optional string role_name = 3;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
    // optional int32 career = 4;
    if (has_career()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->career());
    }
    
    // optional int32 sex = 5;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }
    
    // optional int32 pixel_x = 6;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 7;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400404::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400404* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400404*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400404::MergeFrom(const Proto80400404& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
    if (from.has_career()) {
      set_career(from.career());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400404::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400404::CopyFrom(const Proto80400404& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400404::IsInitialized() const {
  
  return true;
}

void Proto80400404::Swap(Proto80400404* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(team_id_, other->team_id_);
    std::swap(role_name_, other->role_name_);
    std::swap(career_, other->career_);
    std::swap(sex_, other->sex_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400404::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400404_descriptor_;
  metadata.reflection = Proto80400404_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400405::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto80400405::Proto80400405()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400405::InitAsDefaultInstance() {
}

Proto80400405::Proto80400405(const Proto80400405& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400405::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400405::~Proto80400405() {
  SharedDtor();
}

void Proto80400405::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400405::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400405::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400405_descriptor_;
}

const Proto80400405& Proto80400405::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80400405* Proto80400405::default_instance_ = NULL;

Proto80400405* Proto80400405::New() const {
  return new Proto80400405;
}

void Proto80400405::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400405::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400405::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400405::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400405::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400405::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400405* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400405*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400405::MergeFrom(const Proto80400405& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400405::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400405::CopyFrom(const Proto80400405& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400405::IsInitialized() const {
  
  return true;
}

void Proto80400405::Swap(Proto80400405* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400405::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400405_descriptor_;
  metadata.reflection = Proto80400405_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400406::kRoleIdFieldNumber;
const int Proto80400406::kPixelXFieldNumber;
const int Proto80400406::kPixelYFieldNumber;
#endif  // !_MSC_VER

Proto80400406::Proto80400406()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400406::InitAsDefaultInstance() {
}

Proto80400406::Proto80400406(const Proto80400406& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400406::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  pixel_x_ = 0;
  pixel_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400406::~Proto80400406() {
  SharedDtor();
}

void Proto80400406::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400406::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400406::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400406_descriptor_;
}

const Proto80400406& Proto80400406::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80400406* Proto80400406::default_instance_ = NULL;

Proto80400406* Proto80400406::New() const {
  return new Proto80400406;
}

void Proto80400406::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    pixel_x_ = 0;
    pixel_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400406::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400406::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400406::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400406::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 pixel_x = 2;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 3;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400406::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400406* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400406*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400406::MergeFrom(const Proto80400406& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400406::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400406::CopyFrom(const Proto80400406& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400406::IsInitialized() const {
  
  return true;
}

void Proto80400406::Swap(Proto80400406* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400406::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400406_descriptor_;
  metadata.reflection = Proto80400406_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400231::kMoverIdFieldNumber;
#endif  // !_MSC_VER

Proto80400231::Proto80400231()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400231::InitAsDefaultInstance() {
}

Proto80400231::Proto80400231(const Proto80400231& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400231::SharedCtor() {
  _cached_size_ = 0;
  mover_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400231::~Proto80400231() {
  SharedDtor();
}

void Proto80400231::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400231::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400231::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400231_descriptor_;
}

const Proto80400231& Proto80400231::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient012_2eproto();  return *default_instance_;
}

Proto80400231* Proto80400231::default_instance_ = NULL;

Proto80400231* Proto80400231::New() const {
  return new Proto80400231;
}

void Proto80400231::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mover_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400231::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 mover_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mover_id_)));
          set_has_mover_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400231::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->mover_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400231::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->mover_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400231::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 mover_id = 1;
    if (has_mover_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mover_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400231::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400231* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400231*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400231::MergeFrom(const Proto80400231& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mover_id()) {
      set_mover_id(from.mover_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400231::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400231::CopyFrom(const Proto80400231& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400231::IsInitialized() const {
  
  return true;
}

void Proto80400231::Swap(Proto80400231* other) {
  if (other != this) {
    std::swap(mover_id_, other->mover_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400231::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400231_descriptor_;
  metadata.reflection = Proto80400231_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
