// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient008.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto80400213_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400213_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400332_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400332_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400105_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400105_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400113_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400113_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400214_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400214_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400345_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400345_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400655_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400655_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400655_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400655_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401202_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401202_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401203_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401203_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401201_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401201_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401202_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401202_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401203_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401203_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401004_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401004_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400911_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400911_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400346_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400346_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400707_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400707_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401703_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401703_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401702_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401702_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401703_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401703_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400909_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400909_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400909_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400909_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400114_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400114_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400910_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400910_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400910_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400910_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401705_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401705_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400911_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400911_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401752_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401752_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401751_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401751_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100417_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100417_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100416_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100416_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100416_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100416_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400005_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400005_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400912_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400912_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400912_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400912_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400913_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400913_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400216_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400216_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100406_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100406_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400914_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400914_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400914_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400914_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400913_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400913_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400403_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400403_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400613_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400613_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80200007_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80200007_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400106_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400106_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100024_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100024_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100024_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100024_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400333_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400333_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient008_2eproto() {
  protobuf_AddDesc_ProtoClient008_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient008.proto");
  GOOGLE_CHECK(file != NULL);
  Proto80400213_descriptor_ = file->message_type(0);
  static const int Proto80400213_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400213, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400213, guide_tick_sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400213, fighter_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400213, no_view_text_),
  };
  Proto80400213_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400213_descriptor_,
      Proto80400213::default_instance_,
      Proto80400213_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400213, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400213, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400213));
  Proto11400332_descriptor_ = file->message_type(1);
  static const int Proto11400332_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400332, role_name_),
  };
  Proto11400332_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400332_descriptor_,
      Proto11400332::default_instance_,
      Proto11400332_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400332, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400332, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400332));
  Proto81400105_descriptor_ = file->message_type(2);
  static const int Proto81400105_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400105, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400105, role_name_),
  };
  Proto81400105_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400105_descriptor_,
      Proto81400105::default_instance_,
      Proto81400105_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400105, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400105, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400105));
  Proto10400113_descriptor_ = file->message_type(3);
  static const int Proto10400113_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400113, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400113, pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400113, action_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400113, index_),
  };
  Proto10400113_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400113_descriptor_,
      Proto10400113::default_instance_,
      Proto10400113_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400113, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400113, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400113));
  Proto80400214_descriptor_ = file->message_type(4);
  static const int Proto80400214_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400214, mover_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400214, action_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400214, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400214, pixel_y_),
  };
  Proto80400214_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400214_descriptor_,
      Proto80400214::default_instance_,
      Proto80400214_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400214, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400214, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400214));
  Proto80400345_descriptor_ = file->message_type(5);
  static const int Proto80400345_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400345, add_contri_),
  };
  Proto80400345_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400345_descriptor_,
      Proto80400345::default_instance_,
      Proto80400345_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400345, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400345, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400345));
  Proto11400655_descriptor_ = file->message_type(6);
  static const int Proto11400655_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400655, pkg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400655, pkg_index_),
  };
  Proto11400655_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400655_descriptor_,
      Proto11400655::default_instance_,
      Proto11400655_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400655, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400655, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400655));
  Proto51400655_descriptor_ = file->message_type(7);
  static const int Proto51400655_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400655, pkg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400655, equip_part_),
  };
  Proto51400655_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400655_descriptor_,
      Proto51400655::default_instance_,
      Proto51400655_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400655, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400655, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400655));
  Proto11401202_descriptor_ = file->message_type(8);
  static const int Proto11401202_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401202, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401202, script_type_),
  };
  Proto11401202_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401202_descriptor_,
      Proto11401202::default_instance_,
      Proto11401202_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401202, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401202, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401202));
  Proto11401203_descriptor_ = file->message_type(9);
  static const int Proto11401203_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401203, script_type_),
  };
  Proto11401203_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401203_descriptor_,
      Proto11401203::default_instance_,
      Proto11401203_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401203, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401203, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401203));
  Proto51401201_descriptor_ = file->message_type(10);
  static const int Proto51401201_offsets_[19] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, finished_script_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, script_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, drop_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, left_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, cur_script_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, is_show_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, card_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, card_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, is_vip_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, savvy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, reset_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, top_floor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, pass_wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, pass_chapter_),
  };
  Proto51401201_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401201_descriptor_,
      Proto51401201::default_instance_,
      Proto51401201_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401201, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401201));
  Proto51401202_descriptor_ = file->message_type(11);
  static const int Proto51401202_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401202, left_tick_),
  };
  Proto51401202_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401202_descriptor_,
      Proto51401202::default_instance_,
      Proto51401202_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401202, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401202, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401202));
  Proto51401203_descriptor_ = file->message_type(12);
  static const int Proto51401203_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401203, left_tick_),
  };
  Proto51401203_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401203_descriptor_,
      Proto51401203::default_instance_,
      Proto51401203_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401203, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401203, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401203));
  Proto11401004_descriptor_ = file->message_type(13);
  static const int Proto11401004_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401004, hook_detail_),
  };
  Proto11401004_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401004_descriptor_,
      Proto11401004::default_instance_,
      Proto11401004_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401004, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401004, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401004));
  Proto51401001_descriptor_ = file->message_type(14);
  static const int Proto51401001_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401001, hook_detail_),
  };
  Proto51401001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401001_descriptor_,
      Proto51401001::default_instance_,
      Proto51401001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401001));
  Proto81401001_descriptor_ = file->message_type(15);
  static const int Proto81401001_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401001, is_hooking_),
  };
  Proto81401001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401001_descriptor_,
      Proto81401001::default_instance_,
      Proto81401001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401001));
  Proto80400911_descriptor_ = file->message_type(16);
  static const int Proto80400911_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400911, max_num_),
  };
  Proto80400911_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400911_descriptor_,
      Proto80400911::default_instance_,
      Proto80400911_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400911, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400911, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400911));
  Proto80400346_descriptor_ = file->message_type(17);
  static const int Proto80400346_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400346, league_pos_),
  };
  Proto80400346_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400346_descriptor_,
      Proto80400346::default_instance_,
      Proto80400346_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400346, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400346, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400346));
  Proto10400707_descriptor_ = file->message_type(18);
  static const int Proto10400707_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400707, index_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400707, index_2_),
  };
  Proto10400707_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400707_descriptor_,
      Proto10400707::default_instance_,
      Proto10400707_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400707, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400707, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400707));
  Proto81401703_descriptor_ = file->message_type(19);
  static const int Proto81401703_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401703, even_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401703, even_value_),
  };
  Proto81401703_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401703_descriptor_,
      Proto81401703::default_instance_,
      Proto81401703_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401703, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401703, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401703));
  Proto51401702_descriptor_ = file->message_type(20);
  static const int Proto51401702_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401702, event_list_),
  };
  Proto51401702_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401702_descriptor_,
      Proto51401702::default_instance_,
      Proto51401702_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401702, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401702, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401702));
  Proto11401703_descriptor_ = file->message_type(21);
  static const int Proto11401703_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401703, tip_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401703, event_id_),
  };
  Proto11401703_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401703_descriptor_,
      Proto11401703::default_instance_,
      Proto11401703_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401703, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401703, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401703));
  Proto10400909_descriptor_ = file->message_type(22);
  static const int Proto10400909_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400909, piece_),
  };
  Proto10400909_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400909_descriptor_,
      Proto10400909::default_instance_,
      Proto10400909_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400909, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400909, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400909));
  Proto50400909_descriptor_ = file->message_type(23);
  static const int Proto50400909_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400909, piece_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400909, chapter_info_),
  };
  Proto50400909_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400909_descriptor_,
      Proto50400909::default_instance_,
      Proto50400909_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400909, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400909, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400909));
  Proto80400114_descriptor_ = file->message_type(24);
  static const int Proto80400114_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400114, effect_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400114, effect_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400114, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400114, pixel_y_),
  };
  Proto80400114_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400114_descriptor_,
      Proto80400114::default_instance_,
      Proto80400114_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400114, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400114, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400114));
  Proto10400910_descriptor_ = file->message_type(25);
  static const int Proto10400910_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400910, index_),
  };
  Proto10400910_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400910_descriptor_,
      Proto10400910::default_instance_,
      Proto10400910_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400910, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400910, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400910));
  Proto50400910_descriptor_ = file->message_type(26);
  static const int Proto50400910_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400910, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400910, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400910, vip_multiple_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400910, is_script_compact_),
  };
  Proto50400910_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400910_descriptor_,
      Proto50400910::default_instance_,
      Proto50400910_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400910, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400910, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400910));
  Proto81401705_descriptor_ = file->message_type(27);
  static const int Proto81401705_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401705, even_id_),
  };
  Proto81401705_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401705_descriptor_,
      Proto81401705::default_instance_,
      Proto81401705_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401705, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401705, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401705));
  Proto50400911_descriptor_ = file->message_type(28);
  static const int Proto50400911_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400911, max_piece_),
  };
  Proto50400911_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400911_descriptor_,
      Proto50400911::default_instance_,
      Proto50400911_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400911, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400911, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400911));
  Proto11401752_descriptor_ = file->message_type(29);
  static const int Proto11401752_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401752, system_setting_),
  };
  Proto11401752_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401752_descriptor_,
      Proto11401752::default_instance_,
      Proto11401752_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401752, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401752, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401752));
  Proto81401751_descriptor_ = file->message_type(30);
  static const int Proto81401751_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401751, system_setting_),
  };
  Proto81401751_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401751_descriptor_,
      Proto81401751::default_instance_,
      Proto81401751_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401751, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401751, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401751));
  Proto10100417_descriptor_ = file->message_type(31);
  static const int Proto10100417_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100417, role_id_),
  };
  Proto10100417_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100417_descriptor_,
      Proto10100417::default_instance_,
      Proto10100417_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100417, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100417, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100417));
  Proto50100416_descriptor_ = file->message_type(32);
  static const int Proto50100416_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100416, replacement_role_list_),
  };
  Proto50100416_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100416_descriptor_,
      Proto50100416::default_instance_,
      Proto50100416_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100416, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100416, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100416));
  Proto10100416_descriptor_ = file->message_type(33);
  static const int Proto10100416_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100416, is_introduction_),
  };
  Proto10100416_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100416_descriptor_,
      Proto10100416::default_instance_,
      Proto10100416_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100416, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100416, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100416));
  Proto10400005_descriptor_ = file->message_type(34);
  static const int Proto10400005_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400005, use_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400005, left_capacity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400005, item_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400005, use_times_),
  };
  Proto10400005_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400005_descriptor_,
      Proto10400005::default_instance_,
      Proto10400005_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400005, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400005, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400005));
  Proto10400912_descriptor_ = file->message_type(35);
  static const int Proto10400912_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400912, script_sort_),
  };
  Proto10400912_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400912_descriptor_,
      Proto10400912::default_instance_,
      Proto10400912_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400912, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400912, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400912));
  Proto50400912_descriptor_ = file->message_type(36);
  static const int Proto50400912_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400912, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400912, left_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400912, use_tick_),
  };
  Proto50400912_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400912_descriptor_,
      Proto50400912::default_instance_,
      Proto50400912_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400912, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400912, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400912));
  Proto50400913_descriptor_ = file->message_type(37);
  static const int Proto50400913_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400913, use_tick_),
  };
  Proto50400913_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400913_descriptor_,
      Proto50400913::default_instance_,
      Proto50400913_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400913, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400913, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400913));
  Proto80400216_descriptor_ = file->message_type(38);
  static const int Proto80400216_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400216, tips_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400216, tips_str_set_),
  };
  Proto80400216_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400216_descriptor_,
      Proto80400216::default_instance_,
      Proto80400216_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400216, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400216, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400216));
  Proto80100406_descriptor_ = file->message_type(39);
  static const int Proto80100406_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100406, use_times_set_),
  };
  Proto80100406_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100406_descriptor_,
      Proto80100406::default_instance_,
      Proto80100406_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100406, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100406, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100406));
  Proto10400914_descriptor_ = file->message_type(40);
  static const int Proto10400914_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400914, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400914, script_type_),
  };
  Proto10400914_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400914_descriptor_,
      Proto10400914::default_instance_,
      Proto10400914_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400914, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400914, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400914));
  Proto50400914_descriptor_ = file->message_type(41);
  static const int Proto50400914_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400914, script_info_),
  };
  Proto50400914_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400914_descriptor_,
      Proto50400914::default_instance_,
      Proto50400914_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400914, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400914, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400914));
  Proto80400913_descriptor_ = file->message_type(42);
  static const int Proto80400913_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400913, floor_),
  };
  Proto80400913_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400913_descriptor_,
      Proto80400913::default_instance_,
      Proto80400913_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400913, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400913, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400913));
  Proto80400403_descriptor_ = file->message_type(43);
  static const int Proto80400403_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400403, src_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400403, new_id_),
  };
  Proto80400403_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400403_descriptor_,
      Proto80400403::default_instance_,
      Proto80400403_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400403, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400403, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400403));
  Proto11400613_descriptor_ = file->message_type(44);
  static const int Proto11400613_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400613, magical_id_),
  };
  Proto11400613_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400613_descriptor_,
      Proto11400613::default_instance_,
      Proto11400613_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400613, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400613, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400613));
  Proto80200007_descriptor_ = file->message_type(45);
  static const int Proto80200007_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80200007, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80200007, type_),
  };
  Proto80200007_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80200007_descriptor_,
      Proto80200007::default_instance_,
      Proto80200007_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80200007, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80200007, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80200007));
  Proto81400106_descriptor_ = file->message_type(46);
  static const int Proto81400106_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400106, finish_task_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400106, pass_piece_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400106, pass_chapter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400106, pass_ui_),
  };
  Proto81400106_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400106_descriptor_,
      Proto81400106::default_instance_,
      Proto81400106_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400106, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400106, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400106));
  Proto10100024_descriptor_ = file->message_type(47);
  static const int Proto10100024_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100024, item_id_),
  };
  Proto10100024_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100024_descriptor_,
      Proto10100024::default_instance_,
      Proto10100024_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100024, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100024, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100024));
  Proto50100024_descriptor_ = file->message_type(48);
  static const int Proto50100024_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100024, shop_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100024, shop_item_),
  };
  Proto50100024_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100024_descriptor_,
      Proto50100024::default_instance_,
      Proto50100024_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100024, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100024, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100024));
  Proto51400333_descriptor_ = file->message_type(49);
  static const int Proto51400333_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400333, step_),
  };
  Proto51400333_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400333_descriptor_,
      Proto51400333::default_instance_,
      Proto51400333_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400333, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400333, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400333));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient008_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400213_descriptor_, &Proto80400213::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400332_descriptor_, &Proto11400332::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400105_descriptor_, &Proto81400105::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400113_descriptor_, &Proto10400113::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400214_descriptor_, &Proto80400214::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400345_descriptor_, &Proto80400345::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400655_descriptor_, &Proto11400655::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400655_descriptor_, &Proto51400655::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401202_descriptor_, &Proto11401202::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401203_descriptor_, &Proto11401203::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401201_descriptor_, &Proto51401201::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401202_descriptor_, &Proto51401202::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401203_descriptor_, &Proto51401203::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401004_descriptor_, &Proto11401004::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401001_descriptor_, &Proto51401001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401001_descriptor_, &Proto81401001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400911_descriptor_, &Proto80400911::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400346_descriptor_, &Proto80400346::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400707_descriptor_, &Proto10400707::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401703_descriptor_, &Proto81401703::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401702_descriptor_, &Proto51401702::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401703_descriptor_, &Proto11401703::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400909_descriptor_, &Proto10400909::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400909_descriptor_, &Proto50400909::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400114_descriptor_, &Proto80400114::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400910_descriptor_, &Proto10400910::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400910_descriptor_, &Proto50400910::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401705_descriptor_, &Proto81401705::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400911_descriptor_, &Proto50400911::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401752_descriptor_, &Proto11401752::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401751_descriptor_, &Proto81401751::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100417_descriptor_, &Proto10100417::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100416_descriptor_, &Proto50100416::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100416_descriptor_, &Proto10100416::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400005_descriptor_, &Proto10400005::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400912_descriptor_, &Proto10400912::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400912_descriptor_, &Proto50400912::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400913_descriptor_, &Proto50400913::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400216_descriptor_, &Proto80400216::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100406_descriptor_, &Proto80100406::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400914_descriptor_, &Proto10400914::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400914_descriptor_, &Proto50400914::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400913_descriptor_, &Proto80400913::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400403_descriptor_, &Proto80400403::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400613_descriptor_, &Proto11400613::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80200007_descriptor_, &Proto80200007::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400106_descriptor_, &Proto81400106::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100024_descriptor_, &Proto10100024::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100024_descriptor_, &Proto50100024::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400333_descriptor_, &Proto51400333::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient008_2eproto() {
  delete Proto80400213::default_instance_;
  delete Proto80400213_reflection_;
  delete Proto11400332::default_instance_;
  delete Proto11400332_reflection_;
  delete Proto81400105::default_instance_;
  delete Proto81400105_reflection_;
  delete Proto10400113::default_instance_;
  delete Proto10400113_reflection_;
  delete Proto80400214::default_instance_;
  delete Proto80400214_reflection_;
  delete Proto80400345::default_instance_;
  delete Proto80400345_reflection_;
  delete Proto11400655::default_instance_;
  delete Proto11400655_reflection_;
  delete Proto51400655::default_instance_;
  delete Proto51400655_reflection_;
  delete Proto11401202::default_instance_;
  delete Proto11401202_reflection_;
  delete Proto11401203::default_instance_;
  delete Proto11401203_reflection_;
  delete Proto51401201::default_instance_;
  delete Proto51401201_reflection_;
  delete Proto51401202::default_instance_;
  delete Proto51401202_reflection_;
  delete Proto51401203::default_instance_;
  delete Proto51401203_reflection_;
  delete Proto11401004::default_instance_;
  delete Proto11401004_reflection_;
  delete Proto51401001::default_instance_;
  delete Proto51401001_reflection_;
  delete Proto81401001::default_instance_;
  delete Proto81401001_reflection_;
  delete Proto80400911::default_instance_;
  delete Proto80400911_reflection_;
  delete Proto80400346::default_instance_;
  delete Proto80400346_reflection_;
  delete Proto10400707::default_instance_;
  delete Proto10400707_reflection_;
  delete Proto81401703::default_instance_;
  delete Proto81401703_reflection_;
  delete Proto51401702::default_instance_;
  delete Proto51401702_reflection_;
  delete Proto11401703::default_instance_;
  delete Proto11401703_reflection_;
  delete Proto10400909::default_instance_;
  delete Proto10400909_reflection_;
  delete Proto50400909::default_instance_;
  delete Proto50400909_reflection_;
  delete Proto80400114::default_instance_;
  delete Proto80400114_reflection_;
  delete Proto10400910::default_instance_;
  delete Proto10400910_reflection_;
  delete Proto50400910::default_instance_;
  delete Proto50400910_reflection_;
  delete Proto81401705::default_instance_;
  delete Proto81401705_reflection_;
  delete Proto50400911::default_instance_;
  delete Proto50400911_reflection_;
  delete Proto11401752::default_instance_;
  delete Proto11401752_reflection_;
  delete Proto81401751::default_instance_;
  delete Proto81401751_reflection_;
  delete Proto10100417::default_instance_;
  delete Proto10100417_reflection_;
  delete Proto50100416::default_instance_;
  delete Proto50100416_reflection_;
  delete Proto10100416::default_instance_;
  delete Proto10100416_reflection_;
  delete Proto10400005::default_instance_;
  delete Proto10400005_reflection_;
  delete Proto10400912::default_instance_;
  delete Proto10400912_reflection_;
  delete Proto50400912::default_instance_;
  delete Proto50400912_reflection_;
  delete Proto50400913::default_instance_;
  delete Proto50400913_reflection_;
  delete Proto80400216::default_instance_;
  delete Proto80400216_reflection_;
  delete Proto80100406::default_instance_;
  delete Proto80100406_reflection_;
  delete Proto10400914::default_instance_;
  delete Proto10400914_reflection_;
  delete Proto50400914::default_instance_;
  delete Proto50400914_reflection_;
  delete Proto80400913::default_instance_;
  delete Proto80400913_reflection_;
  delete Proto80400403::default_instance_;
  delete Proto80400403_reflection_;
  delete Proto11400613::default_instance_;
  delete Proto11400613_reflection_;
  delete Proto80200007::default_instance_;
  delete Proto80200007_reflection_;
  delete Proto81400106::default_instance_;
  delete Proto81400106_reflection_;
  delete Proto10100024::default_instance_;
  delete Proto10100024_reflection_;
  delete Proto50100024::default_instance_;
  delete Proto50100024_reflection_;
  delete Proto51400333::default_instance_;
  delete Proto51400333_reflection_;
}

void protobuf_AddDesc_ProtoClient008_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient008.proto\032\021ProtoPublic.prot"
    "o\"c\n\rProto80400213\022\020\n\010skill_id\030\001 \001(\005\022\026\n\016"
    "guide_tick_sec\030\002 \001(\005\022\022\n\nfighter_id\030\003 \001(\003"
    "\022\024\n\014no_view_text\030\004 \001(\005\"\"\n\rProto11400332\022"
    "\021\n\trole_name\030\001 \001(\t\"3\n\rProto81400105\022\017\n\007r"
    "ole_id\030\001 \001(\003\022\021\n\trole_name\030\002 \001(\t\"U\n\rProto"
    "10400113\022\017\n\007pixel_x\030\001 \001(\005\022\017\n\007pixel_y\030\002 \001"
    "(\005\022\023\n\013action_type\030\003 \001(\005\022\r\n\005index\030\004 \001(\005\"X"
    "\n\rProto80400214\022\020\n\010mover_id\030\001 \001(\003\022\023\n\013act"
    "ion_type\030\002 \001(\005\022\017\n\007pixel_x\030\003 \001(\005\022\017\n\007pixel"
    "_y\030\004 \001(\005\"#\n\rProto80400345\022\022\n\nadd_contri\030"
    "\001 \001(\005\"4\n\rProto11400655\022\020\n\010pkg_type\030\001 \001(\005"
    "\022\021\n\tpkg_index\030\002 \001(\005\"5\n\rProto51400655\022\020\n\010"
    "pkg_type\030\001 \001(\005\022\022\n\nequip_part\030\002 \001(\005\"9\n\rPr"
    "oto11401202\022\023\n\013script_sort\030\001 \001(\005\022\023\n\013scri"
    "pt_type\030\002 \001(\005\"$\n\rProto11401203\022\023\n\013script"
    "_type\030\001 \001(\005\"\323\003\n\rProto51401201\022*\n\017finishe"
    "d_script\030\001 \003(\0132\021.ProtoScriptClean\022\013\n\003exp"
    "\030\002 \001(\005\022\032\n\005money\030\003 \001(\0132\013.ProtoMoney\022\023\n\013sc"
    "ript_sort\030\004 \001(\005\022\023\n\013script_type\030\005 \001(\005\022\035\n\t"
    "item_list\030\006 \003(\0132\n.ProtoItem\022\035\n\tdrop_list"
    "\030\007 \003(\0132\n.ProtoItem\022\021\n\tleft_tick\030\010 \001(\005\022\r\n"
    "\005state\030\t \001(\005\022%\n\ncur_script\030\n \001(\0132\021.Proto"
    "ScriptClean\022\024\n\014is_show_card\030\013 \001(\005\022\022\n\ncar"
    "d_index\030\014 \001(\005\022\035\n\tcard_list\030\r \003(\0132\n.Proto"
    "Item\022\023\n\013is_vip_rate\030\016 \001(\005\022\r\n\005savvy\030\017 \001(\005"
    "\022\023\n\013reset_times\030\020 \001(\005\022\021\n\ttop_floor\030\021 \001(\005"
    "\022\021\n\tpass_wave\030\022 \001(\005\022\024\n\014pass_chapter\030\023 \001("
    "\005\"\"\n\rProto51401202\022\021\n\tleft_tick\030\001 \001(\005\"\"\n"
    "\rProto51401203\022\021\n\tleft_tick\030\001 \001(\005\"6\n\rPro"
    "to11401004\022%\n\013hook_detail\030\001 \001(\0132\020.ProtoH"
    "ookDetail\"6\n\rProto51401001\022%\n\013hook_detai"
    "l\030\001 \001(\0132\020.ProtoHookDetail\"#\n\rProto814010"
    "01\022\022\n\nis_hooking\030\001 \001(\005\" \n\rProto80400911\022"
    "\017\n\007max_num\030\001 \001(\005\"#\n\rProto80400346\022\022\n\nlea"
    "gue_pos\030\001 \001(\005\"1\n\rProto10400707\022\017\n\007index_"
    "1\030\001 \001(\005\022\017\n\007index_2\030\002 \001(\005\"4\n\rProto8140170"
    "3\022\017\n\007even_id\030\001 \001(\005\022\022\n\neven_value\030\002 \001(\005\"2"
    "\n\rProto51401702\022!\n\nevent_list\030\001 \003(\0132\r.Pr"
    "otoPairObj\"4\n\rProto11401703\022\021\n\ttip_index"
    "\030\001 \001(\003\022\020\n\010event_id\030\002 \001(\005\"\036\n\rProto1040090"
    "9\022\r\n\005piece\030\001 \001(\005\"I\n\rProto50400909\022\r\n\005pie"
    "ce\030\001 \001(\005\022)\n\014chapter_info\030\002 \003(\0132\023.ProtoSc"
    "riptChapter\"Y\n\rProto80400114\022\021\n\teffect_i"
    "d\030\001 \001(\005\022\023\n\013effect_sort\030\002 \001(\005\022\017\n\007pixel_x\030"
    "\003 \001(\005\022\017\n\007pixel_y\030\004 \001(\005\"\036\n\rProto10400910\022"
    "\r\n\005index\030\001 \001(\005\"n\n\rProto50400910\022\r\n\005index"
    "\030\001 \001(\005\022\035\n\titem_list\030\002 \003(\0132\n.ProtoItem\022\024\n"
    "\014vip_multiple\030\003 \001(\005\022\031\n\021is_script_compact"
    "\030\004 \001(\005\" \n\rProto81401705\022\017\n\007even_id\030\001 \001(\005"
    "\"\"\n\rProto50400911\022\021\n\tmax_piece\030\001 \001(\005\"9\n\r"
    "Proto11401752\022(\n\016system_setting\030\001 \001(\0132\020."
    "ProtoSysSetting\"9\n\rProto81401751\022(\n\016syst"
    "em_setting\030\001 \001(\0132\020.ProtoSysSetting\" \n\rPr"
    "oto10100417\022\017\n\007role_id\030\001 \001(\003\"A\n\rProto501"
    "00416\0220\n\025replacement_role_list\030\001 \003(\0132\021.P"
    "rotoRpmRoleInfo\"(\n\rProto10100416\022\027\n\017is_i"
    "ntroduction\030\001 \001(\005\"_\n\rProto10400005\022\020\n\010us"
    "e_type\030\001 \001(\005\022\025\n\rleft_capacity\030\002 \001(\005\022\022\n\ni"
    "tem_index\030\003 \001(\005\022\021\n\tuse_times\030\004 \001(\005\"$\n\rPr"
    "oto10400912\022\023\n\013script_sort\030\001 \001(\005\"J\n\rProt"
    "o50400912\022\023\n\013script_sort\030\001 \001(\005\022\022\n\nleft_t"
    "imes\030\002 \001(\005\022\020\n\010use_tick\030\003 \001(\005\"!\n\rProto504"
    "00913\022\020\n\010use_tick\030\001 \001(\005\"B\n\rProto80400216"
    "\022\033\n\010tips_set\030\001 \003(\0132\t.TipsItem\022\024\n\014tips_st"
    "r_set\030\002 \003(\t\"8\n\rProto80100406\022\'\n\ruse_time"
    "s_set\030\001 \003(\0132\020.ProtoFBUseTimes\"9\n\rProto10"
    "400914\022\023\n\013script_sort\030\001 \001(\005\022\023\n\013script_ty"
    "pe\030\002 \001(\005\"6\n\rProto50400914\022%\n\013script_info"
    "\030\001 \001(\0132\020.ProtoScriptInfo\"\036\n\rProto8040091"
    "3\022\r\n\005floor\030\001 \001(\005\"/\n\rProto80400403\022\016\n\006src"
    "_id\030\001 \001(\003\022\016\n\006new_id\030\002 \001(\003\"#\n\rProto114006"
    "13\022\022\n\nmagical_id\030\001 \001(\005\".\n\rProto80200007\022"
    "\017\n\007content\030\001 \001(\t\022\014\n\004type\030\002 \001(\005\"d\n\rProto8"
    "1400106\022\030\n\020finish_task_list\030\001 \003(\005\022\022\n\npas"
    "s_piece\030\002 \001(\005\022\024\n\014pass_chapter\030\003 \001(\005\022\017\n\007p"
    "ass_ui\030\004 \003(\t\" \n\rProto10100024\022\017\n\007item_id"
    "\030\001 \001(\005\"E\n\rProto50100024\022\021\n\tshop_type\030\001 \001"
    "(\005\022!\n\tshop_item\030\002 \001(\0132\016.ProtoMallItem\"\035\n"
    "\rProto51400333\022\014\n\004step\030\001 \001(\005", 3188);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient008.proto", &protobuf_RegisterTypes);
  Proto80400213::default_instance_ = new Proto80400213();
  Proto11400332::default_instance_ = new Proto11400332();
  Proto81400105::default_instance_ = new Proto81400105();
  Proto10400113::default_instance_ = new Proto10400113();
  Proto80400214::default_instance_ = new Proto80400214();
  Proto80400345::default_instance_ = new Proto80400345();
  Proto11400655::default_instance_ = new Proto11400655();
  Proto51400655::default_instance_ = new Proto51400655();
  Proto11401202::default_instance_ = new Proto11401202();
  Proto11401203::default_instance_ = new Proto11401203();
  Proto51401201::default_instance_ = new Proto51401201();
  Proto51401202::default_instance_ = new Proto51401202();
  Proto51401203::default_instance_ = new Proto51401203();
  Proto11401004::default_instance_ = new Proto11401004();
  Proto51401001::default_instance_ = new Proto51401001();
  Proto81401001::default_instance_ = new Proto81401001();
  Proto80400911::default_instance_ = new Proto80400911();
  Proto80400346::default_instance_ = new Proto80400346();
  Proto10400707::default_instance_ = new Proto10400707();
  Proto81401703::default_instance_ = new Proto81401703();
  Proto51401702::default_instance_ = new Proto51401702();
  Proto11401703::default_instance_ = new Proto11401703();
  Proto10400909::default_instance_ = new Proto10400909();
  Proto50400909::default_instance_ = new Proto50400909();
  Proto80400114::default_instance_ = new Proto80400114();
  Proto10400910::default_instance_ = new Proto10400910();
  Proto50400910::default_instance_ = new Proto50400910();
  Proto81401705::default_instance_ = new Proto81401705();
  Proto50400911::default_instance_ = new Proto50400911();
  Proto11401752::default_instance_ = new Proto11401752();
  Proto81401751::default_instance_ = new Proto81401751();
  Proto10100417::default_instance_ = new Proto10100417();
  Proto50100416::default_instance_ = new Proto50100416();
  Proto10100416::default_instance_ = new Proto10100416();
  Proto10400005::default_instance_ = new Proto10400005();
  Proto10400912::default_instance_ = new Proto10400912();
  Proto50400912::default_instance_ = new Proto50400912();
  Proto50400913::default_instance_ = new Proto50400913();
  Proto80400216::default_instance_ = new Proto80400216();
  Proto80100406::default_instance_ = new Proto80100406();
  Proto10400914::default_instance_ = new Proto10400914();
  Proto50400914::default_instance_ = new Proto50400914();
  Proto80400913::default_instance_ = new Proto80400913();
  Proto80400403::default_instance_ = new Proto80400403();
  Proto11400613::default_instance_ = new Proto11400613();
  Proto80200007::default_instance_ = new Proto80200007();
  Proto81400106::default_instance_ = new Proto81400106();
  Proto10100024::default_instance_ = new Proto10100024();
  Proto50100024::default_instance_ = new Proto50100024();
  Proto51400333::default_instance_ = new Proto51400333();
  Proto80400213::default_instance_->InitAsDefaultInstance();
  Proto11400332::default_instance_->InitAsDefaultInstance();
  Proto81400105::default_instance_->InitAsDefaultInstance();
  Proto10400113::default_instance_->InitAsDefaultInstance();
  Proto80400214::default_instance_->InitAsDefaultInstance();
  Proto80400345::default_instance_->InitAsDefaultInstance();
  Proto11400655::default_instance_->InitAsDefaultInstance();
  Proto51400655::default_instance_->InitAsDefaultInstance();
  Proto11401202::default_instance_->InitAsDefaultInstance();
  Proto11401203::default_instance_->InitAsDefaultInstance();
  Proto51401201::default_instance_->InitAsDefaultInstance();
  Proto51401202::default_instance_->InitAsDefaultInstance();
  Proto51401203::default_instance_->InitAsDefaultInstance();
  Proto11401004::default_instance_->InitAsDefaultInstance();
  Proto51401001::default_instance_->InitAsDefaultInstance();
  Proto81401001::default_instance_->InitAsDefaultInstance();
  Proto80400911::default_instance_->InitAsDefaultInstance();
  Proto80400346::default_instance_->InitAsDefaultInstance();
  Proto10400707::default_instance_->InitAsDefaultInstance();
  Proto81401703::default_instance_->InitAsDefaultInstance();
  Proto51401702::default_instance_->InitAsDefaultInstance();
  Proto11401703::default_instance_->InitAsDefaultInstance();
  Proto10400909::default_instance_->InitAsDefaultInstance();
  Proto50400909::default_instance_->InitAsDefaultInstance();
  Proto80400114::default_instance_->InitAsDefaultInstance();
  Proto10400910::default_instance_->InitAsDefaultInstance();
  Proto50400910::default_instance_->InitAsDefaultInstance();
  Proto81401705::default_instance_->InitAsDefaultInstance();
  Proto50400911::default_instance_->InitAsDefaultInstance();
  Proto11401752::default_instance_->InitAsDefaultInstance();
  Proto81401751::default_instance_->InitAsDefaultInstance();
  Proto10100417::default_instance_->InitAsDefaultInstance();
  Proto50100416::default_instance_->InitAsDefaultInstance();
  Proto10100416::default_instance_->InitAsDefaultInstance();
  Proto10400005::default_instance_->InitAsDefaultInstance();
  Proto10400912::default_instance_->InitAsDefaultInstance();
  Proto50400912::default_instance_->InitAsDefaultInstance();
  Proto50400913::default_instance_->InitAsDefaultInstance();
  Proto80400216::default_instance_->InitAsDefaultInstance();
  Proto80100406::default_instance_->InitAsDefaultInstance();
  Proto10400914::default_instance_->InitAsDefaultInstance();
  Proto50400914::default_instance_->InitAsDefaultInstance();
  Proto80400913::default_instance_->InitAsDefaultInstance();
  Proto80400403::default_instance_->InitAsDefaultInstance();
  Proto11400613::default_instance_->InitAsDefaultInstance();
  Proto80200007::default_instance_->InitAsDefaultInstance();
  Proto81400106::default_instance_->InitAsDefaultInstance();
  Proto10100024::default_instance_->InitAsDefaultInstance();
  Proto50100024::default_instance_->InitAsDefaultInstance();
  Proto51400333::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient008_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient008_2eproto {
  StaticDescriptorInitializer_ProtoClient008_2eproto() {
    protobuf_AddDesc_ProtoClient008_2eproto();
  }
} static_descriptor_initializer_ProtoClient008_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto80400213::kSkillIdFieldNumber;
const int Proto80400213::kGuideTickSecFieldNumber;
const int Proto80400213::kFighterIdFieldNumber;
const int Proto80400213::kNoViewTextFieldNumber;
#endif  // !_MSC_VER

Proto80400213::Proto80400213()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400213::InitAsDefaultInstance() {
}

Proto80400213::Proto80400213(const Proto80400213& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400213::SharedCtor() {
  _cached_size_ = 0;
  skill_id_ = 0;
  guide_tick_sec_ = 0;
  fighter_id_ = GOOGLE_LONGLONG(0);
  no_view_text_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400213::~Proto80400213() {
  SharedDtor();
}

void Proto80400213::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400213::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400213::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400213_descriptor_;
}

const Proto80400213& Proto80400213::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto80400213* Proto80400213::default_instance_ = NULL;

Proto80400213* Proto80400213::New() const {
  return new Proto80400213;
}

void Proto80400213::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skill_id_ = 0;
    guide_tick_sec_ = 0;
    fighter_id_ = GOOGLE_LONGLONG(0);
    no_view_text_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400213::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 skill_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_guide_tick_sec;
        break;
      }
      
      // optional int32 guide_tick_sec = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_guide_tick_sec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guide_tick_sec_)));
          set_has_guide_tick_sec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_fighter_id;
        break;
      }
      
      // optional int64 fighter_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fighter_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fighter_id_)));
          set_has_fighter_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_no_view_text;
        break;
      }
      
      // optional int32 no_view_text = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_no_view_text:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &no_view_text_)));
          set_has_no_view_text();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400213::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skill_id(), output);
  }
  
  // optional int32 guide_tick_sec = 2;
  if (has_guide_tick_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->guide_tick_sec(), output);
  }
  
  // optional int64 fighter_id = 3;
  if (has_fighter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->fighter_id(), output);
  }
  
  // optional int32 no_view_text = 4;
  if (has_no_view_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->no_view_text(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400213::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skill_id(), target);
  }
  
  // optional int32 guide_tick_sec = 2;
  if (has_guide_tick_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->guide_tick_sec(), target);
  }
  
  // optional int64 fighter_id = 3;
  if (has_fighter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->fighter_id(), target);
  }
  
  // optional int32 no_view_text = 4;
  if (has_no_view_text()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->no_view_text(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400213::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 skill_id = 1;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
    // optional int32 guide_tick_sec = 2;
    if (has_guide_tick_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guide_tick_sec());
    }
    
    // optional int64 fighter_id = 3;
    if (has_fighter_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fighter_id());
    }
    
    // optional int32 no_view_text = 4;
    if (has_no_view_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->no_view_text());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400213::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400213* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400213*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400213::MergeFrom(const Proto80400213& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_guide_tick_sec()) {
      set_guide_tick_sec(from.guide_tick_sec());
    }
    if (from.has_fighter_id()) {
      set_fighter_id(from.fighter_id());
    }
    if (from.has_no_view_text()) {
      set_no_view_text(from.no_view_text());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400213::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400213::CopyFrom(const Proto80400213& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400213::IsInitialized() const {
  
  return true;
}

void Proto80400213::Swap(Proto80400213* other) {
  if (other != this) {
    std::swap(skill_id_, other->skill_id_);
    std::swap(guide_tick_sec_, other->guide_tick_sec_);
    std::swap(fighter_id_, other->fighter_id_);
    std::swap(no_view_text_, other->no_view_text_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400213::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400213_descriptor_;
  metadata.reflection = Proto80400213_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400332::kRoleNameFieldNumber;
#endif  // !_MSC_VER

Proto11400332::Proto11400332()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400332::InitAsDefaultInstance() {
}

Proto11400332::Proto11400332(const Proto11400332& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400332::SharedCtor() {
  _cached_size_ = 0;
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400332::~Proto11400332() {
  SharedDtor();
}

void Proto11400332::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto11400332::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400332::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400332_descriptor_;
}

const Proto11400332& Proto11400332::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto11400332* Proto11400332::default_instance_ = NULL;

Proto11400332* Proto11400332::New() const {
  return new Proto11400332;
}

void Proto11400332::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400332::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string role_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400332::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string role_name = 1;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->role_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400332::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string role_name = 1;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->role_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400332::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string role_name = 1;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400332::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400332* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400332*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400332::MergeFrom(const Proto11400332& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400332::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400332::CopyFrom(const Proto11400332& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400332::IsInitialized() const {
  
  return true;
}

void Proto11400332::Swap(Proto11400332* other) {
  if (other != this) {
    std::swap(role_name_, other->role_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400332::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400332_descriptor_;
  metadata.reflection = Proto11400332_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400105::kRoleIdFieldNumber;
const int Proto81400105::kRoleNameFieldNumber;
#endif  // !_MSC_VER

Proto81400105::Proto81400105()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400105::InitAsDefaultInstance() {
}

Proto81400105::Proto81400105(const Proto81400105& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400105::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400105::~Proto81400105() {
  SharedDtor();
}

void Proto81400105::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto81400105::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400105::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400105_descriptor_;
}

const Proto81400105& Proto81400105::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto81400105* Proto81400105::default_instance_ = NULL;

Proto81400105* Proto81400105::New() const {
  return new Proto81400105;
}

void Proto81400105::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400105::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_role_name;
        break;
      }
      
      // optional string role_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400105::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional string role_name = 2;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->role_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400105::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional string role_name = 2;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->role_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400105::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional string role_name = 2;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400105::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400105* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400105*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400105::MergeFrom(const Proto81400105& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400105::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400105::CopyFrom(const Proto81400105& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400105::IsInitialized() const {
  
  return true;
}

void Proto81400105::Swap(Proto81400105* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(role_name_, other->role_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400105::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400105_descriptor_;
  metadata.reflection = Proto81400105_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400113::kPixelXFieldNumber;
const int Proto10400113::kPixelYFieldNumber;
const int Proto10400113::kActionTypeFieldNumber;
const int Proto10400113::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto10400113::Proto10400113()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400113::InitAsDefaultInstance() {
}

Proto10400113::Proto10400113(const Proto10400113& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400113::SharedCtor() {
  _cached_size_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  action_type_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400113::~Proto10400113() {
  SharedDtor();
}

void Proto10400113::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400113::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400113::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400113_descriptor_;
}

const Proto10400113& Proto10400113::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto10400113* Proto10400113::default_instance_ = NULL;

Proto10400113* Proto10400113::New() const {
  return new Proto10400113;
}

void Proto10400113::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pixel_x_ = 0;
    pixel_y_ = 0;
    action_type_ = 0;
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400113::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pixel_x = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_action_type;
        break;
      }
      
      // optional int32 action_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_action_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_type_)));
          set_has_action_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_index;
        break;
      }
      
      // optional int32 index = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400113::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pixel_x = 1;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 2;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pixel_y(), output);
  }
  
  // optional int32 action_type = 3;
  if (has_action_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->action_type(), output);
  }
  
  // optional int32 index = 4;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400113::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pixel_x = 1;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 2;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pixel_y(), target);
  }
  
  // optional int32 action_type = 3;
  if (has_action_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->action_type(), target);
  }
  
  // optional int32 index = 4;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400113::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pixel_x = 1;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 2;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
    // optional int32 action_type = 3;
    if (has_action_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action_type());
    }
    
    // optional int32 index = 4;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400113::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400113* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400113*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400113::MergeFrom(const Proto10400113& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
    if (from.has_action_type()) {
      set_action_type(from.action_type());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400113::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400113::CopyFrom(const Proto10400113& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400113::IsInitialized() const {
  
  return true;
}

void Proto10400113::Swap(Proto10400113* other) {
  if (other != this) {
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(action_type_, other->action_type_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400113::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400113_descriptor_;
  metadata.reflection = Proto10400113_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400214::kMoverIdFieldNumber;
const int Proto80400214::kActionTypeFieldNumber;
const int Proto80400214::kPixelXFieldNumber;
const int Proto80400214::kPixelYFieldNumber;
#endif  // !_MSC_VER

Proto80400214::Proto80400214()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400214::InitAsDefaultInstance() {
}

Proto80400214::Proto80400214(const Proto80400214& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400214::SharedCtor() {
  _cached_size_ = 0;
  mover_id_ = GOOGLE_LONGLONG(0);
  action_type_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400214::~Proto80400214() {
  SharedDtor();
}

void Proto80400214::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400214::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400214::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400214_descriptor_;
}

const Proto80400214& Proto80400214::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto80400214* Proto80400214::default_instance_ = NULL;

Proto80400214* Proto80400214::New() const {
  return new Proto80400214;
}

void Proto80400214::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mover_id_ = GOOGLE_LONGLONG(0);
    action_type_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400214::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 mover_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mover_id_)));
          set_has_mover_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_action_type;
        break;
      }
      
      // optional int32 action_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_action_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_type_)));
          set_has_action_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400214::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->mover_id(), output);
  }
  
  // optional int32 action_type = 2;
  if (has_action_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->action_type(), output);
  }
  
  // optional int32 pixel_x = 3;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 4;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pixel_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400214::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->mover_id(), target);
  }
  
  // optional int32 action_type = 2;
  if (has_action_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->action_type(), target);
  }
  
  // optional int32 pixel_x = 3;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 4;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pixel_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400214::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 mover_id = 1;
    if (has_mover_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mover_id());
    }
    
    // optional int32 action_type = 2;
    if (has_action_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action_type());
    }
    
    // optional int32 pixel_x = 3;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 4;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400214::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400214* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400214*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400214::MergeFrom(const Proto80400214& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mover_id()) {
      set_mover_id(from.mover_id());
    }
    if (from.has_action_type()) {
      set_action_type(from.action_type());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400214::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400214::CopyFrom(const Proto80400214& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400214::IsInitialized() const {
  
  return true;
}

void Proto80400214::Swap(Proto80400214* other) {
  if (other != this) {
    std::swap(mover_id_, other->mover_id_);
    std::swap(action_type_, other->action_type_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400214::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400214_descriptor_;
  metadata.reflection = Proto80400214_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400345::kAddContriFieldNumber;
#endif  // !_MSC_VER

Proto80400345::Proto80400345()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400345::InitAsDefaultInstance() {
}

Proto80400345::Proto80400345(const Proto80400345& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400345::SharedCtor() {
  _cached_size_ = 0;
  add_contri_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400345::~Proto80400345() {
  SharedDtor();
}

void Proto80400345::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400345::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400345::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400345_descriptor_;
}

const Proto80400345& Proto80400345::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto80400345* Proto80400345::default_instance_ = NULL;

Proto80400345* Proto80400345::New() const {
  return new Proto80400345;
}

void Proto80400345::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    add_contri_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400345::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 add_contri = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_contri_)));
          set_has_add_contri();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400345::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 add_contri = 1;
  if (has_add_contri()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->add_contri(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400345::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 add_contri = 1;
  if (has_add_contri()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->add_contri(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400345::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 add_contri = 1;
    if (has_add_contri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_contri());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400345::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400345* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400345*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400345::MergeFrom(const Proto80400345& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_add_contri()) {
      set_add_contri(from.add_contri());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400345::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400345::CopyFrom(const Proto80400345& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400345::IsInitialized() const {
  
  return true;
}

void Proto80400345::Swap(Proto80400345* other) {
  if (other != this) {
    std::swap(add_contri_, other->add_contri_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400345::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400345_descriptor_;
  metadata.reflection = Proto80400345_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400655::kPkgTypeFieldNumber;
const int Proto11400655::kPkgIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400655::Proto11400655()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400655::InitAsDefaultInstance() {
}

Proto11400655::Proto11400655(const Proto11400655& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400655::SharedCtor() {
  _cached_size_ = 0;
  pkg_type_ = 0;
  pkg_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400655::~Proto11400655() {
  SharedDtor();
}

void Proto11400655::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400655::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400655::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400655_descriptor_;
}

const Proto11400655& Proto11400655::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto11400655* Proto11400655::default_instance_ = NULL;

Proto11400655* Proto11400655::New() const {
  return new Proto11400655;
}

void Proto11400655::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pkg_type_ = 0;
    pkg_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400655::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pkg_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_type_)));
          set_has_pkg_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pkg_index;
        break;
      }
      
      // optional int32 pkg_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400655::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pkg_type = 1;
  if (has_pkg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pkg_type(), output);
  }
  
  // optional int32 pkg_index = 2;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pkg_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400655::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pkg_type = 1;
  if (has_pkg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pkg_type(), target);
  }
  
  // optional int32 pkg_index = 2;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pkg_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400655::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pkg_type = 1;
    if (has_pkg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_type());
    }
    
    // optional int32 pkg_index = 2;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400655::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400655* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400655*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400655::MergeFrom(const Proto11400655& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pkg_type()) {
      set_pkg_type(from.pkg_type());
    }
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400655::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400655::CopyFrom(const Proto11400655& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400655::IsInitialized() const {
  
  return true;
}

void Proto11400655::Swap(Proto11400655* other) {
  if (other != this) {
    std::swap(pkg_type_, other->pkg_type_);
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400655::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400655_descriptor_;
  metadata.reflection = Proto11400655_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400655::kPkgTypeFieldNumber;
const int Proto51400655::kEquipPartFieldNumber;
#endif  // !_MSC_VER

Proto51400655::Proto51400655()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400655::InitAsDefaultInstance() {
}

Proto51400655::Proto51400655(const Proto51400655& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400655::SharedCtor() {
  _cached_size_ = 0;
  pkg_type_ = 0;
  equip_part_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400655::~Proto51400655() {
  SharedDtor();
}

void Proto51400655::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400655::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400655::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400655_descriptor_;
}

const Proto51400655& Proto51400655::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto51400655* Proto51400655::default_instance_ = NULL;

Proto51400655* Proto51400655::New() const {
  return new Proto51400655;
}

void Proto51400655::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pkg_type_ = 0;
    equip_part_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400655::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pkg_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_type_)));
          set_has_pkg_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_equip_part;
        break;
      }
      
      // optional int32 equip_part = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equip_part:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equip_part_)));
          set_has_equip_part();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400655::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pkg_type = 1;
  if (has_pkg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pkg_type(), output);
  }
  
  // optional int32 equip_part = 2;
  if (has_equip_part()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->equip_part(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400655::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pkg_type = 1;
  if (has_pkg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pkg_type(), target);
  }
  
  // optional int32 equip_part = 2;
  if (has_equip_part()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->equip_part(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400655::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pkg_type = 1;
    if (has_pkg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_type());
    }
    
    // optional int32 equip_part = 2;
    if (has_equip_part()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equip_part());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400655::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400655* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400655*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400655::MergeFrom(const Proto51400655& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pkg_type()) {
      set_pkg_type(from.pkg_type());
    }
    if (from.has_equip_part()) {
      set_equip_part(from.equip_part());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400655::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400655::CopyFrom(const Proto51400655& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400655::IsInitialized() const {
  
  return true;
}

void Proto51400655::Swap(Proto51400655* other) {
  if (other != this) {
    std::swap(pkg_type_, other->pkg_type_);
    std::swap(equip_part_, other->equip_part_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400655::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400655_descriptor_;
  metadata.reflection = Proto51400655_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401202::kScriptSortFieldNumber;
const int Proto11401202::kScriptTypeFieldNumber;
#endif  // !_MSC_VER

Proto11401202::Proto11401202()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401202::InitAsDefaultInstance() {
}

Proto11401202::Proto11401202(const Proto11401202& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401202::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  script_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401202::~Proto11401202() {
  SharedDtor();
}

void Proto11401202::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401202::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401202::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401202_descriptor_;
}

const Proto11401202& Proto11401202::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto11401202* Proto11401202::default_instance_ = NULL;

Proto11401202* Proto11401202::New() const {
  return new Proto11401202;
}

void Proto11401202::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
    script_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401202::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_script_type;
        break;
      }
      
      // optional int32 script_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_type_)));
          set_has_script_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401202::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  // optional int32 script_type = 2;
  if (has_script_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->script_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401202::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  // optional int32 script_type = 2;
  if (has_script_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->script_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401202::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 script_type = 2;
    if (has_script_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401202::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401202* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401202*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401202::MergeFrom(const Proto11401202& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_script_type()) {
      set_script_type(from.script_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401202::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401202::CopyFrom(const Proto11401202& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401202::IsInitialized() const {
  
  return true;
}

void Proto11401202::Swap(Proto11401202* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(script_type_, other->script_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401202::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401202_descriptor_;
  metadata.reflection = Proto11401202_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401203::kScriptTypeFieldNumber;
#endif  // !_MSC_VER

Proto11401203::Proto11401203()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401203::InitAsDefaultInstance() {
}

Proto11401203::Proto11401203(const Proto11401203& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401203::SharedCtor() {
  _cached_size_ = 0;
  script_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401203::~Proto11401203() {
  SharedDtor();
}

void Proto11401203::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401203::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401203::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401203_descriptor_;
}

const Proto11401203& Proto11401203::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto11401203* Proto11401203::default_instance_ = NULL;

Proto11401203* Proto11401203::New() const {
  return new Proto11401203;
}

void Proto11401203::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401203::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_type_)));
          set_has_script_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401203::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_type = 1;
  if (has_script_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401203::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_type = 1;
  if (has_script_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401203::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_type = 1;
    if (has_script_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401203::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401203* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401203*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401203::MergeFrom(const Proto11401203& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_type()) {
      set_script_type(from.script_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401203::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401203::CopyFrom(const Proto11401203& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401203::IsInitialized() const {
  
  return true;
}

void Proto11401203::Swap(Proto11401203* other) {
  if (other != this) {
    std::swap(script_type_, other->script_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401203::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401203_descriptor_;
  metadata.reflection = Proto11401203_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401201::kFinishedScriptFieldNumber;
const int Proto51401201::kExpFieldNumber;
const int Proto51401201::kMoneyFieldNumber;
const int Proto51401201::kScriptSortFieldNumber;
const int Proto51401201::kScriptTypeFieldNumber;
const int Proto51401201::kItemListFieldNumber;
const int Proto51401201::kDropListFieldNumber;
const int Proto51401201::kLeftTickFieldNumber;
const int Proto51401201::kStateFieldNumber;
const int Proto51401201::kCurScriptFieldNumber;
const int Proto51401201::kIsShowCardFieldNumber;
const int Proto51401201::kCardIndexFieldNumber;
const int Proto51401201::kCardListFieldNumber;
const int Proto51401201::kIsVipRateFieldNumber;
const int Proto51401201::kSavvyFieldNumber;
const int Proto51401201::kResetTimesFieldNumber;
const int Proto51401201::kTopFloorFieldNumber;
const int Proto51401201::kPassWaveFieldNumber;
const int Proto51401201::kPassChapterFieldNumber;
#endif  // !_MSC_VER

Proto51401201::Proto51401201()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401201::InitAsDefaultInstance() {
  money_ = const_cast< ::ProtoMoney*>(&::ProtoMoney::default_instance());
  cur_script_ = const_cast< ::ProtoScriptClean*>(&::ProtoScriptClean::default_instance());
}

Proto51401201::Proto51401201(const Proto51401201& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401201::SharedCtor() {
  _cached_size_ = 0;
  exp_ = 0;
  money_ = NULL;
  script_sort_ = 0;
  script_type_ = 0;
  left_tick_ = 0;
  state_ = 0;
  cur_script_ = NULL;
  is_show_card_ = 0;
  card_index_ = 0;
  is_vip_rate_ = 0;
  savvy_ = 0;
  reset_times_ = 0;
  top_floor_ = 0;
  pass_wave_ = 0;
  pass_chapter_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401201::~Proto51401201() {
  SharedDtor();
}

void Proto51401201::SharedDtor() {
  if (this != default_instance_) {
    delete money_;
    delete cur_script_;
  }
}

void Proto51401201::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401201::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401201_descriptor_;
}

const Proto51401201& Proto51401201::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto51401201* Proto51401201::default_instance_ = NULL;

Proto51401201* Proto51401201::New() const {
  return new Proto51401201;
}

void Proto51401201::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    exp_ = 0;
    if (has_money()) {
      if (money_ != NULL) money_->::ProtoMoney::Clear();
    }
    script_sort_ = 0;
    script_type_ = 0;
    left_tick_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    state_ = 0;
    if (has_cur_script()) {
      if (cur_script_ != NULL) cur_script_->::ProtoScriptClean::Clear();
    }
    is_show_card_ = 0;
    card_index_ = 0;
    is_vip_rate_ = 0;
    savvy_ = 0;
    reset_times_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    top_floor_ = 0;
    pass_wave_ = 0;
    pass_chapter_ = 0;
  }
  finished_script_.Clear();
  item_list_.Clear();
  drop_list_.Clear();
  card_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401201::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoScriptClean finished_script = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_finished_script:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_finished_script()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_finished_script;
        if (input->ExpectTag(16)) goto parse_exp;
        break;
      }
      
      // optional int32 exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_money;
        break;
      }
      
      // optional .ProtoMoney money = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_money:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_money()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_script_sort;
        break;
      }
      
      // optional int32 script_sort = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_script_type;
        break;
      }
      
      // optional int32 script_type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_type_)));
          set_has_script_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoItem item_list = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_item_list;
        if (input->ExpectTag(58)) goto parse_drop_list;
        break;
      }
      
      // repeated .ProtoItem drop_list = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_drop_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_drop_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_drop_list;
        if (input->ExpectTag(64)) goto parse_left_tick;
        break;
      }
      
      // optional int32 left_tick = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_tick_)));
          set_has_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_state;
        break;
      }
      
      // optional int32 state = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_cur_script;
        break;
      }
      
      // optional .ProtoScriptClean cur_script = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cur_script:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cur_script()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_is_show_card;
        break;
      }
      
      // optional int32 is_show_card = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_show_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_show_card_)));
          set_has_is_show_card();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_card_index;
        break;
      }
      
      // optional int32 card_index = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_card_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &card_index_)));
          set_has_card_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_card_list;
        break;
      }
      
      // repeated .ProtoItem card_list = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_card_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_card_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_card_list;
        if (input->ExpectTag(112)) goto parse_is_vip_rate;
        break;
      }
      
      // optional int32 is_vip_rate = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_vip_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_vip_rate_)));
          set_has_is_vip_rate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_savvy;
        break;
      }
      
      // optional int32 savvy = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_savvy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &savvy_)));
          set_has_savvy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_reset_times;
        break;
      }
      
      // optional int32 reset_times = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reset_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reset_times_)));
          set_has_reset_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_top_floor;
        break;
      }
      
      // optional int32 top_floor = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_top_floor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_floor_)));
          set_has_top_floor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_pass_wave;
        break;
      }
      
      // optional int32 pass_wave = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pass_wave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pass_wave_)));
          set_has_pass_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_pass_chapter;
        break;
      }
      
      // optional int32 pass_chapter = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pass_chapter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pass_chapter_)));
          set_has_pass_chapter();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401201::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoScriptClean finished_script = 1;
  for (int i = 0; i < this->finished_script_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->finished_script(i), output);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exp(), output);
  }
  
  // optional .ProtoMoney money = 3;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->money(), output);
  }
  
  // optional int32 script_sort = 4;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->script_sort(), output);
  }
  
  // optional int32 script_type = 5;
  if (has_script_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->script_type(), output);
  }
  
  // repeated .ProtoItem item_list = 6;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->item_list(i), output);
  }
  
  // repeated .ProtoItem drop_list = 7;
  for (int i = 0; i < this->drop_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->drop_list(i), output);
  }
  
  // optional int32 left_tick = 8;
  if (has_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->left_tick(), output);
  }
  
  // optional int32 state = 9;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->state(), output);
  }
  
  // optional .ProtoScriptClean cur_script = 10;
  if (has_cur_script()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->cur_script(), output);
  }
  
  // optional int32 is_show_card = 11;
  if (has_is_show_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->is_show_card(), output);
  }
  
  // optional int32 card_index = 12;
  if (has_card_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->card_index(), output);
  }
  
  // repeated .ProtoItem card_list = 13;
  for (int i = 0; i < this->card_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->card_list(i), output);
  }
  
  // optional int32 is_vip_rate = 14;
  if (has_is_vip_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->is_vip_rate(), output);
  }
  
  // optional int32 savvy = 15;
  if (has_savvy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->savvy(), output);
  }
  
  // optional int32 reset_times = 16;
  if (has_reset_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->reset_times(), output);
  }
  
  // optional int32 top_floor = 17;
  if (has_top_floor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->top_floor(), output);
  }
  
  // optional int32 pass_wave = 18;
  if (has_pass_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->pass_wave(), output);
  }
  
  // optional int32 pass_chapter = 19;
  if (has_pass_chapter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->pass_chapter(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401201::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoScriptClean finished_script = 1;
  for (int i = 0; i < this->finished_script_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->finished_script(i), target);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exp(), target);
  }
  
  // optional .ProtoMoney money = 3;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->money(), target);
  }
  
  // optional int32 script_sort = 4;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->script_sort(), target);
  }
  
  // optional int32 script_type = 5;
  if (has_script_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->script_type(), target);
  }
  
  // repeated .ProtoItem item_list = 6;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->item_list(i), target);
  }
  
  // repeated .ProtoItem drop_list = 7;
  for (int i = 0; i < this->drop_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->drop_list(i), target);
  }
  
  // optional int32 left_tick = 8;
  if (has_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->left_tick(), target);
  }
  
  // optional int32 state = 9;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->state(), target);
  }
  
  // optional .ProtoScriptClean cur_script = 10;
  if (has_cur_script()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->cur_script(), target);
  }
  
  // optional int32 is_show_card = 11;
  if (has_is_show_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->is_show_card(), target);
  }
  
  // optional int32 card_index = 12;
  if (has_card_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->card_index(), target);
  }
  
  // repeated .ProtoItem card_list = 13;
  for (int i = 0; i < this->card_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->card_list(i), target);
  }
  
  // optional int32 is_vip_rate = 14;
  if (has_is_vip_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->is_vip_rate(), target);
  }
  
  // optional int32 savvy = 15;
  if (has_savvy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->savvy(), target);
  }
  
  // optional int32 reset_times = 16;
  if (has_reset_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->reset_times(), target);
  }
  
  // optional int32 top_floor = 17;
  if (has_top_floor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->top_floor(), target);
  }
  
  // optional int32 pass_wave = 18;
  if (has_pass_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->pass_wave(), target);
  }
  
  // optional int32 pass_chapter = 19;
  if (has_pass_chapter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->pass_chapter(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401201::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 exp = 2;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }
    
    // optional .ProtoMoney money = 3;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->money());
    }
    
    // optional int32 script_sort = 4;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 script_type = 5;
    if (has_script_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_type());
    }
    
    // optional int32 left_tick = 8;
    if (has_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_tick());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 state = 9;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
    // optional .ProtoScriptClean cur_script = 10;
    if (has_cur_script()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cur_script());
    }
    
    // optional int32 is_show_card = 11;
    if (has_is_show_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_show_card());
    }
    
    // optional int32 card_index = 12;
    if (has_card_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->card_index());
    }
    
    // optional int32 is_vip_rate = 14;
    if (has_is_vip_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_vip_rate());
    }
    
    // optional int32 savvy = 15;
    if (has_savvy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->savvy());
    }
    
    // optional int32 reset_times = 16;
    if (has_reset_times()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reset_times());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 top_floor = 17;
    if (has_top_floor()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top_floor());
    }
    
    // optional int32 pass_wave = 18;
    if (has_pass_wave()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pass_wave());
    }
    
    // optional int32 pass_chapter = 19;
    if (has_pass_chapter()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pass_chapter());
    }
    
  }
  // repeated .ProtoScriptClean finished_script = 1;
  total_size += 1 * this->finished_script_size();
  for (int i = 0; i < this->finished_script_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->finished_script(i));
  }
  
  // repeated .ProtoItem item_list = 6;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  // repeated .ProtoItem drop_list = 7;
  total_size += 1 * this->drop_list_size();
  for (int i = 0; i < this->drop_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->drop_list(i));
  }
  
  // repeated .ProtoItem card_list = 13;
  total_size += 1 * this->card_list_size();
  for (int i = 0; i < this->card_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->card_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401201::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401201* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401201*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401201::MergeFrom(const Proto51401201& from) {
  GOOGLE_CHECK_NE(&from, this);
  finished_script_.MergeFrom(from.finished_script_);
  item_list_.MergeFrom(from.item_list_);
  drop_list_.MergeFrom(from.drop_list_);
  card_list_.MergeFrom(from.card_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_money()) {
      mutable_money()->::ProtoMoney::MergeFrom(from.money());
    }
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_script_type()) {
      set_script_type(from.script_type());
    }
    if (from.has_left_tick()) {
      set_left_tick(from.left_tick());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_cur_script()) {
      mutable_cur_script()->::ProtoScriptClean::MergeFrom(from.cur_script());
    }
    if (from.has_is_show_card()) {
      set_is_show_card(from.is_show_card());
    }
    if (from.has_card_index()) {
      set_card_index(from.card_index());
    }
    if (from.has_is_vip_rate()) {
      set_is_vip_rate(from.is_vip_rate());
    }
    if (from.has_savvy()) {
      set_savvy(from.savvy());
    }
    if (from.has_reset_times()) {
      set_reset_times(from.reset_times());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_top_floor()) {
      set_top_floor(from.top_floor());
    }
    if (from.has_pass_wave()) {
      set_pass_wave(from.pass_wave());
    }
    if (from.has_pass_chapter()) {
      set_pass_chapter(from.pass_chapter());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401201::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401201::CopyFrom(const Proto51401201& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401201::IsInitialized() const {
  
  return true;
}

void Proto51401201::Swap(Proto51401201* other) {
  if (other != this) {
    finished_script_.Swap(&other->finished_script_);
    std::swap(exp_, other->exp_);
    std::swap(money_, other->money_);
    std::swap(script_sort_, other->script_sort_);
    std::swap(script_type_, other->script_type_);
    item_list_.Swap(&other->item_list_);
    drop_list_.Swap(&other->drop_list_);
    std::swap(left_tick_, other->left_tick_);
    std::swap(state_, other->state_);
    std::swap(cur_script_, other->cur_script_);
    std::swap(is_show_card_, other->is_show_card_);
    std::swap(card_index_, other->card_index_);
    card_list_.Swap(&other->card_list_);
    std::swap(is_vip_rate_, other->is_vip_rate_);
    std::swap(savvy_, other->savvy_);
    std::swap(reset_times_, other->reset_times_);
    std::swap(top_floor_, other->top_floor_);
    std::swap(pass_wave_, other->pass_wave_);
    std::swap(pass_chapter_, other->pass_chapter_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401201::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401201_descriptor_;
  metadata.reflection = Proto51401201_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401202::kLeftTickFieldNumber;
#endif  // !_MSC_VER

Proto51401202::Proto51401202()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401202::InitAsDefaultInstance() {
}

Proto51401202::Proto51401202(const Proto51401202& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401202::SharedCtor() {
  _cached_size_ = 0;
  left_tick_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401202::~Proto51401202() {
  SharedDtor();
}

void Proto51401202::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401202::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401202::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401202_descriptor_;
}

const Proto51401202& Proto51401202::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto51401202* Proto51401202::default_instance_ = NULL;

Proto51401202* Proto51401202::New() const {
  return new Proto51401202;
}

void Proto51401202::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_tick_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401202::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_tick = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_tick_)));
          set_has_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401202::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_tick = 1;
  if (has_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401202::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_tick = 1;
  if (has_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401202::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_tick = 1;
    if (has_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_tick());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401202::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401202* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401202*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401202::MergeFrom(const Proto51401202& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_tick()) {
      set_left_tick(from.left_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401202::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401202::CopyFrom(const Proto51401202& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401202::IsInitialized() const {
  
  return true;
}

void Proto51401202::Swap(Proto51401202* other) {
  if (other != this) {
    std::swap(left_tick_, other->left_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401202::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401202_descriptor_;
  metadata.reflection = Proto51401202_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401203::kLeftTickFieldNumber;
#endif  // !_MSC_VER

Proto51401203::Proto51401203()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401203::InitAsDefaultInstance() {
}

Proto51401203::Proto51401203(const Proto51401203& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401203::SharedCtor() {
  _cached_size_ = 0;
  left_tick_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401203::~Proto51401203() {
  SharedDtor();
}

void Proto51401203::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401203::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401203::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401203_descriptor_;
}

const Proto51401203& Proto51401203::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto51401203* Proto51401203::default_instance_ = NULL;

Proto51401203* Proto51401203::New() const {
  return new Proto51401203;
}

void Proto51401203::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_tick_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401203::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_tick = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_tick_)));
          set_has_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401203::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_tick = 1;
  if (has_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401203::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_tick = 1;
  if (has_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401203::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_tick = 1;
    if (has_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_tick());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401203::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401203* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401203*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401203::MergeFrom(const Proto51401203& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_tick()) {
      set_left_tick(from.left_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401203::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401203::CopyFrom(const Proto51401203& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401203::IsInitialized() const {
  
  return true;
}

void Proto51401203::Swap(Proto51401203* other) {
  if (other != this) {
    std::swap(left_tick_, other->left_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401203::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401203_descriptor_;
  metadata.reflection = Proto51401203_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401004::kHookDetailFieldNumber;
#endif  // !_MSC_VER

Proto11401004::Proto11401004()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401004::InitAsDefaultInstance() {
  hook_detail_ = const_cast< ::ProtoHookDetail*>(&::ProtoHookDetail::default_instance());
}

Proto11401004::Proto11401004(const Proto11401004& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401004::SharedCtor() {
  _cached_size_ = 0;
  hook_detail_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401004::~Proto11401004() {
  SharedDtor();
}

void Proto11401004::SharedDtor() {
  if (this != default_instance_) {
    delete hook_detail_;
  }
}

void Proto11401004::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401004::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401004_descriptor_;
}

const Proto11401004& Proto11401004::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto11401004* Proto11401004::default_instance_ = NULL;

Proto11401004* Proto11401004::New() const {
  return new Proto11401004;
}

void Proto11401004::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_hook_detail()) {
      if (hook_detail_ != NULL) hook_detail_->::ProtoHookDetail::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401004::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoHookDetail hook_detail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hook_detail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401004::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoHookDetail hook_detail = 1;
  if (has_hook_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hook_detail(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401004::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoHookDetail hook_detail = 1;
  if (has_hook_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hook_detail(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401004::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoHookDetail hook_detail = 1;
    if (has_hook_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hook_detail());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401004::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401004* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401004*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401004::MergeFrom(const Proto11401004& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hook_detail()) {
      mutable_hook_detail()->::ProtoHookDetail::MergeFrom(from.hook_detail());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401004::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401004::CopyFrom(const Proto11401004& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401004::IsInitialized() const {
  
  return true;
}

void Proto11401004::Swap(Proto11401004* other) {
  if (other != this) {
    std::swap(hook_detail_, other->hook_detail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401004::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401004_descriptor_;
  metadata.reflection = Proto11401004_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401001::kHookDetailFieldNumber;
#endif  // !_MSC_VER

Proto51401001::Proto51401001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401001::InitAsDefaultInstance() {
  hook_detail_ = const_cast< ::ProtoHookDetail*>(&::ProtoHookDetail::default_instance());
}

Proto51401001::Proto51401001(const Proto51401001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401001::SharedCtor() {
  _cached_size_ = 0;
  hook_detail_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401001::~Proto51401001() {
  SharedDtor();
}

void Proto51401001::SharedDtor() {
  if (this != default_instance_) {
    delete hook_detail_;
  }
}

void Proto51401001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401001_descriptor_;
}

const Proto51401001& Proto51401001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto51401001* Proto51401001::default_instance_ = NULL;

Proto51401001* Proto51401001::New() const {
  return new Proto51401001;
}

void Proto51401001::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_hook_detail()) {
      if (hook_detail_ != NULL) hook_detail_->::ProtoHookDetail::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoHookDetail hook_detail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hook_detail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoHookDetail hook_detail = 1;
  if (has_hook_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hook_detail(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoHookDetail hook_detail = 1;
  if (has_hook_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hook_detail(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401001::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoHookDetail hook_detail = 1;
    if (has_hook_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hook_detail());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401001::MergeFrom(const Proto51401001& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hook_detail()) {
      mutable_hook_detail()->::ProtoHookDetail::MergeFrom(from.hook_detail());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401001::CopyFrom(const Proto51401001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401001::IsInitialized() const {
  
  return true;
}

void Proto51401001::Swap(Proto51401001* other) {
  if (other != this) {
    std::swap(hook_detail_, other->hook_detail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401001_descriptor_;
  metadata.reflection = Proto51401001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401001::kIsHookingFieldNumber;
#endif  // !_MSC_VER

Proto81401001::Proto81401001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401001::InitAsDefaultInstance() {
}

Proto81401001::Proto81401001(const Proto81401001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401001::SharedCtor() {
  _cached_size_ = 0;
  is_hooking_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401001::~Proto81401001() {
  SharedDtor();
}

void Proto81401001::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401001_descriptor_;
}

const Proto81401001& Proto81401001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto81401001* Proto81401001::default_instance_ = NULL;

Proto81401001* Proto81401001::New() const {
  return new Proto81401001;
}

void Proto81401001::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_hooking_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 is_hooking = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_hooking_)));
          set_has_is_hooking();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 is_hooking = 1;
  if (has_is_hooking()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->is_hooking(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 is_hooking = 1;
  if (has_is_hooking()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->is_hooking(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401001::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 is_hooking = 1;
    if (has_is_hooking()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_hooking());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401001::MergeFrom(const Proto81401001& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_hooking()) {
      set_is_hooking(from.is_hooking());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401001::CopyFrom(const Proto81401001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401001::IsInitialized() const {
  
  return true;
}

void Proto81401001::Swap(Proto81401001* other) {
  if (other != this) {
    std::swap(is_hooking_, other->is_hooking_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401001_descriptor_;
  metadata.reflection = Proto81401001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400911::kMaxNumFieldNumber;
#endif  // !_MSC_VER

Proto80400911::Proto80400911()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400911::InitAsDefaultInstance() {
}

Proto80400911::Proto80400911(const Proto80400911& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400911::SharedCtor() {
  _cached_size_ = 0;
  max_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400911::~Proto80400911() {
  SharedDtor();
}

void Proto80400911::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400911::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400911::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400911_descriptor_;
}

const Proto80400911& Proto80400911::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto80400911* Proto80400911::default_instance_ = NULL;

Proto80400911* Proto80400911::New() const {
  return new Proto80400911;
}

void Proto80400911::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    max_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400911::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 max_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_num_)));
          set_has_max_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400911::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 max_num = 1;
  if (has_max_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->max_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400911::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 max_num = 1;
  if (has_max_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->max_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400911::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 max_num = 1;
    if (has_max_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400911::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400911* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400911*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400911::MergeFrom(const Proto80400911& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_max_num()) {
      set_max_num(from.max_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400911::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400911::CopyFrom(const Proto80400911& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400911::IsInitialized() const {
  
  return true;
}

void Proto80400911::Swap(Proto80400911* other) {
  if (other != this) {
    std::swap(max_num_, other->max_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400911::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400911_descriptor_;
  metadata.reflection = Proto80400911_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400346::kLeaguePosFieldNumber;
#endif  // !_MSC_VER

Proto80400346::Proto80400346()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400346::InitAsDefaultInstance() {
}

Proto80400346::Proto80400346(const Proto80400346& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400346::SharedCtor() {
  _cached_size_ = 0;
  league_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400346::~Proto80400346() {
  SharedDtor();
}

void Proto80400346::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400346::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400346::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400346_descriptor_;
}

const Proto80400346& Proto80400346::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto80400346* Proto80400346::default_instance_ = NULL;

Proto80400346* Proto80400346::New() const {
  return new Proto80400346;
}

void Proto80400346::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400346::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 league_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &league_pos_)));
          set_has_league_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400346::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 league_pos = 1;
  if (has_league_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->league_pos(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400346::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 league_pos = 1;
  if (has_league_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->league_pos(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400346::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 league_pos = 1;
    if (has_league_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->league_pos());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400346::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400346* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400346*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400346::MergeFrom(const Proto80400346& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_pos()) {
      set_league_pos(from.league_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400346::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400346::CopyFrom(const Proto80400346& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400346::IsInitialized() const {
  
  return true;
}

void Proto80400346::Swap(Proto80400346* other) {
  if (other != this) {
    std::swap(league_pos_, other->league_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400346::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400346_descriptor_;
  metadata.reflection = Proto80400346_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400707::kIndex1FieldNumber;
const int Proto10400707::kIndex2FieldNumber;
#endif  // !_MSC_VER

Proto10400707::Proto10400707()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400707::InitAsDefaultInstance() {
}

Proto10400707::Proto10400707(const Proto10400707& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400707::SharedCtor() {
  _cached_size_ = 0;
  index_1_ = 0;
  index_2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400707::~Proto10400707() {
  SharedDtor();
}

void Proto10400707::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400707::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400707::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400707_descriptor_;
}

const Proto10400707& Proto10400707::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto10400707* Proto10400707::default_instance_ = NULL;

Proto10400707* Proto10400707::New() const {
  return new Proto10400707;
}

void Proto10400707::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_1_ = 0;
    index_2_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400707::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index_1 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_1_)));
          set_has_index_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index_2;
        break;
      }
      
      // optional int32 index_2 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_2_)));
          set_has_index_2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400707::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index_1 = 1;
  if (has_index_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index_1(), output);
  }
  
  // optional int32 index_2 = 2;
  if (has_index_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index_2(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400707::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index_1 = 1;
  if (has_index_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index_1(), target);
  }
  
  // optional int32 index_2 = 2;
  if (has_index_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index_2(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400707::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index_1 = 1;
    if (has_index_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index_1());
    }
    
    // optional int32 index_2 = 2;
    if (has_index_2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index_2());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400707::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400707* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400707*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400707::MergeFrom(const Proto10400707& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index_1()) {
      set_index_1(from.index_1());
    }
    if (from.has_index_2()) {
      set_index_2(from.index_2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400707::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400707::CopyFrom(const Proto10400707& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400707::IsInitialized() const {
  
  return true;
}

void Proto10400707::Swap(Proto10400707* other) {
  if (other != this) {
    std::swap(index_1_, other->index_1_);
    std::swap(index_2_, other->index_2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400707::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400707_descriptor_;
  metadata.reflection = Proto10400707_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401703::kEvenIdFieldNumber;
const int Proto81401703::kEvenValueFieldNumber;
#endif  // !_MSC_VER

Proto81401703::Proto81401703()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401703::InitAsDefaultInstance() {
}

Proto81401703::Proto81401703(const Proto81401703& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401703::SharedCtor() {
  _cached_size_ = 0;
  even_id_ = 0;
  even_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401703::~Proto81401703() {
  SharedDtor();
}

void Proto81401703::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401703::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401703::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401703_descriptor_;
}

const Proto81401703& Proto81401703::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto81401703* Proto81401703::default_instance_ = NULL;

Proto81401703* Proto81401703::New() const {
  return new Proto81401703;
}

void Proto81401703::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    even_id_ = 0;
    even_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401703::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 even_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &even_id_)));
          set_has_even_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_even_value;
        break;
      }
      
      // optional int32 even_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_even_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &even_value_)));
          set_has_even_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401703::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 even_id = 1;
  if (has_even_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->even_id(), output);
  }
  
  // optional int32 even_value = 2;
  if (has_even_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->even_value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401703::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 even_id = 1;
  if (has_even_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->even_id(), target);
  }
  
  // optional int32 even_value = 2;
  if (has_even_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->even_value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401703::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 even_id = 1;
    if (has_even_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->even_id());
    }
    
    // optional int32 even_value = 2;
    if (has_even_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->even_value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401703::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401703* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401703*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401703::MergeFrom(const Proto81401703& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_even_id()) {
      set_even_id(from.even_id());
    }
    if (from.has_even_value()) {
      set_even_value(from.even_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401703::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401703::CopyFrom(const Proto81401703& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401703::IsInitialized() const {
  
  return true;
}

void Proto81401703::Swap(Proto81401703* other) {
  if (other != this) {
    std::swap(even_id_, other->even_id_);
    std::swap(even_value_, other->even_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401703::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401703_descriptor_;
  metadata.reflection = Proto81401703_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401702::kEventListFieldNumber;
#endif  // !_MSC_VER

Proto51401702::Proto51401702()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401702::InitAsDefaultInstance() {
}

Proto51401702::Proto51401702(const Proto51401702& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401702::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401702::~Proto51401702() {
  SharedDtor();
}

void Proto51401702::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401702::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401702::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401702_descriptor_;
}

const Proto51401702& Proto51401702::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto51401702* Proto51401702::default_instance_ = NULL;

Proto51401702* Proto51401702::New() const {
  return new Proto51401702;
}

void Proto51401702::Clear() {
  event_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401702::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoPairObj event_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_event_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_event_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_event_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401702::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoPairObj event_list = 1;
  for (int i = 0; i < this->event_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->event_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401702::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoPairObj event_list = 1;
  for (int i = 0; i < this->event_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->event_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401702::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoPairObj event_list = 1;
  total_size += 1 * this->event_list_size();
  for (int i = 0; i < this->event_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->event_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401702::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401702* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401702*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401702::MergeFrom(const Proto51401702& from) {
  GOOGLE_CHECK_NE(&from, this);
  event_list_.MergeFrom(from.event_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401702::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401702::CopyFrom(const Proto51401702& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401702::IsInitialized() const {
  
  return true;
}

void Proto51401702::Swap(Proto51401702* other) {
  if (other != this) {
    event_list_.Swap(&other->event_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401702::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401702_descriptor_;
  metadata.reflection = Proto51401702_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401703::kTipIndexFieldNumber;
const int Proto11401703::kEventIdFieldNumber;
#endif  // !_MSC_VER

Proto11401703::Proto11401703()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401703::InitAsDefaultInstance() {
}

Proto11401703::Proto11401703(const Proto11401703& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401703::SharedCtor() {
  _cached_size_ = 0;
  tip_index_ = GOOGLE_LONGLONG(0);
  event_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401703::~Proto11401703() {
  SharedDtor();
}

void Proto11401703::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401703::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401703::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401703_descriptor_;
}

const Proto11401703& Proto11401703::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto11401703* Proto11401703::default_instance_ = NULL;

Proto11401703* Proto11401703::New() const {
  return new Proto11401703;
}

void Proto11401703::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tip_index_ = GOOGLE_LONGLONG(0);
    event_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401703::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 tip_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tip_index_)));
          set_has_tip_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_event_id;
        break;
      }
      
      // optional int32 event_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_event_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &event_id_)));
          set_has_event_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401703::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 tip_index = 1;
  if (has_tip_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->tip_index(), output);
  }
  
  // optional int32 event_id = 2;
  if (has_event_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->event_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401703::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 tip_index = 1;
  if (has_tip_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->tip_index(), target);
  }
  
  // optional int32 event_id = 2;
  if (has_event_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->event_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401703::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 tip_index = 1;
    if (has_tip_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tip_index());
    }
    
    // optional int32 event_id = 2;
    if (has_event_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->event_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401703::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401703* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401703*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401703::MergeFrom(const Proto11401703& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tip_index()) {
      set_tip_index(from.tip_index());
    }
    if (from.has_event_id()) {
      set_event_id(from.event_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401703::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401703::CopyFrom(const Proto11401703& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401703::IsInitialized() const {
  
  return true;
}

void Proto11401703::Swap(Proto11401703* other) {
  if (other != this) {
    std::swap(tip_index_, other->tip_index_);
    std::swap(event_id_, other->event_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401703::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401703_descriptor_;
  metadata.reflection = Proto11401703_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400909::kPieceFieldNumber;
#endif  // !_MSC_VER

Proto10400909::Proto10400909()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400909::InitAsDefaultInstance() {
}

Proto10400909::Proto10400909(const Proto10400909& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400909::SharedCtor() {
  _cached_size_ = 0;
  piece_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400909::~Proto10400909() {
  SharedDtor();
}

void Proto10400909::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400909::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400909::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400909_descriptor_;
}

const Proto10400909& Proto10400909::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto10400909* Proto10400909::default_instance_ = NULL;

Proto10400909* Proto10400909::New() const {
  return new Proto10400909;
}

void Proto10400909::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    piece_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400909::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 piece = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &piece_)));
          set_has_piece();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400909::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 piece = 1;
  if (has_piece()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->piece(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400909::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 piece = 1;
  if (has_piece()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->piece(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400909::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 piece = 1;
    if (has_piece()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->piece());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400909::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400909* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400909*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400909::MergeFrom(const Proto10400909& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_piece()) {
      set_piece(from.piece());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400909::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400909::CopyFrom(const Proto10400909& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400909::IsInitialized() const {
  
  return true;
}

void Proto10400909::Swap(Proto10400909* other) {
  if (other != this) {
    std::swap(piece_, other->piece_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400909::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400909_descriptor_;
  metadata.reflection = Proto10400909_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400909::kPieceFieldNumber;
const int Proto50400909::kChapterInfoFieldNumber;
#endif  // !_MSC_VER

Proto50400909::Proto50400909()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400909::InitAsDefaultInstance() {
}

Proto50400909::Proto50400909(const Proto50400909& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400909::SharedCtor() {
  _cached_size_ = 0;
  piece_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400909::~Proto50400909() {
  SharedDtor();
}

void Proto50400909::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400909::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400909::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400909_descriptor_;
}

const Proto50400909& Proto50400909::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto50400909* Proto50400909::default_instance_ = NULL;

Proto50400909* Proto50400909::New() const {
  return new Proto50400909;
}

void Proto50400909::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    piece_ = 0;
  }
  chapter_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400909::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 piece = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &piece_)));
          set_has_piece();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_chapter_info;
        break;
      }
      
      // repeated .ProtoScriptChapter chapter_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_chapter_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_chapter_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_chapter_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400909::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 piece = 1;
  if (has_piece()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->piece(), output);
  }
  
  // repeated .ProtoScriptChapter chapter_info = 2;
  for (int i = 0; i < this->chapter_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->chapter_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400909::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 piece = 1;
  if (has_piece()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->piece(), target);
  }
  
  // repeated .ProtoScriptChapter chapter_info = 2;
  for (int i = 0; i < this->chapter_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->chapter_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400909::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 piece = 1;
    if (has_piece()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->piece());
    }
    
  }
  // repeated .ProtoScriptChapter chapter_info = 2;
  total_size += 1 * this->chapter_info_size();
  for (int i = 0; i < this->chapter_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chapter_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400909::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400909* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400909*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400909::MergeFrom(const Proto50400909& from) {
  GOOGLE_CHECK_NE(&from, this);
  chapter_info_.MergeFrom(from.chapter_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_piece()) {
      set_piece(from.piece());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400909::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400909::CopyFrom(const Proto50400909& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400909::IsInitialized() const {
  
  return true;
}

void Proto50400909::Swap(Proto50400909* other) {
  if (other != this) {
    std::swap(piece_, other->piece_);
    chapter_info_.Swap(&other->chapter_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400909::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400909_descriptor_;
  metadata.reflection = Proto50400909_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400114::kEffectIdFieldNumber;
const int Proto80400114::kEffectSortFieldNumber;
const int Proto80400114::kPixelXFieldNumber;
const int Proto80400114::kPixelYFieldNumber;
#endif  // !_MSC_VER

Proto80400114::Proto80400114()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400114::InitAsDefaultInstance() {
}

Proto80400114::Proto80400114(const Proto80400114& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400114::SharedCtor() {
  _cached_size_ = 0;
  effect_id_ = 0;
  effect_sort_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400114::~Proto80400114() {
  SharedDtor();
}

void Proto80400114::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400114::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400114::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400114_descriptor_;
}

const Proto80400114& Proto80400114::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto80400114* Proto80400114::default_instance_ = NULL;

Proto80400114* Proto80400114::New() const {
  return new Proto80400114;
}

void Proto80400114::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    effect_id_ = 0;
    effect_sort_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400114::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 effect_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effect_id_)));
          set_has_effect_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_effect_sort;
        break;
      }
      
      // optional int32 effect_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_effect_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effect_sort_)));
          set_has_effect_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400114::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 effect_id = 1;
  if (has_effect_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->effect_id(), output);
  }
  
  // optional int32 effect_sort = 2;
  if (has_effect_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->effect_sort(), output);
  }
  
  // optional int32 pixel_x = 3;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 4;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pixel_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400114::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 effect_id = 1;
  if (has_effect_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->effect_id(), target);
  }
  
  // optional int32 effect_sort = 2;
  if (has_effect_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->effect_sort(), target);
  }
  
  // optional int32 pixel_x = 3;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 4;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pixel_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400114::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 effect_id = 1;
    if (has_effect_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->effect_id());
    }
    
    // optional int32 effect_sort = 2;
    if (has_effect_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->effect_sort());
    }
    
    // optional int32 pixel_x = 3;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 4;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400114::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400114* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400114*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400114::MergeFrom(const Proto80400114& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_effect_id()) {
      set_effect_id(from.effect_id());
    }
    if (from.has_effect_sort()) {
      set_effect_sort(from.effect_sort());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400114::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400114::CopyFrom(const Proto80400114& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400114::IsInitialized() const {
  
  return true;
}

void Proto80400114::Swap(Proto80400114* other) {
  if (other != this) {
    std::swap(effect_id_, other->effect_id_);
    std::swap(effect_sort_, other->effect_sort_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400114::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400114_descriptor_;
  metadata.reflection = Proto80400114_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400910::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto10400910::Proto10400910()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400910::InitAsDefaultInstance() {
}

Proto10400910::Proto10400910(const Proto10400910& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400910::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400910::~Proto10400910() {
  SharedDtor();
}

void Proto10400910::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400910::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400910::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400910_descriptor_;
}

const Proto10400910& Proto10400910::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto10400910* Proto10400910::default_instance_ = NULL;

Proto10400910* Proto10400910::New() const {
  return new Proto10400910;
}

void Proto10400910::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400910::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400910::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400910::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400910::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400910::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400910* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400910*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400910::MergeFrom(const Proto10400910& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400910::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400910::CopyFrom(const Proto10400910& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400910::IsInitialized() const {
  
  return true;
}

void Proto10400910::Swap(Proto10400910* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400910::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400910_descriptor_;
  metadata.reflection = Proto10400910_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400910::kIndexFieldNumber;
const int Proto50400910::kItemListFieldNumber;
const int Proto50400910::kVipMultipleFieldNumber;
const int Proto50400910::kIsScriptCompactFieldNumber;
#endif  // !_MSC_VER

Proto50400910::Proto50400910()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400910::InitAsDefaultInstance() {
}

Proto50400910::Proto50400910(const Proto50400910& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400910::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  vip_multiple_ = 0;
  is_script_compact_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400910::~Proto50400910() {
  SharedDtor();
}

void Proto50400910::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400910::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400910::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400910_descriptor_;
}

const Proto50400910& Proto50400910::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto50400910* Proto50400910::default_instance_ = NULL;

Proto50400910* Proto50400910::New() const {
  return new Proto50400910;
}

void Proto50400910::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    vip_multiple_ = 0;
    is_script_compact_ = 0;
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400910::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoItem item_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item_list;
        if (input->ExpectTag(24)) goto parse_vip_multiple;
        break;
      }
      
      // optional int32 vip_multiple = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_multiple:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_multiple_)));
          set_has_vip_multiple();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_is_script_compact;
        break;
      }
      
      // optional int32 is_script_compact = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_script_compact:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_script_compact_)));
          set_has_is_script_compact();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400910::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // repeated .ProtoItem item_list = 2;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item_list(i), output);
  }
  
  // optional int32 vip_multiple = 3;
  if (has_vip_multiple()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->vip_multiple(), output);
  }
  
  // optional int32 is_script_compact = 4;
  if (has_is_script_compact()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->is_script_compact(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400910::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // repeated .ProtoItem item_list = 2;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item_list(i), target);
  }
  
  // optional int32 vip_multiple = 3;
  if (has_vip_multiple()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->vip_multiple(), target);
  }
  
  // optional int32 is_script_compact = 4;
  if (has_is_script_compact()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->is_script_compact(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400910::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 vip_multiple = 3;
    if (has_vip_multiple()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_multiple());
    }
    
    // optional int32 is_script_compact = 4;
    if (has_is_script_compact()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_script_compact());
    }
    
  }
  // repeated .ProtoItem item_list = 2;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400910::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400910* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400910*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400910::MergeFrom(const Proto50400910& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_vip_multiple()) {
      set_vip_multiple(from.vip_multiple());
    }
    if (from.has_is_script_compact()) {
      set_is_script_compact(from.is_script_compact());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400910::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400910::CopyFrom(const Proto50400910& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400910::IsInitialized() const {
  
  return true;
}

void Proto50400910::Swap(Proto50400910* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    item_list_.Swap(&other->item_list_);
    std::swap(vip_multiple_, other->vip_multiple_);
    std::swap(is_script_compact_, other->is_script_compact_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400910::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400910_descriptor_;
  metadata.reflection = Proto50400910_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401705::kEvenIdFieldNumber;
#endif  // !_MSC_VER

Proto81401705::Proto81401705()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401705::InitAsDefaultInstance() {
}

Proto81401705::Proto81401705(const Proto81401705& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401705::SharedCtor() {
  _cached_size_ = 0;
  even_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401705::~Proto81401705() {
  SharedDtor();
}

void Proto81401705::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401705::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401705::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401705_descriptor_;
}

const Proto81401705& Proto81401705::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto81401705* Proto81401705::default_instance_ = NULL;

Proto81401705* Proto81401705::New() const {
  return new Proto81401705;
}

void Proto81401705::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    even_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401705::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 even_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &even_id_)));
          set_has_even_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401705::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 even_id = 1;
  if (has_even_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->even_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401705::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 even_id = 1;
  if (has_even_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->even_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401705::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 even_id = 1;
    if (has_even_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->even_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401705::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401705* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401705*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401705::MergeFrom(const Proto81401705& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_even_id()) {
      set_even_id(from.even_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401705::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401705::CopyFrom(const Proto81401705& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401705::IsInitialized() const {
  
  return true;
}

void Proto81401705::Swap(Proto81401705* other) {
  if (other != this) {
    std::swap(even_id_, other->even_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401705::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401705_descriptor_;
  metadata.reflection = Proto81401705_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400911::kMaxPieceFieldNumber;
#endif  // !_MSC_VER

Proto50400911::Proto50400911()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400911::InitAsDefaultInstance() {
}

Proto50400911::Proto50400911(const Proto50400911& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400911::SharedCtor() {
  _cached_size_ = 0;
  max_piece_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400911::~Proto50400911() {
  SharedDtor();
}

void Proto50400911::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400911::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400911::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400911_descriptor_;
}

const Proto50400911& Proto50400911::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto50400911* Proto50400911::default_instance_ = NULL;

Proto50400911* Proto50400911::New() const {
  return new Proto50400911;
}

void Proto50400911::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    max_piece_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400911::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 max_piece = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_piece_)));
          set_has_max_piece();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400911::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 max_piece = 1;
  if (has_max_piece()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->max_piece(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400911::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 max_piece = 1;
  if (has_max_piece()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->max_piece(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400911::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 max_piece = 1;
    if (has_max_piece()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_piece());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400911::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400911* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400911*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400911::MergeFrom(const Proto50400911& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_max_piece()) {
      set_max_piece(from.max_piece());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400911::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400911::CopyFrom(const Proto50400911& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400911::IsInitialized() const {
  
  return true;
}

void Proto50400911::Swap(Proto50400911* other) {
  if (other != this) {
    std::swap(max_piece_, other->max_piece_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400911::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400911_descriptor_;
  metadata.reflection = Proto50400911_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401752::kSystemSettingFieldNumber;
#endif  // !_MSC_VER

Proto11401752::Proto11401752()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401752::InitAsDefaultInstance() {
  system_setting_ = const_cast< ::ProtoSysSetting*>(&::ProtoSysSetting::default_instance());
}

Proto11401752::Proto11401752(const Proto11401752& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401752::SharedCtor() {
  _cached_size_ = 0;
  system_setting_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401752::~Proto11401752() {
  SharedDtor();
}

void Proto11401752::SharedDtor() {
  if (this != default_instance_) {
    delete system_setting_;
  }
}

void Proto11401752::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401752::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401752_descriptor_;
}

const Proto11401752& Proto11401752::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto11401752* Proto11401752::default_instance_ = NULL;

Proto11401752* Proto11401752::New() const {
  return new Proto11401752;
}

void Proto11401752::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_system_setting()) {
      if (system_setting_ != NULL) system_setting_->::ProtoSysSetting::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401752::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoSysSetting system_setting = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_system_setting()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401752::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoSysSetting system_setting = 1;
  if (has_system_setting()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->system_setting(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401752::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoSysSetting system_setting = 1;
  if (has_system_setting()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->system_setting(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401752::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoSysSetting system_setting = 1;
    if (has_system_setting()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->system_setting());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401752::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401752* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401752*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401752::MergeFrom(const Proto11401752& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_system_setting()) {
      mutable_system_setting()->::ProtoSysSetting::MergeFrom(from.system_setting());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401752::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401752::CopyFrom(const Proto11401752& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401752::IsInitialized() const {
  
  return true;
}

void Proto11401752::Swap(Proto11401752* other) {
  if (other != this) {
    std::swap(system_setting_, other->system_setting_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401752::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401752_descriptor_;
  metadata.reflection = Proto11401752_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401751::kSystemSettingFieldNumber;
#endif  // !_MSC_VER

Proto81401751::Proto81401751()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401751::InitAsDefaultInstance() {
  system_setting_ = const_cast< ::ProtoSysSetting*>(&::ProtoSysSetting::default_instance());
}

Proto81401751::Proto81401751(const Proto81401751& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401751::SharedCtor() {
  _cached_size_ = 0;
  system_setting_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401751::~Proto81401751() {
  SharedDtor();
}

void Proto81401751::SharedDtor() {
  if (this != default_instance_) {
    delete system_setting_;
  }
}

void Proto81401751::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401751::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401751_descriptor_;
}

const Proto81401751& Proto81401751::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto81401751* Proto81401751::default_instance_ = NULL;

Proto81401751* Proto81401751::New() const {
  return new Proto81401751;
}

void Proto81401751::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_system_setting()) {
      if (system_setting_ != NULL) system_setting_->::ProtoSysSetting::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401751::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoSysSetting system_setting = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_system_setting()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401751::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoSysSetting system_setting = 1;
  if (has_system_setting()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->system_setting(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401751::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoSysSetting system_setting = 1;
  if (has_system_setting()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->system_setting(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401751::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoSysSetting system_setting = 1;
    if (has_system_setting()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->system_setting());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401751::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401751* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401751*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401751::MergeFrom(const Proto81401751& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_system_setting()) {
      mutable_system_setting()->::ProtoSysSetting::MergeFrom(from.system_setting());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401751::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401751::CopyFrom(const Proto81401751& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401751::IsInitialized() const {
  
  return true;
}

void Proto81401751::Swap(Proto81401751* other) {
  if (other != this) {
    std::swap(system_setting_, other->system_setting_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401751::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401751_descriptor_;
  metadata.reflection = Proto81401751_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100417::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto10100417::Proto10100417()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100417::InitAsDefaultInstance() {
}

Proto10100417::Proto10100417(const Proto10100417& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100417::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100417::~Proto10100417() {
  SharedDtor();
}

void Proto10100417::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100417::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100417::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100417_descriptor_;
}

const Proto10100417& Proto10100417::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto10100417* Proto10100417::default_instance_ = NULL;

Proto10100417* Proto10100417::New() const {
  return new Proto10100417;
}

void Proto10100417::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100417::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100417::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100417::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100417::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100417::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100417* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100417*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100417::MergeFrom(const Proto10100417& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100417::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100417::CopyFrom(const Proto10100417& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100417::IsInitialized() const {
  
  return true;
}

void Proto10100417::Swap(Proto10100417* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100417::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100417_descriptor_;
  metadata.reflection = Proto10100417_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100416::kReplacementRoleListFieldNumber;
#endif  // !_MSC_VER

Proto50100416::Proto50100416()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100416::InitAsDefaultInstance() {
}

Proto50100416::Proto50100416(const Proto50100416& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100416::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100416::~Proto50100416() {
  SharedDtor();
}

void Proto50100416::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100416::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100416::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100416_descriptor_;
}

const Proto50100416& Proto50100416::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto50100416* Proto50100416::default_instance_ = NULL;

Proto50100416* Proto50100416::New() const {
  return new Proto50100416;
}

void Proto50100416::Clear() {
  replacement_role_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100416::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoRpmRoleInfo replacement_role_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_replacement_role_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_replacement_role_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_replacement_role_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100416::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoRpmRoleInfo replacement_role_list = 1;
  for (int i = 0; i < this->replacement_role_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->replacement_role_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100416::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoRpmRoleInfo replacement_role_list = 1;
  for (int i = 0; i < this->replacement_role_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->replacement_role_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100416::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoRpmRoleInfo replacement_role_list = 1;
  total_size += 1 * this->replacement_role_list_size();
  for (int i = 0; i < this->replacement_role_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->replacement_role_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100416::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100416* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100416*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100416::MergeFrom(const Proto50100416& from) {
  GOOGLE_CHECK_NE(&from, this);
  replacement_role_list_.MergeFrom(from.replacement_role_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100416::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100416::CopyFrom(const Proto50100416& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100416::IsInitialized() const {
  
  return true;
}

void Proto50100416::Swap(Proto50100416* other) {
  if (other != this) {
    replacement_role_list_.Swap(&other->replacement_role_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100416::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100416_descriptor_;
  metadata.reflection = Proto50100416_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100416::kIsIntroductionFieldNumber;
#endif  // !_MSC_VER

Proto10100416::Proto10100416()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100416::InitAsDefaultInstance() {
}

Proto10100416::Proto10100416(const Proto10100416& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100416::SharedCtor() {
  _cached_size_ = 0;
  is_introduction_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100416::~Proto10100416() {
  SharedDtor();
}

void Proto10100416::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100416::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100416::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100416_descriptor_;
}

const Proto10100416& Proto10100416::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto10100416* Proto10100416::default_instance_ = NULL;

Proto10100416* Proto10100416::New() const {
  return new Proto10100416;
}

void Proto10100416::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_introduction_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100416::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 is_introduction = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_introduction_)));
          set_has_is_introduction();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100416::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 is_introduction = 1;
  if (has_is_introduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->is_introduction(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100416::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 is_introduction = 1;
  if (has_is_introduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->is_introduction(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100416::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 is_introduction = 1;
    if (has_is_introduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_introduction());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100416::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100416* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100416*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100416::MergeFrom(const Proto10100416& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_introduction()) {
      set_is_introduction(from.is_introduction());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100416::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100416::CopyFrom(const Proto10100416& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100416::IsInitialized() const {
  
  return true;
}

void Proto10100416::Swap(Proto10100416* other) {
  if (other != this) {
    std::swap(is_introduction_, other->is_introduction_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100416::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100416_descriptor_;
  metadata.reflection = Proto10100416_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400005::kUseTypeFieldNumber;
const int Proto10400005::kLeftCapacityFieldNumber;
const int Proto10400005::kItemIndexFieldNumber;
const int Proto10400005::kUseTimesFieldNumber;
#endif  // !_MSC_VER

Proto10400005::Proto10400005()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400005::InitAsDefaultInstance() {
}

Proto10400005::Proto10400005(const Proto10400005& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400005::SharedCtor() {
  _cached_size_ = 0;
  use_type_ = 0;
  left_capacity_ = 0;
  item_index_ = 0;
  use_times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400005::~Proto10400005() {
  SharedDtor();
}

void Proto10400005::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400005::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400005::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400005_descriptor_;
}

const Proto10400005& Proto10400005::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto10400005* Proto10400005::default_instance_ = NULL;

Proto10400005* Proto10400005::New() const {
  return new Proto10400005;
}

void Proto10400005::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    use_type_ = 0;
    left_capacity_ = 0;
    item_index_ = 0;
    use_times_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400005::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 use_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &use_type_)));
          set_has_use_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_left_capacity;
        break;
      }
      
      // optional int32 left_capacity = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_capacity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_capacity_)));
          set_has_left_capacity();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_index;
        break;
      }
      
      // optional int32 item_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_index_)));
          set_has_item_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_use_times;
        break;
      }
      
      // optional int32 use_times = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_use_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &use_times_)));
          set_has_use_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400005::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 use_type = 1;
  if (has_use_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->use_type(), output);
  }
  
  // optional int32 left_capacity = 2;
  if (has_left_capacity()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_capacity(), output);
  }
  
  // optional int32 item_index = 3;
  if (has_item_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_index(), output);
  }
  
  // optional int32 use_times = 4;
  if (has_use_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->use_times(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400005::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 use_type = 1;
  if (has_use_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->use_type(), target);
  }
  
  // optional int32 left_capacity = 2;
  if (has_left_capacity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_capacity(), target);
  }
  
  // optional int32 item_index = 3;
  if (has_item_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_index(), target);
  }
  
  // optional int32 use_times = 4;
  if (has_use_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->use_times(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400005::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 use_type = 1;
    if (has_use_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->use_type());
    }
    
    // optional int32 left_capacity = 2;
    if (has_left_capacity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_capacity());
    }
    
    // optional int32 item_index = 3;
    if (has_item_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_index());
    }
    
    // optional int32 use_times = 4;
    if (has_use_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->use_times());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400005::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400005* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400005*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400005::MergeFrom(const Proto10400005& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_use_type()) {
      set_use_type(from.use_type());
    }
    if (from.has_left_capacity()) {
      set_left_capacity(from.left_capacity());
    }
    if (from.has_item_index()) {
      set_item_index(from.item_index());
    }
    if (from.has_use_times()) {
      set_use_times(from.use_times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400005::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400005::CopyFrom(const Proto10400005& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400005::IsInitialized() const {
  
  return true;
}

void Proto10400005::Swap(Proto10400005* other) {
  if (other != this) {
    std::swap(use_type_, other->use_type_);
    std::swap(left_capacity_, other->left_capacity_);
    std::swap(item_index_, other->item_index_);
    std::swap(use_times_, other->use_times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400005::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400005_descriptor_;
  metadata.reflection = Proto10400005_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400912::kScriptSortFieldNumber;
#endif  // !_MSC_VER

Proto10400912::Proto10400912()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400912::InitAsDefaultInstance() {
}

Proto10400912::Proto10400912(const Proto10400912& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400912::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400912::~Proto10400912() {
  SharedDtor();
}

void Proto10400912::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400912::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400912::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400912_descriptor_;
}

const Proto10400912& Proto10400912::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto10400912* Proto10400912::default_instance_ = NULL;

Proto10400912* Proto10400912::New() const {
  return new Proto10400912;
}

void Proto10400912::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400912::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400912::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400912::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400912::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400912::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400912* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400912*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400912::MergeFrom(const Proto10400912& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400912::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400912::CopyFrom(const Proto10400912& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400912::IsInitialized() const {
  
  return true;
}

void Proto10400912::Swap(Proto10400912* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400912::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400912_descriptor_;
  metadata.reflection = Proto10400912_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400912::kScriptSortFieldNumber;
const int Proto50400912::kLeftTimesFieldNumber;
const int Proto50400912::kUseTickFieldNumber;
#endif  // !_MSC_VER

Proto50400912::Proto50400912()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400912::InitAsDefaultInstance() {
}

Proto50400912::Proto50400912(const Proto50400912& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400912::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  left_times_ = 0;
  use_tick_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400912::~Proto50400912() {
  SharedDtor();
}

void Proto50400912::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400912::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400912::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400912_descriptor_;
}

const Proto50400912& Proto50400912::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto50400912* Proto50400912::default_instance_ = NULL;

Proto50400912* Proto50400912::New() const {
  return new Proto50400912;
}

void Proto50400912::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
    left_times_ = 0;
    use_tick_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400912::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_left_times;
        break;
      }
      
      // optional int32 left_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_times_)));
          set_has_left_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_use_tick;
        break;
      }
      
      // optional int32 use_tick = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_use_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &use_tick_)));
          set_has_use_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400912::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  // optional int32 left_times = 2;
  if (has_left_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_times(), output);
  }
  
  // optional int32 use_tick = 3;
  if (has_use_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->use_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400912::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  // optional int32 left_times = 2;
  if (has_left_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_times(), target);
  }
  
  // optional int32 use_tick = 3;
  if (has_use_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->use_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400912::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 left_times = 2;
    if (has_left_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_times());
    }
    
    // optional int32 use_tick = 3;
    if (has_use_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->use_tick());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400912::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400912* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400912*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400912::MergeFrom(const Proto50400912& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_left_times()) {
      set_left_times(from.left_times());
    }
    if (from.has_use_tick()) {
      set_use_tick(from.use_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400912::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400912::CopyFrom(const Proto50400912& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400912::IsInitialized() const {
  
  return true;
}

void Proto50400912::Swap(Proto50400912* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(left_times_, other->left_times_);
    std::swap(use_tick_, other->use_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400912::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400912_descriptor_;
  metadata.reflection = Proto50400912_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400913::kUseTickFieldNumber;
#endif  // !_MSC_VER

Proto50400913::Proto50400913()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400913::InitAsDefaultInstance() {
}

Proto50400913::Proto50400913(const Proto50400913& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400913::SharedCtor() {
  _cached_size_ = 0;
  use_tick_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400913::~Proto50400913() {
  SharedDtor();
}

void Proto50400913::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400913::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400913::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400913_descriptor_;
}

const Proto50400913& Proto50400913::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto50400913* Proto50400913::default_instance_ = NULL;

Proto50400913* Proto50400913::New() const {
  return new Proto50400913;
}

void Proto50400913::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    use_tick_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400913::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 use_tick = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &use_tick_)));
          set_has_use_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400913::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 use_tick = 1;
  if (has_use_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->use_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400913::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 use_tick = 1;
  if (has_use_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->use_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400913::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 use_tick = 1;
    if (has_use_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->use_tick());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400913::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400913* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400913*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400913::MergeFrom(const Proto50400913& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_use_tick()) {
      set_use_tick(from.use_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400913::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400913::CopyFrom(const Proto50400913& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400913::IsInitialized() const {
  
  return true;
}

void Proto50400913::Swap(Proto50400913* other) {
  if (other != this) {
    std::swap(use_tick_, other->use_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400913::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400913_descriptor_;
  metadata.reflection = Proto50400913_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400216::kTipsSetFieldNumber;
const int Proto80400216::kTipsStrSetFieldNumber;
#endif  // !_MSC_VER

Proto80400216::Proto80400216()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400216::InitAsDefaultInstance() {
}

Proto80400216::Proto80400216(const Proto80400216& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400216::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400216::~Proto80400216() {
  SharedDtor();
}

void Proto80400216::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400216::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400216::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400216_descriptor_;
}

const Proto80400216& Proto80400216::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto80400216* Proto80400216::default_instance_ = NULL;

Proto80400216* Proto80400216::New() const {
  return new Proto80400216;
}

void Proto80400216::Clear() {
  tips_set_.Clear();
  tips_str_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400216::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TipsItem tips_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tips_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tips_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_tips_set;
        if (input->ExpectTag(18)) goto parse_tips_str_set;
        break;
      }
      
      // repeated string tips_str_set = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tips_str_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tips_str_set()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->tips_str_set(0).data(), this->tips_str_set(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_tips_str_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400216::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .TipsItem tips_set = 1;
  for (int i = 0; i < this->tips_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tips_set(i), output);
  }
  
  // repeated string tips_str_set = 2;
  for (int i = 0; i < this->tips_str_set_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->tips_str_set(i).data(), this->tips_str_set(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->tips_str_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400216::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .TipsItem tips_set = 1;
  for (int i = 0; i < this->tips_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tips_set(i), target);
  }
  
  // repeated string tips_str_set = 2;
  for (int i = 0; i < this->tips_str_set_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tips_str_set(i).data(), this->tips_str_set(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->tips_str_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400216::ByteSize() const {
  int total_size = 0;
  
  // repeated .TipsItem tips_set = 1;
  total_size += 1 * this->tips_set_size();
  for (int i = 0; i < this->tips_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tips_set(i));
  }
  
  // repeated string tips_str_set = 2;
  total_size += 1 * this->tips_str_set_size();
  for (int i = 0; i < this->tips_str_set_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tips_str_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400216::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400216* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400216*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400216::MergeFrom(const Proto80400216& from) {
  GOOGLE_CHECK_NE(&from, this);
  tips_set_.MergeFrom(from.tips_set_);
  tips_str_set_.MergeFrom(from.tips_str_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400216::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400216::CopyFrom(const Proto80400216& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400216::IsInitialized() const {
  
  return true;
}

void Proto80400216::Swap(Proto80400216* other) {
  if (other != this) {
    tips_set_.Swap(&other->tips_set_);
    tips_str_set_.Swap(&other->tips_str_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400216::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400216_descriptor_;
  metadata.reflection = Proto80400216_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100406::kUseTimesSetFieldNumber;
#endif  // !_MSC_VER

Proto80100406::Proto80100406()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100406::InitAsDefaultInstance() {
}

Proto80100406::Proto80100406(const Proto80100406& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100406::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100406::~Proto80100406() {
  SharedDtor();
}

void Proto80100406::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80100406::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100406::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100406_descriptor_;
}

const Proto80100406& Proto80100406::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto80100406* Proto80100406::default_instance_ = NULL;

Proto80100406* Proto80100406::New() const {
  return new Proto80100406;
}

void Proto80100406::Clear() {
  use_times_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100406::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoFBUseTimes use_times_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_use_times_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_use_times_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_use_times_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100406::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoFBUseTimes use_times_set = 1;
  for (int i = 0; i < this->use_times_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->use_times_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100406::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoFBUseTimes use_times_set = 1;
  for (int i = 0; i < this->use_times_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->use_times_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100406::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoFBUseTimes use_times_set = 1;
  total_size += 1 * this->use_times_set_size();
  for (int i = 0; i < this->use_times_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->use_times_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100406::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100406* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100406*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100406::MergeFrom(const Proto80100406& from) {
  GOOGLE_CHECK_NE(&from, this);
  use_times_set_.MergeFrom(from.use_times_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100406::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100406::CopyFrom(const Proto80100406& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100406::IsInitialized() const {
  
  return true;
}

void Proto80100406::Swap(Proto80100406* other) {
  if (other != this) {
    use_times_set_.Swap(&other->use_times_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100406::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100406_descriptor_;
  metadata.reflection = Proto80100406_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400914::kScriptSortFieldNumber;
const int Proto10400914::kScriptTypeFieldNumber;
#endif  // !_MSC_VER

Proto10400914::Proto10400914()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400914::InitAsDefaultInstance() {
}

Proto10400914::Proto10400914(const Proto10400914& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400914::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  script_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400914::~Proto10400914() {
  SharedDtor();
}

void Proto10400914::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400914::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400914::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400914_descriptor_;
}

const Proto10400914& Proto10400914::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto10400914* Proto10400914::default_instance_ = NULL;

Proto10400914* Proto10400914::New() const {
  return new Proto10400914;
}

void Proto10400914::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
    script_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400914::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_script_type;
        break;
      }
      
      // optional int32 script_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_type_)));
          set_has_script_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400914::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  // optional int32 script_type = 2;
  if (has_script_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->script_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400914::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  // optional int32 script_type = 2;
  if (has_script_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->script_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400914::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 script_type = 2;
    if (has_script_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400914::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400914* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400914*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400914::MergeFrom(const Proto10400914& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_script_type()) {
      set_script_type(from.script_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400914::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400914::CopyFrom(const Proto10400914& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400914::IsInitialized() const {
  
  return true;
}

void Proto10400914::Swap(Proto10400914* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(script_type_, other->script_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400914::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400914_descriptor_;
  metadata.reflection = Proto10400914_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400914::kScriptInfoFieldNumber;
#endif  // !_MSC_VER

Proto50400914::Proto50400914()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400914::InitAsDefaultInstance() {
  script_info_ = const_cast< ::ProtoScriptInfo*>(&::ProtoScriptInfo::default_instance());
}

Proto50400914::Proto50400914(const Proto50400914& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400914::SharedCtor() {
  _cached_size_ = 0;
  script_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400914::~Proto50400914() {
  SharedDtor();
}

void Proto50400914::SharedDtor() {
  if (this != default_instance_) {
    delete script_info_;
  }
}

void Proto50400914::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400914::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400914_descriptor_;
}

const Proto50400914& Proto50400914::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto50400914* Proto50400914::default_instance_ = NULL;

Proto50400914* Proto50400914::New() const {
  return new Proto50400914;
}

void Proto50400914::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_script_info()) {
      if (script_info_ != NULL) script_info_->::ProtoScriptInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400914::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoScriptInfo script_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_script_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400914::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoScriptInfo script_info = 1;
  if (has_script_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->script_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400914::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoScriptInfo script_info = 1;
  if (has_script_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->script_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400914::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoScriptInfo script_info = 1;
    if (has_script_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->script_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400914::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400914* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400914*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400914::MergeFrom(const Proto50400914& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_info()) {
      mutable_script_info()->::ProtoScriptInfo::MergeFrom(from.script_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400914::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400914::CopyFrom(const Proto50400914& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400914::IsInitialized() const {
  
  return true;
}

void Proto50400914::Swap(Proto50400914* other) {
  if (other != this) {
    std::swap(script_info_, other->script_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400914::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400914_descriptor_;
  metadata.reflection = Proto50400914_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400913::kFloorFieldNumber;
#endif  // !_MSC_VER

Proto80400913::Proto80400913()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400913::InitAsDefaultInstance() {
}

Proto80400913::Proto80400913(const Proto80400913& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400913::SharedCtor() {
  _cached_size_ = 0;
  floor_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400913::~Proto80400913() {
  SharedDtor();
}

void Proto80400913::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400913::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400913::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400913_descriptor_;
}

const Proto80400913& Proto80400913::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto80400913* Proto80400913::default_instance_ = NULL;

Proto80400913* Proto80400913::New() const {
  return new Proto80400913;
}

void Proto80400913::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    floor_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400913::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 floor = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &floor_)));
          set_has_floor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400913::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 floor = 1;
  if (has_floor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->floor(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400913::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 floor = 1;
  if (has_floor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->floor(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400913::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 floor = 1;
    if (has_floor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->floor());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400913::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400913* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400913*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400913::MergeFrom(const Proto80400913& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_floor()) {
      set_floor(from.floor());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400913::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400913::CopyFrom(const Proto80400913& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400913::IsInitialized() const {
  
  return true;
}

void Proto80400913::Swap(Proto80400913* other) {
  if (other != this) {
    std::swap(floor_, other->floor_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400913::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400913_descriptor_;
  metadata.reflection = Proto80400913_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400403::kSrcIdFieldNumber;
const int Proto80400403::kNewIdFieldNumber;
#endif  // !_MSC_VER

Proto80400403::Proto80400403()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400403::InitAsDefaultInstance() {
}

Proto80400403::Proto80400403(const Proto80400403& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400403::SharedCtor() {
  _cached_size_ = 0;
  src_id_ = GOOGLE_LONGLONG(0);
  new_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400403::~Proto80400403() {
  SharedDtor();
}

void Proto80400403::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400403::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400403::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400403_descriptor_;
}

const Proto80400403& Proto80400403::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto80400403* Proto80400403::default_instance_ = NULL;

Proto80400403* Proto80400403::New() const {
  return new Proto80400403;
}

void Proto80400403::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    src_id_ = GOOGLE_LONGLONG(0);
    new_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400403::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 src_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &src_id_)));
          set_has_src_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_new_id;
        break;
      }
      
      // optional int64 new_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_new_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &new_id_)));
          set_has_new_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400403::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 src_id = 1;
  if (has_src_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->src_id(), output);
  }
  
  // optional int64 new_id = 2;
  if (has_new_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->new_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400403::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 src_id = 1;
  if (has_src_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->src_id(), target);
  }
  
  // optional int64 new_id = 2;
  if (has_new_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->new_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400403::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 src_id = 1;
    if (has_src_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->src_id());
    }
    
    // optional int64 new_id = 2;
    if (has_new_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->new_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400403::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400403* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400403*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400403::MergeFrom(const Proto80400403& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_src_id()) {
      set_src_id(from.src_id());
    }
    if (from.has_new_id()) {
      set_new_id(from.new_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400403::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400403::CopyFrom(const Proto80400403& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400403::IsInitialized() const {
  
  return true;
}

void Proto80400403::Swap(Proto80400403* other) {
  if (other != this) {
    std::swap(src_id_, other->src_id_);
    std::swap(new_id_, other->new_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400403::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400403_descriptor_;
  metadata.reflection = Proto80400403_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400613::kMagicalIdFieldNumber;
#endif  // !_MSC_VER

Proto11400613::Proto11400613()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400613::InitAsDefaultInstance() {
}

Proto11400613::Proto11400613(const Proto11400613& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400613::SharedCtor() {
  _cached_size_ = 0;
  magical_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400613::~Proto11400613() {
  SharedDtor();
}

void Proto11400613::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400613::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400613::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400613_descriptor_;
}

const Proto11400613& Proto11400613::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto11400613* Proto11400613::default_instance_ = NULL;

Proto11400613* Proto11400613::New() const {
  return new Proto11400613;
}

void Proto11400613::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    magical_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400613::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 magical_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magical_id_)));
          set_has_magical_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400613::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 magical_id = 1;
  if (has_magical_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->magical_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400613::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 magical_id = 1;
  if (has_magical_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->magical_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400613::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 magical_id = 1;
    if (has_magical_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->magical_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400613::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400613* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400613*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400613::MergeFrom(const Proto11400613& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_magical_id()) {
      set_magical_id(from.magical_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400613::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400613::CopyFrom(const Proto11400613& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400613::IsInitialized() const {
  
  return true;
}

void Proto11400613::Swap(Proto11400613* other) {
  if (other != this) {
    std::swap(magical_id_, other->magical_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400613::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400613_descriptor_;
  metadata.reflection = Proto11400613_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80200007::kContentFieldNumber;
const int Proto80200007::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto80200007::Proto80200007()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80200007::InitAsDefaultInstance() {
}

Proto80200007::Proto80200007(const Proto80200007& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80200007::SharedCtor() {
  _cached_size_ = 0;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80200007::~Proto80200007() {
  SharedDtor();
}

void Proto80200007::SharedDtor() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void Proto80200007::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80200007::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80200007_descriptor_;
}

const Proto80200007& Proto80200007::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto80200007* Proto80200007::default_instance_ = NULL;

Proto80200007* Proto80200007::New() const {
  return new Proto80200007;
}

void Proto80200007::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80200007::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string content = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80200007::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string content = 1;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->content(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80200007::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string content = 1;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80200007::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string content = 1;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80200007::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80200007* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80200007*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80200007::MergeFrom(const Proto80200007& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_content()) {
      set_content(from.content());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80200007::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80200007::CopyFrom(const Proto80200007& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80200007::IsInitialized() const {
  
  return true;
}

void Proto80200007::Swap(Proto80200007* other) {
  if (other != this) {
    std::swap(content_, other->content_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80200007::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80200007_descriptor_;
  metadata.reflection = Proto80200007_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400106::kFinishTaskListFieldNumber;
const int Proto81400106::kPassPieceFieldNumber;
const int Proto81400106::kPassChapterFieldNumber;
const int Proto81400106::kPassUiFieldNumber;
#endif  // !_MSC_VER

Proto81400106::Proto81400106()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400106::InitAsDefaultInstance() {
}

Proto81400106::Proto81400106(const Proto81400106& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400106::SharedCtor() {
  _cached_size_ = 0;
  pass_piece_ = 0;
  pass_chapter_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400106::~Proto81400106() {
  SharedDtor();
}

void Proto81400106::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400106::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400106::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400106_descriptor_;
}

const Proto81400106& Proto81400106::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto81400106* Proto81400106::default_instance_ = NULL;

Proto81400106* Proto81400106::New() const {
  return new Proto81400106;
}

void Proto81400106::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    pass_piece_ = 0;
    pass_chapter_ = 0;
  }
  finish_task_list_.Clear();
  pass_ui_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400106::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 finish_task_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_finish_task_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_finish_task_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_finish_task_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_finish_task_list;
        if (input->ExpectTag(16)) goto parse_pass_piece;
        break;
      }
      
      // optional int32 pass_piece = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pass_piece:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pass_piece_)));
          set_has_pass_piece();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pass_chapter;
        break;
      }
      
      // optional int32 pass_chapter = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pass_chapter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pass_chapter_)));
          set_has_pass_chapter();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_pass_ui;
        break;
      }
      
      // repeated string pass_ui = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pass_ui:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_pass_ui()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->pass_ui(0).data(), this->pass_ui(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_pass_ui;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400106::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 finish_task_list = 1;
  for (int i = 0; i < this->finish_task_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->finish_task_list(i), output);
  }
  
  // optional int32 pass_piece = 2;
  if (has_pass_piece()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pass_piece(), output);
  }
  
  // optional int32 pass_chapter = 3;
  if (has_pass_chapter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pass_chapter(), output);
  }
  
  // repeated string pass_ui = 4;
  for (int i = 0; i < this->pass_ui_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->pass_ui(i).data(), this->pass_ui(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->pass_ui(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400106::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 finish_task_list = 1;
  for (int i = 0; i < this->finish_task_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->finish_task_list(i), target);
  }
  
  // optional int32 pass_piece = 2;
  if (has_pass_piece()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pass_piece(), target);
  }
  
  // optional int32 pass_chapter = 3;
  if (has_pass_chapter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pass_chapter(), target);
  }
  
  // repeated string pass_ui = 4;
  for (int i = 0; i < this->pass_ui_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pass_ui(i).data(), this->pass_ui(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->pass_ui(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400106::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 pass_piece = 2;
    if (has_pass_piece()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pass_piece());
    }
    
    // optional int32 pass_chapter = 3;
    if (has_pass_chapter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pass_chapter());
    }
    
  }
  // repeated int32 finish_task_list = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->finish_task_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->finish_task_list(i));
    }
    total_size += 1 * this->finish_task_list_size() + data_size;
  }
  
  // repeated string pass_ui = 4;
  total_size += 1 * this->pass_ui_size();
  for (int i = 0; i < this->pass_ui_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->pass_ui(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400106::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400106* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400106*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400106::MergeFrom(const Proto81400106& from) {
  GOOGLE_CHECK_NE(&from, this);
  finish_task_list_.MergeFrom(from.finish_task_list_);
  pass_ui_.MergeFrom(from.pass_ui_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_pass_piece()) {
      set_pass_piece(from.pass_piece());
    }
    if (from.has_pass_chapter()) {
      set_pass_chapter(from.pass_chapter());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400106::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400106::CopyFrom(const Proto81400106& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400106::IsInitialized() const {
  
  return true;
}

void Proto81400106::Swap(Proto81400106* other) {
  if (other != this) {
    finish_task_list_.Swap(&other->finish_task_list_);
    std::swap(pass_piece_, other->pass_piece_);
    std::swap(pass_chapter_, other->pass_chapter_);
    pass_ui_.Swap(&other->pass_ui_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400106::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400106_descriptor_;
  metadata.reflection = Proto81400106_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100024::kItemIdFieldNumber;
#endif  // !_MSC_VER

Proto10100024::Proto10100024()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100024::InitAsDefaultInstance() {
}

Proto10100024::Proto10100024(const Proto10100024& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100024::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100024::~Proto10100024() {
  SharedDtor();
}

void Proto10100024::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100024::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100024::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100024_descriptor_;
}

const Proto10100024& Proto10100024::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto10100024* Proto10100024::default_instance_ = NULL;

Proto10100024* Proto10100024::New() const {
  return new Proto10100024;
}

void Proto10100024::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100024::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100024::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100024::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100024::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100024::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100024* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100024*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100024::MergeFrom(const Proto10100024& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100024::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100024::CopyFrom(const Proto10100024& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100024::IsInitialized() const {
  
  return true;
}

void Proto10100024::Swap(Proto10100024* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100024::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100024_descriptor_;
  metadata.reflection = Proto10100024_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100024::kShopTypeFieldNumber;
const int Proto50100024::kShopItemFieldNumber;
#endif  // !_MSC_VER

Proto50100024::Proto50100024()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100024::InitAsDefaultInstance() {
  shop_item_ = const_cast< ::ProtoMallItem*>(&::ProtoMallItem::default_instance());
}

Proto50100024::Proto50100024(const Proto50100024& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100024::SharedCtor() {
  _cached_size_ = 0;
  shop_type_ = 0;
  shop_item_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100024::~Proto50100024() {
  SharedDtor();
}

void Proto50100024::SharedDtor() {
  if (this != default_instance_) {
    delete shop_item_;
  }
}

void Proto50100024::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100024::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100024_descriptor_;
}

const Proto50100024& Proto50100024::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto50100024* Proto50100024::default_instance_ = NULL;

Proto50100024* Proto50100024::New() const {
  return new Proto50100024;
}

void Proto50100024::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    shop_type_ = 0;
    if (has_shop_item()) {
      if (shop_item_ != NULL) shop_item_->::ProtoMallItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100024::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 shop_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_type_)));
          set_has_shop_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_shop_item;
        break;
      }
      
      // optional .ProtoMallItem shop_item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shop_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shop_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100024::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 shop_type = 1;
  if (has_shop_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->shop_type(), output);
  }
  
  // optional .ProtoMallItem shop_item = 2;
  if (has_shop_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->shop_item(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100024::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 shop_type = 1;
  if (has_shop_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->shop_type(), target);
  }
  
  // optional .ProtoMallItem shop_item = 2;
  if (has_shop_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->shop_item(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100024::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 shop_type = 1;
    if (has_shop_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop_type());
    }
    
    // optional .ProtoMallItem shop_item = 2;
    if (has_shop_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shop_item());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100024::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100024* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100024*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100024::MergeFrom(const Proto50100024& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shop_type()) {
      set_shop_type(from.shop_type());
    }
    if (from.has_shop_item()) {
      mutable_shop_item()->::ProtoMallItem::MergeFrom(from.shop_item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100024::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100024::CopyFrom(const Proto50100024& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100024::IsInitialized() const {
  
  return true;
}

void Proto50100024::Swap(Proto50100024* other) {
  if (other != this) {
    std::swap(shop_type_, other->shop_type_);
    std::swap(shop_item_, other->shop_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100024::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100024_descriptor_;
  metadata.reflection = Proto50100024_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400333::kStepFieldNumber;
#endif  // !_MSC_VER

Proto51400333::Proto51400333()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400333::InitAsDefaultInstance() {
}

Proto51400333::Proto51400333(const Proto51400333& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400333::SharedCtor() {
  _cached_size_ = 0;
  step_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400333::~Proto51400333() {
  SharedDtor();
}

void Proto51400333::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400333::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400333::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400333_descriptor_;
}

const Proto51400333& Proto51400333::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient008_2eproto();  return *default_instance_;
}

Proto51400333* Proto51400333::default_instance_ = NULL;

Proto51400333* Proto51400333::New() const {
  return new Proto51400333;
}

void Proto51400333::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    step_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400333::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 step = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &step_)));
          set_has_step();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400333::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 step = 1;
  if (has_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->step(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400333::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 step = 1;
  if (has_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->step(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400333::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 step = 1;
    if (has_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->step());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400333::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400333* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400333*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400333::MergeFrom(const Proto51400333& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_step()) {
      set_step(from.step());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400333::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400333::CopyFrom(const Proto51400333& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400333::IsInitialized() const {
  
  return true;
}

void Proto51400333::Swap(Proto51400333* other) {
  if (other != this) {
    std::swap(step_, other->step_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400333::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400333_descriptor_;
  metadata.reflection = Proto51400333_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
