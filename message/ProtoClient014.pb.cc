// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient014.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto81401706_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401706_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400349_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400349_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51402501_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51402501_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11402502_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11402502_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51402502_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51402502_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11402503_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11402503_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51402503_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51402503_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11402504_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11402504_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51402504_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51402504_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11402505_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11402505_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10006_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10006_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51402505_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51402505_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400234_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400234_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80401305_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80401305_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400235_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400235_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400924_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400924_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400937_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400937_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400925_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400925_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400522_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400522_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400522_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400522_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400523_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400523_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400524_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400524_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400504_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400504_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400509_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400509_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400510_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400510_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400510_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400510_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400511_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400511_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400512_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400512_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400512_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400512_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400513_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400513_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400504_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400504_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400383_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400383_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401202_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401202_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400116_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400116_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100160_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100160_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100163_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100163_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100161_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100161_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400926_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400926_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400657_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400657_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400657_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400657_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400658_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400658_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100162_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100162_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400911_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400911_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101802_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101802_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101801_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101801_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101802_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101802_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101801_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101801_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400912_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400912_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401462_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401462_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401902_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401902_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient014_2eproto() {
  protobuf_AddDesc_ProtoClient014_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient014.proto");
  GOOGLE_CHECK(file != NULL);
  Proto81401706_descriptor_ = file->message_type(0);
  static const int Proto81401706_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401706, ticks_),
  };
  Proto81401706_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401706_descriptor_,
      Proto81401706::default_instance_,
      Proto81401706_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401706, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401706, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401706));
  Proto11400349_descriptor_ = file->message_type(1);
  static const int Proto11400349_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400349, task_id_),
  };
  Proto11400349_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400349_descriptor_,
      Proto11400349::default_instance_,
      Proto11400349_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400349, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400349, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400349));
  Proto51402501_descriptor_ = file->message_type(2);
  static const int Proto51402501_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402501, adorn_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402501, mw_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402501, reiki_num_),
  };
  Proto51402501_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51402501_descriptor_,
      Proto51402501::default_instance_,
      Proto51402501_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402501, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402501, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51402501));
  Proto11402502_descriptor_ = file->message_type(3);
  static const int Proto11402502_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402502, magicweapon_id_),
  };
  Proto11402502_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11402502_descriptor_,
      Proto11402502::default_instance_,
      Proto11402502_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402502, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402502, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11402502));
  Proto51402502_descriptor_ = file->message_type(4);
  static const int Proto51402502_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402502, is_active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402502, mw_curr_id_),
  };
  Proto51402502_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51402502_descriptor_,
      Proto51402502::default_instance_,
      Proto51402502_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402502, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402502, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51402502));
  Proto11402503_descriptor_ = file->message_type(5);
  static const int Proto11402503_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402503, mw_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402503, auto_buy_),
  };
  Proto11402503_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11402503_descriptor_,
      Proto11402503::default_instance_,
      Proto11402503_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402503, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402503, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11402503));
  Proto51402503_descriptor_ = file->message_type(6);
  static const int Proto51402503_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402503, mw_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402503, rank_star_grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402503, rank_star_progress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402503, status_),
  };
  Proto51402503_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51402503_descriptor_,
      Proto51402503::default_instance_,
      Proto51402503_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402503, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402503, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51402503));
  Proto11402504_descriptor_ = file->message_type(7);
  static const int Proto11402504_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402504, mw_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402504, auto_buy_),
  };
  Proto11402504_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11402504_descriptor_,
      Proto11402504::default_instance_,
      Proto11402504_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402504, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402504, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11402504));
  Proto51402504_descriptor_ = file->message_type(8);
  static const int Proto51402504_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402504, mw_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402504, qua_star_grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402504, qua_star_progress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402504, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402504, skill_level_),
  };
  Proto51402504_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51402504_descriptor_,
      Proto51402504::default_instance_,
      Proto51402504_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402504, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402504, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51402504));
  Proto11402505_descriptor_ = file->message_type(9);
  static const int Proto11402505_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402505, mw_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402505, put_on_),
  };
  Proto11402505_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11402505_descriptor_,
      Proto11402505::default_instance_,
      Proto11402505_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402505, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402505, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11402505));
  Proto10006_descriptor_ = file->message_type(10);
  static const int Proto10006_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10006, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10006, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10006, pixel_y_),
  };
  Proto10006_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10006_descriptor_,
      Proto10006::default_instance_,
      Proto10006_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10006, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10006, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10006));
  Proto51402505_descriptor_ = file->message_type(11);
  static const int Proto51402505_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402505, put_on_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402505, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402505, mw_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402505, mw_rank_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402505, pre_mw_id_),
  };
  Proto51402505_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51402505_descriptor_,
      Proto51402505::default_instance_,
      Proto51402505_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402505, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402505, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51402505));
  Proto80400234_descriptor_ = file->message_type(12);
  static const int Proto80400234_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400234, note_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400234, mover_id_),
  };
  Proto80400234_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400234_descriptor_,
      Proto80400234::default_instance_,
      Proto80400234_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400234, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400234, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400234));
  Proto80401305_descriptor_ = file->message_type(13);
  static const int Proto80401305_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401305, zhuling_open_),
  };
  Proto80401305_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80401305_descriptor_,
      Proto80401305::default_instance_,
      Proto80401305_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401305, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401305, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80401305));
  Proto80400235_descriptor_ = file->message_type(14);
  static const int Proto80400235_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400235, show_ai_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400235, hide_ai_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400235, show_ai_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400235, flag_),
  };
  Proto80400235_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400235_descriptor_,
      Proto80400235::default_instance_,
      Proto80400235_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400235, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400235, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400235));
  Proto80400924_descriptor_ = file->message_type(15);
  static const int Proto80400924_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400924, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400924, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400924, role_name_),
  };
  Proto80400924_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400924_descriptor_,
      Proto80400924::default_instance_,
      Proto80400924_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400924, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400924, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400924));
  Proto10400937_descriptor_ = file->message_type(16);
  static const int Proto10400937_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400937, mover_id_),
  };
  Proto10400937_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400937_descriptor_,
      Proto10400937::default_instance_,
      Proto10400937_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400937, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400937, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400937));
  Proto80400925_descriptor_ = file->message_type(17);
  static const int Proto80400925_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400925, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400925, last_sec_),
  };
  Proto80400925_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400925_descriptor_,
      Proto80400925::default_instance_,
      Proto80400925_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400925, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400925, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400925));
  Proto11400522_descriptor_ = file->message_type(18);
  static const int Proto11400522_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400522, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400522, beast_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400522, amount_),
  };
  Proto11400522_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400522_descriptor_,
      Proto11400522::default_instance_,
      Proto11400522_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400522, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400522, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400522));
  Proto51400522_descriptor_ = file->message_type(19);
  static const int Proto51400522_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400522, conbine_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400522, total_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400522, ability_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400522, beast_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400522, force_),
  };
  Proto51400522_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400522_descriptor_,
      Proto51400522::default_instance_,
      Proto51400522_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400522, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400522, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400522));
  Proto11400523_descriptor_ = file->message_type(20);
  static const int Proto11400523_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400523, beast_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400523, action_),
  };
  Proto11400523_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400523_descriptor_,
      Proto11400523::default_instance_,
      Proto11400523_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400523, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400523, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400523));
  Proto11400524_descriptor_ = file->message_type(21);
  static const int Proto11400524_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400524, beast_),
  };
  Proto11400524_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400524_descriptor_,
      Proto11400524::default_instance_,
      Proto11400524_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400524, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400524, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400524));
  Proto11400504_descriptor_ = file->message_type(22);
  static const int Proto11400504_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400504, beast_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400504, item_id_),
  };
  Proto11400504_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400504_descriptor_,
      Proto11400504::default_instance_,
      Proto11400504_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400504, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400504, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400504));
  Proto11400509_descriptor_ = file->message_type(23);
  static const int Proto11400509_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400509, beast_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400509, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400509, skill_id_),
  };
  Proto11400509_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400509_descriptor_,
      Proto11400509::default_instance_,
      Proto11400509_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400509, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400509, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400509));
  Proto11400510_descriptor_ = file->message_type(24);
  static const int Proto11400510_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400510, acton_),
  };
  Proto11400510_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400510_descriptor_,
      Proto11400510::default_instance_,
      Proto11400510_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400510, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400510, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400510));
  Proto51400510_descriptor_ = file->message_type(25);
  static const int Proto51400510_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400510, lucky_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400510, skill_book_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400510, skill_book_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400510, total_lucky_),
  };
  Proto51400510_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400510_descriptor_,
      Proto51400510::default_instance_,
      Proto51400510_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400510, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400510, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400510));
  Proto11400511_descriptor_ = file->message_type(26);
  static const int Proto11400511_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400511, skill_index_),
  };
  Proto11400511_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400511_descriptor_,
      Proto11400511::default_instance_,
      Proto11400511_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400511, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400511, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400511));
  Proto11400512_descriptor_ = file->message_type(27);
  static const int Proto11400512_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400512, skill_book_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400512, material_id_),
  };
  Proto11400512_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400512_descriptor_,
      Proto11400512::default_instance_,
      Proto11400512_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400512, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400512, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400512));
  Proto51400512_descriptor_ = file->message_type(28);
  static const int Proto51400512_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400512, skill_book_id_),
  };
  Proto51400512_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400512_descriptor_,
      Proto51400512::default_instance_,
      Proto51400512_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400512, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400512, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400512));
  Proto51400513_descriptor_ = file->message_type(29);
  static const int Proto51400513_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400513, lucky_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400513, total_lucky_),
  };
  Proto51400513_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400513_descriptor_,
      Proto51400513::default_instance_,
      Proto51400513_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400513, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400513, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400513));
  Proto51400504_descriptor_ = file->message_type(30);
  static const int Proto51400504_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400504, skill_id_),
  };
  Proto51400504_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400504_descriptor_,
      Proto51400504::default_instance_,
      Proto51400504_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400504, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400504, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400504));
  Proto80400383_descriptor_ = file->message_type(31);
  static const int Proto80400383_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400383, attack_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400383, attack_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400383, attack_career_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400383, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400383, pixel_y_),
  };
  Proto80400383_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400383_descriptor_,
      Proto80400383::default_instance_,
      Proto80400383_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400383, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400383, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400383));
  Proto81401202_descriptor_ = file->message_type(32);
  static const int Proto81401202_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401202, qq_),
  };
  Proto81401202_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401202_descriptor_,
      Proto81401202::default_instance_,
      Proto81401202_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401202, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401202, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401202));
  Proto80400116_descriptor_ = file->message_type(33);
  static const int Proto80400116_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400116, chat_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400116, chat_port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400116, session_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400116, state_),
  };
  Proto80400116_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400116_descriptor_,
      Proto80400116::default_instance_,
      Proto80400116_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400116, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400116, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400116));
  Proto10100160_descriptor_ = file->message_type(34);
  static const int Proto10100160_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100160, target_id_),
  };
  Proto10100160_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100160_descriptor_,
      Proto10100160::default_instance_,
      Proto10100160_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100160, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100160, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100160));
  Proto50100163_descriptor_ = file->message_type(35);
  static const int Proto50100163_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100163, give_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100163, total_give_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100163, get_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100163, total_get_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100163, can_get_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100163, total_strength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100163, cur_strength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100163, vip_buys_),
  };
  Proto50100163_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100163_descriptor_,
      Proto50100163::default_instance_,
      Proto50100163_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100163, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100163, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100163));
  Proto10100161_descriptor_ = file->message_type(36);
  static const int Proto10100161_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100161, type_),
  };
  Proto10100161_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100161_descriptor_,
      Proto10100161::default_instance_,
      Proto10100161_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100161, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100161, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100161));
  Proto80400926_descriptor_ = file->message_type(37);
  static const int Proto80400926_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400926, left_boss_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400926, left_monster_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400926, total_boss_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400926, total_monster_),
  };
  Proto80400926_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400926_descriptor_,
      Proto80400926::default_instance_,
      Proto80400926_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400926, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400926, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400926));
  Proto11400657_descriptor_ = file->message_type(38);
  static const int Proto11400657_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400657, index_),
  };
  Proto11400657_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400657_descriptor_,
      Proto11400657::default_instance_,
      Proto11400657_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400657, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400657, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400657));
  Proto51400657_descriptor_ = file->message_type(39);
  static const int Proto51400657_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400657, fashion_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400657, is_owner_),
  };
  Proto51400657_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400657_descriptor_,
      Proto51400657::default_instance_,
      Proto51400657_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400657, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400657, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400657));
  Proto11400658_descriptor_ = file->message_type(40);
  static const int Proto11400658_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400658, fashion_id_),
  };
  Proto11400658_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400658_descriptor_,
      Proto11400658::default_instance_,
      Proto11400658_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400658, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400658, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400658));
  Proto10100162_descriptor_ = file->message_type(41);
  static const int Proto10100162_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100162, one_mount_),
  };
  Proto10100162_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100162_descriptor_,
      Proto10100162::default_instance_,
      Proto10100162_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100162, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100162, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100162));
  Proto81400911_descriptor_ = file->message_type(42);
  static const int Proto81400911_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400911, record_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400911, type_),
  };
  Proto81400911_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400911_descriptor_,
      Proto81400911::default_instance_,
      Proto81400911_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400911, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400911, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400911));
  Proto10101802_descriptor_ = file->message_type(43);
  static const int Proto10101802_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101802, type1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101802, type2_),
  };
  Proto10101802_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101802_descriptor_,
      Proto10101802::default_instance_,
      Proto10101802_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101802, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101802, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101802));
  Proto50101801_descriptor_ = file->message_type(44);
  static const int Proto50101801_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101801, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101801, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101801, start_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101801, end_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101801, left_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101801, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101801, cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101801, baseline_),
  };
  Proto50101801_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101801_descriptor_,
      Proto50101801::default_instance_,
      Proto50101801_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101801, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101801, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101801));
  Proto50101802_descriptor_ = file->message_type(45);
  static const int Proto50101802_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101802, type1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101802, type2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101802, item_index_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101802, left_time_),
  };
  Proto50101802_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101802_descriptor_,
      Proto50101802::default_instance_,
      Proto50101802_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101802, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101802, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101802));
  Proto10101801_descriptor_ = file->message_type(46);
  static const int Proto10101801_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101801, type_),
  };
  Proto10101801_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101801_descriptor_,
      Proto10101801::default_instance_,
      Proto10101801_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101801, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101801, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101801));
  Proto81400912_descriptor_ = file->message_type(47);
  static const int Proto81400912_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400912, state_),
  };
  Proto81400912_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400912_descriptor_,
      Proto81400912::default_instance_,
      Proto81400912_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400912, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400912, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400912));
  Proto51401462_descriptor_ = file->message_type(48);
  static const int Proto51401462_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401462, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401462, download_url_),
  };
  Proto51401462_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401462_descriptor_,
      Proto51401462::default_instance_,
      Proto51401462_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401462, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401462, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401462));
  Proto81401902_descriptor_ = file->message_type(49);
  static const int Proto81401902_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401902, hidden_set_),
  };
  Proto81401902_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401902_descriptor_,
      Proto81401902::default_instance_,
      Proto81401902_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401902, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401902, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401902));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient014_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401706_descriptor_, &Proto81401706::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400349_descriptor_, &Proto11400349::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51402501_descriptor_, &Proto51402501::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11402502_descriptor_, &Proto11402502::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51402502_descriptor_, &Proto51402502::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11402503_descriptor_, &Proto11402503::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51402503_descriptor_, &Proto51402503::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11402504_descriptor_, &Proto11402504::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51402504_descriptor_, &Proto51402504::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11402505_descriptor_, &Proto11402505::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10006_descriptor_, &Proto10006::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51402505_descriptor_, &Proto51402505::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400234_descriptor_, &Proto80400234::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80401305_descriptor_, &Proto80401305::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400235_descriptor_, &Proto80400235::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400924_descriptor_, &Proto80400924::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400937_descriptor_, &Proto10400937::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400925_descriptor_, &Proto80400925::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400522_descriptor_, &Proto11400522::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400522_descriptor_, &Proto51400522::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400523_descriptor_, &Proto11400523::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400524_descriptor_, &Proto11400524::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400504_descriptor_, &Proto11400504::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400509_descriptor_, &Proto11400509::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400510_descriptor_, &Proto11400510::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400510_descriptor_, &Proto51400510::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400511_descriptor_, &Proto11400511::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400512_descriptor_, &Proto11400512::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400512_descriptor_, &Proto51400512::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400513_descriptor_, &Proto51400513::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400504_descriptor_, &Proto51400504::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400383_descriptor_, &Proto80400383::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401202_descriptor_, &Proto81401202::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400116_descriptor_, &Proto80400116::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100160_descriptor_, &Proto10100160::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100163_descriptor_, &Proto50100163::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100161_descriptor_, &Proto10100161::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400926_descriptor_, &Proto80400926::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400657_descriptor_, &Proto11400657::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400657_descriptor_, &Proto51400657::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400658_descriptor_, &Proto11400658::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100162_descriptor_, &Proto10100162::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400911_descriptor_, &Proto81400911::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101802_descriptor_, &Proto10101802::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101801_descriptor_, &Proto50101801::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101802_descriptor_, &Proto50101802::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101801_descriptor_, &Proto10101801::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400912_descriptor_, &Proto81400912::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401462_descriptor_, &Proto51401462::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401902_descriptor_, &Proto81401902::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient014_2eproto() {
  delete Proto81401706::default_instance_;
  delete Proto81401706_reflection_;
  delete Proto11400349::default_instance_;
  delete Proto11400349_reflection_;
  delete Proto51402501::default_instance_;
  delete Proto51402501_reflection_;
  delete Proto11402502::default_instance_;
  delete Proto11402502_reflection_;
  delete Proto51402502::default_instance_;
  delete Proto51402502_reflection_;
  delete Proto11402503::default_instance_;
  delete Proto11402503_reflection_;
  delete Proto51402503::default_instance_;
  delete Proto51402503_reflection_;
  delete Proto11402504::default_instance_;
  delete Proto11402504_reflection_;
  delete Proto51402504::default_instance_;
  delete Proto51402504_reflection_;
  delete Proto11402505::default_instance_;
  delete Proto11402505_reflection_;
  delete Proto10006::default_instance_;
  delete Proto10006_reflection_;
  delete Proto51402505::default_instance_;
  delete Proto51402505_reflection_;
  delete Proto80400234::default_instance_;
  delete Proto80400234_reflection_;
  delete Proto80401305::default_instance_;
  delete Proto80401305_reflection_;
  delete Proto80400235::default_instance_;
  delete Proto80400235_reflection_;
  delete Proto80400924::default_instance_;
  delete Proto80400924_reflection_;
  delete Proto10400937::default_instance_;
  delete Proto10400937_reflection_;
  delete Proto80400925::default_instance_;
  delete Proto80400925_reflection_;
  delete Proto11400522::default_instance_;
  delete Proto11400522_reflection_;
  delete Proto51400522::default_instance_;
  delete Proto51400522_reflection_;
  delete Proto11400523::default_instance_;
  delete Proto11400523_reflection_;
  delete Proto11400524::default_instance_;
  delete Proto11400524_reflection_;
  delete Proto11400504::default_instance_;
  delete Proto11400504_reflection_;
  delete Proto11400509::default_instance_;
  delete Proto11400509_reflection_;
  delete Proto11400510::default_instance_;
  delete Proto11400510_reflection_;
  delete Proto51400510::default_instance_;
  delete Proto51400510_reflection_;
  delete Proto11400511::default_instance_;
  delete Proto11400511_reflection_;
  delete Proto11400512::default_instance_;
  delete Proto11400512_reflection_;
  delete Proto51400512::default_instance_;
  delete Proto51400512_reflection_;
  delete Proto51400513::default_instance_;
  delete Proto51400513_reflection_;
  delete Proto51400504::default_instance_;
  delete Proto51400504_reflection_;
  delete Proto80400383::default_instance_;
  delete Proto80400383_reflection_;
  delete Proto81401202::default_instance_;
  delete Proto81401202_reflection_;
  delete Proto80400116::default_instance_;
  delete Proto80400116_reflection_;
  delete Proto10100160::default_instance_;
  delete Proto10100160_reflection_;
  delete Proto50100163::default_instance_;
  delete Proto50100163_reflection_;
  delete Proto10100161::default_instance_;
  delete Proto10100161_reflection_;
  delete Proto80400926::default_instance_;
  delete Proto80400926_reflection_;
  delete Proto11400657::default_instance_;
  delete Proto11400657_reflection_;
  delete Proto51400657::default_instance_;
  delete Proto51400657_reflection_;
  delete Proto11400658::default_instance_;
  delete Proto11400658_reflection_;
  delete Proto10100162::default_instance_;
  delete Proto10100162_reflection_;
  delete Proto81400911::default_instance_;
  delete Proto81400911_reflection_;
  delete Proto10101802::default_instance_;
  delete Proto10101802_reflection_;
  delete Proto50101801::default_instance_;
  delete Proto50101801_reflection_;
  delete Proto50101802::default_instance_;
  delete Proto50101802_reflection_;
  delete Proto10101801::default_instance_;
  delete Proto10101801_reflection_;
  delete Proto81400912::default_instance_;
  delete Proto81400912_reflection_;
  delete Proto51401462::default_instance_;
  delete Proto51401462_reflection_;
  delete Proto81401902::default_instance_;
  delete Proto81401902_reflection_;
}

void protobuf_AddDesc_ProtoClient014_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient014.proto\032\021ProtoPublic.prot"
    "o\"\036\n\rProto81401706\022\r\n\005ticks\030\001 \001(\003\" \n\rPro"
    "to11400349\022\017\n\007task_id\030\001 \001(\005\"X\n\rProto5140"
    "2501\022\020\n\010adorn_id\030\001 \001(\005\022\"\n\007mw_list\030\002 \003(\0132"
    "\021.ProtoMagicWeapon\022\021\n\treiki_num\030\003 \001(\005\"\'\n"
    "\rProto11402502\022\026\n\016magicweapon_id\030\001 \001(\005\"I"
    "\n\rProto51402502\022\021\n\tis_active\030\001 \001(\010\022%\n\nmw"
    "_curr_id\030\002 \001(\0132\021.ProtoMagicWeapon\"0\n\rPro"
    "to11402503\022\r\n\005mw_id\030\001 \001(\005\022\020\n\010auto_buy\030\002 "
    "\001(\010\"c\n\rProto51402503\022\r\n\005mw_id\030\001 \001(\005\022\027\n\017r"
    "ank_star_grade\030\002 \001(\005\022\032\n\022rank_star_progre"
    "ss\030\003 \001(\005\022\016\n\006status\030\004 \001(\005\"0\n\rProto1140250"
    "4\022\r\n\005mw_id\030\001 \001(\005\022\020\n\010auto_buy\030\002 \001(\010\"x\n\rPr"
    "oto51402504\022\r\n\005mw_id\030\001 \001(\005\022\026\n\016qua_star_g"
    "rade\030\002 \001(\005\022\031\n\021qua_star_progress\030\003 \001(\005\022\020\n"
    "\010skill_id\030\004 \001(\005\022\023\n\013skill_level\030\005 \001(\005\".\n\r"
    "Proto11402505\022\r\n\005mw_id\030\001 \001(\005\022\016\n\006put_on\030\002"
    " \001(\010\"@\n\nProto10006\022\020\n\010scene_id\030\001 \001(\005\022\017\n\007"
    "pixel_x\030\002 \001(\005\022\017\n\007pixel_y\030\003 \001(\005\"i\n\rProto5"
    "1402505\022\016\n\006put_on\030\001 \001(\010\022\017\n\007role_id\030\002 \001(\003"
    "\022\r\n\005mw_id\030\003 \001(\005\022\025\n\rmw_rank_level\030\004 \001(\005\022\021"
    "\n\tpre_mw_id\030\005 \001(\005\"/\n\rProto80400234\022\014\n\004no"
    "te\030\001 \001(\t\022\020\n\010mover_id\030\002 \001(\005\"%\n\rProto80401"
    "305\022\024\n\014zhuling_open\030\001 \001(\010\"[\n\rProto804002"
    "35\022\022\n\nshow_ai_id\030\001 \001(\003\022\022\n\nhide_ai_id\030\002 \001"
    "(\003\022\024\n\014show_ai_name\030\003 \001(\t\022\014\n\004flag\030\004 \001(\005\"B"
    "\n\rProto80400924\022\017\n\007role_id\030\001 \001(\003\022\r\n\005stat"
    "e\030\002 \001(\005\022\021\n\trole_name\030\003 \001(\t\"!\n\rProto10400"
    "937\022\020\n\010mover_id\030\001 \001(\003\"2\n\rProto80400925\022\017"
    "\n\007role_id\030\001 \001(\003\022\020\n\010last_sec\030\002 \001(\005\"<\n\rPro"
    "to11400522\022\014\n\004type\030\001 \001(\005\022\r\n\005beast\030\002 \001(\003\022"
    "\016\n\006amount\030\003 \001(\005\"m\n\rProto51400522\022\025\n\rconb"
    "ine_value\030\001 \001(\005\022\023\n\013total_value\030\002 \001(\005\022\017\n\007"
    "ability\030\003 \001(\005\022\020\n\010beast_id\030\004 \001(\003\022\r\n\005force"
    "\030\005 \001(\005\".\n\rProto11400523\022\r\n\005beast\030\001 \001(\003\022\016"
    "\n\006action\030\002 \001(\005\"\036\n\rProto11400524\022\r\n\005beast"
    "\030\001 \001(\003\"2\n\rProto11400504\022\020\n\010beast_id\030\001 \001("
    "\003\022\017\n\007item_id\030\002 \001(\005\"C\n\rProto11400509\022\020\n\010b"
    "east_id\030\001 \001(\003\022\016\n\006action\030\002 \001(\005\022\020\n\010skill_i"
    "d\030\003 \001(\005\"\036\n\rProto11400510\022\r\n\005acton\030\001 \001(\005\""
    "d\n\rProto51400510\022\r\n\005lucky\030\001 \001(\005\022\025\n\rskill"
    "_book_id\030\002 \003(\005\022\030\n\020skill_book_index\030\003 \003(\005"
    "\022\023\n\013total_lucky\030\004 \001(\005\"$\n\rProto11400511\022\023"
    "\n\013skill_index\030\001 \001(\005\";\n\rProto11400512\022\025\n\r"
    "skill_book_id\030\001 \001(\005\022\023\n\013material_id\030\002 \003(\005"
    "\"&\n\rProto51400512\022\025\n\rskill_book_id\030\001 \001(\005"
    "\"3\n\rProto51400513\022\r\n\005lucky\030\001 \001(\005\022\023\n\013tota"
    "l_lucky\030\002 \001(\005\"!\n\rProto51400504\022\020\n\010skill_"
    "id\030\001 \001(\005\"p\n\rProto80400383\022\023\n\013attack_name"
    "\030\001 \001(\t\022\021\n\tattack_id\030\002 \001(\003\022\025\n\rattack_care"
    "er\030\003 \001(\005\022\017\n\007pixel_x\030\004 \001(\005\022\017\n\007pixel_y\030\005 \001"
    "(\005\"\033\n\rProto81401202\022\n\n\002qq\030\001 \001(\003\"g\n\rProto"
    "80400116\022\017\n\007chat_ip\030\001 \001(\t\022\021\n\tchat_port\030\002"
    " \001(\005\022#\n\014session_info\030\003 \001(\0132\r.ProtoSessio"
    "n\022\r\n\005state\030\004 \001(\005\"\"\n\rProto10100160\022\021\n\ttar"
    "get_id\030\001 \001(\003\"\300\001\n\rProto50100163\022\022\n\ngive_t"
    "imes\030\001 \001(\005\022\030\n\020total_give_times\030\002 \001(\005\022\021\n\t"
    "get_times\030\003 \001(\005\022\027\n\017total_get_times\030\004 \001(\005"
    "\022\025\n\rcan_get_times\030\005 \001(\005\022\026\n\016total_strengt"
    "h\030\006 \001(\005\022\024\n\014cur_strength\030\007 \001(\005\022\020\n\010vip_buy"
    "s\030\010 \001(\005\"\035\n\rProto10100161\022\014\n\004type\030\001 \001(\005\"c"
    "\n\rProto80400926\022\021\n\tleft_boss\030\001 \001(\005\022\024\n\014le"
    "ft_monster\030\002 \001(\005\022\022\n\ntotal_boss\030\003 \001(\005\022\025\n\r"
    "total_monster\030\004 \001(\005\"\036\n\rProto11400657\022\r\n\005"
    "index\030\001 \001(\005\"5\n\rProto51400657\022\022\n\nfashion_"
    "id\030\001 \003(\005\022\020\n\010is_owner\030\002 \003(\005\"#\n\rProto11400"
    "658\022\022\n\nfashion_id\030\001 \001(\005\"\"\n\rProto10100162"
    "\022\021\n\tone_mount\030\001 \001(\005\"F\n\rProto81400911\022\'\n\013"
    "record_list\030\001 \003(\0132\022.ProtoDivineRecord\022\014\n"
    "\004type\030\002 \001(\005\"-\n\rProto10101802\022\r\n\005type1\030\001 "
    "\001(\005\022\r\n\005type2\030\002 \001(\005\"\250\001\n\rProto50101801\022\021\n\t"
    "left_time\030\001 \001(\005\022\035\n\titem_list\030\002 \003(\0132\n.Pro"
    "toItem\022\022\n\nstart_tick\030\003 \001(\003\022\020\n\010end_tick\030\004"
    " \001(\003\022\021\n\tleft_tick\030\005 \001(\003\022\014\n\004type\030\006 \001(\005\022\014\n"
    "\004cost\030\007 \003(\005\022\020\n\010baseline\030\010 \001(\005\"Y\n\rProto50"
    "101802\022\r\n\005type1\030\001 \001(\005\022\r\n\005type2\030\002 \001(\005\022\027\n\017"
    "item_index_list\030\003 \003(\005\022\021\n\tleft_time\030\004 \001(\005"
    "\"\035\n\rProto10101801\022\014\n\004type\030\001 \001(\005\"\036\n\rProto"
    "81400912\022\r\n\005state\030\001 \003(\005\"D\n\rProto51401462"
    "\022\035\n\titem_list\030\001 \003(\0132\n.ProtoItem\022\024\n\014downl"
    "oad_url\030\002 \001(\t\"#\n\rProto81401902\022\022\n\nhidden"
    "_set\030\001 \003(\005", 3250);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient014.proto", &protobuf_RegisterTypes);
  Proto81401706::default_instance_ = new Proto81401706();
  Proto11400349::default_instance_ = new Proto11400349();
  Proto51402501::default_instance_ = new Proto51402501();
  Proto11402502::default_instance_ = new Proto11402502();
  Proto51402502::default_instance_ = new Proto51402502();
  Proto11402503::default_instance_ = new Proto11402503();
  Proto51402503::default_instance_ = new Proto51402503();
  Proto11402504::default_instance_ = new Proto11402504();
  Proto51402504::default_instance_ = new Proto51402504();
  Proto11402505::default_instance_ = new Proto11402505();
  Proto10006::default_instance_ = new Proto10006();
  Proto51402505::default_instance_ = new Proto51402505();
  Proto80400234::default_instance_ = new Proto80400234();
  Proto80401305::default_instance_ = new Proto80401305();
  Proto80400235::default_instance_ = new Proto80400235();
  Proto80400924::default_instance_ = new Proto80400924();
  Proto10400937::default_instance_ = new Proto10400937();
  Proto80400925::default_instance_ = new Proto80400925();
  Proto11400522::default_instance_ = new Proto11400522();
  Proto51400522::default_instance_ = new Proto51400522();
  Proto11400523::default_instance_ = new Proto11400523();
  Proto11400524::default_instance_ = new Proto11400524();
  Proto11400504::default_instance_ = new Proto11400504();
  Proto11400509::default_instance_ = new Proto11400509();
  Proto11400510::default_instance_ = new Proto11400510();
  Proto51400510::default_instance_ = new Proto51400510();
  Proto11400511::default_instance_ = new Proto11400511();
  Proto11400512::default_instance_ = new Proto11400512();
  Proto51400512::default_instance_ = new Proto51400512();
  Proto51400513::default_instance_ = new Proto51400513();
  Proto51400504::default_instance_ = new Proto51400504();
  Proto80400383::default_instance_ = new Proto80400383();
  Proto81401202::default_instance_ = new Proto81401202();
  Proto80400116::default_instance_ = new Proto80400116();
  Proto10100160::default_instance_ = new Proto10100160();
  Proto50100163::default_instance_ = new Proto50100163();
  Proto10100161::default_instance_ = new Proto10100161();
  Proto80400926::default_instance_ = new Proto80400926();
  Proto11400657::default_instance_ = new Proto11400657();
  Proto51400657::default_instance_ = new Proto51400657();
  Proto11400658::default_instance_ = new Proto11400658();
  Proto10100162::default_instance_ = new Proto10100162();
  Proto81400911::default_instance_ = new Proto81400911();
  Proto10101802::default_instance_ = new Proto10101802();
  Proto50101801::default_instance_ = new Proto50101801();
  Proto50101802::default_instance_ = new Proto50101802();
  Proto10101801::default_instance_ = new Proto10101801();
  Proto81400912::default_instance_ = new Proto81400912();
  Proto51401462::default_instance_ = new Proto51401462();
  Proto81401902::default_instance_ = new Proto81401902();
  Proto81401706::default_instance_->InitAsDefaultInstance();
  Proto11400349::default_instance_->InitAsDefaultInstance();
  Proto51402501::default_instance_->InitAsDefaultInstance();
  Proto11402502::default_instance_->InitAsDefaultInstance();
  Proto51402502::default_instance_->InitAsDefaultInstance();
  Proto11402503::default_instance_->InitAsDefaultInstance();
  Proto51402503::default_instance_->InitAsDefaultInstance();
  Proto11402504::default_instance_->InitAsDefaultInstance();
  Proto51402504::default_instance_->InitAsDefaultInstance();
  Proto11402505::default_instance_->InitAsDefaultInstance();
  Proto10006::default_instance_->InitAsDefaultInstance();
  Proto51402505::default_instance_->InitAsDefaultInstance();
  Proto80400234::default_instance_->InitAsDefaultInstance();
  Proto80401305::default_instance_->InitAsDefaultInstance();
  Proto80400235::default_instance_->InitAsDefaultInstance();
  Proto80400924::default_instance_->InitAsDefaultInstance();
  Proto10400937::default_instance_->InitAsDefaultInstance();
  Proto80400925::default_instance_->InitAsDefaultInstance();
  Proto11400522::default_instance_->InitAsDefaultInstance();
  Proto51400522::default_instance_->InitAsDefaultInstance();
  Proto11400523::default_instance_->InitAsDefaultInstance();
  Proto11400524::default_instance_->InitAsDefaultInstance();
  Proto11400504::default_instance_->InitAsDefaultInstance();
  Proto11400509::default_instance_->InitAsDefaultInstance();
  Proto11400510::default_instance_->InitAsDefaultInstance();
  Proto51400510::default_instance_->InitAsDefaultInstance();
  Proto11400511::default_instance_->InitAsDefaultInstance();
  Proto11400512::default_instance_->InitAsDefaultInstance();
  Proto51400512::default_instance_->InitAsDefaultInstance();
  Proto51400513::default_instance_->InitAsDefaultInstance();
  Proto51400504::default_instance_->InitAsDefaultInstance();
  Proto80400383::default_instance_->InitAsDefaultInstance();
  Proto81401202::default_instance_->InitAsDefaultInstance();
  Proto80400116::default_instance_->InitAsDefaultInstance();
  Proto10100160::default_instance_->InitAsDefaultInstance();
  Proto50100163::default_instance_->InitAsDefaultInstance();
  Proto10100161::default_instance_->InitAsDefaultInstance();
  Proto80400926::default_instance_->InitAsDefaultInstance();
  Proto11400657::default_instance_->InitAsDefaultInstance();
  Proto51400657::default_instance_->InitAsDefaultInstance();
  Proto11400658::default_instance_->InitAsDefaultInstance();
  Proto10100162::default_instance_->InitAsDefaultInstance();
  Proto81400911::default_instance_->InitAsDefaultInstance();
  Proto10101802::default_instance_->InitAsDefaultInstance();
  Proto50101801::default_instance_->InitAsDefaultInstance();
  Proto50101802::default_instance_->InitAsDefaultInstance();
  Proto10101801::default_instance_->InitAsDefaultInstance();
  Proto81400912::default_instance_->InitAsDefaultInstance();
  Proto51401462::default_instance_->InitAsDefaultInstance();
  Proto81401902::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient014_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient014_2eproto {
  StaticDescriptorInitializer_ProtoClient014_2eproto() {
    protobuf_AddDesc_ProtoClient014_2eproto();
  }
} static_descriptor_initializer_ProtoClient014_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto81401706::kTicksFieldNumber;
#endif  // !_MSC_VER

Proto81401706::Proto81401706()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401706::InitAsDefaultInstance() {
}

Proto81401706::Proto81401706(const Proto81401706& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401706::SharedCtor() {
  _cached_size_ = 0;
  ticks_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401706::~Proto81401706() {
  SharedDtor();
}

void Proto81401706::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401706::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401706::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401706_descriptor_;
}

const Proto81401706& Proto81401706::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto81401706* Proto81401706::default_instance_ = NULL;

Proto81401706* Proto81401706::New() const {
  return new Proto81401706;
}

void Proto81401706::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ticks_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401706::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ticks = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ticks_)));
          set_has_ticks();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401706::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 ticks = 1;
  if (has_ticks()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ticks(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401706::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 ticks = 1;
  if (has_ticks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ticks(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401706::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 ticks = 1;
    if (has_ticks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ticks());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401706::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401706* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401706*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401706::MergeFrom(const Proto81401706& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ticks()) {
      set_ticks(from.ticks());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401706::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401706::CopyFrom(const Proto81401706& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401706::IsInitialized() const {
  
  return true;
}

void Proto81401706::Swap(Proto81401706* other) {
  if (other != this) {
    std::swap(ticks_, other->ticks_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401706::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401706_descriptor_;
  metadata.reflection = Proto81401706_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400349::kTaskIdFieldNumber;
#endif  // !_MSC_VER

Proto11400349::Proto11400349()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400349::InitAsDefaultInstance() {
}

Proto11400349::Proto11400349(const Proto11400349& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400349::SharedCtor() {
  _cached_size_ = 0;
  task_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400349::~Proto11400349() {
  SharedDtor();
}

void Proto11400349::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400349::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400349::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400349_descriptor_;
}

const Proto11400349& Proto11400349::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto11400349* Proto11400349::default_instance_ = NULL;

Proto11400349* Proto11400349::New() const {
  return new Proto11400349;
}

void Proto11400349::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    task_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400349::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 task_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
          set_has_task_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400349::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->task_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400349::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->task_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400349::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 task_id = 1;
    if (has_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400349::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400349* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400349*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400349::MergeFrom(const Proto11400349& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_task_id()) {
      set_task_id(from.task_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400349::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400349::CopyFrom(const Proto11400349& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400349::IsInitialized() const {
  
  return true;
}

void Proto11400349::Swap(Proto11400349* other) {
  if (other != this) {
    std::swap(task_id_, other->task_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400349::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400349_descriptor_;
  metadata.reflection = Proto11400349_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51402501::kAdornIdFieldNumber;
const int Proto51402501::kMwListFieldNumber;
const int Proto51402501::kReikiNumFieldNumber;
#endif  // !_MSC_VER

Proto51402501::Proto51402501()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51402501::InitAsDefaultInstance() {
}

Proto51402501::Proto51402501(const Proto51402501& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51402501::SharedCtor() {
  _cached_size_ = 0;
  adorn_id_ = 0;
  reiki_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51402501::~Proto51402501() {
  SharedDtor();
}

void Proto51402501::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51402501::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51402501::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51402501_descriptor_;
}

const Proto51402501& Proto51402501::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto51402501* Proto51402501::default_instance_ = NULL;

Proto51402501* Proto51402501::New() const {
  return new Proto51402501;
}

void Proto51402501::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    adorn_id_ = 0;
    reiki_num_ = 0;
  }
  mw_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51402501::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 adorn_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adorn_id_)));
          set_has_adorn_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mw_list;
        break;
      }
      
      // repeated .ProtoMagicWeapon mw_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mw_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mw_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mw_list;
        if (input->ExpectTag(24)) goto parse_reiki_num;
        break;
      }
      
      // optional int32 reiki_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reiki_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reiki_num_)));
          set_has_reiki_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51402501::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 adorn_id = 1;
  if (has_adorn_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->adorn_id(), output);
  }
  
  // repeated .ProtoMagicWeapon mw_list = 2;
  for (int i = 0; i < this->mw_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mw_list(i), output);
  }
  
  // optional int32 reiki_num = 3;
  if (has_reiki_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->reiki_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51402501::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 adorn_id = 1;
  if (has_adorn_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->adorn_id(), target);
  }
  
  // repeated .ProtoMagicWeapon mw_list = 2;
  for (int i = 0; i < this->mw_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->mw_list(i), target);
  }
  
  // optional int32 reiki_num = 3;
  if (has_reiki_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->reiki_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51402501::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 adorn_id = 1;
    if (has_adorn_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->adorn_id());
    }
    
    // optional int32 reiki_num = 3;
    if (has_reiki_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reiki_num());
    }
    
  }
  // repeated .ProtoMagicWeapon mw_list = 2;
  total_size += 1 * this->mw_list_size();
  for (int i = 0; i < this->mw_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mw_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51402501::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51402501* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51402501*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51402501::MergeFrom(const Proto51402501& from) {
  GOOGLE_CHECK_NE(&from, this);
  mw_list_.MergeFrom(from.mw_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_adorn_id()) {
      set_adorn_id(from.adorn_id());
    }
    if (from.has_reiki_num()) {
      set_reiki_num(from.reiki_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51402501::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51402501::CopyFrom(const Proto51402501& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51402501::IsInitialized() const {
  
  return true;
}

void Proto51402501::Swap(Proto51402501* other) {
  if (other != this) {
    std::swap(adorn_id_, other->adorn_id_);
    mw_list_.Swap(&other->mw_list_);
    std::swap(reiki_num_, other->reiki_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51402501::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51402501_descriptor_;
  metadata.reflection = Proto51402501_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11402502::kMagicweaponIdFieldNumber;
#endif  // !_MSC_VER

Proto11402502::Proto11402502()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11402502::InitAsDefaultInstance() {
}

Proto11402502::Proto11402502(const Proto11402502& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11402502::SharedCtor() {
  _cached_size_ = 0;
  magicweapon_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11402502::~Proto11402502() {
  SharedDtor();
}

void Proto11402502::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11402502::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11402502::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11402502_descriptor_;
}

const Proto11402502& Proto11402502::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto11402502* Proto11402502::default_instance_ = NULL;

Proto11402502* Proto11402502::New() const {
  return new Proto11402502;
}

void Proto11402502::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    magicweapon_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11402502::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 magicweapon_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magicweapon_id_)));
          set_has_magicweapon_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11402502::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 magicweapon_id = 1;
  if (has_magicweapon_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->magicweapon_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11402502::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 magicweapon_id = 1;
  if (has_magicweapon_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->magicweapon_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11402502::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 magicweapon_id = 1;
    if (has_magicweapon_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->magicweapon_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11402502::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11402502* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11402502*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11402502::MergeFrom(const Proto11402502& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_magicweapon_id()) {
      set_magicweapon_id(from.magicweapon_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11402502::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11402502::CopyFrom(const Proto11402502& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11402502::IsInitialized() const {
  
  return true;
}

void Proto11402502::Swap(Proto11402502* other) {
  if (other != this) {
    std::swap(magicweapon_id_, other->magicweapon_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11402502::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11402502_descriptor_;
  metadata.reflection = Proto11402502_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51402502::kIsActiveFieldNumber;
const int Proto51402502::kMwCurrIdFieldNumber;
#endif  // !_MSC_VER

Proto51402502::Proto51402502()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51402502::InitAsDefaultInstance() {
  mw_curr_id_ = const_cast< ::ProtoMagicWeapon*>(&::ProtoMagicWeapon::default_instance());
}

Proto51402502::Proto51402502(const Proto51402502& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51402502::SharedCtor() {
  _cached_size_ = 0;
  is_active_ = false;
  mw_curr_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51402502::~Proto51402502() {
  SharedDtor();
}

void Proto51402502::SharedDtor() {
  if (this != default_instance_) {
    delete mw_curr_id_;
  }
}

void Proto51402502::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51402502::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51402502_descriptor_;
}

const Proto51402502& Proto51402502::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto51402502* Proto51402502::default_instance_ = NULL;

Proto51402502* Proto51402502::New() const {
  return new Proto51402502;
}

void Proto51402502::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_active_ = false;
    if (has_mw_curr_id()) {
      if (mw_curr_id_ != NULL) mw_curr_id_->::ProtoMagicWeapon::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51402502::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_active = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_active_)));
          set_has_is_active();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mw_curr_id;
        break;
      }
      
      // optional .ProtoMagicWeapon mw_curr_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mw_curr_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mw_curr_id()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51402502::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool is_active = 1;
  if (has_is_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_active(), output);
  }
  
  // optional .ProtoMagicWeapon mw_curr_id = 2;
  if (has_mw_curr_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mw_curr_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51402502::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool is_active = 1;
  if (has_is_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_active(), target);
  }
  
  // optional .ProtoMagicWeapon mw_curr_id = 2;
  if (has_mw_curr_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->mw_curr_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51402502::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool is_active = 1;
    if (has_is_active()) {
      total_size += 1 + 1;
    }
    
    // optional .ProtoMagicWeapon mw_curr_id = 2;
    if (has_mw_curr_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mw_curr_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51402502::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51402502* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51402502*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51402502::MergeFrom(const Proto51402502& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_active()) {
      set_is_active(from.is_active());
    }
    if (from.has_mw_curr_id()) {
      mutable_mw_curr_id()->::ProtoMagicWeapon::MergeFrom(from.mw_curr_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51402502::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51402502::CopyFrom(const Proto51402502& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51402502::IsInitialized() const {
  
  return true;
}

void Proto51402502::Swap(Proto51402502* other) {
  if (other != this) {
    std::swap(is_active_, other->is_active_);
    std::swap(mw_curr_id_, other->mw_curr_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51402502::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51402502_descriptor_;
  metadata.reflection = Proto51402502_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11402503::kMwIdFieldNumber;
const int Proto11402503::kAutoBuyFieldNumber;
#endif  // !_MSC_VER

Proto11402503::Proto11402503()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11402503::InitAsDefaultInstance() {
}

Proto11402503::Proto11402503(const Proto11402503& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11402503::SharedCtor() {
  _cached_size_ = 0;
  mw_id_ = 0;
  auto_buy_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11402503::~Proto11402503() {
  SharedDtor();
}

void Proto11402503::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11402503::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11402503::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11402503_descriptor_;
}

const Proto11402503& Proto11402503::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto11402503* Proto11402503::default_instance_ = NULL;

Proto11402503* Proto11402503::New() const {
  return new Proto11402503;
}

void Proto11402503::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mw_id_ = 0;
    auto_buy_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11402503::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mw_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mw_id_)));
          set_has_mw_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_auto_buy;
        break;
      }
      
      // optional bool auto_buy = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &auto_buy_)));
          set_has_auto_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11402503::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 mw_id = 1;
  if (has_mw_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mw_id(), output);
  }
  
  // optional bool auto_buy = 2;
  if (has_auto_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->auto_buy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11402503::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 mw_id = 1;
  if (has_mw_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mw_id(), target);
  }
  
  // optional bool auto_buy = 2;
  if (has_auto_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->auto_buy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11402503::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 mw_id = 1;
    if (has_mw_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mw_id());
    }
    
    // optional bool auto_buy = 2;
    if (has_auto_buy()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11402503::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11402503* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11402503*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11402503::MergeFrom(const Proto11402503& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mw_id()) {
      set_mw_id(from.mw_id());
    }
    if (from.has_auto_buy()) {
      set_auto_buy(from.auto_buy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11402503::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11402503::CopyFrom(const Proto11402503& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11402503::IsInitialized() const {
  
  return true;
}

void Proto11402503::Swap(Proto11402503* other) {
  if (other != this) {
    std::swap(mw_id_, other->mw_id_);
    std::swap(auto_buy_, other->auto_buy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11402503::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11402503_descriptor_;
  metadata.reflection = Proto11402503_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51402503::kMwIdFieldNumber;
const int Proto51402503::kRankStarGradeFieldNumber;
const int Proto51402503::kRankStarProgressFieldNumber;
const int Proto51402503::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto51402503::Proto51402503()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51402503::InitAsDefaultInstance() {
}

Proto51402503::Proto51402503(const Proto51402503& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51402503::SharedCtor() {
  _cached_size_ = 0;
  mw_id_ = 0;
  rank_star_grade_ = 0;
  rank_star_progress_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51402503::~Proto51402503() {
  SharedDtor();
}

void Proto51402503::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51402503::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51402503::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51402503_descriptor_;
}

const Proto51402503& Proto51402503::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto51402503* Proto51402503::default_instance_ = NULL;

Proto51402503* Proto51402503::New() const {
  return new Proto51402503;
}

void Proto51402503::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mw_id_ = 0;
    rank_star_grade_ = 0;
    rank_star_progress_ = 0;
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51402503::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mw_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mw_id_)));
          set_has_mw_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_rank_star_grade;
        break;
      }
      
      // optional int32 rank_star_grade = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_star_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_star_grade_)));
          set_has_rank_star_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_rank_star_progress;
        break;
      }
      
      // optional int32 rank_star_progress = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_star_progress:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_star_progress_)));
          set_has_rank_star_progress();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_status;
        break;
      }
      
      // optional int32 status = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51402503::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 mw_id = 1;
  if (has_mw_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mw_id(), output);
  }
  
  // optional int32 rank_star_grade = 2;
  if (has_rank_star_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rank_star_grade(), output);
  }
  
  // optional int32 rank_star_progress = 3;
  if (has_rank_star_progress()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rank_star_progress(), output);
  }
  
  // optional int32 status = 4;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51402503::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 mw_id = 1;
  if (has_mw_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mw_id(), target);
  }
  
  // optional int32 rank_star_grade = 2;
  if (has_rank_star_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rank_star_grade(), target);
  }
  
  // optional int32 rank_star_progress = 3;
  if (has_rank_star_progress()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rank_star_progress(), target);
  }
  
  // optional int32 status = 4;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51402503::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 mw_id = 1;
    if (has_mw_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mw_id());
    }
    
    // optional int32 rank_star_grade = 2;
    if (has_rank_star_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_star_grade());
    }
    
    // optional int32 rank_star_progress = 3;
    if (has_rank_star_progress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_star_progress());
    }
    
    // optional int32 status = 4;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51402503::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51402503* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51402503*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51402503::MergeFrom(const Proto51402503& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mw_id()) {
      set_mw_id(from.mw_id());
    }
    if (from.has_rank_star_grade()) {
      set_rank_star_grade(from.rank_star_grade());
    }
    if (from.has_rank_star_progress()) {
      set_rank_star_progress(from.rank_star_progress());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51402503::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51402503::CopyFrom(const Proto51402503& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51402503::IsInitialized() const {
  
  return true;
}

void Proto51402503::Swap(Proto51402503* other) {
  if (other != this) {
    std::swap(mw_id_, other->mw_id_);
    std::swap(rank_star_grade_, other->rank_star_grade_);
    std::swap(rank_star_progress_, other->rank_star_progress_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51402503::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51402503_descriptor_;
  metadata.reflection = Proto51402503_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11402504::kMwIdFieldNumber;
const int Proto11402504::kAutoBuyFieldNumber;
#endif  // !_MSC_VER

Proto11402504::Proto11402504()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11402504::InitAsDefaultInstance() {
}

Proto11402504::Proto11402504(const Proto11402504& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11402504::SharedCtor() {
  _cached_size_ = 0;
  mw_id_ = 0;
  auto_buy_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11402504::~Proto11402504() {
  SharedDtor();
}

void Proto11402504::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11402504::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11402504::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11402504_descriptor_;
}

const Proto11402504& Proto11402504::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto11402504* Proto11402504::default_instance_ = NULL;

Proto11402504* Proto11402504::New() const {
  return new Proto11402504;
}

void Proto11402504::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mw_id_ = 0;
    auto_buy_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11402504::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mw_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mw_id_)));
          set_has_mw_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_auto_buy;
        break;
      }
      
      // optional bool auto_buy = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &auto_buy_)));
          set_has_auto_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11402504::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 mw_id = 1;
  if (has_mw_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mw_id(), output);
  }
  
  // optional bool auto_buy = 2;
  if (has_auto_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->auto_buy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11402504::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 mw_id = 1;
  if (has_mw_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mw_id(), target);
  }
  
  // optional bool auto_buy = 2;
  if (has_auto_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->auto_buy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11402504::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 mw_id = 1;
    if (has_mw_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mw_id());
    }
    
    // optional bool auto_buy = 2;
    if (has_auto_buy()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11402504::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11402504* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11402504*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11402504::MergeFrom(const Proto11402504& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mw_id()) {
      set_mw_id(from.mw_id());
    }
    if (from.has_auto_buy()) {
      set_auto_buy(from.auto_buy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11402504::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11402504::CopyFrom(const Proto11402504& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11402504::IsInitialized() const {
  
  return true;
}

void Proto11402504::Swap(Proto11402504* other) {
  if (other != this) {
    std::swap(mw_id_, other->mw_id_);
    std::swap(auto_buy_, other->auto_buy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11402504::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11402504_descriptor_;
  metadata.reflection = Proto11402504_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51402504::kMwIdFieldNumber;
const int Proto51402504::kQuaStarGradeFieldNumber;
const int Proto51402504::kQuaStarProgressFieldNumber;
const int Proto51402504::kSkillIdFieldNumber;
const int Proto51402504::kSkillLevelFieldNumber;
#endif  // !_MSC_VER

Proto51402504::Proto51402504()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51402504::InitAsDefaultInstance() {
}

Proto51402504::Proto51402504(const Proto51402504& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51402504::SharedCtor() {
  _cached_size_ = 0;
  mw_id_ = 0;
  qua_star_grade_ = 0;
  qua_star_progress_ = 0;
  skill_id_ = 0;
  skill_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51402504::~Proto51402504() {
  SharedDtor();
}

void Proto51402504::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51402504::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51402504::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51402504_descriptor_;
}

const Proto51402504& Proto51402504::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto51402504* Proto51402504::default_instance_ = NULL;

Proto51402504* Proto51402504::New() const {
  return new Proto51402504;
}

void Proto51402504::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mw_id_ = 0;
    qua_star_grade_ = 0;
    qua_star_progress_ = 0;
    skill_id_ = 0;
    skill_level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51402504::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mw_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mw_id_)));
          set_has_mw_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_qua_star_grade;
        break;
      }
      
      // optional int32 qua_star_grade = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qua_star_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qua_star_grade_)));
          set_has_qua_star_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_qua_star_progress;
        break;
      }
      
      // optional int32 qua_star_progress = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qua_star_progress:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qua_star_progress_)));
          set_has_qua_star_progress();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_skill_id;
        break;
      }
      
      // optional int32 skill_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_skill_level;
        break;
      }
      
      // optional int32 skill_level = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_level_)));
          set_has_skill_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51402504::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 mw_id = 1;
  if (has_mw_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mw_id(), output);
  }
  
  // optional int32 qua_star_grade = 2;
  if (has_qua_star_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->qua_star_grade(), output);
  }
  
  // optional int32 qua_star_progress = 3;
  if (has_qua_star_progress()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->qua_star_progress(), output);
  }
  
  // optional int32 skill_id = 4;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->skill_id(), output);
  }
  
  // optional int32 skill_level = 5;
  if (has_skill_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->skill_level(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51402504::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 mw_id = 1;
  if (has_mw_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mw_id(), target);
  }
  
  // optional int32 qua_star_grade = 2;
  if (has_qua_star_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->qua_star_grade(), target);
  }
  
  // optional int32 qua_star_progress = 3;
  if (has_qua_star_progress()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->qua_star_progress(), target);
  }
  
  // optional int32 skill_id = 4;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->skill_id(), target);
  }
  
  // optional int32 skill_level = 5;
  if (has_skill_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->skill_level(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51402504::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 mw_id = 1;
    if (has_mw_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mw_id());
    }
    
    // optional int32 qua_star_grade = 2;
    if (has_qua_star_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qua_star_grade());
    }
    
    // optional int32 qua_star_progress = 3;
    if (has_qua_star_progress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qua_star_progress());
    }
    
    // optional int32 skill_id = 4;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
    // optional int32 skill_level = 5;
    if (has_skill_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_level());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51402504::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51402504* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51402504*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51402504::MergeFrom(const Proto51402504& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mw_id()) {
      set_mw_id(from.mw_id());
    }
    if (from.has_qua_star_grade()) {
      set_qua_star_grade(from.qua_star_grade());
    }
    if (from.has_qua_star_progress()) {
      set_qua_star_progress(from.qua_star_progress());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_skill_level()) {
      set_skill_level(from.skill_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51402504::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51402504::CopyFrom(const Proto51402504& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51402504::IsInitialized() const {
  
  return true;
}

void Proto51402504::Swap(Proto51402504* other) {
  if (other != this) {
    std::swap(mw_id_, other->mw_id_);
    std::swap(qua_star_grade_, other->qua_star_grade_);
    std::swap(qua_star_progress_, other->qua_star_progress_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(skill_level_, other->skill_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51402504::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51402504_descriptor_;
  metadata.reflection = Proto51402504_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11402505::kMwIdFieldNumber;
const int Proto11402505::kPutOnFieldNumber;
#endif  // !_MSC_VER

Proto11402505::Proto11402505()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11402505::InitAsDefaultInstance() {
}

Proto11402505::Proto11402505(const Proto11402505& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11402505::SharedCtor() {
  _cached_size_ = 0;
  mw_id_ = 0;
  put_on_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11402505::~Proto11402505() {
  SharedDtor();
}

void Proto11402505::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11402505::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11402505::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11402505_descriptor_;
}

const Proto11402505& Proto11402505::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto11402505* Proto11402505::default_instance_ = NULL;

Proto11402505* Proto11402505::New() const {
  return new Proto11402505;
}

void Proto11402505::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mw_id_ = 0;
    put_on_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11402505::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mw_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mw_id_)));
          set_has_mw_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_put_on;
        break;
      }
      
      // optional bool put_on = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_put_on:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &put_on_)));
          set_has_put_on();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11402505::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 mw_id = 1;
  if (has_mw_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mw_id(), output);
  }
  
  // optional bool put_on = 2;
  if (has_put_on()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->put_on(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11402505::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 mw_id = 1;
  if (has_mw_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mw_id(), target);
  }
  
  // optional bool put_on = 2;
  if (has_put_on()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->put_on(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11402505::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 mw_id = 1;
    if (has_mw_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mw_id());
    }
    
    // optional bool put_on = 2;
    if (has_put_on()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11402505::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11402505* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11402505*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11402505::MergeFrom(const Proto11402505& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mw_id()) {
      set_mw_id(from.mw_id());
    }
    if (from.has_put_on()) {
      set_put_on(from.put_on());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11402505::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11402505::CopyFrom(const Proto11402505& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11402505::IsInitialized() const {
  
  return true;
}

void Proto11402505::Swap(Proto11402505* other) {
  if (other != this) {
    std::swap(mw_id_, other->mw_id_);
    std::swap(put_on_, other->put_on_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11402505::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11402505_descriptor_;
  metadata.reflection = Proto11402505_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10006::kSceneIdFieldNumber;
const int Proto10006::kPixelXFieldNumber;
const int Proto10006::kPixelYFieldNumber;
#endif  // !_MSC_VER

Proto10006::Proto10006()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10006::InitAsDefaultInstance() {
}

Proto10006::Proto10006(const Proto10006& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10006::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10006::~Proto10006() {
  SharedDtor();
}

void Proto10006::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10006::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10006::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10006_descriptor_;
}

const Proto10006& Proto10006::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto10006* Proto10006::default_instance_ = NULL;

Proto10006* Proto10006::New() const {
  return new Proto10006;
}

void Proto10006::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10006::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10006::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10006::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10006::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 pixel_x = 2;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 3;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10006::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10006* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10006*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10006::MergeFrom(const Proto10006& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10006::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10006::CopyFrom(const Proto10006& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10006::IsInitialized() const {
  
  return true;
}

void Proto10006::Swap(Proto10006* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10006::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10006_descriptor_;
  metadata.reflection = Proto10006_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51402505::kPutOnFieldNumber;
const int Proto51402505::kRoleIdFieldNumber;
const int Proto51402505::kMwIdFieldNumber;
const int Proto51402505::kMwRankLevelFieldNumber;
const int Proto51402505::kPreMwIdFieldNumber;
#endif  // !_MSC_VER

Proto51402505::Proto51402505()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51402505::InitAsDefaultInstance() {
}

Proto51402505::Proto51402505(const Proto51402505& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51402505::SharedCtor() {
  _cached_size_ = 0;
  put_on_ = false;
  role_id_ = GOOGLE_LONGLONG(0);
  mw_id_ = 0;
  mw_rank_level_ = 0;
  pre_mw_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51402505::~Proto51402505() {
  SharedDtor();
}

void Proto51402505::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51402505::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51402505::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51402505_descriptor_;
}

const Proto51402505& Proto51402505::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto51402505* Proto51402505::default_instance_ = NULL;

Proto51402505* Proto51402505::New() const {
  return new Proto51402505;
}

void Proto51402505::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    put_on_ = false;
    role_id_ = GOOGLE_LONGLONG(0);
    mw_id_ = 0;
    mw_rank_level_ = 0;
    pre_mw_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51402505::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool put_on = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &put_on_)));
          set_has_put_on();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_mw_id;
        break;
      }
      
      // optional int32 mw_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mw_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mw_id_)));
          set_has_mw_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_mw_rank_level;
        break;
      }
      
      // optional int32 mw_rank_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mw_rank_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mw_rank_level_)));
          set_has_mw_rank_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_pre_mw_id;
        break;
      }
      
      // optional int32 pre_mw_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pre_mw_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pre_mw_id_)));
          set_has_pre_mw_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51402505::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool put_on = 1;
  if (has_put_on()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->put_on(), output);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->role_id(), output);
  }
  
  // optional int32 mw_id = 3;
  if (has_mw_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mw_id(), output);
  }
  
  // optional int32 mw_rank_level = 4;
  if (has_mw_rank_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mw_rank_level(), output);
  }
  
  // optional int32 pre_mw_id = 5;
  if (has_pre_mw_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pre_mw_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51402505::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool put_on = 1;
  if (has_put_on()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->put_on(), target);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->role_id(), target);
  }
  
  // optional int32 mw_id = 3;
  if (has_mw_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mw_id(), target);
  }
  
  // optional int32 mw_rank_level = 4;
  if (has_mw_rank_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mw_rank_level(), target);
  }
  
  // optional int32 pre_mw_id = 5;
  if (has_pre_mw_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pre_mw_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51402505::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool put_on = 1;
    if (has_put_on()) {
      total_size += 1 + 1;
    }
    
    // optional int64 role_id = 2;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 mw_id = 3;
    if (has_mw_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mw_id());
    }
    
    // optional int32 mw_rank_level = 4;
    if (has_mw_rank_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mw_rank_level());
    }
    
    // optional int32 pre_mw_id = 5;
    if (has_pre_mw_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pre_mw_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51402505::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51402505* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51402505*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51402505::MergeFrom(const Proto51402505& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_put_on()) {
      set_put_on(from.put_on());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_mw_id()) {
      set_mw_id(from.mw_id());
    }
    if (from.has_mw_rank_level()) {
      set_mw_rank_level(from.mw_rank_level());
    }
    if (from.has_pre_mw_id()) {
      set_pre_mw_id(from.pre_mw_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51402505::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51402505::CopyFrom(const Proto51402505& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51402505::IsInitialized() const {
  
  return true;
}

void Proto51402505::Swap(Proto51402505* other) {
  if (other != this) {
    std::swap(put_on_, other->put_on_);
    std::swap(role_id_, other->role_id_);
    std::swap(mw_id_, other->mw_id_);
    std::swap(mw_rank_level_, other->mw_rank_level_);
    std::swap(pre_mw_id_, other->pre_mw_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51402505::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51402505_descriptor_;
  metadata.reflection = Proto51402505_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400234::kNoteFieldNumber;
const int Proto80400234::kMoverIdFieldNumber;
#endif  // !_MSC_VER

Proto80400234::Proto80400234()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400234::InitAsDefaultInstance() {
}

Proto80400234::Proto80400234(const Proto80400234& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400234::SharedCtor() {
  _cached_size_ = 0;
  note_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mover_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400234::~Proto80400234() {
  SharedDtor();
}

void Proto80400234::SharedDtor() {
  if (note_ != &::google::protobuf::internal::kEmptyString) {
    delete note_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400234::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400234::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400234_descriptor_;
}

const Proto80400234& Proto80400234::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto80400234* Proto80400234::default_instance_ = NULL;

Proto80400234* Proto80400234::New() const {
  return new Proto80400234;
}

void Proto80400234::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_note()) {
      if (note_ != &::google::protobuf::internal::kEmptyString) {
        note_->clear();
      }
    }
    mover_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400234::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string note = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_note()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->note().data(), this->note().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_mover_id;
        break;
      }
      
      // optional int32 mover_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mover_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mover_id_)));
          set_has_mover_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400234::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string note = 1;
  if (has_note()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->note().data(), this->note().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->note(), output);
  }
  
  // optional int32 mover_id = 2;
  if (has_mover_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mover_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400234::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string note = 1;
  if (has_note()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->note().data(), this->note().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->note(), target);
  }
  
  // optional int32 mover_id = 2;
  if (has_mover_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mover_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400234::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string note = 1;
    if (has_note()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->note());
    }
    
    // optional int32 mover_id = 2;
    if (has_mover_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mover_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400234::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400234* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400234*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400234::MergeFrom(const Proto80400234& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_note()) {
      set_note(from.note());
    }
    if (from.has_mover_id()) {
      set_mover_id(from.mover_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400234::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400234::CopyFrom(const Proto80400234& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400234::IsInitialized() const {
  
  return true;
}

void Proto80400234::Swap(Proto80400234* other) {
  if (other != this) {
    std::swap(note_, other->note_);
    std::swap(mover_id_, other->mover_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400234::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400234_descriptor_;
  metadata.reflection = Proto80400234_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80401305::kZhulingOpenFieldNumber;
#endif  // !_MSC_VER

Proto80401305::Proto80401305()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80401305::InitAsDefaultInstance() {
}

Proto80401305::Proto80401305(const Proto80401305& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80401305::SharedCtor() {
  _cached_size_ = 0;
  zhuling_open_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80401305::~Proto80401305() {
  SharedDtor();
}

void Proto80401305::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80401305::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80401305::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80401305_descriptor_;
}

const Proto80401305& Proto80401305::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto80401305* Proto80401305::default_instance_ = NULL;

Proto80401305* Proto80401305::New() const {
  return new Proto80401305;
}

void Proto80401305::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    zhuling_open_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80401305::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool zhuling_open = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &zhuling_open_)));
          set_has_zhuling_open();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80401305::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool zhuling_open = 1;
  if (has_zhuling_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->zhuling_open(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80401305::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool zhuling_open = 1;
  if (has_zhuling_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->zhuling_open(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80401305::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool zhuling_open = 1;
    if (has_zhuling_open()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80401305::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80401305* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80401305*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80401305::MergeFrom(const Proto80401305& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_zhuling_open()) {
      set_zhuling_open(from.zhuling_open());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80401305::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80401305::CopyFrom(const Proto80401305& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80401305::IsInitialized() const {
  
  return true;
}

void Proto80401305::Swap(Proto80401305* other) {
  if (other != this) {
    std::swap(zhuling_open_, other->zhuling_open_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80401305::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80401305_descriptor_;
  metadata.reflection = Proto80401305_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400235::kShowAiIdFieldNumber;
const int Proto80400235::kHideAiIdFieldNumber;
const int Proto80400235::kShowAiNameFieldNumber;
const int Proto80400235::kFlagFieldNumber;
#endif  // !_MSC_VER

Proto80400235::Proto80400235()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400235::InitAsDefaultInstance() {
}

Proto80400235::Proto80400235(const Proto80400235& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400235::SharedCtor() {
  _cached_size_ = 0;
  show_ai_id_ = GOOGLE_LONGLONG(0);
  hide_ai_id_ = GOOGLE_LONGLONG(0);
  show_ai_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400235::~Proto80400235() {
  SharedDtor();
}

void Proto80400235::SharedDtor() {
  if (show_ai_name_ != &::google::protobuf::internal::kEmptyString) {
    delete show_ai_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400235::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400235::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400235_descriptor_;
}

const Proto80400235& Proto80400235::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto80400235* Proto80400235::default_instance_ = NULL;

Proto80400235* Proto80400235::New() const {
  return new Proto80400235;
}

void Proto80400235::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    show_ai_id_ = GOOGLE_LONGLONG(0);
    hide_ai_id_ = GOOGLE_LONGLONG(0);
    if (has_show_ai_name()) {
      if (show_ai_name_ != &::google::protobuf::internal::kEmptyString) {
        show_ai_name_->clear();
      }
    }
    flag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400235::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 show_ai_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &show_ai_id_)));
          set_has_show_ai_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_hide_ai_id;
        break;
      }
      
      // optional int64 hide_ai_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hide_ai_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &hide_ai_id_)));
          set_has_hide_ai_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_show_ai_name;
        break;
      }
      
      // optional string show_ai_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_show_ai_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_show_ai_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->show_ai_name().data(), this->show_ai_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_flag;
        break;
      }
      
      // optional int32 flag = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400235::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 show_ai_id = 1;
  if (has_show_ai_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->show_ai_id(), output);
  }
  
  // optional int64 hide_ai_id = 2;
  if (has_hide_ai_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->hide_ai_id(), output);
  }
  
  // optional string show_ai_name = 3;
  if (has_show_ai_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->show_ai_name().data(), this->show_ai_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->show_ai_name(), output);
  }
  
  // optional int32 flag = 4;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400235::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 show_ai_id = 1;
  if (has_show_ai_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->show_ai_id(), target);
  }
  
  // optional int64 hide_ai_id = 2;
  if (has_hide_ai_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->hide_ai_id(), target);
  }
  
  // optional string show_ai_name = 3;
  if (has_show_ai_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->show_ai_name().data(), this->show_ai_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->show_ai_name(), target);
  }
  
  // optional int32 flag = 4;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400235::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 show_ai_id = 1;
    if (has_show_ai_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->show_ai_id());
    }
    
    // optional int64 hide_ai_id = 2;
    if (has_hide_ai_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->hide_ai_id());
    }
    
    // optional string show_ai_name = 3;
    if (has_show_ai_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->show_ai_name());
    }
    
    // optional int32 flag = 4;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400235::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400235* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400235*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400235::MergeFrom(const Proto80400235& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_show_ai_id()) {
      set_show_ai_id(from.show_ai_id());
    }
    if (from.has_hide_ai_id()) {
      set_hide_ai_id(from.hide_ai_id());
    }
    if (from.has_show_ai_name()) {
      set_show_ai_name(from.show_ai_name());
    }
    if (from.has_flag()) {
      set_flag(from.flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400235::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400235::CopyFrom(const Proto80400235& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400235::IsInitialized() const {
  
  return true;
}

void Proto80400235::Swap(Proto80400235* other) {
  if (other != this) {
    std::swap(show_ai_id_, other->show_ai_id_);
    std::swap(hide_ai_id_, other->hide_ai_id_);
    std::swap(show_ai_name_, other->show_ai_name_);
    std::swap(flag_, other->flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400235::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400235_descriptor_;
  metadata.reflection = Proto80400235_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400924::kRoleIdFieldNumber;
const int Proto80400924::kStateFieldNumber;
const int Proto80400924::kRoleNameFieldNumber;
#endif  // !_MSC_VER

Proto80400924::Proto80400924()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400924::InitAsDefaultInstance() {
}

Proto80400924::Proto80400924(const Proto80400924& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400924::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  state_ = 0;
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400924::~Proto80400924() {
  SharedDtor();
}

void Proto80400924::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400924::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400924::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400924_descriptor_;
}

const Proto80400924& Proto80400924::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto80400924* Proto80400924::default_instance_ = NULL;

Proto80400924* Proto80400924::New() const {
  return new Proto80400924;
}

void Proto80400924::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    state_ = 0;
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400924::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }
      
      // optional int32 state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_role_name;
        break;
      }
      
      // optional string role_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400924::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->state(), output);
  }
  
  // optional string role_name = 3;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->role_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400924::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->state(), target);
  }
  
  // optional string role_name = 3;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->role_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400924::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
    // optional string role_name = 3;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400924::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400924* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400924*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400924::MergeFrom(const Proto80400924& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400924::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400924::CopyFrom(const Proto80400924& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400924::IsInitialized() const {
  
  return true;
}

void Proto80400924::Swap(Proto80400924* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(state_, other->state_);
    std::swap(role_name_, other->role_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400924::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400924_descriptor_;
  metadata.reflection = Proto80400924_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400937::kMoverIdFieldNumber;
#endif  // !_MSC_VER

Proto10400937::Proto10400937()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400937::InitAsDefaultInstance() {
}

Proto10400937::Proto10400937(const Proto10400937& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400937::SharedCtor() {
  _cached_size_ = 0;
  mover_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400937::~Proto10400937() {
  SharedDtor();
}

void Proto10400937::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400937::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400937::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400937_descriptor_;
}

const Proto10400937& Proto10400937::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto10400937* Proto10400937::default_instance_ = NULL;

Proto10400937* Proto10400937::New() const {
  return new Proto10400937;
}

void Proto10400937::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mover_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400937::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 mover_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mover_id_)));
          set_has_mover_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400937::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->mover_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400937::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->mover_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400937::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 mover_id = 1;
    if (has_mover_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mover_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400937::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400937* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400937*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400937::MergeFrom(const Proto10400937& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mover_id()) {
      set_mover_id(from.mover_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400937::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400937::CopyFrom(const Proto10400937& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400937::IsInitialized() const {
  
  return true;
}

void Proto10400937::Swap(Proto10400937* other) {
  if (other != this) {
    std::swap(mover_id_, other->mover_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400937::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400937_descriptor_;
  metadata.reflection = Proto10400937_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400925::kRoleIdFieldNumber;
const int Proto80400925::kLastSecFieldNumber;
#endif  // !_MSC_VER

Proto80400925::Proto80400925()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400925::InitAsDefaultInstance() {
}

Proto80400925::Proto80400925(const Proto80400925& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400925::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  last_sec_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400925::~Proto80400925() {
  SharedDtor();
}

void Proto80400925::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400925::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400925::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400925_descriptor_;
}

const Proto80400925& Proto80400925::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto80400925* Proto80400925::default_instance_ = NULL;

Proto80400925* Proto80400925::New() const {
  return new Proto80400925;
}

void Proto80400925::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    last_sec_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400925::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_last_sec;
        break;
      }
      
      // optional int32 last_sec = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last_sec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_sec_)));
          set_has_last_sec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400925::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 last_sec = 2;
  if (has_last_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->last_sec(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400925::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 last_sec = 2;
  if (has_last_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->last_sec(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400925::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 last_sec = 2;
    if (has_last_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_sec());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400925::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400925* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400925*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400925::MergeFrom(const Proto80400925& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_last_sec()) {
      set_last_sec(from.last_sec());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400925::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400925::CopyFrom(const Proto80400925& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400925::IsInitialized() const {
  
  return true;
}

void Proto80400925::Swap(Proto80400925* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(last_sec_, other->last_sec_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400925::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400925_descriptor_;
  metadata.reflection = Proto80400925_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400522::kTypeFieldNumber;
const int Proto11400522::kBeastFieldNumber;
const int Proto11400522::kAmountFieldNumber;
#endif  // !_MSC_VER

Proto11400522::Proto11400522()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400522::InitAsDefaultInstance() {
}

Proto11400522::Proto11400522(const Proto11400522& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400522::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  beast_ = GOOGLE_LONGLONG(0);
  amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400522::~Proto11400522() {
  SharedDtor();
}

void Proto11400522::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400522::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400522::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400522_descriptor_;
}

const Proto11400522& Proto11400522::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto11400522* Proto11400522::default_instance_ = NULL;

Proto11400522* Proto11400522::New() const {
  return new Proto11400522;
}

void Proto11400522::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    beast_ = GOOGLE_LONGLONG(0);
    amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400522::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_beast;
        break;
      }
      
      // optional int64 beast = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_)));
          set_has_beast();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400522::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int64 beast = 2;
  if (has_beast()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->beast(), output);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400522::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int64 beast = 2;
  if (has_beast()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->beast(), target);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400522::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int64 beast = 2;
    if (has_beast()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast());
    }
    
    // optional int32 amount = 3;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400522::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400522* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400522*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400522::MergeFrom(const Proto11400522& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_beast()) {
      set_beast(from.beast());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400522::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400522::CopyFrom(const Proto11400522& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400522::IsInitialized() const {
  
  return true;
}

void Proto11400522::Swap(Proto11400522* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(beast_, other->beast_);
    std::swap(amount_, other->amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400522::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400522_descriptor_;
  metadata.reflection = Proto11400522_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400522::kConbineValueFieldNumber;
const int Proto51400522::kTotalValueFieldNumber;
const int Proto51400522::kAbilityFieldNumber;
const int Proto51400522::kBeastIdFieldNumber;
const int Proto51400522::kForceFieldNumber;
#endif  // !_MSC_VER

Proto51400522::Proto51400522()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400522::InitAsDefaultInstance() {
}

Proto51400522::Proto51400522(const Proto51400522& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400522::SharedCtor() {
  _cached_size_ = 0;
  conbine_value_ = 0;
  total_value_ = 0;
  ability_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  force_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400522::~Proto51400522() {
  SharedDtor();
}

void Proto51400522::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400522::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400522::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400522_descriptor_;
}

const Proto51400522& Proto51400522::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto51400522* Proto51400522::default_instance_ = NULL;

Proto51400522* Proto51400522::New() const {
  return new Proto51400522;
}

void Proto51400522::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    conbine_value_ = 0;
    total_value_ = 0;
    ability_ = 0;
    beast_id_ = GOOGLE_LONGLONG(0);
    force_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400522::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 conbine_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &conbine_value_)));
          set_has_conbine_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_value;
        break;
      }
      
      // optional int32 total_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_value_)));
          set_has_total_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_ability;
        break;
      }
      
      // optional int32 ability = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ability:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ability_)));
          set_has_ability();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_beast_id;
        break;
      }
      
      // optional int64 beast_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_force;
        break;
      }
      
      // optional int32 force = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400522::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 conbine_value = 1;
  if (has_conbine_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->conbine_value(), output);
  }
  
  // optional int32 total_value = 2;
  if (has_total_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_value(), output);
  }
  
  // optional int32 ability = 3;
  if (has_ability()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ability(), output);
  }
  
  // optional int64 beast_id = 4;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->beast_id(), output);
  }
  
  // optional int32 force = 5;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->force(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400522::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 conbine_value = 1;
  if (has_conbine_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->conbine_value(), target);
  }
  
  // optional int32 total_value = 2;
  if (has_total_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_value(), target);
  }
  
  // optional int32 ability = 3;
  if (has_ability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ability(), target);
  }
  
  // optional int64 beast_id = 4;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->beast_id(), target);
  }
  
  // optional int32 force = 5;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->force(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400522::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 conbine_value = 1;
    if (has_conbine_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->conbine_value());
    }
    
    // optional int32 total_value = 2;
    if (has_total_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_value());
    }
    
    // optional int32 ability = 3;
    if (has_ability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ability());
    }
    
    // optional int64 beast_id = 4;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
    // optional int32 force = 5;
    if (has_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->force());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400522::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400522* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400522*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400522::MergeFrom(const Proto51400522& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_conbine_value()) {
      set_conbine_value(from.conbine_value());
    }
    if (from.has_total_value()) {
      set_total_value(from.total_value());
    }
    if (from.has_ability()) {
      set_ability(from.ability());
    }
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
    if (from.has_force()) {
      set_force(from.force());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400522::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400522::CopyFrom(const Proto51400522& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400522::IsInitialized() const {
  
  return true;
}

void Proto51400522::Swap(Proto51400522* other) {
  if (other != this) {
    std::swap(conbine_value_, other->conbine_value_);
    std::swap(total_value_, other->total_value_);
    std::swap(ability_, other->ability_);
    std::swap(beast_id_, other->beast_id_);
    std::swap(force_, other->force_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400522::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400522_descriptor_;
  metadata.reflection = Proto51400522_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400523::kBeastFieldNumber;
const int Proto11400523::kActionFieldNumber;
#endif  // !_MSC_VER

Proto11400523::Proto11400523()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400523::InitAsDefaultInstance() {
}

Proto11400523::Proto11400523(const Proto11400523& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400523::SharedCtor() {
  _cached_size_ = 0;
  beast_ = GOOGLE_LONGLONG(0);
  action_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400523::~Proto11400523() {
  SharedDtor();
}

void Proto11400523::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400523::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400523::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400523_descriptor_;
}

const Proto11400523& Proto11400523::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto11400523* Proto11400523::default_instance_ = NULL;

Proto11400523* Proto11400523::New() const {
  return new Proto11400523;
}

void Proto11400523::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    beast_ = GOOGLE_LONGLONG(0);
    action_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400523::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 beast = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_)));
          set_has_beast();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_action;
        break;
      }
      
      // optional int32 action = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_action:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
          set_has_action();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400523::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 beast = 1;
  if (has_beast()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->beast(), output);
  }
  
  // optional int32 action = 2;
  if (has_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->action(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400523::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 beast = 1;
  if (has_beast()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->beast(), target);
  }
  
  // optional int32 action = 2;
  if (has_action()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->action(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400523::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 beast = 1;
    if (has_beast()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast());
    }
    
    // optional int32 action = 2;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400523::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400523* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400523*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400523::MergeFrom(const Proto11400523& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beast()) {
      set_beast(from.beast());
    }
    if (from.has_action()) {
      set_action(from.action());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400523::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400523::CopyFrom(const Proto11400523& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400523::IsInitialized() const {
  
  return true;
}

void Proto11400523::Swap(Proto11400523* other) {
  if (other != this) {
    std::swap(beast_, other->beast_);
    std::swap(action_, other->action_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400523::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400523_descriptor_;
  metadata.reflection = Proto11400523_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400524::kBeastFieldNumber;
#endif  // !_MSC_VER

Proto11400524::Proto11400524()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400524::InitAsDefaultInstance() {
}

Proto11400524::Proto11400524(const Proto11400524& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400524::SharedCtor() {
  _cached_size_ = 0;
  beast_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400524::~Proto11400524() {
  SharedDtor();
}

void Proto11400524::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400524::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400524::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400524_descriptor_;
}

const Proto11400524& Proto11400524::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto11400524* Proto11400524::default_instance_ = NULL;

Proto11400524* Proto11400524::New() const {
  return new Proto11400524;
}

void Proto11400524::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    beast_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400524::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 beast = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_)));
          set_has_beast();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400524::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 beast = 1;
  if (has_beast()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->beast(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400524::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 beast = 1;
  if (has_beast()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->beast(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400524::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 beast = 1;
    if (has_beast()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400524::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400524* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400524*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400524::MergeFrom(const Proto11400524& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beast()) {
      set_beast(from.beast());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400524::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400524::CopyFrom(const Proto11400524& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400524::IsInitialized() const {
  
  return true;
}

void Proto11400524::Swap(Proto11400524* other) {
  if (other != this) {
    std::swap(beast_, other->beast_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400524::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400524_descriptor_;
  metadata.reflection = Proto11400524_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400504::kBeastIdFieldNumber;
const int Proto11400504::kItemIdFieldNumber;
#endif  // !_MSC_VER

Proto11400504::Proto11400504()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400504::InitAsDefaultInstance() {
}

Proto11400504::Proto11400504(const Proto11400504& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400504::SharedCtor() {
  _cached_size_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  item_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400504::~Proto11400504() {
  SharedDtor();
}

void Proto11400504::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400504::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400504::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400504_descriptor_;
}

const Proto11400504& Proto11400504::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto11400504* Proto11400504::default_instance_ = NULL;

Proto11400504* Proto11400504::New() const {
  return new Proto11400504;
}

void Proto11400504::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    beast_id_ = GOOGLE_LONGLONG(0);
    item_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400504::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 beast_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }
      
      // optional int32 item_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400504::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->beast_id(), output);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400504::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->beast_id(), target);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400504::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 beast_id = 1;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
    // optional int32 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400504::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400504* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400504*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400504::MergeFrom(const Proto11400504& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400504::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400504::CopyFrom(const Proto11400504& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400504::IsInitialized() const {
  
  return true;
}

void Proto11400504::Swap(Proto11400504* other) {
  if (other != this) {
    std::swap(beast_id_, other->beast_id_);
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400504::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400504_descriptor_;
  metadata.reflection = Proto11400504_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400509::kBeastIdFieldNumber;
const int Proto11400509::kActionFieldNumber;
const int Proto11400509::kSkillIdFieldNumber;
#endif  // !_MSC_VER

Proto11400509::Proto11400509()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400509::InitAsDefaultInstance() {
}

Proto11400509::Proto11400509(const Proto11400509& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400509::SharedCtor() {
  _cached_size_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  action_ = 0;
  skill_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400509::~Proto11400509() {
  SharedDtor();
}

void Proto11400509::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400509::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400509::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400509_descriptor_;
}

const Proto11400509& Proto11400509::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto11400509* Proto11400509::default_instance_ = NULL;

Proto11400509* Proto11400509::New() const {
  return new Proto11400509;
}

void Proto11400509::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    beast_id_ = GOOGLE_LONGLONG(0);
    action_ = 0;
    skill_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400509::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 beast_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_action;
        break;
      }
      
      // optional int32 action = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_action:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
          set_has_action();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_skill_id;
        break;
      }
      
      // optional int32 skill_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400509::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->beast_id(), output);
  }
  
  // optional int32 action = 2;
  if (has_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->action(), output);
  }
  
  // optional int32 skill_id = 3;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skill_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400509::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->beast_id(), target);
  }
  
  // optional int32 action = 2;
  if (has_action()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->action(), target);
  }
  
  // optional int32 skill_id = 3;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skill_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400509::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 beast_id = 1;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
    // optional int32 action = 2;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action());
    }
    
    // optional int32 skill_id = 3;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400509::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400509* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400509*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400509::MergeFrom(const Proto11400509& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
    if (from.has_action()) {
      set_action(from.action());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400509::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400509::CopyFrom(const Proto11400509& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400509::IsInitialized() const {
  
  return true;
}

void Proto11400509::Swap(Proto11400509* other) {
  if (other != this) {
    std::swap(beast_id_, other->beast_id_);
    std::swap(action_, other->action_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400509::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400509_descriptor_;
  metadata.reflection = Proto11400509_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400510::kActonFieldNumber;
#endif  // !_MSC_VER

Proto11400510::Proto11400510()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400510::InitAsDefaultInstance() {
}

Proto11400510::Proto11400510(const Proto11400510& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400510::SharedCtor() {
  _cached_size_ = 0;
  acton_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400510::~Proto11400510() {
  SharedDtor();
}

void Proto11400510::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400510::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400510::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400510_descriptor_;
}

const Proto11400510& Proto11400510::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto11400510* Proto11400510::default_instance_ = NULL;

Proto11400510* Proto11400510::New() const {
  return new Proto11400510;
}

void Proto11400510::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    acton_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400510::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 acton = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &acton_)));
          set_has_acton();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400510::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 acton = 1;
  if (has_acton()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->acton(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400510::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 acton = 1;
  if (has_acton()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->acton(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400510::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 acton = 1;
    if (has_acton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->acton());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400510::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400510* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400510*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400510::MergeFrom(const Proto11400510& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_acton()) {
      set_acton(from.acton());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400510::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400510::CopyFrom(const Proto11400510& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400510::IsInitialized() const {
  
  return true;
}

void Proto11400510::Swap(Proto11400510* other) {
  if (other != this) {
    std::swap(acton_, other->acton_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400510::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400510_descriptor_;
  metadata.reflection = Proto11400510_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400510::kLuckyFieldNumber;
const int Proto51400510::kSkillBookIdFieldNumber;
const int Proto51400510::kSkillBookIndexFieldNumber;
const int Proto51400510::kTotalLuckyFieldNumber;
#endif  // !_MSC_VER

Proto51400510::Proto51400510()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400510::InitAsDefaultInstance() {
}

Proto51400510::Proto51400510(const Proto51400510& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400510::SharedCtor() {
  _cached_size_ = 0;
  lucky_ = 0;
  total_lucky_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400510::~Proto51400510() {
  SharedDtor();
}

void Proto51400510::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400510::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400510::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400510_descriptor_;
}

const Proto51400510& Proto51400510::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto51400510* Proto51400510::default_instance_ = NULL;

Proto51400510* Proto51400510::New() const {
  return new Proto51400510;
}

void Proto51400510::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    lucky_ = 0;
    total_lucky_ = 0;
  }
  skill_book_id_.Clear();
  skill_book_index_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400510::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 lucky = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lucky_)));
          set_has_lucky();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_skill_book_id;
        break;
      }
      
      // repeated int32 skill_book_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_book_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_skill_book_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_skill_book_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_skill_book_id;
        if (input->ExpectTag(24)) goto parse_skill_book_index;
        break;
      }
      
      // repeated int32 skill_book_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_book_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_skill_book_index())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_skill_book_index())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_skill_book_index;
        if (input->ExpectTag(32)) goto parse_total_lucky;
        break;
      }
      
      // optional int32 total_lucky = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_lucky:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_lucky_)));
          set_has_total_lucky();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400510::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 lucky = 1;
  if (has_lucky()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lucky(), output);
  }
  
  // repeated int32 skill_book_id = 2;
  for (int i = 0; i < this->skill_book_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->skill_book_id(i), output);
  }
  
  // repeated int32 skill_book_index = 3;
  for (int i = 0; i < this->skill_book_index_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->skill_book_index(i), output);
  }
  
  // optional int32 total_lucky = 4;
  if (has_total_lucky()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->total_lucky(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400510::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 lucky = 1;
  if (has_lucky()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lucky(), target);
  }
  
  // repeated int32 skill_book_id = 2;
  for (int i = 0; i < this->skill_book_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->skill_book_id(i), target);
  }
  
  // repeated int32 skill_book_index = 3;
  for (int i = 0; i < this->skill_book_index_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->skill_book_index(i), target);
  }
  
  // optional int32 total_lucky = 4;
  if (has_total_lucky()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->total_lucky(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400510::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 lucky = 1;
    if (has_lucky()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lucky());
    }
    
    // optional int32 total_lucky = 4;
    if (has_total_lucky()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_lucky());
    }
    
  }
  // repeated int32 skill_book_id = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->skill_book_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->skill_book_id(i));
    }
    total_size += 1 * this->skill_book_id_size() + data_size;
  }
  
  // repeated int32 skill_book_index = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->skill_book_index_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->skill_book_index(i));
    }
    total_size += 1 * this->skill_book_index_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400510::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400510* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400510*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400510::MergeFrom(const Proto51400510& from) {
  GOOGLE_CHECK_NE(&from, this);
  skill_book_id_.MergeFrom(from.skill_book_id_);
  skill_book_index_.MergeFrom(from.skill_book_index_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lucky()) {
      set_lucky(from.lucky());
    }
    if (from.has_total_lucky()) {
      set_total_lucky(from.total_lucky());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400510::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400510::CopyFrom(const Proto51400510& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400510::IsInitialized() const {
  
  return true;
}

void Proto51400510::Swap(Proto51400510* other) {
  if (other != this) {
    std::swap(lucky_, other->lucky_);
    skill_book_id_.Swap(&other->skill_book_id_);
    skill_book_index_.Swap(&other->skill_book_index_);
    std::swap(total_lucky_, other->total_lucky_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400510::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400510_descriptor_;
  metadata.reflection = Proto51400510_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400511::kSkillIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400511::Proto11400511()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400511::InitAsDefaultInstance() {
}

Proto11400511::Proto11400511(const Proto11400511& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400511::SharedCtor() {
  _cached_size_ = 0;
  skill_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400511::~Proto11400511() {
  SharedDtor();
}

void Proto11400511::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400511::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400511::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400511_descriptor_;
}

const Proto11400511& Proto11400511::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto11400511* Proto11400511::default_instance_ = NULL;

Proto11400511* Proto11400511::New() const {
  return new Proto11400511;
}

void Proto11400511::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skill_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400511::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 skill_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_index_)));
          set_has_skill_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400511::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 skill_index = 1;
  if (has_skill_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skill_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400511::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 skill_index = 1;
  if (has_skill_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skill_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400511::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 skill_index = 1;
    if (has_skill_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400511::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400511* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400511*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400511::MergeFrom(const Proto11400511& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill_index()) {
      set_skill_index(from.skill_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400511::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400511::CopyFrom(const Proto11400511& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400511::IsInitialized() const {
  
  return true;
}

void Proto11400511::Swap(Proto11400511* other) {
  if (other != this) {
    std::swap(skill_index_, other->skill_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400511::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400511_descriptor_;
  metadata.reflection = Proto11400511_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400512::kSkillBookIdFieldNumber;
const int Proto11400512::kMaterialIdFieldNumber;
#endif  // !_MSC_VER

Proto11400512::Proto11400512()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400512::InitAsDefaultInstance() {
}

Proto11400512::Proto11400512(const Proto11400512& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400512::SharedCtor() {
  _cached_size_ = 0;
  skill_book_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400512::~Proto11400512() {
  SharedDtor();
}

void Proto11400512::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400512::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400512::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400512_descriptor_;
}

const Proto11400512& Proto11400512::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto11400512* Proto11400512::default_instance_ = NULL;

Proto11400512* Proto11400512::New() const {
  return new Proto11400512;
}

void Proto11400512::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skill_book_id_ = 0;
  }
  material_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400512::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 skill_book_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_book_id_)));
          set_has_skill_book_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_material_id;
        break;
      }
      
      // repeated int32 material_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_material_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_material_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_material_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_material_id;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400512::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 skill_book_id = 1;
  if (has_skill_book_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skill_book_id(), output);
  }
  
  // repeated int32 material_id = 2;
  for (int i = 0; i < this->material_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->material_id(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400512::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 skill_book_id = 1;
  if (has_skill_book_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skill_book_id(), target);
  }
  
  // repeated int32 material_id = 2;
  for (int i = 0; i < this->material_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->material_id(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400512::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 skill_book_id = 1;
    if (has_skill_book_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_book_id());
    }
    
  }
  // repeated int32 material_id = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->material_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->material_id(i));
    }
    total_size += 1 * this->material_id_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400512::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400512* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400512*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400512::MergeFrom(const Proto11400512& from) {
  GOOGLE_CHECK_NE(&from, this);
  material_id_.MergeFrom(from.material_id_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill_book_id()) {
      set_skill_book_id(from.skill_book_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400512::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400512::CopyFrom(const Proto11400512& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400512::IsInitialized() const {
  
  return true;
}

void Proto11400512::Swap(Proto11400512* other) {
  if (other != this) {
    std::swap(skill_book_id_, other->skill_book_id_);
    material_id_.Swap(&other->material_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400512::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400512_descriptor_;
  metadata.reflection = Proto11400512_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400512::kSkillBookIdFieldNumber;
#endif  // !_MSC_VER

Proto51400512::Proto51400512()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400512::InitAsDefaultInstance() {
}

Proto51400512::Proto51400512(const Proto51400512& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400512::SharedCtor() {
  _cached_size_ = 0;
  skill_book_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400512::~Proto51400512() {
  SharedDtor();
}

void Proto51400512::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400512::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400512::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400512_descriptor_;
}

const Proto51400512& Proto51400512::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto51400512* Proto51400512::default_instance_ = NULL;

Proto51400512* Proto51400512::New() const {
  return new Proto51400512;
}

void Proto51400512::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skill_book_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400512::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 skill_book_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_book_id_)));
          set_has_skill_book_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400512::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 skill_book_id = 1;
  if (has_skill_book_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skill_book_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400512::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 skill_book_id = 1;
  if (has_skill_book_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skill_book_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400512::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 skill_book_id = 1;
    if (has_skill_book_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_book_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400512::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400512* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400512*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400512::MergeFrom(const Proto51400512& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill_book_id()) {
      set_skill_book_id(from.skill_book_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400512::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400512::CopyFrom(const Proto51400512& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400512::IsInitialized() const {
  
  return true;
}

void Proto51400512::Swap(Proto51400512* other) {
  if (other != this) {
    std::swap(skill_book_id_, other->skill_book_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400512::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400512_descriptor_;
  metadata.reflection = Proto51400512_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400513::kLuckyFieldNumber;
const int Proto51400513::kTotalLuckyFieldNumber;
#endif  // !_MSC_VER

Proto51400513::Proto51400513()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400513::InitAsDefaultInstance() {
}

Proto51400513::Proto51400513(const Proto51400513& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400513::SharedCtor() {
  _cached_size_ = 0;
  lucky_ = 0;
  total_lucky_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400513::~Proto51400513() {
  SharedDtor();
}

void Proto51400513::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400513::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400513::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400513_descriptor_;
}

const Proto51400513& Proto51400513::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto51400513* Proto51400513::default_instance_ = NULL;

Proto51400513* Proto51400513::New() const {
  return new Proto51400513;
}

void Proto51400513::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    lucky_ = 0;
    total_lucky_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400513::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 lucky = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lucky_)));
          set_has_lucky();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_lucky;
        break;
      }
      
      // optional int32 total_lucky = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_lucky:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_lucky_)));
          set_has_total_lucky();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400513::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 lucky = 1;
  if (has_lucky()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lucky(), output);
  }
  
  // optional int32 total_lucky = 2;
  if (has_total_lucky()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_lucky(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400513::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 lucky = 1;
  if (has_lucky()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lucky(), target);
  }
  
  // optional int32 total_lucky = 2;
  if (has_total_lucky()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_lucky(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400513::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 lucky = 1;
    if (has_lucky()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lucky());
    }
    
    // optional int32 total_lucky = 2;
    if (has_total_lucky()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_lucky());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400513::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400513* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400513*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400513::MergeFrom(const Proto51400513& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lucky()) {
      set_lucky(from.lucky());
    }
    if (from.has_total_lucky()) {
      set_total_lucky(from.total_lucky());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400513::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400513::CopyFrom(const Proto51400513& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400513::IsInitialized() const {
  
  return true;
}

void Proto51400513::Swap(Proto51400513* other) {
  if (other != this) {
    std::swap(lucky_, other->lucky_);
    std::swap(total_lucky_, other->total_lucky_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400513::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400513_descriptor_;
  metadata.reflection = Proto51400513_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400504::kSkillIdFieldNumber;
#endif  // !_MSC_VER

Proto51400504::Proto51400504()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400504::InitAsDefaultInstance() {
}

Proto51400504::Proto51400504(const Proto51400504& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400504::SharedCtor() {
  _cached_size_ = 0;
  skill_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400504::~Proto51400504() {
  SharedDtor();
}

void Proto51400504::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400504::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400504::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400504_descriptor_;
}

const Proto51400504& Proto51400504::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto51400504* Proto51400504::default_instance_ = NULL;

Proto51400504* Proto51400504::New() const {
  return new Proto51400504;
}

void Proto51400504::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skill_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400504::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 skill_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400504::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skill_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400504::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skill_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400504::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 skill_id = 1;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400504::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400504* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400504*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400504::MergeFrom(const Proto51400504& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400504::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400504::CopyFrom(const Proto51400504& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400504::IsInitialized() const {
  
  return true;
}

void Proto51400504::Swap(Proto51400504* other) {
  if (other != this) {
    std::swap(skill_id_, other->skill_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400504::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400504_descriptor_;
  metadata.reflection = Proto51400504_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400383::kAttackNameFieldNumber;
const int Proto80400383::kAttackIdFieldNumber;
const int Proto80400383::kAttackCareerFieldNumber;
const int Proto80400383::kPixelXFieldNumber;
const int Proto80400383::kPixelYFieldNumber;
#endif  // !_MSC_VER

Proto80400383::Proto80400383()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400383::InitAsDefaultInstance() {
}

Proto80400383::Proto80400383(const Proto80400383& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400383::SharedCtor() {
  _cached_size_ = 0;
  attack_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  attack_id_ = GOOGLE_LONGLONG(0);
  attack_career_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400383::~Proto80400383() {
  SharedDtor();
}

void Proto80400383::SharedDtor() {
  if (attack_name_ != &::google::protobuf::internal::kEmptyString) {
    delete attack_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400383::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400383::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400383_descriptor_;
}

const Proto80400383& Proto80400383::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto80400383* Proto80400383::default_instance_ = NULL;

Proto80400383* Proto80400383::New() const {
  return new Proto80400383;
}

void Proto80400383::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_attack_name()) {
      if (attack_name_ != &::google::protobuf::internal::kEmptyString) {
        attack_name_->clear();
      }
    }
    attack_id_ = GOOGLE_LONGLONG(0);
    attack_career_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400383::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string attack_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attack_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->attack_name().data(), this->attack_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_attack_id;
        break;
      }
      
      // optional int64 attack_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attack_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &attack_id_)));
          set_has_attack_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_attack_career;
        break;
      }
      
      // optional int32 attack_career = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attack_career:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attack_career_)));
          set_has_attack_career();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400383::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string attack_name = 1;
  if (has_attack_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->attack_name().data(), this->attack_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->attack_name(), output);
  }
  
  // optional int64 attack_id = 2;
  if (has_attack_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->attack_id(), output);
  }
  
  // optional int32 attack_career = 3;
  if (has_attack_career()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->attack_career(), output);
  }
  
  // optional int32 pixel_x = 4;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 5;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pixel_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400383::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string attack_name = 1;
  if (has_attack_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->attack_name().data(), this->attack_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->attack_name(), target);
  }
  
  // optional int64 attack_id = 2;
  if (has_attack_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->attack_id(), target);
  }
  
  // optional int32 attack_career = 3;
  if (has_attack_career()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->attack_career(), target);
  }
  
  // optional int32 pixel_x = 4;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 5;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pixel_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400383::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string attack_name = 1;
    if (has_attack_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->attack_name());
    }
    
    // optional int64 attack_id = 2;
    if (has_attack_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->attack_id());
    }
    
    // optional int32 attack_career = 3;
    if (has_attack_career()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attack_career());
    }
    
    // optional int32 pixel_x = 4;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 5;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400383::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400383* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400383*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400383::MergeFrom(const Proto80400383& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_attack_name()) {
      set_attack_name(from.attack_name());
    }
    if (from.has_attack_id()) {
      set_attack_id(from.attack_id());
    }
    if (from.has_attack_career()) {
      set_attack_career(from.attack_career());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400383::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400383::CopyFrom(const Proto80400383& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400383::IsInitialized() const {
  
  return true;
}

void Proto80400383::Swap(Proto80400383* other) {
  if (other != this) {
    std::swap(attack_name_, other->attack_name_);
    std::swap(attack_id_, other->attack_id_);
    std::swap(attack_career_, other->attack_career_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400383::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400383_descriptor_;
  metadata.reflection = Proto80400383_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401202::kQqFieldNumber;
#endif  // !_MSC_VER

Proto81401202::Proto81401202()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401202::InitAsDefaultInstance() {
}

Proto81401202::Proto81401202(const Proto81401202& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401202::SharedCtor() {
  _cached_size_ = 0;
  qq_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401202::~Proto81401202() {
  SharedDtor();
}

void Proto81401202::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401202::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401202::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401202_descriptor_;
}

const Proto81401202& Proto81401202::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto81401202* Proto81401202::default_instance_ = NULL;

Proto81401202* Proto81401202::New() const {
  return new Proto81401202;
}

void Proto81401202::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    qq_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401202::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 qq = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &qq_)));
          set_has_qq();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401202::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 qq = 1;
  if (has_qq()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->qq(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401202::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 qq = 1;
  if (has_qq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->qq(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401202::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 qq = 1;
    if (has_qq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->qq());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401202::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401202* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401202*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401202::MergeFrom(const Proto81401202& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_qq()) {
      set_qq(from.qq());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401202::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401202::CopyFrom(const Proto81401202& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401202::IsInitialized() const {
  
  return true;
}

void Proto81401202::Swap(Proto81401202* other) {
  if (other != this) {
    std::swap(qq_, other->qq_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401202::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401202_descriptor_;
  metadata.reflection = Proto81401202_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400116::kChatIpFieldNumber;
const int Proto80400116::kChatPortFieldNumber;
const int Proto80400116::kSessionInfoFieldNumber;
const int Proto80400116::kStateFieldNumber;
#endif  // !_MSC_VER

Proto80400116::Proto80400116()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400116::InitAsDefaultInstance() {
  session_info_ = const_cast< ::ProtoSession*>(&::ProtoSession::default_instance());
}

Proto80400116::Proto80400116(const Proto80400116& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400116::SharedCtor() {
  _cached_size_ = 0;
  chat_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  chat_port_ = 0;
  session_info_ = NULL;
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400116::~Proto80400116() {
  SharedDtor();
}

void Proto80400116::SharedDtor() {
  if (chat_ip_ != &::google::protobuf::internal::kEmptyString) {
    delete chat_ip_;
  }
  if (this != default_instance_) {
    delete session_info_;
  }
}

void Proto80400116::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400116::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400116_descriptor_;
}

const Proto80400116& Proto80400116::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto80400116* Proto80400116::default_instance_ = NULL;

Proto80400116* Proto80400116::New() const {
  return new Proto80400116;
}

void Proto80400116::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_chat_ip()) {
      if (chat_ip_ != &::google::protobuf::internal::kEmptyString) {
        chat_ip_->clear();
      }
    }
    chat_port_ = 0;
    if (has_session_info()) {
      if (session_info_ != NULL) session_info_->::ProtoSession::Clear();
    }
    state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400116::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string chat_ip = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->chat_ip().data(), this->chat_ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_chat_port;
        break;
      }
      
      // optional int32 chat_port = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_chat_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chat_port_)));
          set_has_chat_port();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_session_info;
        break;
      }
      
      // optional .ProtoSession session_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_session_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_session_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_state;
        break;
      }
      
      // optional int32 state = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400116::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string chat_ip = 1;
  if (has_chat_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->chat_ip().data(), this->chat_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->chat_ip(), output);
  }
  
  // optional int32 chat_port = 2;
  if (has_chat_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chat_port(), output);
  }
  
  // optional .ProtoSession session_info = 3;
  if (has_session_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->session_info(), output);
  }
  
  // optional int32 state = 4;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400116::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string chat_ip = 1;
  if (has_chat_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->chat_ip().data(), this->chat_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chat_ip(), target);
  }
  
  // optional int32 chat_port = 2;
  if (has_chat_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chat_port(), target);
  }
  
  // optional .ProtoSession session_info = 3;
  if (has_session_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->session_info(), target);
  }
  
  // optional int32 state = 4;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400116::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string chat_ip = 1;
    if (has_chat_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chat_ip());
    }
    
    // optional int32 chat_port = 2;
    if (has_chat_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chat_port());
    }
    
    // optional .ProtoSession session_info = 3;
    if (has_session_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->session_info());
    }
    
    // optional int32 state = 4;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400116::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400116* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400116*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400116::MergeFrom(const Proto80400116& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chat_ip()) {
      set_chat_ip(from.chat_ip());
    }
    if (from.has_chat_port()) {
      set_chat_port(from.chat_port());
    }
    if (from.has_session_info()) {
      mutable_session_info()->::ProtoSession::MergeFrom(from.session_info());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400116::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400116::CopyFrom(const Proto80400116& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400116::IsInitialized() const {
  
  return true;
}

void Proto80400116::Swap(Proto80400116* other) {
  if (other != this) {
    std::swap(chat_ip_, other->chat_ip_);
    std::swap(chat_port_, other->chat_port_);
    std::swap(session_info_, other->session_info_);
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400116::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400116_descriptor_;
  metadata.reflection = Proto80400116_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100160::kTargetIdFieldNumber;
#endif  // !_MSC_VER

Proto10100160::Proto10100160()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100160::InitAsDefaultInstance() {
}

Proto10100160::Proto10100160(const Proto10100160& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100160::SharedCtor() {
  _cached_size_ = 0;
  target_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100160::~Proto10100160() {
  SharedDtor();
}

void Proto10100160::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100160::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100160::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100160_descriptor_;
}

const Proto10100160& Proto10100160::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto10100160* Proto10100160::default_instance_ = NULL;

Proto10100160* Proto10100160::New() const {
  return new Proto10100160;
}

void Proto10100160::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    target_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100160::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 target_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_id_)));
          set_has_target_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100160::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 target_id = 1;
  if (has_target_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->target_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100160::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 target_id = 1;
  if (has_target_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->target_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100160::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 target_id = 1;
    if (has_target_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->target_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100160::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100160* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100160*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100160::MergeFrom(const Proto10100160& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_target_id()) {
      set_target_id(from.target_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100160::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100160::CopyFrom(const Proto10100160& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100160::IsInitialized() const {
  
  return true;
}

void Proto10100160::Swap(Proto10100160* other) {
  if (other != this) {
    std::swap(target_id_, other->target_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100160::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100160_descriptor_;
  metadata.reflection = Proto10100160_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100163::kGiveTimesFieldNumber;
const int Proto50100163::kTotalGiveTimesFieldNumber;
const int Proto50100163::kGetTimesFieldNumber;
const int Proto50100163::kTotalGetTimesFieldNumber;
const int Proto50100163::kCanGetTimesFieldNumber;
const int Proto50100163::kTotalStrengthFieldNumber;
const int Proto50100163::kCurStrengthFieldNumber;
const int Proto50100163::kVipBuysFieldNumber;
#endif  // !_MSC_VER

Proto50100163::Proto50100163()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100163::InitAsDefaultInstance() {
}

Proto50100163::Proto50100163(const Proto50100163& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100163::SharedCtor() {
  _cached_size_ = 0;
  give_times_ = 0;
  total_give_times_ = 0;
  get_times_ = 0;
  total_get_times_ = 0;
  can_get_times_ = 0;
  total_strength_ = 0;
  cur_strength_ = 0;
  vip_buys_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100163::~Proto50100163() {
  SharedDtor();
}

void Proto50100163::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100163::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100163::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100163_descriptor_;
}

const Proto50100163& Proto50100163::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto50100163* Proto50100163::default_instance_ = NULL;

Proto50100163* Proto50100163::New() const {
  return new Proto50100163;
}

void Proto50100163::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    give_times_ = 0;
    total_give_times_ = 0;
    get_times_ = 0;
    total_get_times_ = 0;
    can_get_times_ = 0;
    total_strength_ = 0;
    cur_strength_ = 0;
    vip_buys_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100163::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 give_times = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &give_times_)));
          set_has_give_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_give_times;
        break;
      }
      
      // optional int32 total_give_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_give_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_give_times_)));
          set_has_total_give_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_get_times;
        break;
      }
      
      // optional int32 get_times = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_get_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &get_times_)));
          set_has_get_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_total_get_times;
        break;
      }
      
      // optional int32 total_get_times = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_get_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_get_times_)));
          set_has_total_get_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_can_get_times;
        break;
      }
      
      // optional int32 can_get_times = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_can_get_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &can_get_times_)));
          set_has_can_get_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_total_strength;
        break;
      }
      
      // optional int32 total_strength = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_strength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_strength_)));
          set_has_total_strength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_cur_strength;
        break;
      }
      
      // optional int32 cur_strength = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_strength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_strength_)));
          set_has_cur_strength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_vip_buys;
        break;
      }
      
      // optional int32 vip_buys = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_buys:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_buys_)));
          set_has_vip_buys();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100163::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 give_times = 1;
  if (has_give_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->give_times(), output);
  }
  
  // optional int32 total_give_times = 2;
  if (has_total_give_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_give_times(), output);
  }
  
  // optional int32 get_times = 3;
  if (has_get_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->get_times(), output);
  }
  
  // optional int32 total_get_times = 4;
  if (has_total_get_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->total_get_times(), output);
  }
  
  // optional int32 can_get_times = 5;
  if (has_can_get_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->can_get_times(), output);
  }
  
  // optional int32 total_strength = 6;
  if (has_total_strength()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->total_strength(), output);
  }
  
  // optional int32 cur_strength = 7;
  if (has_cur_strength()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->cur_strength(), output);
  }
  
  // optional int32 vip_buys = 8;
  if (has_vip_buys()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->vip_buys(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100163::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 give_times = 1;
  if (has_give_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->give_times(), target);
  }
  
  // optional int32 total_give_times = 2;
  if (has_total_give_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_give_times(), target);
  }
  
  // optional int32 get_times = 3;
  if (has_get_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->get_times(), target);
  }
  
  // optional int32 total_get_times = 4;
  if (has_total_get_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->total_get_times(), target);
  }
  
  // optional int32 can_get_times = 5;
  if (has_can_get_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->can_get_times(), target);
  }
  
  // optional int32 total_strength = 6;
  if (has_total_strength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->total_strength(), target);
  }
  
  // optional int32 cur_strength = 7;
  if (has_cur_strength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->cur_strength(), target);
  }
  
  // optional int32 vip_buys = 8;
  if (has_vip_buys()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->vip_buys(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100163::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 give_times = 1;
    if (has_give_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->give_times());
    }
    
    // optional int32 total_give_times = 2;
    if (has_total_give_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_give_times());
    }
    
    // optional int32 get_times = 3;
    if (has_get_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->get_times());
    }
    
    // optional int32 total_get_times = 4;
    if (has_total_get_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_get_times());
    }
    
    // optional int32 can_get_times = 5;
    if (has_can_get_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->can_get_times());
    }
    
    // optional int32 total_strength = 6;
    if (has_total_strength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_strength());
    }
    
    // optional int32 cur_strength = 7;
    if (has_cur_strength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_strength());
    }
    
    // optional int32 vip_buys = 8;
    if (has_vip_buys()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_buys());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100163::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100163* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100163*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100163::MergeFrom(const Proto50100163& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_give_times()) {
      set_give_times(from.give_times());
    }
    if (from.has_total_give_times()) {
      set_total_give_times(from.total_give_times());
    }
    if (from.has_get_times()) {
      set_get_times(from.get_times());
    }
    if (from.has_total_get_times()) {
      set_total_get_times(from.total_get_times());
    }
    if (from.has_can_get_times()) {
      set_can_get_times(from.can_get_times());
    }
    if (from.has_total_strength()) {
      set_total_strength(from.total_strength());
    }
    if (from.has_cur_strength()) {
      set_cur_strength(from.cur_strength());
    }
    if (from.has_vip_buys()) {
      set_vip_buys(from.vip_buys());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100163::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100163::CopyFrom(const Proto50100163& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100163::IsInitialized() const {
  
  return true;
}

void Proto50100163::Swap(Proto50100163* other) {
  if (other != this) {
    std::swap(give_times_, other->give_times_);
    std::swap(total_give_times_, other->total_give_times_);
    std::swap(get_times_, other->get_times_);
    std::swap(total_get_times_, other->total_get_times_);
    std::swap(can_get_times_, other->can_get_times_);
    std::swap(total_strength_, other->total_strength_);
    std::swap(cur_strength_, other->cur_strength_);
    std::swap(vip_buys_, other->vip_buys_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100163::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100163_descriptor_;
  metadata.reflection = Proto50100163_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100161::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto10100161::Proto10100161()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100161::InitAsDefaultInstance() {
}

Proto10100161::Proto10100161(const Proto10100161& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100161::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100161::~Proto10100161() {
  SharedDtor();
}

void Proto10100161::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100161::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100161::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100161_descriptor_;
}

const Proto10100161& Proto10100161::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto10100161* Proto10100161::default_instance_ = NULL;

Proto10100161* Proto10100161::New() const {
  return new Proto10100161;
}

void Proto10100161::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100161::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100161::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100161::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100161::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100161::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100161* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100161*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100161::MergeFrom(const Proto10100161& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100161::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100161::CopyFrom(const Proto10100161& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100161::IsInitialized() const {
  
  return true;
}

void Proto10100161::Swap(Proto10100161* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100161::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100161_descriptor_;
  metadata.reflection = Proto10100161_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400926::kLeftBossFieldNumber;
const int Proto80400926::kLeftMonsterFieldNumber;
const int Proto80400926::kTotalBossFieldNumber;
const int Proto80400926::kTotalMonsterFieldNumber;
#endif  // !_MSC_VER

Proto80400926::Proto80400926()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400926::InitAsDefaultInstance() {
}

Proto80400926::Proto80400926(const Proto80400926& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400926::SharedCtor() {
  _cached_size_ = 0;
  left_boss_ = 0;
  left_monster_ = 0;
  total_boss_ = 0;
  total_monster_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400926::~Proto80400926() {
  SharedDtor();
}

void Proto80400926::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400926::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400926::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400926_descriptor_;
}

const Proto80400926& Proto80400926::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto80400926* Proto80400926::default_instance_ = NULL;

Proto80400926* Proto80400926::New() const {
  return new Proto80400926;
}

void Proto80400926::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_boss_ = 0;
    left_monster_ = 0;
    total_boss_ = 0;
    total_monster_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400926::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_boss = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_boss_)));
          set_has_left_boss();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_left_monster;
        break;
      }
      
      // optional int32 left_monster = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_monster:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_monster_)));
          set_has_left_monster();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_total_boss;
        break;
      }
      
      // optional int32 total_boss = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_boss:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_boss_)));
          set_has_total_boss();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_total_monster;
        break;
      }
      
      // optional int32 total_monster = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_monster:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_monster_)));
          set_has_total_monster();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400926::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_boss = 1;
  if (has_left_boss()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_boss(), output);
  }
  
  // optional int32 left_monster = 2;
  if (has_left_monster()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_monster(), output);
  }
  
  // optional int32 total_boss = 3;
  if (has_total_boss()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_boss(), output);
  }
  
  // optional int32 total_monster = 4;
  if (has_total_monster()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->total_monster(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400926::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_boss = 1;
  if (has_left_boss()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_boss(), target);
  }
  
  // optional int32 left_monster = 2;
  if (has_left_monster()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_monster(), target);
  }
  
  // optional int32 total_boss = 3;
  if (has_total_boss()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_boss(), target);
  }
  
  // optional int32 total_monster = 4;
  if (has_total_monster()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->total_monster(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400926::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_boss = 1;
    if (has_left_boss()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_boss());
    }
    
    // optional int32 left_monster = 2;
    if (has_left_monster()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_monster());
    }
    
    // optional int32 total_boss = 3;
    if (has_total_boss()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_boss());
    }
    
    // optional int32 total_monster = 4;
    if (has_total_monster()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_monster());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400926::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400926* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400926*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400926::MergeFrom(const Proto80400926& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_boss()) {
      set_left_boss(from.left_boss());
    }
    if (from.has_left_monster()) {
      set_left_monster(from.left_monster());
    }
    if (from.has_total_boss()) {
      set_total_boss(from.total_boss());
    }
    if (from.has_total_monster()) {
      set_total_monster(from.total_monster());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400926::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400926::CopyFrom(const Proto80400926& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400926::IsInitialized() const {
  
  return true;
}

void Proto80400926::Swap(Proto80400926* other) {
  if (other != this) {
    std::swap(left_boss_, other->left_boss_);
    std::swap(left_monster_, other->left_monster_);
    std::swap(total_boss_, other->total_boss_);
    std::swap(total_monster_, other->total_monster_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400926::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400926_descriptor_;
  metadata.reflection = Proto80400926_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400657::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400657::Proto11400657()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400657::InitAsDefaultInstance() {
}

Proto11400657::Proto11400657(const Proto11400657& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400657::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400657::~Proto11400657() {
  SharedDtor();
}

void Proto11400657::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400657::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400657::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400657_descriptor_;
}

const Proto11400657& Proto11400657::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto11400657* Proto11400657::default_instance_ = NULL;

Proto11400657* Proto11400657::New() const {
  return new Proto11400657;
}

void Proto11400657::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400657::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400657::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400657::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400657::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400657::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400657* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400657*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400657::MergeFrom(const Proto11400657& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400657::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400657::CopyFrom(const Proto11400657& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400657::IsInitialized() const {
  
  return true;
}

void Proto11400657::Swap(Proto11400657* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400657::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400657_descriptor_;
  metadata.reflection = Proto11400657_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400657::kFashionIdFieldNumber;
const int Proto51400657::kIsOwnerFieldNumber;
#endif  // !_MSC_VER

Proto51400657::Proto51400657()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400657::InitAsDefaultInstance() {
}

Proto51400657::Proto51400657(const Proto51400657& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400657::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400657::~Proto51400657() {
  SharedDtor();
}

void Proto51400657::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400657::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400657::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400657_descriptor_;
}

const Proto51400657& Proto51400657::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto51400657* Proto51400657::default_instance_ = NULL;

Proto51400657* Proto51400657::New() const {
  return new Proto51400657;
}

void Proto51400657::Clear() {
  fashion_id_.Clear();
  is_owner_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400657::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 fashion_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_fashion_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_fashion_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_fashion_id;
        if (input->ExpectTag(16)) goto parse_is_owner;
        break;
      }
      
      // repeated int32 is_owner = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_owner:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_is_owner())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_is_owner())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_owner;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400657::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 fashion_id = 1;
  for (int i = 0; i < this->fashion_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->fashion_id(i), output);
  }
  
  // repeated int32 is_owner = 2;
  for (int i = 0; i < this->is_owner_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->is_owner(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400657::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 fashion_id = 1;
  for (int i = 0; i < this->fashion_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->fashion_id(i), target);
  }
  
  // repeated int32 is_owner = 2;
  for (int i = 0; i < this->is_owner_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->is_owner(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400657::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 fashion_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->fashion_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->fashion_id(i));
    }
    total_size += 1 * this->fashion_id_size() + data_size;
  }
  
  // repeated int32 is_owner = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->is_owner_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->is_owner(i));
    }
    total_size += 1 * this->is_owner_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400657::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400657* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400657*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400657::MergeFrom(const Proto51400657& from) {
  GOOGLE_CHECK_NE(&from, this);
  fashion_id_.MergeFrom(from.fashion_id_);
  is_owner_.MergeFrom(from.is_owner_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400657::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400657::CopyFrom(const Proto51400657& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400657::IsInitialized() const {
  
  return true;
}

void Proto51400657::Swap(Proto51400657* other) {
  if (other != this) {
    fashion_id_.Swap(&other->fashion_id_);
    is_owner_.Swap(&other->is_owner_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400657::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400657_descriptor_;
  metadata.reflection = Proto51400657_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400658::kFashionIdFieldNumber;
#endif  // !_MSC_VER

Proto11400658::Proto11400658()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400658::InitAsDefaultInstance() {
}

Proto11400658::Proto11400658(const Proto11400658& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400658::SharedCtor() {
  _cached_size_ = 0;
  fashion_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400658::~Proto11400658() {
  SharedDtor();
}

void Proto11400658::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400658::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400658::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400658_descriptor_;
}

const Proto11400658& Proto11400658::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto11400658* Proto11400658::default_instance_ = NULL;

Proto11400658* Proto11400658::New() const {
  return new Proto11400658;
}

void Proto11400658::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fashion_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400658::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fashion_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400658::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fashion_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400658::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fashion_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400658::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fashion_id = 1;
    if (has_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400658::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400658* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400658*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400658::MergeFrom(const Proto11400658& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400658::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400658::CopyFrom(const Proto11400658& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400658::IsInitialized() const {
  
  return true;
}

void Proto11400658::Swap(Proto11400658* other) {
  if (other != this) {
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400658::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400658_descriptor_;
  metadata.reflection = Proto11400658_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100162::kOneMountFieldNumber;
#endif  // !_MSC_VER

Proto10100162::Proto10100162()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100162::InitAsDefaultInstance() {
}

Proto10100162::Proto10100162(const Proto10100162& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100162::SharedCtor() {
  _cached_size_ = 0;
  one_mount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100162::~Proto10100162() {
  SharedDtor();
}

void Proto10100162::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100162::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100162::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100162_descriptor_;
}

const Proto10100162& Proto10100162::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto10100162* Proto10100162::default_instance_ = NULL;

Proto10100162* Proto10100162::New() const {
  return new Proto10100162;
}

void Proto10100162::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    one_mount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100162::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 one_mount = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &one_mount_)));
          set_has_one_mount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100162::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 one_mount = 1;
  if (has_one_mount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->one_mount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100162::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 one_mount = 1;
  if (has_one_mount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->one_mount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100162::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 one_mount = 1;
    if (has_one_mount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->one_mount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100162::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100162* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100162*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100162::MergeFrom(const Proto10100162& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_one_mount()) {
      set_one_mount(from.one_mount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100162::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100162::CopyFrom(const Proto10100162& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100162::IsInitialized() const {
  
  return true;
}

void Proto10100162::Swap(Proto10100162* other) {
  if (other != this) {
    std::swap(one_mount_, other->one_mount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100162::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100162_descriptor_;
  metadata.reflection = Proto10100162_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400911::kRecordListFieldNumber;
const int Proto81400911::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto81400911::Proto81400911()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400911::InitAsDefaultInstance() {
}

Proto81400911::Proto81400911(const Proto81400911& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400911::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400911::~Proto81400911() {
  SharedDtor();
}

void Proto81400911::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400911::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400911::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400911_descriptor_;
}

const Proto81400911& Proto81400911::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto81400911* Proto81400911::default_instance_ = NULL;

Proto81400911* Proto81400911::New() const {
  return new Proto81400911;
}

void Proto81400911::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    type_ = 0;
  }
  record_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400911::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoDivineRecord record_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_record_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_record_list;
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400911::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoDivineRecord record_list = 1;
  for (int i = 0; i < this->record_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->record_list(i), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400911::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoDivineRecord record_list = 1;
  for (int i = 0; i < this->record_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->record_list(i), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400911::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  // repeated .ProtoDivineRecord record_list = 1;
  total_size += 1 * this->record_list_size();
  for (int i = 0; i < this->record_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400911::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400911* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400911*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400911::MergeFrom(const Proto81400911& from) {
  GOOGLE_CHECK_NE(&from, this);
  record_list_.MergeFrom(from.record_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400911::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400911::CopyFrom(const Proto81400911& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400911::IsInitialized() const {
  
  return true;
}

void Proto81400911::Swap(Proto81400911* other) {
  if (other != this) {
    record_list_.Swap(&other->record_list_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400911::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400911_descriptor_;
  metadata.reflection = Proto81400911_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101802::kType1FieldNumber;
const int Proto10101802::kType2FieldNumber;
#endif  // !_MSC_VER

Proto10101802::Proto10101802()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101802::InitAsDefaultInstance() {
}

Proto10101802::Proto10101802(const Proto10101802& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101802::SharedCtor() {
  _cached_size_ = 0;
  type1_ = 0;
  type2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101802::~Proto10101802() {
  SharedDtor();
}

void Proto10101802::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101802::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101802::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101802_descriptor_;
}

const Proto10101802& Proto10101802::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto10101802* Proto10101802::default_instance_ = NULL;

Proto10101802* Proto10101802::New() const {
  return new Proto10101802;
}

void Proto10101802::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type1_ = 0;
    type2_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101802::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type1 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type1_)));
          set_has_type1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type2;
        break;
      }
      
      // optional int32 type2 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type2_)));
          set_has_type2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101802::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type1 = 1;
  if (has_type1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type1(), output);
  }
  
  // optional int32 type2 = 2;
  if (has_type2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type2(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101802::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type1 = 1;
  if (has_type1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type1(), target);
  }
  
  // optional int32 type2 = 2;
  if (has_type2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type2(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101802::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type1 = 1;
    if (has_type1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type1());
    }
    
    // optional int32 type2 = 2;
    if (has_type2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type2());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101802::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101802* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101802*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101802::MergeFrom(const Proto10101802& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type1()) {
      set_type1(from.type1());
    }
    if (from.has_type2()) {
      set_type2(from.type2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101802::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101802::CopyFrom(const Proto10101802& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101802::IsInitialized() const {
  
  return true;
}

void Proto10101802::Swap(Proto10101802* other) {
  if (other != this) {
    std::swap(type1_, other->type1_);
    std::swap(type2_, other->type2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101802::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101802_descriptor_;
  metadata.reflection = Proto10101802_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101801::kLeftTimeFieldNumber;
const int Proto50101801::kItemListFieldNumber;
const int Proto50101801::kStartTickFieldNumber;
const int Proto50101801::kEndTickFieldNumber;
const int Proto50101801::kLeftTickFieldNumber;
const int Proto50101801::kTypeFieldNumber;
const int Proto50101801::kCostFieldNumber;
const int Proto50101801::kBaselineFieldNumber;
#endif  // !_MSC_VER

Proto50101801::Proto50101801()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101801::InitAsDefaultInstance() {
}

Proto50101801::Proto50101801(const Proto50101801& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101801::SharedCtor() {
  _cached_size_ = 0;
  left_time_ = 0;
  start_tick_ = GOOGLE_LONGLONG(0);
  end_tick_ = GOOGLE_LONGLONG(0);
  left_tick_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  baseline_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101801::~Proto50101801() {
  SharedDtor();
}

void Proto50101801::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50101801::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101801::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101801_descriptor_;
}

const Proto50101801& Proto50101801::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto50101801* Proto50101801::default_instance_ = NULL;

Proto50101801* Proto50101801::New() const {
  return new Proto50101801;
}

void Proto50101801::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_time_ = 0;
    start_tick_ = GOOGLE_LONGLONG(0);
    end_tick_ = GOOGLE_LONGLONG(0);
    left_tick_ = GOOGLE_LONGLONG(0);
    type_ = 0;
    baseline_ = 0;
  }
  item_list_.Clear();
  cost_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101801::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoItem item_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item_list;
        if (input->ExpectTag(24)) goto parse_start_tick;
        break;
      }
      
      // optional int64 start_tick = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_tick_)));
          set_has_start_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_end_tick;
        break;
      }
      
      // optional int64 end_tick = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_tick_)));
          set_has_end_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_left_tick;
        break;
      }
      
      // optional int64 left_tick = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &left_tick_)));
          set_has_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_type;
        break;
      }
      
      // optional int32 type = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_cost;
        break;
      }
      
      // repeated int32 cost = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_cost())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cost())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_cost;
        if (input->ExpectTag(64)) goto parse_baseline;
        break;
      }
      
      // optional int32 baseline = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_baseline:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &baseline_)));
          set_has_baseline();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101801::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_time = 1;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_time(), output);
  }
  
  // repeated .ProtoItem item_list = 2;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item_list(i), output);
  }
  
  // optional int64 start_tick = 3;
  if (has_start_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->start_tick(), output);
  }
  
  // optional int64 end_tick = 4;
  if (has_end_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->end_tick(), output);
  }
  
  // optional int64 left_tick = 5;
  if (has_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->left_tick(), output);
  }
  
  // optional int32 type = 6;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->type(), output);
  }
  
  // repeated int32 cost = 7;
  for (int i = 0; i < this->cost_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->cost(i), output);
  }
  
  // optional int32 baseline = 8;
  if (has_baseline()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->baseline(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101801::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_time = 1;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_time(), target);
  }
  
  // repeated .ProtoItem item_list = 2;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item_list(i), target);
  }
  
  // optional int64 start_tick = 3;
  if (has_start_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->start_tick(), target);
  }
  
  // optional int64 end_tick = 4;
  if (has_end_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->end_tick(), target);
  }
  
  // optional int64 left_tick = 5;
  if (has_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->left_tick(), target);
  }
  
  // optional int32 type = 6;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->type(), target);
  }
  
  // repeated int32 cost = 7;
  for (int i = 0; i < this->cost_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->cost(i), target);
  }
  
  // optional int32 baseline = 8;
  if (has_baseline()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->baseline(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101801::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_time = 1;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int64 start_tick = 3;
    if (has_start_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_tick());
    }
    
    // optional int64 end_tick = 4;
    if (has_end_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_tick());
    }
    
    // optional int64 left_tick = 5;
    if (has_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->left_tick());
    }
    
    // optional int32 type = 6;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 baseline = 8;
    if (has_baseline()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->baseline());
    }
    
  }
  // repeated .ProtoItem item_list = 2;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  // repeated int32 cost = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->cost_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->cost(i));
    }
    total_size += 1 * this->cost_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101801::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101801* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101801*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101801::MergeFrom(const Proto50101801& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  cost_.MergeFrom(from.cost_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_start_tick()) {
      set_start_tick(from.start_tick());
    }
    if (from.has_end_tick()) {
      set_end_tick(from.end_tick());
    }
    if (from.has_left_tick()) {
      set_left_tick(from.left_tick());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_baseline()) {
      set_baseline(from.baseline());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101801::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101801::CopyFrom(const Proto50101801& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101801::IsInitialized() const {
  
  return true;
}

void Proto50101801::Swap(Proto50101801* other) {
  if (other != this) {
    std::swap(left_time_, other->left_time_);
    item_list_.Swap(&other->item_list_);
    std::swap(start_tick_, other->start_tick_);
    std::swap(end_tick_, other->end_tick_);
    std::swap(left_tick_, other->left_tick_);
    std::swap(type_, other->type_);
    cost_.Swap(&other->cost_);
    std::swap(baseline_, other->baseline_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101801::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101801_descriptor_;
  metadata.reflection = Proto50101801_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101802::kType1FieldNumber;
const int Proto50101802::kType2FieldNumber;
const int Proto50101802::kItemIndexListFieldNumber;
const int Proto50101802::kLeftTimeFieldNumber;
#endif  // !_MSC_VER

Proto50101802::Proto50101802()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101802::InitAsDefaultInstance() {
}

Proto50101802::Proto50101802(const Proto50101802& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101802::SharedCtor() {
  _cached_size_ = 0;
  type1_ = 0;
  type2_ = 0;
  left_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101802::~Proto50101802() {
  SharedDtor();
}

void Proto50101802::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50101802::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101802::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101802_descriptor_;
}

const Proto50101802& Proto50101802::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto50101802* Proto50101802::default_instance_ = NULL;

Proto50101802* Proto50101802::New() const {
  return new Proto50101802;
}

void Proto50101802::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type1_ = 0;
    type2_ = 0;
    left_time_ = 0;
  }
  item_index_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101802::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type1 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type1_)));
          set_has_type1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type2;
        break;
      }
      
      // optional int32 type2 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type2_)));
          set_has_type2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_index_list;
        break;
      }
      
      // repeated int32 item_index_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_index_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_item_index_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item_index_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_index_list;
        if (input->ExpectTag(32)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101802::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type1 = 1;
  if (has_type1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type1(), output);
  }
  
  // optional int32 type2 = 2;
  if (has_type2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type2(), output);
  }
  
  // repeated int32 item_index_list = 3;
  for (int i = 0; i < this->item_index_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->item_index_list(i), output);
  }
  
  // optional int32 left_time = 4;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->left_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101802::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type1 = 1;
  if (has_type1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type1(), target);
  }
  
  // optional int32 type2 = 2;
  if (has_type2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type2(), target);
  }
  
  // repeated int32 item_index_list = 3;
  for (int i = 0; i < this->item_index_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->item_index_list(i), target);
  }
  
  // optional int32 left_time = 4;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->left_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101802::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type1 = 1;
    if (has_type1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type1());
    }
    
    // optional int32 type2 = 2;
    if (has_type2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type2());
    }
    
    // optional int32 left_time = 4;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
  }
  // repeated int32 item_index_list = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_index_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item_index_list(i));
    }
    total_size += 1 * this->item_index_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101802::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101802* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101802*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101802::MergeFrom(const Proto50101802& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_index_list_.MergeFrom(from.item_index_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type1()) {
      set_type1(from.type1());
    }
    if (from.has_type2()) {
      set_type2(from.type2());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101802::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101802::CopyFrom(const Proto50101802& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101802::IsInitialized() const {
  
  return true;
}

void Proto50101802::Swap(Proto50101802* other) {
  if (other != this) {
    std::swap(type1_, other->type1_);
    std::swap(type2_, other->type2_);
    item_index_list_.Swap(&other->item_index_list_);
    std::swap(left_time_, other->left_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101802::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101802_descriptor_;
  metadata.reflection = Proto50101802_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101801::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto10101801::Proto10101801()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101801::InitAsDefaultInstance() {
}

Proto10101801::Proto10101801(const Proto10101801& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101801::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101801::~Proto10101801() {
  SharedDtor();
}

void Proto10101801::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101801::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101801::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101801_descriptor_;
}

const Proto10101801& Proto10101801::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto10101801* Proto10101801::default_instance_ = NULL;

Proto10101801* Proto10101801::New() const {
  return new Proto10101801;
}

void Proto10101801::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101801::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101801::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101801::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101801::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101801::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101801* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101801*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101801::MergeFrom(const Proto10101801& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101801::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101801::CopyFrom(const Proto10101801& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101801::IsInitialized() const {
  
  return true;
}

void Proto10101801::Swap(Proto10101801* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101801::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101801_descriptor_;
  metadata.reflection = Proto10101801_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400912::kStateFieldNumber;
#endif  // !_MSC_VER

Proto81400912::Proto81400912()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400912::InitAsDefaultInstance() {
}

Proto81400912::Proto81400912(const Proto81400912& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400912::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400912::~Proto81400912() {
  SharedDtor();
}

void Proto81400912::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400912::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400912::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400912_descriptor_;
}

const Proto81400912& Proto81400912::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto81400912* Proto81400912::default_instance_ = NULL;

Proto81400912* Proto81400912::New() const {
  return new Proto81400912;
}

void Proto81400912::Clear() {
  state_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400912::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_state())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_state())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_state;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400912::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 state = 1;
  for (int i = 0; i < this->state_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->state(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400912::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 state = 1;
  for (int i = 0; i < this->state_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->state(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400912::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 state = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->state_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->state(i));
    }
    total_size += 1 * this->state_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400912::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400912* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400912*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400912::MergeFrom(const Proto81400912& from) {
  GOOGLE_CHECK_NE(&from, this);
  state_.MergeFrom(from.state_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400912::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400912::CopyFrom(const Proto81400912& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400912::IsInitialized() const {
  
  return true;
}

void Proto81400912::Swap(Proto81400912* other) {
  if (other != this) {
    state_.Swap(&other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400912::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400912_descriptor_;
  metadata.reflection = Proto81400912_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401462::kItemListFieldNumber;
const int Proto51401462::kDownloadUrlFieldNumber;
#endif  // !_MSC_VER

Proto51401462::Proto51401462()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401462::InitAsDefaultInstance() {
}

Proto51401462::Proto51401462(const Proto51401462& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401462::SharedCtor() {
  _cached_size_ = 0;
  download_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401462::~Proto51401462() {
  SharedDtor();
}

void Proto51401462::SharedDtor() {
  if (download_url_ != &::google::protobuf::internal::kEmptyString) {
    delete download_url_;
  }
  if (this != default_instance_) {
  }
}

void Proto51401462::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401462::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401462_descriptor_;
}

const Proto51401462& Proto51401462::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto51401462* Proto51401462::default_instance_ = NULL;

Proto51401462* Proto51401462::New() const {
  return new Proto51401462;
}

void Proto51401462::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_download_url()) {
      if (download_url_ != &::google::protobuf::internal::kEmptyString) {
        download_url_->clear();
      }
    }
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401462::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_list;
        if (input->ExpectTag(18)) goto parse_download_url;
        break;
      }
      
      // optional string download_url = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_download_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_download_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->download_url().data(), this->download_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401462::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(i), output);
  }
  
  // optional string download_url = 2;
  if (has_download_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->download_url().data(), this->download_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->download_url(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401462::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_list(i), target);
  }
  
  // optional string download_url = 2;
  if (has_download_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->download_url().data(), this->download_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->download_url(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401462::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string download_url = 2;
    if (has_download_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->download_url());
    }
    
  }
  // repeated .ProtoItem item_list = 1;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401462::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401462* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401462*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401462::MergeFrom(const Proto51401462& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_download_url()) {
      set_download_url(from.download_url());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401462::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401462::CopyFrom(const Proto51401462& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401462::IsInitialized() const {
  
  return true;
}

void Proto51401462::Swap(Proto51401462* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(download_url_, other->download_url_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401462::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401462_descriptor_;
  metadata.reflection = Proto51401462_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401902::kHiddenSetFieldNumber;
#endif  // !_MSC_VER

Proto81401902::Proto81401902()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401902::InitAsDefaultInstance() {
}

Proto81401902::Proto81401902(const Proto81401902& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401902::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401902::~Proto81401902() {
  SharedDtor();
}

void Proto81401902::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401902::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401902::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401902_descriptor_;
}

const Proto81401902& Proto81401902::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient014_2eproto();  return *default_instance_;
}

Proto81401902* Proto81401902::default_instance_ = NULL;

Proto81401902* Proto81401902::New() const {
  return new Proto81401902;
}

void Proto81401902::Clear() {
  hidden_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401902::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 hidden_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hidden_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_hidden_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_hidden_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_hidden_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401902::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 hidden_set = 1;
  for (int i = 0; i < this->hidden_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->hidden_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401902::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 hidden_set = 1;
  for (int i = 0; i < this->hidden_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->hidden_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401902::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 hidden_set = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->hidden_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->hidden_set(i));
    }
    total_size += 1 * this->hidden_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401902::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401902* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401902*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401902::MergeFrom(const Proto81401902& from) {
  GOOGLE_CHECK_NE(&from, this);
  hidden_set_.MergeFrom(from.hidden_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401902::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401902::CopyFrom(const Proto81401902& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401902::IsInitialized() const {
  
  return true;
}

void Proto81401902::Swap(Proto81401902* other) {
  if (other != this) {
    hidden_set_.Swap(&other->hidden_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401902::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401902_descriptor_;
  metadata.reflection = Proto81401902_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
