// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient002.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto81400104_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400104_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400112_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400112_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400111_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400111_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400111_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400111_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100101_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100101_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400201_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400201_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400203_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400203_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400203_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400203_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400201_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400201_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400202_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400202_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400203_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400203_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400205_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400205_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400206_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400206_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100150_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100150_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100151_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100151_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100152_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100152_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100153_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100153_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100150_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100150_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100151_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100151_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100152_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100152_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100153_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100153_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100154_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100154_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100501_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100501_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100502_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100502_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100503_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100503_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100504_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100504_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100505_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100505_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100506_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100506_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100501_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100501_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100155_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100155_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100155_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100155_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400132_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400132_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400133_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400133_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100504_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100504_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400301_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400301_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400301_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400301_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400302_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400302_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400302_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400302_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400304_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400304_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400306_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400306_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400307_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400307_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100507_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100507_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100507_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100507_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100012_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100012_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400401_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400401_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400401_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400401_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400402_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400402_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400402_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400402_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400403_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400403_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400403_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400403_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient002_2eproto() {
  protobuf_AddDesc_ProtoClient002_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient002.proto");
  GOOGLE_CHECK(file != NULL);
  Proto81400104_descriptor_ = file->message_type(0);
  static const int Proto81400104_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400104, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400104, task_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400104, is_finish_guide_),
  };
  Proto81400104_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400104_descriptor_,
      Proto81400104::default_instance_,
      Proto81400104_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400104, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400104, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400104));
  Proto51400112_descriptor_ = file->message_type(1);
  static const int Proto51400112_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400112, force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400112, equip_list_),
  };
  Proto51400112_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400112_descriptor_,
      Proto51400112::default_instance_,
      Proto51400112_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400112, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400112, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400112));
  Proto11400111_descriptor_ = file->message_type(2);
  static const int Proto11400111_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400111, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400111, pack_type_),
  };
  Proto11400111_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400111_descriptor_,
      Proto11400111::default_instance_,
      Proto11400111_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400111, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400111, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400111));
  Proto51400111_descriptor_ = file->message_type(3);
  static const int Proto51400111_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400111, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400111, pack_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400111, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400111, item_bind_),
  };
  Proto51400111_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400111_descriptor_,
      Proto51400111::default_instance_,
      Proto51400111_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400111, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400111, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400111));
  Proto80100101_descriptor_ = file->message_type(4);
  static const int Proto80100101_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100101, friend_info_),
  };
  Proto80100101_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100101_descriptor_,
      Proto80100101::default_instance_,
      Proto80100101_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100101, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100101, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100101));
  Proto10400201_descriptor_ = file->message_type(5);
  static const int Proto10400201_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400201, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400201, skill_pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400201, skill_pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400201, target_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400201, skill_step_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400201, skill_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400201, from_skill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400201, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400201, target_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400201, cur_coord_),
  };
  Proto10400201_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400201_descriptor_,
      Proto10400201::default_instance_,
      Proto10400201_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400201, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400201, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400201));
  Proto10400203_descriptor_ = file->message_type(6);
  static const int Proto10400203_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400203, relive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400203, item_id_),
  };
  Proto10400203_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400203_descriptor_,
      Proto10400203::default_instance_,
      Proto10400203_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400203, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400203, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400203));
  Proto50400203_descriptor_ = file->message_type(7);
  static const int Proto50400203_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400203, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400203, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400203, pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400203, space_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400203, cur_blood_),
  };
  Proto50400203_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400203_descriptor_,
      Proto50400203::default_instance_,
      Proto50400203_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400203, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400203, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400203));
  Proto80400201_descriptor_ = file->message_type(8);
  static const int Proto80400201_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400201, fighter_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400201, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400201, skill_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400201, skill_pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400201, skill_pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400201, target_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400201, skill_step_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400201, is_full_screen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400201, strength_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400201, passive_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400201, add_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400201, target_id_),
  };
  Proto80400201_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400201_descriptor_,
      Proto80400201::default_instance_,
      Proto80400201_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400201, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400201, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400201));
  Proto80400202_descriptor_ = file->message_type(9);
  static const int Proto80400202_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400202, fighter_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400202, fight_info_),
  };
  Proto80400202_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400202_descriptor_,
      Proto80400202::default_instance_,
      Proto80400202_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400202, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400202, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400202));
  Proto80400203_descriptor_ = file->message_type(10);
  static const int Proto80400203_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400203, fighter_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400203, status_id_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400203, status_list_),
  };
  Proto80400203_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400203_descriptor_,
      Proto80400203::default_instance_,
      Proto80400203_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400203, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400203, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400203));
  Proto80400205_descriptor_ = file->message_type(11);
  static const int Proto80400205_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400205, fighter_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400205, status_),
  };
  Proto80400205_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400205_descriptor_,
      Proto80400205::default_instance_,
      Proto80400205_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400205, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400205, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400205));
  Proto80400206_descriptor_ = file->message_type(12);
  static const int Proto80400206_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400206, force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400206, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400206, attack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400206, defence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400206, max_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400206, hit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400206, avoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400206, crit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400206, toughness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400206, crit_hurt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400206, damage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400206, reduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400206, pk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400206, glamour_),
  };
  Proto80400206_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400206_descriptor_,
      Proto80400206::default_instance_,
      Proto80400206_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400206, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400206, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400206));
  Proto10100150_descriptor_ = file->message_type(13);
  static const int Proto10100150_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100150, friend_type_),
  };
  Proto10100150_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100150_descriptor_,
      Proto10100150::default_instance_,
      Proto10100150_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100150, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100150, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100150));
  Proto10100151_descriptor_ = file->message_type(14);
  static const int Proto10100151_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100151, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100151, friend_type_),
  };
  Proto10100151_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100151_descriptor_,
      Proto10100151::default_instance_,
      Proto10100151_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100151, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100151, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100151));
  Proto10100152_descriptor_ = file->message_type(15);
  static const int Proto10100152_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100152, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100152, src_friend_type_),
  };
  Proto10100152_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100152_descriptor_,
      Proto10100152::default_instance_,
      Proto10100152_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100152, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100152, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100152));
  Proto10100153_descriptor_ = file->message_type(16);
  static const int Proto10100153_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100153, name_),
  };
  Proto10100153_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100153_descriptor_,
      Proto10100153::default_instance_,
      Proto10100153_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100153, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100153, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100153));
  Proto50100150_descriptor_ = file->message_type(17);
  static const int Proto50100150_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100150, friend_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100150, friend_list_),
  };
  Proto50100150_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100150_descriptor_,
      Proto50100150::default_instance_,
      Proto50100150_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100150, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100150, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100150));
  Proto50100151_descriptor_ = file->message_type(18);
  static const int Proto50100151_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100151, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100151, src_friend_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100151, des_friend_type_),
  };
  Proto50100151_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100151_descriptor_,
      Proto50100151::default_instance_,
      Proto50100151_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100151, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100151, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100151));
  Proto50100152_descriptor_ = file->message_type(19);
  static const int Proto50100152_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100152, role_set_),
  };
  Proto50100152_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100152_descriptor_,
      Proto50100152::default_instance_,
      Proto50100152_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100152, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100152, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100152));
  Proto50100153_descriptor_ = file->message_type(20);
  static const int Proto50100153_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100153, friend_info_),
  };
  Proto50100153_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100153_descriptor_,
      Proto50100153::default_instance_,
      Proto50100153_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100153, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100153, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100153));
  Proto50100154_descriptor_ = file->message_type(21);
  static const int Proto50100154_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100154, friend_list_),
  };
  Proto50100154_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100154_descriptor_,
      Proto50100154::default_instance_,
      Proto50100154_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100154, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100154, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100154));
  Proto10100501_descriptor_ = file->message_type(22);
  static const int Proto10100501_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100501, main_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100501, sub_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100501, page_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100501, sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100501, type_),
  };
  Proto10100501_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100501_descriptor_,
      Proto10100501::default_instance_,
      Proto10100501_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100501, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100501, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100501));
  Proto10100502_descriptor_ = file->message_type(23);
  static const int Proto10100502_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100502, money_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100502, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100502, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100502, price_),
  };
  Proto10100502_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100502_descriptor_,
      Proto10100502::default_instance_,
      Proto10100502_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100502, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100502, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100502));
  Proto10100503_descriptor_ = file->message_type(24);
  static const int Proto10100503_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100503, market_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100503, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100503, buy_amount_),
  };
  Proto10100503_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100503_descriptor_,
      Proto10100503::default_instance_,
      Proto10100503_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100503, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100503, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100503));
  Proto10100504_descriptor_ = file->message_type(25);
  static const int Proto10100504_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100504, page_index_),
  };
  Proto10100504_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100504_descriptor_,
      Proto10100504::default_instance_,
      Proto10100504_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100504, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100504, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100504));
  Proto10100505_descriptor_ = file->message_type(26);
  static const int Proto10100505_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100505, market_index_),
  };
  Proto10100505_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100505_descriptor_,
      Proto10100505::default_instance_,
      Proto10100505_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100505, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100505, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100505));
  Proto10100506_descriptor_ = file->message_type(27);
  static const int Proto10100506_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100506, market_index_),
  };
  Proto10100506_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100506_descriptor_,
      Proto10100506::default_instance_,
      Proto10100506_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100506, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100506, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100506));
  Proto50100501_descriptor_ = file->message_type(28);
  static const int Proto50100501_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100501, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100501, main_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100501, sub_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100501, page_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100501, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100501, market_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100501, buy_times_),
  };
  Proto50100501_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100501_descriptor_,
      Proto50100501::default_instance_,
      Proto50100501_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100501, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100501, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100501));
  Proto10100155_descriptor_ = file->message_type(29);
  static const int Proto10100155_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100155, role_id_),
  };
  Proto10100155_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100155_descriptor_,
      Proto10100155::default_instance_,
      Proto10100155_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100155, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100155, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100155));
  Proto50100155_descriptor_ = file->message_type(30);
  static const int Proto50100155_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100155, friend_info_),
  };
  Proto50100155_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100155_descriptor_,
      Proto50100155::default_instance_,
      Proto50100155_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100155, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100155, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100155));
  Proto11400132_descriptor_ = file->message_type(31);
  static const int Proto11400132_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400132, index_),
  };
  Proto11400132_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400132_descriptor_,
      Proto11400132::default_instance_,
      Proto11400132_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400132, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400132, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400132));
  Proto51400133_descriptor_ = file->message_type(32);
  static const int Proto51400133_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400133, sellout_set_),
  };
  Proto51400133_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400133_descriptor_,
      Proto51400133::default_instance_,
      Proto51400133_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400133, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400133, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400133));
  Proto50100504_descriptor_ = file->message_type(33);
  static const int Proto50100504_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100504, onsell_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100504, page_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100504, total_page_),
  };
  Proto50100504_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100504_descriptor_,
      Proto50100504::default_instance_,
      Proto50100504_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100504, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100504, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100504));
  Proto11400301_descriptor_ = file->message_type(34);
  static const int Proto11400301_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400301, page_index_),
  };
  Proto11400301_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400301_descriptor_,
      Proto11400301::default_instance_,
      Proto11400301_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400301, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400301, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400301));
  Proto51400301_descriptor_ = file->message_type(35);
  static const int Proto51400301_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400301, mail_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400301, deposit_mail_amount_),
  };
  Proto51400301_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400301_descriptor_,
      Proto51400301::default_instance_,
      Proto51400301_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400301, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400301, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400301));
  Proto11400302_descriptor_ = file->message_type(36);
  static const int Proto11400302_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400302, mail_id_),
  };
  Proto11400302_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400302_descriptor_,
      Proto11400302::default_instance_,
      Proto11400302_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400302, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400302, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400302));
  Proto51400302_descriptor_ = file->message_type(37);
  static const int Proto51400302_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400302, mail_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400302, mail_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400302, role_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400302, mail_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400302, mail_content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400302, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400302, coupon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400302, copper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400302, bind_copper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400302, goods_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400302, left_minute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400302, sender_vip_),
  };
  Proto51400302_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400302_descriptor_,
      Proto51400302::default_instance_,
      Proto51400302_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400302, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400302, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400302));
  Proto11400304_descriptor_ = file->message_type(38);
  static const int Proto11400304_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400304, mail_id_),
  };
  Proto11400304_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400304_descriptor_,
      Proto11400304::default_instance_,
      Proto11400304_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400304, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400304, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400304));
  Proto11400306_descriptor_ = file->message_type(39);
  static const int Proto11400306_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400306, del_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400306, del_list_),
  };
  Proto11400306_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400306_descriptor_,
      Proto11400306::default_instance_,
      Proto11400306_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400306, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400306, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400306));
  Proto11400307_descriptor_ = file->message_type(40);
  static const int Proto11400307_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400307, receiver_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400307, mail_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400307, mail_content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400307, mail_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400307, mail_copper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400307, attach_list_),
  };
  Proto11400307_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400307_descriptor_,
      Proto11400307::default_instance_,
      Proto11400307_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400307, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400307, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400307));
  Proto10100507_descriptor_ = file->message_type(41);
  static const int Proto10100507_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100507, item_id_),
  };
  Proto10100507_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100507_descriptor_,
      Proto10100507::default_instance_,
      Proto10100507_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100507, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100507, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100507));
  Proto50100507_descriptor_ = file->message_type(42);
  static const int Proto50100507_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100507, low_price_),
  };
  Proto50100507_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100507_descriptor_,
      Proto50100507::default_instance_,
      Proto50100507_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100507, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100507, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100507));
  Proto50100012_descriptor_ = file->message_type(43);
  static const int Proto50100012_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100012, shop_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100012, shop_set_),
  };
  Proto50100012_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100012_descriptor_,
      Proto50100012::default_instance_,
      Proto50100012_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100012, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100012, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100012));
  Proto11400401_descriptor_ = file->message_type(44);
  static const int Proto11400401_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400401, type_),
  };
  Proto11400401_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400401_descriptor_,
      Proto11400401::default_instance_,
      Proto11400401_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400401, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400401, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400401));
  Proto51400401_descriptor_ = file->message_type(45);
  static const int Proto51400401_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400401, mount_grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400401, hidden_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400401, mount_shape_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400401, force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400401, bless_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400401, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400401, prop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400401, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400401, ability_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400401, growth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400401, temp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400401, skill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400401, act_shape_),
  };
  Proto51400401_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400401_descriptor_,
      Proto51400401::default_instance_,
      Proto51400401_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400401, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400401, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400401));
  Proto11400402_descriptor_ = file->message_type(46);
  static const int Proto11400402_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400402, auto_buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400402, type_),
  };
  Proto11400402_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400402_descriptor_,
      Proto11400402::default_instance_,
      Proto11400402_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400402, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400402, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400402));
  Proto51400402_descriptor_ = file->message_type(47);
  static const int Proto51400402_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400402, eva_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400402, mount_grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400402, bless_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400402, force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400402, type_),
  };
  Proto51400402_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400402_descriptor_,
      Proto51400402::default_instance_,
      Proto51400402_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400402, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400402, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400402));
  Proto11400403_descriptor_ = file->message_type(48);
  static const int Proto11400403_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400403, type_),
  };
  Proto11400403_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400403_descriptor_,
      Proto11400403::default_instance_,
      Proto11400403_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400403, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400403, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400403));
  Proto51400403_descriptor_ = file->message_type(49);
  static const int Proto51400403_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400403, type_),
  };
  Proto51400403_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400403_descriptor_,
      Proto51400403::default_instance_,
      Proto51400403_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400403, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400403, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400403));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient002_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400104_descriptor_, &Proto81400104::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400112_descriptor_, &Proto51400112::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400111_descriptor_, &Proto11400111::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400111_descriptor_, &Proto51400111::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100101_descriptor_, &Proto80100101::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400201_descriptor_, &Proto10400201::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400203_descriptor_, &Proto10400203::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400203_descriptor_, &Proto50400203::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400201_descriptor_, &Proto80400201::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400202_descriptor_, &Proto80400202::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400203_descriptor_, &Proto80400203::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400205_descriptor_, &Proto80400205::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400206_descriptor_, &Proto80400206::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100150_descriptor_, &Proto10100150::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100151_descriptor_, &Proto10100151::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100152_descriptor_, &Proto10100152::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100153_descriptor_, &Proto10100153::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100150_descriptor_, &Proto50100150::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100151_descriptor_, &Proto50100151::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100152_descriptor_, &Proto50100152::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100153_descriptor_, &Proto50100153::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100154_descriptor_, &Proto50100154::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100501_descriptor_, &Proto10100501::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100502_descriptor_, &Proto10100502::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100503_descriptor_, &Proto10100503::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100504_descriptor_, &Proto10100504::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100505_descriptor_, &Proto10100505::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100506_descriptor_, &Proto10100506::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100501_descriptor_, &Proto50100501::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100155_descriptor_, &Proto10100155::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100155_descriptor_, &Proto50100155::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400132_descriptor_, &Proto11400132::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400133_descriptor_, &Proto51400133::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100504_descriptor_, &Proto50100504::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400301_descriptor_, &Proto11400301::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400301_descriptor_, &Proto51400301::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400302_descriptor_, &Proto11400302::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400302_descriptor_, &Proto51400302::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400304_descriptor_, &Proto11400304::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400306_descriptor_, &Proto11400306::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400307_descriptor_, &Proto11400307::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100507_descriptor_, &Proto10100507::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100507_descriptor_, &Proto50100507::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100012_descriptor_, &Proto50100012::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400401_descriptor_, &Proto11400401::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400401_descriptor_, &Proto51400401::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400402_descriptor_, &Proto11400402::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400402_descriptor_, &Proto51400402::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400403_descriptor_, &Proto11400403::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400403_descriptor_, &Proto51400403::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient002_2eproto() {
  delete Proto81400104::default_instance_;
  delete Proto81400104_reflection_;
  delete Proto51400112::default_instance_;
  delete Proto51400112_reflection_;
  delete Proto11400111::default_instance_;
  delete Proto11400111_reflection_;
  delete Proto51400111::default_instance_;
  delete Proto51400111_reflection_;
  delete Proto80100101::default_instance_;
  delete Proto80100101_reflection_;
  delete Proto10400201::default_instance_;
  delete Proto10400201_reflection_;
  delete Proto10400203::default_instance_;
  delete Proto10400203_reflection_;
  delete Proto50400203::default_instance_;
  delete Proto50400203_reflection_;
  delete Proto80400201::default_instance_;
  delete Proto80400201_reflection_;
  delete Proto80400202::default_instance_;
  delete Proto80400202_reflection_;
  delete Proto80400203::default_instance_;
  delete Proto80400203_reflection_;
  delete Proto80400205::default_instance_;
  delete Proto80400205_reflection_;
  delete Proto80400206::default_instance_;
  delete Proto80400206_reflection_;
  delete Proto10100150::default_instance_;
  delete Proto10100150_reflection_;
  delete Proto10100151::default_instance_;
  delete Proto10100151_reflection_;
  delete Proto10100152::default_instance_;
  delete Proto10100152_reflection_;
  delete Proto10100153::default_instance_;
  delete Proto10100153_reflection_;
  delete Proto50100150::default_instance_;
  delete Proto50100150_reflection_;
  delete Proto50100151::default_instance_;
  delete Proto50100151_reflection_;
  delete Proto50100152::default_instance_;
  delete Proto50100152_reflection_;
  delete Proto50100153::default_instance_;
  delete Proto50100153_reflection_;
  delete Proto50100154::default_instance_;
  delete Proto50100154_reflection_;
  delete Proto10100501::default_instance_;
  delete Proto10100501_reflection_;
  delete Proto10100502::default_instance_;
  delete Proto10100502_reflection_;
  delete Proto10100503::default_instance_;
  delete Proto10100503_reflection_;
  delete Proto10100504::default_instance_;
  delete Proto10100504_reflection_;
  delete Proto10100505::default_instance_;
  delete Proto10100505_reflection_;
  delete Proto10100506::default_instance_;
  delete Proto10100506_reflection_;
  delete Proto50100501::default_instance_;
  delete Proto50100501_reflection_;
  delete Proto10100155::default_instance_;
  delete Proto10100155_reflection_;
  delete Proto50100155::default_instance_;
  delete Proto50100155_reflection_;
  delete Proto11400132::default_instance_;
  delete Proto11400132_reflection_;
  delete Proto51400133::default_instance_;
  delete Proto51400133_reflection_;
  delete Proto50100504::default_instance_;
  delete Proto50100504_reflection_;
  delete Proto11400301::default_instance_;
  delete Proto11400301_reflection_;
  delete Proto51400301::default_instance_;
  delete Proto51400301_reflection_;
  delete Proto11400302::default_instance_;
  delete Proto11400302_reflection_;
  delete Proto51400302::default_instance_;
  delete Proto51400302_reflection_;
  delete Proto11400304::default_instance_;
  delete Proto11400304_reflection_;
  delete Proto11400306::default_instance_;
  delete Proto11400306_reflection_;
  delete Proto11400307::default_instance_;
  delete Proto11400307_reflection_;
  delete Proto10100507::default_instance_;
  delete Proto10100507_reflection_;
  delete Proto50100507::default_instance_;
  delete Proto50100507_reflection_;
  delete Proto50100012::default_instance_;
  delete Proto50100012_reflection_;
  delete Proto11400401::default_instance_;
  delete Proto11400401_reflection_;
  delete Proto51400401::default_instance_;
  delete Proto51400401_reflection_;
  delete Proto11400402::default_instance_;
  delete Proto11400402_reflection_;
  delete Proto51400402::default_instance_;
  delete Proto51400402_reflection_;
  delete Proto11400403::default_instance_;
  delete Proto11400403_reflection_;
  delete Proto51400403::default_instance_;
  delete Proto51400403_reflection_;
}

void protobuf_AddDesc_ProtoClient002_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient002.proto\032\021ProtoPublic.prot"
    "o\"X\n\rProto81400104\022\013\n\003cmd\030\001 \001(\005\022!\n\ttask_"
    "info\030\002 \001(\0132\016.ProtoTaskInfo\022\027\n\017is_finish_"
    "guide\030\003 \001(\005\">\n\rProto51400112\022\r\n\005force\030\001 "
    "\001(\005\022\036\n\nequip_list\030\002 \003(\0132\n.ProtoItem\"1\n\rP"
    "roto11400111\022\r\n\005index\030\001 \001(\005\022\021\n\tpack_type"
    "\030\002 \001(\005\"U\n\rProto51400111\022\r\n\005index\030\001 \001(\005\022\021"
    "\n\tpack_type\030\002 \001(\005\022\017\n\007item_id\030\003 \001(\005\022\021\n\tit"
    "em_bind\030\004 \001(\005\"6\n\rProto80100101\022%\n\013friend"
    "_info\030\001 \001(\0132\020.ProtoFriendInfo\"\366\001\n\rProto1"
    "0400201\022\020\n\010skill_id\030\001 \001(\005\022\025\n\rskill_pixel"
    "_x\030\002 \001(\005\022\025\n\rskill_pixel_y\030\003 \001(\005\022&\n\013targe"
    "t_list\030\004 \003(\0132\021.ProtoSkillTarget\022\022\n\nskill"
    "_step\030\005 \001(\005\022\023\n\013skill_level\030\006 \001(\005\022\022\n\nfrom"
    "_skill\030\007 \001(\005\022\r\n\005angle\030\010 \001(\002\022\021\n\ttarget_id"
    "\030\t \001(\003\022\036\n\tcur_coord\030\n \001(\0132\013.ProtoCoord\"0"
    "\n\rProto10400203\022\016\n\006relive\030\001 \001(\005\022\017\n\007item_"
    "id\030\002 \001(\005\"h\n\rProto50400203\022\020\n\010scene_id\030\001 "
    "\001(\005\022\017\n\007pixel_x\030\002 \001(\005\022\017\n\007pixel_y\030\003 \001(\005\022\020\n"
    "\010space_id\030\004 \001(\005\022\021\n\tcur_blood\030\005 \001(\005\"\235\002\n\rP"
    "roto80400201\022\022\n\nfighter_id\030\001 \001(\003\022\020\n\010skil"
    "l_id\030\002 \001(\005\022\023\n\013skill_level\030\003 \001(\005\022\025\n\rskill"
    "_pixel_x\030\004 \001(\005\022\025\n\rskill_pixel_y\030\005 \001(\005\022&\n"
    "\013target_list\030\006 \003(\0132\021.ProtoSkillTarget\022\022\n"
    "\nskill_step\030\007 \001(\005\022\026\n\016is_full_screen\030\010 \001("
    "\005\022\026\n\016strength_level\030\t \001(\005\022\022\n\npassive_id\030"
    "\n \001(\005\022\020\n\010add_tick\030\013 \001(\001\022\021\n\ttarget_id\030\014 \001"
    "(\003\"H\n\rProto80400202\022\022\n\nfighter_id\030\001 \001(\003\022"
    "#\n\nfight_info\030\002 \001(\0132\017.ProtoFightInfo\"^\n\r"
    "Proto80400203\022\022\n\nfighter_id\030\001 \001(\003\022\026\n\016sta"
    "tus_id_list\030\002 \003(\005\022!\n\013status_list\030\003 \003(\0132\014"
    ".ProtoStatus\"3\n\rProto80400205\022\022\n\nfighter"
    "_id\030\001 \001(\003\022\016\n\006status\030\002 \001(\005\"\361\001\n\rProto80400"
    "206\022\r\n\005force\030\001 \001(\005\022\r\n\005level\030\002 \001(\005\022\016\n\006att"
    "ack\030\003 \001(\005\022\017\n\007defence\030\004 \001(\005\022\021\n\tmax_blood\030"
    "\005 \001(\005\022\013\n\003hit\030\006 \001(\005\022\r\n\005avoid\030\007 \001(\005\022\014\n\004cri"
    "t\030\010 \001(\005\022\021\n\ttoughness\030\t \001(\005\022\021\n\tcrit_hurt\030"
    "\n \001(\005\022\016\n\006damage\030\013 \001(\005\022\021\n\treduction\030\014 \001(\005"
    "\022\n\n\002pk\030\r \001(\005\022\017\n\007glamour\030\016 \001(\005\"$\n\rProto10"
    "100150\022\023\n\013friend_type\030\001 \001(\005\"5\n\rProto1010"
    "0151\022\017\n\007role_id\030\001 \003(\003\022\023\n\013friend_type\030\002 \001"
    "(\005\"9\n\rProto10100152\022\017\n\007role_id\030\001 \003(\003\022\027\n\017"
    "src_friend_type\030\002 \001(\005\"\035\n\rProto10100153\022\014"
    "\n\004name\030\001 \001(\t\"K\n\rProto50100150\022\023\n\013friend_"
    "type\030\001 \001(\005\022%\n\013friend_list\030\002 \003(\0132\020.ProtoF"
    "riendInfo\"R\n\rProto50100151\022\017\n\007role_id\030\001 "
    "\003(\003\022\027\n\017src_friend_type\030\002 \001(\005\022\027\n\017des_frie"
    "nd_type\030\003 \001(\005\"!\n\rProto50100152\022\020\n\010role_s"
    "et\030\001 \003(\003\"6\n\rProto50100153\022%\n\013friend_info"
    "\030\001 \003(\0132\020.ProtoFriendInfo\"6\n\rProto5010015"
    "4\022%\n\013friend_list\030\001 \003(\0132\020.ProtoFriendInfo"
    "\"d\n\rProto10100501\022\021\n\tmain_type\030\001 \001(\005\022\020\n\010"
    "sub_type\030\002 \001(\005\022\022\n\npage_index\030\003 \001(\005\022\014\n\004so"
    "rt\030\004 \001(\005\022\014\n\004type\030\005 \001(\005\"Q\n\rProto10100502\022"
    "\022\n\nmoney_type\030\001 \001(\005\022\r\n\005index\030\002 \001(\005\022\016\n\006am"
    "ount\030\003 \001(\005\022\r\n\005price\030\004 \001(\005\"J\n\rProto101005"
    "03\022\024\n\014market_index\030\001 \001(\005\022\017\n\007item_id\030\002 \001("
    "\005\022\022\n\nbuy_amount\030\003 \001(\005\"#\n\rProto10100504\022\022"
    "\n\npage_index\030\001 \001(\005\"%\n\rProto10100505\022\024\n\014m"
    "arket_index\030\001 \001(\005\"%\n\rProto10100506\022\024\n\014ma"
    "rket_index\030\001 \001(\005\"\243\001\n\rProto50100501\022\014\n\004ty"
    "pe\030\001 \001(\005\022\021\n\tmain_type\030\002 \001(\005\022\020\n\010sub_type\030"
    "\003 \001(\005\022\022\n\npage_index\030\004 \001(\005\022\022\n\ntotal_page\030"
    "\005 \001(\005\022$\n\nmarket_set\030\006 \003(\0132\020.ProtoMarketI"
    "tem\022\021\n\tbuy_times\030\007 \001(\005\" \n\rProto10100155\022"
    "\017\n\007role_id\030\001 \001(\003\"6\n\rProto50100155\022%\n\013fri"
    "end_info\030\001 \001(\0132\020.ProtoFriendInfo\"\036\n\rProt"
    "o11400132\022\r\n\005index\030\001 \001(\005\"3\n\rProto5140013"
    "3\022\"\n\013sellout_set\030\001 \003(\0132\r.ProtoSellOut\"]\n"
    "\rProto50100504\022$\n\nonsell_set\030\001 \003(\0132\020.Pro"
    "toMarketItem\022\022\n\npage_index\030\002 \001(\005\022\022\n\ntota"
    "l_page\030\003 \001(\005\"#\n\rProto11400301\022\022\n\npage_in"
    "dex\030\001 \001(\005\"O\n\rProto51400301\022!\n\tmail_list\030"
    "\001 \003(\0132\016.ProtoMailInfo\022\033\n\023deposit_mail_am"
    "ount\030\002 \001(\005\" \n\rProto11400302\022\017\n\007mail_id\030\001"
    " \002(\003\"\374\001\n\rProto51400302\022\017\n\007mail_id\030\001 \001(\003\022"
    "\021\n\tmail_type\030\002 \001(\005\022\021\n\trole_name\030\003 \001(\t\022\022\n"
    "\nmail_title\030\004 \001(\t\022\024\n\014mail_content\030\005 \001(\t\022"
    "\014\n\004gold\030\006 \001(\005\022\016\n\006coupon\030\007 \001(\005\022\016\n\006copper\030"
    "\010 \001(\005\022\023\n\013bind_copper\030\t \001(\005\022\036\n\ngoods_list"
    "\030\n \003(\0132\n.ProtoItem\022\023\n\013left_minute\030\013 \001(\005\022"
    "\022\n\nsender_vip\030\014 \001(\005\" \n\rProto11400304\022\017\n\007"
    "mail_id\030\001 \002(\003\"3\n\rProto11400306\022\020\n\010del_ty"
    "pe\030\001 \001(\005\022\020\n\010del_list\030\002 \003(\003\"\232\001\n\rProto1140"
    "0307\022\025\n\rreceiver_name\030\001 \001(\t\022\022\n\nmail_titl"
    "e\030\002 \001(\t\022\024\n\014mail_content\030\003 \001(\t\022\021\n\tmail_go"
    "ld\030\004 \001(\005\022\023\n\013mail_copper\030\005 \001(\005\022 \n\013attach_"
    "list\030\006 \003(\0132\013.MailAttach\" \n\rProto10100507"
    "\022\017\n\007item_id\030\001 \001(\005\"\"\n\rProto50100507\022\021\n\tlo"
    "w_price\030\001 \001(\005\"D\n\rProto50100012\022\021\n\tshop_t"
    "ype\030\001 \001(\005\022 \n\010shop_set\030\002 \003(\0132\016.ProtoShopI"
    "tem\"\035\n\rProto11400401\022\014\n\004type\030\001 \001(\005\"\231\002\n\rP"
    "roto51400401\022\023\n\013mount_grade\030\001 \001(\005\022\023\n\013hid"
    "den_flag\030\002 \001(\005\022\023\n\013mount_shape\030\003 \001(\005\022\r\n\005f"
    "orce\030\004 \001(\005\022\r\n\005bless\030\005 \001(\005\022\021\n\tleft_time\030\006"
    " \001(\005\022\034\n\004prop\030\007 \001(\0132\016.ProtoFightPro\022\014\n\004ty"
    "pe\030\010 \001(\005\022\017\n\007ability\030\t \001(\005\022\016\n\006growth\030\n \001("
    "\005\022\034\n\004temp\030\013 \001(\0132\016.ProtoFightPro\022\032\n\005skill"
    "\030\014 \003(\0132\013.ProtoSkill\022\021\n\tact_shape\030\r \001(\005\"/"
    "\n\rProto11400402\022\020\n\010auto_buy\030\001 \001(\005\022\014\n\004typ"
    "e\030\002 \001(\005\"b\n\rProto51400402\022\020\n\010eva_flag\030\001 \001"
    "(\005\022\023\n\013mount_grade\030\002 \001(\005\022\r\n\005bless\030\003 \001(\005\022\r"
    "\n\005force\030\004 \001(\005\022\014\n\004type\030\005 \001(\005\"\035\n\rProto1140"
    "0403\022\014\n\004type\030\001 \001(\005\"\035\n\rProto51400403\022\014\n\004t"
    "ype\030\001 \001(\005", 4169);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient002.proto", &protobuf_RegisterTypes);
  Proto81400104::default_instance_ = new Proto81400104();
  Proto51400112::default_instance_ = new Proto51400112();
  Proto11400111::default_instance_ = new Proto11400111();
  Proto51400111::default_instance_ = new Proto51400111();
  Proto80100101::default_instance_ = new Proto80100101();
  Proto10400201::default_instance_ = new Proto10400201();
  Proto10400203::default_instance_ = new Proto10400203();
  Proto50400203::default_instance_ = new Proto50400203();
  Proto80400201::default_instance_ = new Proto80400201();
  Proto80400202::default_instance_ = new Proto80400202();
  Proto80400203::default_instance_ = new Proto80400203();
  Proto80400205::default_instance_ = new Proto80400205();
  Proto80400206::default_instance_ = new Proto80400206();
  Proto10100150::default_instance_ = new Proto10100150();
  Proto10100151::default_instance_ = new Proto10100151();
  Proto10100152::default_instance_ = new Proto10100152();
  Proto10100153::default_instance_ = new Proto10100153();
  Proto50100150::default_instance_ = new Proto50100150();
  Proto50100151::default_instance_ = new Proto50100151();
  Proto50100152::default_instance_ = new Proto50100152();
  Proto50100153::default_instance_ = new Proto50100153();
  Proto50100154::default_instance_ = new Proto50100154();
  Proto10100501::default_instance_ = new Proto10100501();
  Proto10100502::default_instance_ = new Proto10100502();
  Proto10100503::default_instance_ = new Proto10100503();
  Proto10100504::default_instance_ = new Proto10100504();
  Proto10100505::default_instance_ = new Proto10100505();
  Proto10100506::default_instance_ = new Proto10100506();
  Proto50100501::default_instance_ = new Proto50100501();
  Proto10100155::default_instance_ = new Proto10100155();
  Proto50100155::default_instance_ = new Proto50100155();
  Proto11400132::default_instance_ = new Proto11400132();
  Proto51400133::default_instance_ = new Proto51400133();
  Proto50100504::default_instance_ = new Proto50100504();
  Proto11400301::default_instance_ = new Proto11400301();
  Proto51400301::default_instance_ = new Proto51400301();
  Proto11400302::default_instance_ = new Proto11400302();
  Proto51400302::default_instance_ = new Proto51400302();
  Proto11400304::default_instance_ = new Proto11400304();
  Proto11400306::default_instance_ = new Proto11400306();
  Proto11400307::default_instance_ = new Proto11400307();
  Proto10100507::default_instance_ = new Proto10100507();
  Proto50100507::default_instance_ = new Proto50100507();
  Proto50100012::default_instance_ = new Proto50100012();
  Proto11400401::default_instance_ = new Proto11400401();
  Proto51400401::default_instance_ = new Proto51400401();
  Proto11400402::default_instance_ = new Proto11400402();
  Proto51400402::default_instance_ = new Proto51400402();
  Proto11400403::default_instance_ = new Proto11400403();
  Proto51400403::default_instance_ = new Proto51400403();
  Proto81400104::default_instance_->InitAsDefaultInstance();
  Proto51400112::default_instance_->InitAsDefaultInstance();
  Proto11400111::default_instance_->InitAsDefaultInstance();
  Proto51400111::default_instance_->InitAsDefaultInstance();
  Proto80100101::default_instance_->InitAsDefaultInstance();
  Proto10400201::default_instance_->InitAsDefaultInstance();
  Proto10400203::default_instance_->InitAsDefaultInstance();
  Proto50400203::default_instance_->InitAsDefaultInstance();
  Proto80400201::default_instance_->InitAsDefaultInstance();
  Proto80400202::default_instance_->InitAsDefaultInstance();
  Proto80400203::default_instance_->InitAsDefaultInstance();
  Proto80400205::default_instance_->InitAsDefaultInstance();
  Proto80400206::default_instance_->InitAsDefaultInstance();
  Proto10100150::default_instance_->InitAsDefaultInstance();
  Proto10100151::default_instance_->InitAsDefaultInstance();
  Proto10100152::default_instance_->InitAsDefaultInstance();
  Proto10100153::default_instance_->InitAsDefaultInstance();
  Proto50100150::default_instance_->InitAsDefaultInstance();
  Proto50100151::default_instance_->InitAsDefaultInstance();
  Proto50100152::default_instance_->InitAsDefaultInstance();
  Proto50100153::default_instance_->InitAsDefaultInstance();
  Proto50100154::default_instance_->InitAsDefaultInstance();
  Proto10100501::default_instance_->InitAsDefaultInstance();
  Proto10100502::default_instance_->InitAsDefaultInstance();
  Proto10100503::default_instance_->InitAsDefaultInstance();
  Proto10100504::default_instance_->InitAsDefaultInstance();
  Proto10100505::default_instance_->InitAsDefaultInstance();
  Proto10100506::default_instance_->InitAsDefaultInstance();
  Proto50100501::default_instance_->InitAsDefaultInstance();
  Proto10100155::default_instance_->InitAsDefaultInstance();
  Proto50100155::default_instance_->InitAsDefaultInstance();
  Proto11400132::default_instance_->InitAsDefaultInstance();
  Proto51400133::default_instance_->InitAsDefaultInstance();
  Proto50100504::default_instance_->InitAsDefaultInstance();
  Proto11400301::default_instance_->InitAsDefaultInstance();
  Proto51400301::default_instance_->InitAsDefaultInstance();
  Proto11400302::default_instance_->InitAsDefaultInstance();
  Proto51400302::default_instance_->InitAsDefaultInstance();
  Proto11400304::default_instance_->InitAsDefaultInstance();
  Proto11400306::default_instance_->InitAsDefaultInstance();
  Proto11400307::default_instance_->InitAsDefaultInstance();
  Proto10100507::default_instance_->InitAsDefaultInstance();
  Proto50100507::default_instance_->InitAsDefaultInstance();
  Proto50100012::default_instance_->InitAsDefaultInstance();
  Proto11400401::default_instance_->InitAsDefaultInstance();
  Proto51400401::default_instance_->InitAsDefaultInstance();
  Proto11400402::default_instance_->InitAsDefaultInstance();
  Proto51400402::default_instance_->InitAsDefaultInstance();
  Proto11400403::default_instance_->InitAsDefaultInstance();
  Proto51400403::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient002_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient002_2eproto {
  StaticDescriptorInitializer_ProtoClient002_2eproto() {
    protobuf_AddDesc_ProtoClient002_2eproto();
  }
} static_descriptor_initializer_ProtoClient002_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto81400104::kCmdFieldNumber;
const int Proto81400104::kTaskInfoFieldNumber;
const int Proto81400104::kIsFinishGuideFieldNumber;
#endif  // !_MSC_VER

Proto81400104::Proto81400104()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400104::InitAsDefaultInstance() {
  task_info_ = const_cast< ::ProtoTaskInfo*>(&::ProtoTaskInfo::default_instance());
}

Proto81400104::Proto81400104(const Proto81400104& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400104::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 0;
  task_info_ = NULL;
  is_finish_guide_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400104::~Proto81400104() {
  SharedDtor();
}

void Proto81400104::SharedDtor() {
  if (this != default_instance_) {
    delete task_info_;
  }
}

void Proto81400104::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400104::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400104_descriptor_;
}

const Proto81400104& Proto81400104::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto81400104* Proto81400104::default_instance_ = NULL;

Proto81400104* Proto81400104::New() const {
  return new Proto81400104;
}

void Proto81400104::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cmd_ = 0;
    if (has_task_info()) {
      if (task_info_ != NULL) task_info_->::ProtoTaskInfo::Clear();
    }
    is_finish_guide_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400104::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cmd = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_)));
          set_has_cmd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_task_info;
        break;
      }
      
      // optional .ProtoTaskInfo task_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_task_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_task_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_finish_guide;
        break;
      }
      
      // optional int32 is_finish_guide = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_finish_guide:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_finish_guide_)));
          set_has_is_finish_guide();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400104::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cmd = 1;
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cmd(), output);
  }
  
  // optional .ProtoTaskInfo task_info = 2;
  if (has_task_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->task_info(), output);
  }
  
  // optional int32 is_finish_guide = 3;
  if (has_is_finish_guide()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_finish_guide(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400104::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cmd = 1;
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cmd(), target);
  }
  
  // optional .ProtoTaskInfo task_info = 2;
  if (has_task_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->task_info(), target);
  }
  
  // optional int32 is_finish_guide = 3;
  if (has_is_finish_guide()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_finish_guide(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400104::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cmd = 1;
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cmd());
    }
    
    // optional .ProtoTaskInfo task_info = 2;
    if (has_task_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->task_info());
    }
    
    // optional int32 is_finish_guide = 3;
    if (has_is_finish_guide()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_finish_guide());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400104::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400104* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400104*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400104::MergeFrom(const Proto81400104& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_task_info()) {
      mutable_task_info()->::ProtoTaskInfo::MergeFrom(from.task_info());
    }
    if (from.has_is_finish_guide()) {
      set_is_finish_guide(from.is_finish_guide());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400104::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400104::CopyFrom(const Proto81400104& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400104::IsInitialized() const {
  
  return true;
}

void Proto81400104::Swap(Proto81400104* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(task_info_, other->task_info_);
    std::swap(is_finish_guide_, other->is_finish_guide_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400104::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400104_descriptor_;
  metadata.reflection = Proto81400104_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400112::kForceFieldNumber;
const int Proto51400112::kEquipListFieldNumber;
#endif  // !_MSC_VER

Proto51400112::Proto51400112()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400112::InitAsDefaultInstance() {
}

Proto51400112::Proto51400112(const Proto51400112& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400112::SharedCtor() {
  _cached_size_ = 0;
  force_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400112::~Proto51400112() {
  SharedDtor();
}

void Proto51400112::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400112::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400112::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400112_descriptor_;
}

const Proto51400112& Proto51400112::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto51400112* Proto51400112::default_instance_ = NULL;

Proto51400112* Proto51400112::New() const {
  return new Proto51400112;
}

void Proto51400112::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    force_ = 0;
  }
  equip_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400112::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 force = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_equip_list;
        break;
      }
      
      // repeated .ProtoItem equip_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equip_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equip_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_equip_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400112::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 force = 1;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->force(), output);
  }
  
  // repeated .ProtoItem equip_list = 2;
  for (int i = 0; i < this->equip_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->equip_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400112::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 force = 1;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->force(), target);
  }
  
  // repeated .ProtoItem equip_list = 2;
  for (int i = 0; i < this->equip_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->equip_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400112::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 force = 1;
    if (has_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->force());
    }
    
  }
  // repeated .ProtoItem equip_list = 2;
  total_size += 1 * this->equip_list_size();
  for (int i = 0; i < this->equip_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equip_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400112::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400112* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400112*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400112::MergeFrom(const Proto51400112& from) {
  GOOGLE_CHECK_NE(&from, this);
  equip_list_.MergeFrom(from.equip_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_force()) {
      set_force(from.force());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400112::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400112::CopyFrom(const Proto51400112& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400112::IsInitialized() const {
  
  return true;
}

void Proto51400112::Swap(Proto51400112* other) {
  if (other != this) {
    std::swap(force_, other->force_);
    equip_list_.Swap(&other->equip_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400112::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400112_descriptor_;
  metadata.reflection = Proto51400112_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400111::kIndexFieldNumber;
const int Proto11400111::kPackTypeFieldNumber;
#endif  // !_MSC_VER

Proto11400111::Proto11400111()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400111::InitAsDefaultInstance() {
}

Proto11400111::Proto11400111(const Proto11400111& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400111::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  pack_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400111::~Proto11400111() {
  SharedDtor();
}

void Proto11400111::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400111::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400111::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400111_descriptor_;
}

const Proto11400111& Proto11400111::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto11400111* Proto11400111::default_instance_ = NULL;

Proto11400111* Proto11400111::New() const {
  return new Proto11400111;
}

void Proto11400111::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    pack_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400111::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pack_type;
        break;
      }
      
      // optional int32 pack_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pack_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pack_type_)));
          set_has_pack_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400111::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional int32 pack_type = 2;
  if (has_pack_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pack_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400111::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional int32 pack_type = 2;
  if (has_pack_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pack_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400111::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 pack_type = 2;
    if (has_pack_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pack_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400111::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400111* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400111*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400111::MergeFrom(const Proto11400111& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_pack_type()) {
      set_pack_type(from.pack_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400111::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400111::CopyFrom(const Proto11400111& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400111::IsInitialized() const {
  
  return true;
}

void Proto11400111::Swap(Proto11400111* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(pack_type_, other->pack_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400111::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400111_descriptor_;
  metadata.reflection = Proto11400111_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400111::kIndexFieldNumber;
const int Proto51400111::kPackTypeFieldNumber;
const int Proto51400111::kItemIdFieldNumber;
const int Proto51400111::kItemBindFieldNumber;
#endif  // !_MSC_VER

Proto51400111::Proto51400111()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400111::InitAsDefaultInstance() {
}

Proto51400111::Proto51400111(const Proto51400111& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400111::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  pack_type_ = 0;
  item_id_ = 0;
  item_bind_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400111::~Proto51400111() {
  SharedDtor();
}

void Proto51400111::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400111::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400111::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400111_descriptor_;
}

const Proto51400111& Proto51400111::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto51400111* Proto51400111::default_instance_ = NULL;

Proto51400111* Proto51400111::New() const {
  return new Proto51400111;
}

void Proto51400111::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    pack_type_ = 0;
    item_id_ = 0;
    item_bind_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400111::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pack_type;
        break;
      }
      
      // optional int32 pack_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pack_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pack_type_)));
          set_has_pack_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_id;
        break;
      }
      
      // optional int32 item_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_item_bind;
        break;
      }
      
      // optional int32 item_bind = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_bind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_bind_)));
          set_has_item_bind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400111::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional int32 pack_type = 2;
  if (has_pack_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pack_type(), output);
  }
  
  // optional int32 item_id = 3;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_id(), output);
  }
  
  // optional int32 item_bind = 4;
  if (has_item_bind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->item_bind(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400111::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional int32 pack_type = 2;
  if (has_pack_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pack_type(), target);
  }
  
  // optional int32 item_id = 3;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_id(), target);
  }
  
  // optional int32 item_bind = 4;
  if (has_item_bind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->item_bind(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400111::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 pack_type = 2;
    if (has_pack_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pack_type());
    }
    
    // optional int32 item_id = 3;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_bind = 4;
    if (has_item_bind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_bind());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400111::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400111* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400111*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400111::MergeFrom(const Proto51400111& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_pack_type()) {
      set_pack_type(from.pack_type());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_bind()) {
      set_item_bind(from.item_bind());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400111::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400111::CopyFrom(const Proto51400111& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400111::IsInitialized() const {
  
  return true;
}

void Proto51400111::Swap(Proto51400111* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(pack_type_, other->pack_type_);
    std::swap(item_id_, other->item_id_);
    std::swap(item_bind_, other->item_bind_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400111::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400111_descriptor_;
  metadata.reflection = Proto51400111_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100101::kFriendInfoFieldNumber;
#endif  // !_MSC_VER

Proto80100101::Proto80100101()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100101::InitAsDefaultInstance() {
  friend_info_ = const_cast< ::ProtoFriendInfo*>(&::ProtoFriendInfo::default_instance());
}

Proto80100101::Proto80100101(const Proto80100101& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100101::SharedCtor() {
  _cached_size_ = 0;
  friend_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100101::~Proto80100101() {
  SharedDtor();
}

void Proto80100101::SharedDtor() {
  if (this != default_instance_) {
    delete friend_info_;
  }
}

void Proto80100101::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100101::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100101_descriptor_;
}

const Proto80100101& Proto80100101::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto80100101* Proto80100101::default_instance_ = NULL;

Proto80100101* Proto80100101::New() const {
  return new Proto80100101;
}

void Proto80100101::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_friend_info()) {
      if (friend_info_ != NULL) friend_info_->::ProtoFriendInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100101::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoFriendInfo friend_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_friend_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100101::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoFriendInfo friend_info = 1;
  if (has_friend_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friend_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100101::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoFriendInfo friend_info = 1;
  if (has_friend_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->friend_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100101::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoFriendInfo friend_info = 1;
    if (has_friend_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friend_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100101::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100101* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100101*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100101::MergeFrom(const Proto80100101& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_friend_info()) {
      mutable_friend_info()->::ProtoFriendInfo::MergeFrom(from.friend_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100101::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100101::CopyFrom(const Proto80100101& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100101::IsInitialized() const {
  
  return true;
}

void Proto80100101::Swap(Proto80100101* other) {
  if (other != this) {
    std::swap(friend_info_, other->friend_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100101::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100101_descriptor_;
  metadata.reflection = Proto80100101_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400201::kSkillIdFieldNumber;
const int Proto10400201::kSkillPixelXFieldNumber;
const int Proto10400201::kSkillPixelYFieldNumber;
const int Proto10400201::kTargetListFieldNumber;
const int Proto10400201::kSkillStepFieldNumber;
const int Proto10400201::kSkillLevelFieldNumber;
const int Proto10400201::kFromSkillFieldNumber;
const int Proto10400201::kAngleFieldNumber;
const int Proto10400201::kTargetIdFieldNumber;
const int Proto10400201::kCurCoordFieldNumber;
#endif  // !_MSC_VER

Proto10400201::Proto10400201()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400201::InitAsDefaultInstance() {
  cur_coord_ = const_cast< ::ProtoCoord*>(&::ProtoCoord::default_instance());
}

Proto10400201::Proto10400201(const Proto10400201& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400201::SharedCtor() {
  _cached_size_ = 0;
  skill_id_ = 0;
  skill_pixel_x_ = 0;
  skill_pixel_y_ = 0;
  skill_step_ = 0;
  skill_level_ = 0;
  from_skill_ = 0;
  angle_ = 0;
  target_id_ = GOOGLE_LONGLONG(0);
  cur_coord_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400201::~Proto10400201() {
  SharedDtor();
}

void Proto10400201::SharedDtor() {
  if (this != default_instance_) {
    delete cur_coord_;
  }
}

void Proto10400201::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400201::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400201_descriptor_;
}

const Proto10400201& Proto10400201::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto10400201* Proto10400201::default_instance_ = NULL;

Proto10400201* Proto10400201::New() const {
  return new Proto10400201;
}

void Proto10400201::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skill_id_ = 0;
    skill_pixel_x_ = 0;
    skill_pixel_y_ = 0;
    skill_step_ = 0;
    skill_level_ = 0;
    from_skill_ = 0;
    angle_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    target_id_ = GOOGLE_LONGLONG(0);
    if (has_cur_coord()) {
      if (cur_coord_ != NULL) cur_coord_->::ProtoCoord::Clear();
    }
  }
  target_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400201::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 skill_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_skill_pixel_x;
        break;
      }
      
      // optional int32 skill_pixel_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_pixel_x_)));
          set_has_skill_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_skill_pixel_y;
        break;
      }
      
      // optional int32 skill_pixel_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_pixel_y_)));
          set_has_skill_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_target_list;
        break;
      }
      
      // repeated .ProtoSkillTarget target_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_target_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_target_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_target_list;
        if (input->ExpectTag(40)) goto parse_skill_step;
        break;
      }
      
      // optional int32 skill_step = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_step:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_step_)));
          set_has_skill_step();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_skill_level;
        break;
      }
      
      // optional int32 skill_level = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_level_)));
          set_has_skill_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_from_skill;
        break;
      }
      
      // optional int32 from_skill = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_from_skill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_skill_)));
          set_has_from_skill();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(69)) goto parse_angle;
        break;
      }
      
      // optional float angle = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
          set_has_angle();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_target_id;
        break;
      }
      
      // optional int64 target_id = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_target_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_id_)));
          set_has_target_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_cur_coord;
        break;
      }
      
      // optional .ProtoCoord cur_coord = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cur_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cur_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400201::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skill_id(), output);
  }
  
  // optional int32 skill_pixel_x = 2;
  if (has_skill_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skill_pixel_x(), output);
  }
  
  // optional int32 skill_pixel_y = 3;
  if (has_skill_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skill_pixel_y(), output);
  }
  
  // repeated .ProtoSkillTarget target_list = 4;
  for (int i = 0; i < this->target_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->target_list(i), output);
  }
  
  // optional int32 skill_step = 5;
  if (has_skill_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->skill_step(), output);
  }
  
  // optional int32 skill_level = 6;
  if (has_skill_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->skill_level(), output);
  }
  
  // optional int32 from_skill = 7;
  if (has_from_skill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->from_skill(), output);
  }
  
  // optional float angle = 8;
  if (has_angle()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->angle(), output);
  }
  
  // optional int64 target_id = 9;
  if (has_target_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->target_id(), output);
  }
  
  // optional .ProtoCoord cur_coord = 10;
  if (has_cur_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->cur_coord(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400201::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skill_id(), target);
  }
  
  // optional int32 skill_pixel_x = 2;
  if (has_skill_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skill_pixel_x(), target);
  }
  
  // optional int32 skill_pixel_y = 3;
  if (has_skill_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skill_pixel_y(), target);
  }
  
  // repeated .ProtoSkillTarget target_list = 4;
  for (int i = 0; i < this->target_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->target_list(i), target);
  }
  
  // optional int32 skill_step = 5;
  if (has_skill_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->skill_step(), target);
  }
  
  // optional int32 skill_level = 6;
  if (has_skill_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->skill_level(), target);
  }
  
  // optional int32 from_skill = 7;
  if (has_from_skill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->from_skill(), target);
  }
  
  // optional float angle = 8;
  if (has_angle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->angle(), target);
  }
  
  // optional int64 target_id = 9;
  if (has_target_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->target_id(), target);
  }
  
  // optional .ProtoCoord cur_coord = 10;
  if (has_cur_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->cur_coord(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400201::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 skill_id = 1;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
    // optional int32 skill_pixel_x = 2;
    if (has_skill_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_pixel_x());
    }
    
    // optional int32 skill_pixel_y = 3;
    if (has_skill_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_pixel_y());
    }
    
    // optional int32 skill_step = 5;
    if (has_skill_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_step());
    }
    
    // optional int32 skill_level = 6;
    if (has_skill_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_level());
    }
    
    // optional int32 from_skill = 7;
    if (has_from_skill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->from_skill());
    }
    
    // optional float angle = 8;
    if (has_angle()) {
      total_size += 1 + 4;
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 target_id = 9;
    if (has_target_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->target_id());
    }
    
    // optional .ProtoCoord cur_coord = 10;
    if (has_cur_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cur_coord());
    }
    
  }
  // repeated .ProtoSkillTarget target_list = 4;
  total_size += 1 * this->target_list_size();
  for (int i = 0; i < this->target_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->target_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400201::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400201* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400201*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400201::MergeFrom(const Proto10400201& from) {
  GOOGLE_CHECK_NE(&from, this);
  target_list_.MergeFrom(from.target_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_skill_pixel_x()) {
      set_skill_pixel_x(from.skill_pixel_x());
    }
    if (from.has_skill_pixel_y()) {
      set_skill_pixel_y(from.skill_pixel_y());
    }
    if (from.has_skill_step()) {
      set_skill_step(from.skill_step());
    }
    if (from.has_skill_level()) {
      set_skill_level(from.skill_level());
    }
    if (from.has_from_skill()) {
      set_from_skill(from.from_skill());
    }
    if (from.has_angle()) {
      set_angle(from.angle());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_target_id()) {
      set_target_id(from.target_id());
    }
    if (from.has_cur_coord()) {
      mutable_cur_coord()->::ProtoCoord::MergeFrom(from.cur_coord());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400201::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400201::CopyFrom(const Proto10400201& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400201::IsInitialized() const {
  
  return true;
}

void Proto10400201::Swap(Proto10400201* other) {
  if (other != this) {
    std::swap(skill_id_, other->skill_id_);
    std::swap(skill_pixel_x_, other->skill_pixel_x_);
    std::swap(skill_pixel_y_, other->skill_pixel_y_);
    target_list_.Swap(&other->target_list_);
    std::swap(skill_step_, other->skill_step_);
    std::swap(skill_level_, other->skill_level_);
    std::swap(from_skill_, other->from_skill_);
    std::swap(angle_, other->angle_);
    std::swap(target_id_, other->target_id_);
    std::swap(cur_coord_, other->cur_coord_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400201::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400201_descriptor_;
  metadata.reflection = Proto10400201_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400203::kReliveFieldNumber;
const int Proto10400203::kItemIdFieldNumber;
#endif  // !_MSC_VER

Proto10400203::Proto10400203()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400203::InitAsDefaultInstance() {
}

Proto10400203::Proto10400203(const Proto10400203& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400203::SharedCtor() {
  _cached_size_ = 0;
  relive_ = 0;
  item_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400203::~Proto10400203() {
  SharedDtor();
}

void Proto10400203::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400203::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400203::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400203_descriptor_;
}

const Proto10400203& Proto10400203::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto10400203* Proto10400203::default_instance_ = NULL;

Proto10400203* Proto10400203::New() const {
  return new Proto10400203;
}

void Proto10400203::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    relive_ = 0;
    item_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400203::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 relive = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &relive_)));
          set_has_relive();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }
      
      // optional int32 item_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400203::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 relive = 1;
  if (has_relive()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->relive(), output);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400203::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 relive = 1;
  if (has_relive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->relive(), target);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400203::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 relive = 1;
    if (has_relive()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->relive());
    }
    
    // optional int32 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400203::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400203* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400203*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400203::MergeFrom(const Proto10400203& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_relive()) {
      set_relive(from.relive());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400203::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400203::CopyFrom(const Proto10400203& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400203::IsInitialized() const {
  
  return true;
}

void Proto10400203::Swap(Proto10400203* other) {
  if (other != this) {
    std::swap(relive_, other->relive_);
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400203::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400203_descriptor_;
  metadata.reflection = Proto10400203_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400203::kSceneIdFieldNumber;
const int Proto50400203::kPixelXFieldNumber;
const int Proto50400203::kPixelYFieldNumber;
const int Proto50400203::kSpaceIdFieldNumber;
const int Proto50400203::kCurBloodFieldNumber;
#endif  // !_MSC_VER

Proto50400203::Proto50400203()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400203::InitAsDefaultInstance() {
}

Proto50400203::Proto50400203(const Proto50400203& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400203::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  space_id_ = 0;
  cur_blood_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400203::~Proto50400203() {
  SharedDtor();
}

void Proto50400203::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400203::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400203::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400203_descriptor_;
}

const Proto50400203& Proto50400203::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto50400203* Proto50400203::default_instance_ = NULL;

Proto50400203* Proto50400203::New() const {
  return new Proto50400203;
}

void Proto50400203::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
    space_id_ = 0;
    cur_blood_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400203::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_space_id;
        break;
      }
      
      // optional int32 space_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_space_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &space_id_)));
          set_has_space_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_cur_blood;
        break;
      }
      
      // optional int32 cur_blood = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_blood_)));
          set_has_cur_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400203::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_y(), output);
  }
  
  // optional int32 space_id = 4;
  if (has_space_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->space_id(), output);
  }
  
  // optional int32 cur_blood = 5;
  if (has_cur_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cur_blood(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400203::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_y(), target);
  }
  
  // optional int32 space_id = 4;
  if (has_space_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->space_id(), target);
  }
  
  // optional int32 cur_blood = 5;
  if (has_cur_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cur_blood(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400203::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 pixel_x = 2;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 3;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
    // optional int32 space_id = 4;
    if (has_space_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->space_id());
    }
    
    // optional int32 cur_blood = 5;
    if (has_cur_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_blood());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400203::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400203* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400203*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400203::MergeFrom(const Proto50400203& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
    if (from.has_space_id()) {
      set_space_id(from.space_id());
    }
    if (from.has_cur_blood()) {
      set_cur_blood(from.cur_blood());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400203::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400203::CopyFrom(const Proto50400203& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400203::IsInitialized() const {
  
  return true;
}

void Proto50400203::Swap(Proto50400203* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(space_id_, other->space_id_);
    std::swap(cur_blood_, other->cur_blood_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400203::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400203_descriptor_;
  metadata.reflection = Proto50400203_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400201::kFighterIdFieldNumber;
const int Proto80400201::kSkillIdFieldNumber;
const int Proto80400201::kSkillLevelFieldNumber;
const int Proto80400201::kSkillPixelXFieldNumber;
const int Proto80400201::kSkillPixelYFieldNumber;
const int Proto80400201::kTargetListFieldNumber;
const int Proto80400201::kSkillStepFieldNumber;
const int Proto80400201::kIsFullScreenFieldNumber;
const int Proto80400201::kStrengthLevelFieldNumber;
const int Proto80400201::kPassiveIdFieldNumber;
const int Proto80400201::kAddTickFieldNumber;
const int Proto80400201::kTargetIdFieldNumber;
#endif  // !_MSC_VER

Proto80400201::Proto80400201()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400201::InitAsDefaultInstance() {
}

Proto80400201::Proto80400201(const Proto80400201& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400201::SharedCtor() {
  _cached_size_ = 0;
  fighter_id_ = GOOGLE_LONGLONG(0);
  skill_id_ = 0;
  skill_level_ = 0;
  skill_pixel_x_ = 0;
  skill_pixel_y_ = 0;
  skill_step_ = 0;
  is_full_screen_ = 0;
  strength_level_ = 0;
  passive_id_ = 0;
  add_tick_ = 0;
  target_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400201::~Proto80400201() {
  SharedDtor();
}

void Proto80400201::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400201::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400201::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400201_descriptor_;
}

const Proto80400201& Proto80400201::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto80400201* Proto80400201::default_instance_ = NULL;

Proto80400201* Proto80400201::New() const {
  return new Proto80400201;
}

void Proto80400201::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fighter_id_ = GOOGLE_LONGLONG(0);
    skill_id_ = 0;
    skill_level_ = 0;
    skill_pixel_x_ = 0;
    skill_pixel_y_ = 0;
    skill_step_ = 0;
    is_full_screen_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    strength_level_ = 0;
    passive_id_ = 0;
    add_tick_ = 0;
    target_id_ = GOOGLE_LONGLONG(0);
  }
  target_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400201::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 fighter_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fighter_id_)));
          set_has_fighter_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_skill_id;
        break;
      }
      
      // optional int32 skill_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_skill_level;
        break;
      }
      
      // optional int32 skill_level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_level_)));
          set_has_skill_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_skill_pixel_x;
        break;
      }
      
      // optional int32 skill_pixel_x = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_pixel_x_)));
          set_has_skill_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_skill_pixel_y;
        break;
      }
      
      // optional int32 skill_pixel_y = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_pixel_y_)));
          set_has_skill_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_target_list;
        break;
      }
      
      // repeated .ProtoSkillTarget target_list = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_target_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_target_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_target_list;
        if (input->ExpectTag(56)) goto parse_skill_step;
        break;
      }
      
      // optional int32 skill_step = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_step:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_step_)));
          set_has_skill_step();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_is_full_screen;
        break;
      }
      
      // optional int32 is_full_screen = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_full_screen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_full_screen_)));
          set_has_is_full_screen();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_strength_level;
        break;
      }
      
      // optional int32 strength_level = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_strength_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strength_level_)));
          set_has_strength_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_passive_id;
        break;
      }
      
      // optional int32 passive_id = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_passive_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &passive_id_)));
          set_has_passive_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(89)) goto parse_add_tick;
        break;
      }
      
      // optional double add_tick = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_add_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &add_tick_)));
          set_has_add_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_target_id;
        break;
      }
      
      // optional int64 target_id = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_target_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_id_)));
          set_has_target_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400201::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->fighter_id(), output);
  }
  
  // optional int32 skill_id = 2;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skill_id(), output);
  }
  
  // optional int32 skill_level = 3;
  if (has_skill_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skill_level(), output);
  }
  
  // optional int32 skill_pixel_x = 4;
  if (has_skill_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->skill_pixel_x(), output);
  }
  
  // optional int32 skill_pixel_y = 5;
  if (has_skill_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->skill_pixel_y(), output);
  }
  
  // repeated .ProtoSkillTarget target_list = 6;
  for (int i = 0; i < this->target_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->target_list(i), output);
  }
  
  // optional int32 skill_step = 7;
  if (has_skill_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->skill_step(), output);
  }
  
  // optional int32 is_full_screen = 8;
  if (has_is_full_screen()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->is_full_screen(), output);
  }
  
  // optional int32 strength_level = 9;
  if (has_strength_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->strength_level(), output);
  }
  
  // optional int32 passive_id = 10;
  if (has_passive_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->passive_id(), output);
  }
  
  // optional double add_tick = 11;
  if (has_add_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->add_tick(), output);
  }
  
  // optional int64 target_id = 12;
  if (has_target_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->target_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400201::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->fighter_id(), target);
  }
  
  // optional int32 skill_id = 2;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skill_id(), target);
  }
  
  // optional int32 skill_level = 3;
  if (has_skill_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skill_level(), target);
  }
  
  // optional int32 skill_pixel_x = 4;
  if (has_skill_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->skill_pixel_x(), target);
  }
  
  // optional int32 skill_pixel_y = 5;
  if (has_skill_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->skill_pixel_y(), target);
  }
  
  // repeated .ProtoSkillTarget target_list = 6;
  for (int i = 0; i < this->target_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->target_list(i), target);
  }
  
  // optional int32 skill_step = 7;
  if (has_skill_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->skill_step(), target);
  }
  
  // optional int32 is_full_screen = 8;
  if (has_is_full_screen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->is_full_screen(), target);
  }
  
  // optional int32 strength_level = 9;
  if (has_strength_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->strength_level(), target);
  }
  
  // optional int32 passive_id = 10;
  if (has_passive_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->passive_id(), target);
  }
  
  // optional double add_tick = 11;
  if (has_add_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->add_tick(), target);
  }
  
  // optional int64 target_id = 12;
  if (has_target_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->target_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400201::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 fighter_id = 1;
    if (has_fighter_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fighter_id());
    }
    
    // optional int32 skill_id = 2;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
    // optional int32 skill_level = 3;
    if (has_skill_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_level());
    }
    
    // optional int32 skill_pixel_x = 4;
    if (has_skill_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_pixel_x());
    }
    
    // optional int32 skill_pixel_y = 5;
    if (has_skill_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_pixel_y());
    }
    
    // optional int32 skill_step = 7;
    if (has_skill_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_step());
    }
    
    // optional int32 is_full_screen = 8;
    if (has_is_full_screen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_full_screen());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 strength_level = 9;
    if (has_strength_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->strength_level());
    }
    
    // optional int32 passive_id = 10;
    if (has_passive_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->passive_id());
    }
    
    // optional double add_tick = 11;
    if (has_add_tick()) {
      total_size += 1 + 8;
    }
    
    // optional int64 target_id = 12;
    if (has_target_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->target_id());
    }
    
  }
  // repeated .ProtoSkillTarget target_list = 6;
  total_size += 1 * this->target_list_size();
  for (int i = 0; i < this->target_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->target_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400201::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400201* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400201*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400201::MergeFrom(const Proto80400201& from) {
  GOOGLE_CHECK_NE(&from, this);
  target_list_.MergeFrom(from.target_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fighter_id()) {
      set_fighter_id(from.fighter_id());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_skill_level()) {
      set_skill_level(from.skill_level());
    }
    if (from.has_skill_pixel_x()) {
      set_skill_pixel_x(from.skill_pixel_x());
    }
    if (from.has_skill_pixel_y()) {
      set_skill_pixel_y(from.skill_pixel_y());
    }
    if (from.has_skill_step()) {
      set_skill_step(from.skill_step());
    }
    if (from.has_is_full_screen()) {
      set_is_full_screen(from.is_full_screen());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_strength_level()) {
      set_strength_level(from.strength_level());
    }
    if (from.has_passive_id()) {
      set_passive_id(from.passive_id());
    }
    if (from.has_add_tick()) {
      set_add_tick(from.add_tick());
    }
    if (from.has_target_id()) {
      set_target_id(from.target_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400201::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400201::CopyFrom(const Proto80400201& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400201::IsInitialized() const {
  
  return true;
}

void Proto80400201::Swap(Proto80400201* other) {
  if (other != this) {
    std::swap(fighter_id_, other->fighter_id_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(skill_level_, other->skill_level_);
    std::swap(skill_pixel_x_, other->skill_pixel_x_);
    std::swap(skill_pixel_y_, other->skill_pixel_y_);
    target_list_.Swap(&other->target_list_);
    std::swap(skill_step_, other->skill_step_);
    std::swap(is_full_screen_, other->is_full_screen_);
    std::swap(strength_level_, other->strength_level_);
    std::swap(passive_id_, other->passive_id_);
    std::swap(add_tick_, other->add_tick_);
    std::swap(target_id_, other->target_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400201::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400201_descriptor_;
  metadata.reflection = Proto80400201_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400202::kFighterIdFieldNumber;
const int Proto80400202::kFightInfoFieldNumber;
#endif  // !_MSC_VER

Proto80400202::Proto80400202()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400202::InitAsDefaultInstance() {
  fight_info_ = const_cast< ::ProtoFightInfo*>(&::ProtoFightInfo::default_instance());
}

Proto80400202::Proto80400202(const Proto80400202& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400202::SharedCtor() {
  _cached_size_ = 0;
  fighter_id_ = GOOGLE_LONGLONG(0);
  fight_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400202::~Proto80400202() {
  SharedDtor();
}

void Proto80400202::SharedDtor() {
  if (this != default_instance_) {
    delete fight_info_;
  }
}

void Proto80400202::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400202::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400202_descriptor_;
}

const Proto80400202& Proto80400202::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto80400202* Proto80400202::default_instance_ = NULL;

Proto80400202* Proto80400202::New() const {
  return new Proto80400202;
}

void Proto80400202::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fighter_id_ = GOOGLE_LONGLONG(0);
    if (has_fight_info()) {
      if (fight_info_ != NULL) fight_info_->::ProtoFightInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400202::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 fighter_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fighter_id_)));
          set_has_fighter_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_fight_info;
        break;
      }
      
      // optional .ProtoFightInfo fight_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fight_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fight_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400202::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->fighter_id(), output);
  }
  
  // optional .ProtoFightInfo fight_info = 2;
  if (has_fight_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fight_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400202::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->fighter_id(), target);
  }
  
  // optional .ProtoFightInfo fight_info = 2;
  if (has_fight_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->fight_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400202::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 fighter_id = 1;
    if (has_fighter_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fighter_id());
    }
    
    // optional .ProtoFightInfo fight_info = 2;
    if (has_fight_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fight_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400202::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400202* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400202*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400202::MergeFrom(const Proto80400202& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fighter_id()) {
      set_fighter_id(from.fighter_id());
    }
    if (from.has_fight_info()) {
      mutable_fight_info()->::ProtoFightInfo::MergeFrom(from.fight_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400202::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400202::CopyFrom(const Proto80400202& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400202::IsInitialized() const {
  
  return true;
}

void Proto80400202::Swap(Proto80400202* other) {
  if (other != this) {
    std::swap(fighter_id_, other->fighter_id_);
    std::swap(fight_info_, other->fight_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400202::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400202_descriptor_;
  metadata.reflection = Proto80400202_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400203::kFighterIdFieldNumber;
const int Proto80400203::kStatusIdListFieldNumber;
const int Proto80400203::kStatusListFieldNumber;
#endif  // !_MSC_VER

Proto80400203::Proto80400203()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400203::InitAsDefaultInstance() {
}

Proto80400203::Proto80400203(const Proto80400203& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400203::SharedCtor() {
  _cached_size_ = 0;
  fighter_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400203::~Proto80400203() {
  SharedDtor();
}

void Proto80400203::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400203::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400203::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400203_descriptor_;
}

const Proto80400203& Proto80400203::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto80400203* Proto80400203::default_instance_ = NULL;

Proto80400203* Proto80400203::New() const {
  return new Proto80400203;
}

void Proto80400203::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fighter_id_ = GOOGLE_LONGLONG(0);
  }
  status_id_list_.Clear();
  status_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400203::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 fighter_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fighter_id_)));
          set_has_fighter_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_status_id_list;
        break;
      }
      
      // repeated int32 status_id_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status_id_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_status_id_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_status_id_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_status_id_list;
        if (input->ExpectTag(26)) goto parse_status_list;
        break;
      }
      
      // repeated .ProtoStatus status_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_status_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_status_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_status_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400203::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->fighter_id(), output);
  }
  
  // repeated int32 status_id_list = 2;
  for (int i = 0; i < this->status_id_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->status_id_list(i), output);
  }
  
  // repeated .ProtoStatus status_list = 3;
  for (int i = 0; i < this->status_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->status_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400203::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->fighter_id(), target);
  }
  
  // repeated int32 status_id_list = 2;
  for (int i = 0; i < this->status_id_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->status_id_list(i), target);
  }
  
  // repeated .ProtoStatus status_list = 3;
  for (int i = 0; i < this->status_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->status_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400203::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 fighter_id = 1;
    if (has_fighter_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fighter_id());
    }
    
  }
  // repeated int32 status_id_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->status_id_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->status_id_list(i));
    }
    total_size += 1 * this->status_id_list_size() + data_size;
  }
  
  // repeated .ProtoStatus status_list = 3;
  total_size += 1 * this->status_list_size();
  for (int i = 0; i < this->status_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->status_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400203::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400203* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400203*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400203::MergeFrom(const Proto80400203& from) {
  GOOGLE_CHECK_NE(&from, this);
  status_id_list_.MergeFrom(from.status_id_list_);
  status_list_.MergeFrom(from.status_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fighter_id()) {
      set_fighter_id(from.fighter_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400203::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400203::CopyFrom(const Proto80400203& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400203::IsInitialized() const {
  
  return true;
}

void Proto80400203::Swap(Proto80400203* other) {
  if (other != this) {
    std::swap(fighter_id_, other->fighter_id_);
    status_id_list_.Swap(&other->status_id_list_);
    status_list_.Swap(&other->status_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400203::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400203_descriptor_;
  metadata.reflection = Proto80400203_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400205::kFighterIdFieldNumber;
const int Proto80400205::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto80400205::Proto80400205()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400205::InitAsDefaultInstance() {
}

Proto80400205::Proto80400205(const Proto80400205& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400205::SharedCtor() {
  _cached_size_ = 0;
  fighter_id_ = GOOGLE_LONGLONG(0);
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400205::~Proto80400205() {
  SharedDtor();
}

void Proto80400205::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400205::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400205::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400205_descriptor_;
}

const Proto80400205& Proto80400205::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto80400205* Proto80400205::default_instance_ = NULL;

Proto80400205* Proto80400205::New() const {
  return new Proto80400205;
}

void Proto80400205::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fighter_id_ = GOOGLE_LONGLONG(0);
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400205::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 fighter_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fighter_id_)));
          set_has_fighter_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }
      
      // optional int32 status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400205::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->fighter_id(), output);
  }
  
  // optional int32 status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400205::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->fighter_id(), target);
  }
  
  // optional int32 status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400205::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 fighter_id = 1;
    if (has_fighter_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fighter_id());
    }
    
    // optional int32 status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400205::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400205* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400205*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400205::MergeFrom(const Proto80400205& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fighter_id()) {
      set_fighter_id(from.fighter_id());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400205::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400205::CopyFrom(const Proto80400205& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400205::IsInitialized() const {
  
  return true;
}

void Proto80400205::Swap(Proto80400205* other) {
  if (other != this) {
    std::swap(fighter_id_, other->fighter_id_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400205::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400205_descriptor_;
  metadata.reflection = Proto80400205_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400206::kForceFieldNumber;
const int Proto80400206::kLevelFieldNumber;
const int Proto80400206::kAttackFieldNumber;
const int Proto80400206::kDefenceFieldNumber;
const int Proto80400206::kMaxBloodFieldNumber;
const int Proto80400206::kHitFieldNumber;
const int Proto80400206::kAvoidFieldNumber;
const int Proto80400206::kCritFieldNumber;
const int Proto80400206::kToughnessFieldNumber;
const int Proto80400206::kCritHurtFieldNumber;
const int Proto80400206::kDamageFieldNumber;
const int Proto80400206::kReductionFieldNumber;
const int Proto80400206::kPkFieldNumber;
const int Proto80400206::kGlamourFieldNumber;
#endif  // !_MSC_VER

Proto80400206::Proto80400206()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400206::InitAsDefaultInstance() {
}

Proto80400206::Proto80400206(const Proto80400206& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400206::SharedCtor() {
  _cached_size_ = 0;
  force_ = 0;
  level_ = 0;
  attack_ = 0;
  defence_ = 0;
  max_blood_ = 0;
  hit_ = 0;
  avoid_ = 0;
  crit_ = 0;
  toughness_ = 0;
  crit_hurt_ = 0;
  damage_ = 0;
  reduction_ = 0;
  pk_ = 0;
  glamour_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400206::~Proto80400206() {
  SharedDtor();
}

void Proto80400206::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400206::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400206::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400206_descriptor_;
}

const Proto80400206& Proto80400206::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto80400206* Proto80400206::default_instance_ = NULL;

Proto80400206* Proto80400206::New() const {
  return new Proto80400206;
}

void Proto80400206::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    force_ = 0;
    level_ = 0;
    attack_ = 0;
    defence_ = 0;
    max_blood_ = 0;
    hit_ = 0;
    avoid_ = 0;
    crit_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    toughness_ = 0;
    crit_hurt_ = 0;
    damage_ = 0;
    reduction_ = 0;
    pk_ = 0;
    glamour_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400206::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 force = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }
      
      // optional int32 level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_attack;
        break;
      }
      
      // optional int32 attack = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attack_)));
          set_has_attack();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_defence;
        break;
      }
      
      // optional int32 defence = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_defence:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &defence_)));
          set_has_defence();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_max_blood;
        break;
      }
      
      // optional int32 max_blood = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_blood_)));
          set_has_max_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_hit;
        break;
      }
      
      // optional int32 hit = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hit_)));
          set_has_hit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_avoid;
        break;
      }
      
      // optional int32 avoid = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_avoid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &avoid_)));
          set_has_avoid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_crit;
        break;
      }
      
      // optional int32 crit = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_crit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crit_)));
          set_has_crit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_toughness;
        break;
      }
      
      // optional int32 toughness = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_toughness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &toughness_)));
          set_has_toughness();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_crit_hurt;
        break;
      }
      
      // optional int32 crit_hurt = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_crit_hurt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crit_hurt_)));
          set_has_crit_hurt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_damage;
        break;
      }
      
      // optional int32 damage = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_damage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_)));
          set_has_damage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_reduction;
        break;
      }
      
      // optional int32 reduction = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reduction_)));
          set_has_reduction();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_pk;
        break;
      }
      
      // optional int32 pk = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pk_)));
          set_has_pk();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_glamour;
        break;
      }
      
      // optional int32 glamour = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_glamour:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &glamour_)));
          set_has_glamour();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400206::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 force = 1;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->force(), output);
  }
  
  // optional int32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }
  
  // optional int32 attack = 3;
  if (has_attack()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->attack(), output);
  }
  
  // optional int32 defence = 4;
  if (has_defence()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->defence(), output);
  }
  
  // optional int32 max_blood = 5;
  if (has_max_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->max_blood(), output);
  }
  
  // optional int32 hit = 6;
  if (has_hit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->hit(), output);
  }
  
  // optional int32 avoid = 7;
  if (has_avoid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->avoid(), output);
  }
  
  // optional int32 crit = 8;
  if (has_crit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->crit(), output);
  }
  
  // optional int32 toughness = 9;
  if (has_toughness()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->toughness(), output);
  }
  
  // optional int32 crit_hurt = 10;
  if (has_crit_hurt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->crit_hurt(), output);
  }
  
  // optional int32 damage = 11;
  if (has_damage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->damage(), output);
  }
  
  // optional int32 reduction = 12;
  if (has_reduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->reduction(), output);
  }
  
  // optional int32 pk = 13;
  if (has_pk()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->pk(), output);
  }
  
  // optional int32 glamour = 14;
  if (has_glamour()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->glamour(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400206::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 force = 1;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->force(), target);
  }
  
  // optional int32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }
  
  // optional int32 attack = 3;
  if (has_attack()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->attack(), target);
  }
  
  // optional int32 defence = 4;
  if (has_defence()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->defence(), target);
  }
  
  // optional int32 max_blood = 5;
  if (has_max_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->max_blood(), target);
  }
  
  // optional int32 hit = 6;
  if (has_hit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->hit(), target);
  }
  
  // optional int32 avoid = 7;
  if (has_avoid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->avoid(), target);
  }
  
  // optional int32 crit = 8;
  if (has_crit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->crit(), target);
  }
  
  // optional int32 toughness = 9;
  if (has_toughness()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->toughness(), target);
  }
  
  // optional int32 crit_hurt = 10;
  if (has_crit_hurt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->crit_hurt(), target);
  }
  
  // optional int32 damage = 11;
  if (has_damage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->damage(), target);
  }
  
  // optional int32 reduction = 12;
  if (has_reduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->reduction(), target);
  }
  
  // optional int32 pk = 13;
  if (has_pk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->pk(), target);
  }
  
  // optional int32 glamour = 14;
  if (has_glamour()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->glamour(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400206::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 force = 1;
    if (has_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->force());
    }
    
    // optional int32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 attack = 3;
    if (has_attack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attack());
    }
    
    // optional int32 defence = 4;
    if (has_defence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->defence());
    }
    
    // optional int32 max_blood = 5;
    if (has_max_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_blood());
    }
    
    // optional int32 hit = 6;
    if (has_hit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hit());
    }
    
    // optional int32 avoid = 7;
    if (has_avoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->avoid());
    }
    
    // optional int32 crit = 8;
    if (has_crit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crit());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 toughness = 9;
    if (has_toughness()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->toughness());
    }
    
    // optional int32 crit_hurt = 10;
    if (has_crit_hurt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crit_hurt());
    }
    
    // optional int32 damage = 11;
    if (has_damage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->damage());
    }
    
    // optional int32 reduction = 12;
    if (has_reduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reduction());
    }
    
    // optional int32 pk = 13;
    if (has_pk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pk());
    }
    
    // optional int32 glamour = 14;
    if (has_glamour()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->glamour());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400206::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400206* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400206*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400206::MergeFrom(const Proto80400206& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_force()) {
      set_force(from.force());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_attack()) {
      set_attack(from.attack());
    }
    if (from.has_defence()) {
      set_defence(from.defence());
    }
    if (from.has_max_blood()) {
      set_max_blood(from.max_blood());
    }
    if (from.has_hit()) {
      set_hit(from.hit());
    }
    if (from.has_avoid()) {
      set_avoid(from.avoid());
    }
    if (from.has_crit()) {
      set_crit(from.crit());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_toughness()) {
      set_toughness(from.toughness());
    }
    if (from.has_crit_hurt()) {
      set_crit_hurt(from.crit_hurt());
    }
    if (from.has_damage()) {
      set_damage(from.damage());
    }
    if (from.has_reduction()) {
      set_reduction(from.reduction());
    }
    if (from.has_pk()) {
      set_pk(from.pk());
    }
    if (from.has_glamour()) {
      set_glamour(from.glamour());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400206::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400206::CopyFrom(const Proto80400206& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400206::IsInitialized() const {
  
  return true;
}

void Proto80400206::Swap(Proto80400206* other) {
  if (other != this) {
    std::swap(force_, other->force_);
    std::swap(level_, other->level_);
    std::swap(attack_, other->attack_);
    std::swap(defence_, other->defence_);
    std::swap(max_blood_, other->max_blood_);
    std::swap(hit_, other->hit_);
    std::swap(avoid_, other->avoid_);
    std::swap(crit_, other->crit_);
    std::swap(toughness_, other->toughness_);
    std::swap(crit_hurt_, other->crit_hurt_);
    std::swap(damage_, other->damage_);
    std::swap(reduction_, other->reduction_);
    std::swap(pk_, other->pk_);
    std::swap(glamour_, other->glamour_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400206::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400206_descriptor_;
  metadata.reflection = Proto80400206_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100150::kFriendTypeFieldNumber;
#endif  // !_MSC_VER

Proto10100150::Proto10100150()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100150::InitAsDefaultInstance() {
}

Proto10100150::Proto10100150(const Proto10100150& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100150::SharedCtor() {
  _cached_size_ = 0;
  friend_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100150::~Proto10100150() {
  SharedDtor();
}

void Proto10100150::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100150::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100150::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100150_descriptor_;
}

const Proto10100150& Proto10100150::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto10100150* Proto10100150::default_instance_ = NULL;

Proto10100150* Proto10100150::New() const {
  return new Proto10100150;
}

void Proto10100150::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    friend_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100150::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 friend_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &friend_type_)));
          set_has_friend_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100150::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 friend_type = 1;
  if (has_friend_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->friend_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100150::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 friend_type = 1;
  if (has_friend_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->friend_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100150::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 friend_type = 1;
    if (has_friend_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->friend_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100150::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100150* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100150*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100150::MergeFrom(const Proto10100150& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_friend_type()) {
      set_friend_type(from.friend_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100150::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100150::CopyFrom(const Proto10100150& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100150::IsInitialized() const {
  
  return true;
}

void Proto10100150::Swap(Proto10100150* other) {
  if (other != this) {
    std::swap(friend_type_, other->friend_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100150::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100150_descriptor_;
  metadata.reflection = Proto10100150_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100151::kRoleIdFieldNumber;
const int Proto10100151::kFriendTypeFieldNumber;
#endif  // !_MSC_VER

Proto10100151::Proto10100151()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100151::InitAsDefaultInstance() {
}

Proto10100151::Proto10100151(const Proto10100151& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100151::SharedCtor() {
  _cached_size_ = 0;
  friend_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100151::~Proto10100151() {
  SharedDtor();
}

void Proto10100151::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100151::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100151::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100151_descriptor_;
}

const Proto10100151& Proto10100151::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto10100151* Proto10100151::default_instance_ = NULL;

Proto10100151* Proto10100151::New() const {
  return new Proto10100151;
}

void Proto10100151::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    friend_type_ = 0;
  }
  role_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100151::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_role_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_role_id;
        if (input->ExpectTag(16)) goto parse_friend_type;
        break;
      }
      
      // optional int32 friend_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_friend_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &friend_type_)));
          set_has_friend_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100151::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 role_id = 1;
  for (int i = 0; i < this->role_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->role_id(i), output);
  }
  
  // optional int32 friend_type = 2;
  if (has_friend_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->friend_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100151::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 role_id = 1;
  for (int i = 0; i < this->role_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->role_id(i), target);
  }
  
  // optional int32 friend_type = 2;
  if (has_friend_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->friend_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100151::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 friend_type = 2;
    if (has_friend_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->friend_type());
    }
    
  }
  // repeated int64 role_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_id(i));
    }
    total_size += 1 * this->role_id_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100151::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100151* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100151*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100151::MergeFrom(const Proto10100151& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_id_.MergeFrom(from.role_id_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_friend_type()) {
      set_friend_type(from.friend_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100151::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100151::CopyFrom(const Proto10100151& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100151::IsInitialized() const {
  
  return true;
}

void Proto10100151::Swap(Proto10100151* other) {
  if (other != this) {
    role_id_.Swap(&other->role_id_);
    std::swap(friend_type_, other->friend_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100151::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100151_descriptor_;
  metadata.reflection = Proto10100151_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100152::kRoleIdFieldNumber;
const int Proto10100152::kSrcFriendTypeFieldNumber;
#endif  // !_MSC_VER

Proto10100152::Proto10100152()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100152::InitAsDefaultInstance() {
}

Proto10100152::Proto10100152(const Proto10100152& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100152::SharedCtor() {
  _cached_size_ = 0;
  src_friend_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100152::~Proto10100152() {
  SharedDtor();
}

void Proto10100152::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100152::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100152::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100152_descriptor_;
}

const Proto10100152& Proto10100152::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto10100152* Proto10100152::default_instance_ = NULL;

Proto10100152* Proto10100152::New() const {
  return new Proto10100152;
}

void Proto10100152::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    src_friend_type_ = 0;
  }
  role_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100152::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_role_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_role_id;
        if (input->ExpectTag(16)) goto parse_src_friend_type;
        break;
      }
      
      // optional int32 src_friend_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_src_friend_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &src_friend_type_)));
          set_has_src_friend_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100152::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 role_id = 1;
  for (int i = 0; i < this->role_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->role_id(i), output);
  }
  
  // optional int32 src_friend_type = 2;
  if (has_src_friend_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->src_friend_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100152::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 role_id = 1;
  for (int i = 0; i < this->role_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->role_id(i), target);
  }
  
  // optional int32 src_friend_type = 2;
  if (has_src_friend_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->src_friend_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100152::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 src_friend_type = 2;
    if (has_src_friend_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->src_friend_type());
    }
    
  }
  // repeated int64 role_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_id(i));
    }
    total_size += 1 * this->role_id_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100152::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100152* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100152*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100152::MergeFrom(const Proto10100152& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_id_.MergeFrom(from.role_id_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_src_friend_type()) {
      set_src_friend_type(from.src_friend_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100152::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100152::CopyFrom(const Proto10100152& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100152::IsInitialized() const {
  
  return true;
}

void Proto10100152::Swap(Proto10100152* other) {
  if (other != this) {
    role_id_.Swap(&other->role_id_);
    std::swap(src_friend_type_, other->src_friend_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100152::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100152_descriptor_;
  metadata.reflection = Proto10100152_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100153::kNameFieldNumber;
#endif  // !_MSC_VER

Proto10100153::Proto10100153()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100153::InitAsDefaultInstance() {
}

Proto10100153::Proto10100153(const Proto10100153& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100153::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100153::~Proto10100153() {
  SharedDtor();
}

void Proto10100153::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Proto10100153::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100153::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100153_descriptor_;
}

const Proto10100153& Proto10100153::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto10100153* Proto10100153::default_instance_ = NULL;

Proto10100153* Proto10100153::New() const {
  return new Proto10100153;
}

void Proto10100153::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100153::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100153::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100153::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100153::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100153::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100153* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100153*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100153::MergeFrom(const Proto10100153& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100153::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100153::CopyFrom(const Proto10100153& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100153::IsInitialized() const {
  
  return true;
}

void Proto10100153::Swap(Proto10100153* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100153::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100153_descriptor_;
  metadata.reflection = Proto10100153_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100150::kFriendTypeFieldNumber;
const int Proto50100150::kFriendListFieldNumber;
#endif  // !_MSC_VER

Proto50100150::Proto50100150()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100150::InitAsDefaultInstance() {
}

Proto50100150::Proto50100150(const Proto50100150& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100150::SharedCtor() {
  _cached_size_ = 0;
  friend_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100150::~Proto50100150() {
  SharedDtor();
}

void Proto50100150::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100150::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100150::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100150_descriptor_;
}

const Proto50100150& Proto50100150::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto50100150* Proto50100150::default_instance_ = NULL;

Proto50100150* Proto50100150::New() const {
  return new Proto50100150;
}

void Proto50100150::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    friend_type_ = 0;
  }
  friend_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100150::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 friend_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &friend_type_)));
          set_has_friend_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_friend_list;
        break;
      }
      
      // repeated .ProtoFriendInfo friend_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_friend_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friend_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_friend_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100150::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 friend_type = 1;
  if (has_friend_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->friend_type(), output);
  }
  
  // repeated .ProtoFriendInfo friend_list = 2;
  for (int i = 0; i < this->friend_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->friend_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100150::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 friend_type = 1;
  if (has_friend_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->friend_type(), target);
  }
  
  // repeated .ProtoFriendInfo friend_list = 2;
  for (int i = 0; i < this->friend_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->friend_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100150::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 friend_type = 1;
    if (has_friend_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->friend_type());
    }
    
  }
  // repeated .ProtoFriendInfo friend_list = 2;
  total_size += 1 * this->friend_list_size();
  for (int i = 0; i < this->friend_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->friend_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100150::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100150* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100150*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100150::MergeFrom(const Proto50100150& from) {
  GOOGLE_CHECK_NE(&from, this);
  friend_list_.MergeFrom(from.friend_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_friend_type()) {
      set_friend_type(from.friend_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100150::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100150::CopyFrom(const Proto50100150& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100150::IsInitialized() const {
  
  return true;
}

void Proto50100150::Swap(Proto50100150* other) {
  if (other != this) {
    std::swap(friend_type_, other->friend_type_);
    friend_list_.Swap(&other->friend_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100150::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100150_descriptor_;
  metadata.reflection = Proto50100150_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100151::kRoleIdFieldNumber;
const int Proto50100151::kSrcFriendTypeFieldNumber;
const int Proto50100151::kDesFriendTypeFieldNumber;
#endif  // !_MSC_VER

Proto50100151::Proto50100151()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100151::InitAsDefaultInstance() {
}

Proto50100151::Proto50100151(const Proto50100151& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100151::SharedCtor() {
  _cached_size_ = 0;
  src_friend_type_ = 0;
  des_friend_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100151::~Proto50100151() {
  SharedDtor();
}

void Proto50100151::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100151::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100151::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100151_descriptor_;
}

const Proto50100151& Proto50100151::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto50100151* Proto50100151::default_instance_ = NULL;

Proto50100151* Proto50100151::New() const {
  return new Proto50100151;
}

void Proto50100151::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    src_friend_type_ = 0;
    des_friend_type_ = 0;
  }
  role_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100151::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_role_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_role_id;
        if (input->ExpectTag(16)) goto parse_src_friend_type;
        break;
      }
      
      // optional int32 src_friend_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_src_friend_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &src_friend_type_)));
          set_has_src_friend_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_des_friend_type;
        break;
      }
      
      // optional int32 des_friend_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_des_friend_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &des_friend_type_)));
          set_has_des_friend_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100151::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 role_id = 1;
  for (int i = 0; i < this->role_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->role_id(i), output);
  }
  
  // optional int32 src_friend_type = 2;
  if (has_src_friend_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->src_friend_type(), output);
  }
  
  // optional int32 des_friend_type = 3;
  if (has_des_friend_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->des_friend_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100151::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 role_id = 1;
  for (int i = 0; i < this->role_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->role_id(i), target);
  }
  
  // optional int32 src_friend_type = 2;
  if (has_src_friend_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->src_friend_type(), target);
  }
  
  // optional int32 des_friend_type = 3;
  if (has_des_friend_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->des_friend_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100151::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 src_friend_type = 2;
    if (has_src_friend_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->src_friend_type());
    }
    
    // optional int32 des_friend_type = 3;
    if (has_des_friend_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->des_friend_type());
    }
    
  }
  // repeated int64 role_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_id(i));
    }
    total_size += 1 * this->role_id_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100151::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100151* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100151*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100151::MergeFrom(const Proto50100151& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_id_.MergeFrom(from.role_id_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_src_friend_type()) {
      set_src_friend_type(from.src_friend_type());
    }
    if (from.has_des_friend_type()) {
      set_des_friend_type(from.des_friend_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100151::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100151::CopyFrom(const Proto50100151& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100151::IsInitialized() const {
  
  return true;
}

void Proto50100151::Swap(Proto50100151* other) {
  if (other != this) {
    role_id_.Swap(&other->role_id_);
    std::swap(src_friend_type_, other->src_friend_type_);
    std::swap(des_friend_type_, other->des_friend_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100151::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100151_descriptor_;
  metadata.reflection = Proto50100151_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100152::kRoleSetFieldNumber;
#endif  // !_MSC_VER

Proto50100152::Proto50100152()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100152::InitAsDefaultInstance() {
}

Proto50100152::Proto50100152(const Proto50100152& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100152::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100152::~Proto50100152() {
  SharedDtor();
}

void Proto50100152::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100152::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100152::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100152_descriptor_;
}

const Proto50100152& Proto50100152::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto50100152* Proto50100152::default_instance_ = NULL;

Proto50100152* Proto50100152::New() const {
  return new Proto50100152;
}

void Proto50100152::Clear() {
  role_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100152::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 role_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_role_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_role_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100152::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 role_set = 1;
  for (int i = 0; i < this->role_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->role_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100152::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 role_set = 1;
  for (int i = 0; i < this->role_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->role_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100152::ByteSize() const {
  int total_size = 0;
  
  // repeated int64 role_set = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_set(i));
    }
    total_size += 1 * this->role_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100152::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100152* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100152*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100152::MergeFrom(const Proto50100152& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_set_.MergeFrom(from.role_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100152::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100152::CopyFrom(const Proto50100152& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100152::IsInitialized() const {
  
  return true;
}

void Proto50100152::Swap(Proto50100152* other) {
  if (other != this) {
    role_set_.Swap(&other->role_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100152::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100152_descriptor_;
  metadata.reflection = Proto50100152_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100153::kFriendInfoFieldNumber;
#endif  // !_MSC_VER

Proto50100153::Proto50100153()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100153::InitAsDefaultInstance() {
}

Proto50100153::Proto50100153(const Proto50100153& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100153::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100153::~Proto50100153() {
  SharedDtor();
}

void Proto50100153::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100153::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100153::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100153_descriptor_;
}

const Proto50100153& Proto50100153::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto50100153* Proto50100153::default_instance_ = NULL;

Proto50100153* Proto50100153::New() const {
  return new Proto50100153;
}

void Proto50100153::Clear() {
  friend_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100153::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoFriendInfo friend_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_friend_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friend_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_friend_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100153::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoFriendInfo friend_info = 1;
  for (int i = 0; i < this->friend_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friend_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100153::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoFriendInfo friend_info = 1;
  for (int i = 0; i < this->friend_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->friend_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100153::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoFriendInfo friend_info = 1;
  total_size += 1 * this->friend_info_size();
  for (int i = 0; i < this->friend_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->friend_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100153::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100153* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100153*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100153::MergeFrom(const Proto50100153& from) {
  GOOGLE_CHECK_NE(&from, this);
  friend_info_.MergeFrom(from.friend_info_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100153::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100153::CopyFrom(const Proto50100153& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100153::IsInitialized() const {
  
  return true;
}

void Proto50100153::Swap(Proto50100153* other) {
  if (other != this) {
    friend_info_.Swap(&other->friend_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100153::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100153_descriptor_;
  metadata.reflection = Proto50100153_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100154::kFriendListFieldNumber;
#endif  // !_MSC_VER

Proto50100154::Proto50100154()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100154::InitAsDefaultInstance() {
}

Proto50100154::Proto50100154(const Proto50100154& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100154::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100154::~Proto50100154() {
  SharedDtor();
}

void Proto50100154::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100154::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100154::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100154_descriptor_;
}

const Proto50100154& Proto50100154::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto50100154* Proto50100154::default_instance_ = NULL;

Proto50100154* Proto50100154::New() const {
  return new Proto50100154;
}

void Proto50100154::Clear() {
  friend_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100154::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoFriendInfo friend_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_friend_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friend_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_friend_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100154::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoFriendInfo friend_list = 1;
  for (int i = 0; i < this->friend_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friend_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100154::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoFriendInfo friend_list = 1;
  for (int i = 0; i < this->friend_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->friend_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100154::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoFriendInfo friend_list = 1;
  total_size += 1 * this->friend_list_size();
  for (int i = 0; i < this->friend_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->friend_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100154::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100154* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100154*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100154::MergeFrom(const Proto50100154& from) {
  GOOGLE_CHECK_NE(&from, this);
  friend_list_.MergeFrom(from.friend_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100154::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100154::CopyFrom(const Proto50100154& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100154::IsInitialized() const {
  
  return true;
}

void Proto50100154::Swap(Proto50100154* other) {
  if (other != this) {
    friend_list_.Swap(&other->friend_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100154::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100154_descriptor_;
  metadata.reflection = Proto50100154_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100501::kMainTypeFieldNumber;
const int Proto10100501::kSubTypeFieldNumber;
const int Proto10100501::kPageIndexFieldNumber;
const int Proto10100501::kSortFieldNumber;
const int Proto10100501::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto10100501::Proto10100501()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100501::InitAsDefaultInstance() {
}

Proto10100501::Proto10100501(const Proto10100501& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100501::SharedCtor() {
  _cached_size_ = 0;
  main_type_ = 0;
  sub_type_ = 0;
  page_index_ = 0;
  sort_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100501::~Proto10100501() {
  SharedDtor();
}

void Proto10100501::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100501::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100501::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100501_descriptor_;
}

const Proto10100501& Proto10100501::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto10100501* Proto10100501::default_instance_ = NULL;

Proto10100501* Proto10100501::New() const {
  return new Proto10100501;
}

void Proto10100501::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    main_type_ = 0;
    sub_type_ = 0;
    page_index_ = 0;
    sort_ = 0;
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100501::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 main_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &main_type_)));
          set_has_main_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sub_type;
        break;
      }
      
      // optional int32 sub_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sub_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sub_type_)));
          set_has_sub_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_page_index;
        break;
      }
      
      // optional int32 page_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_sort;
        break;
      }
      
      // optional int32 sort = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sort_)));
          set_has_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }
      
      // optional int32 type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100501::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 main_type = 1;
  if (has_main_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->main_type(), output);
  }
  
  // optional int32 sub_type = 2;
  if (has_sub_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sub_type(), output);
  }
  
  // optional int32 page_index = 3;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_index(), output);
  }
  
  // optional int32 sort = 4;
  if (has_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sort(), output);
  }
  
  // optional int32 type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100501::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 main_type = 1;
  if (has_main_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->main_type(), target);
  }
  
  // optional int32 sub_type = 2;
  if (has_sub_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sub_type(), target);
  }
  
  // optional int32 page_index = 3;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_index(), target);
  }
  
  // optional int32 sort = 4;
  if (has_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sort(), target);
  }
  
  // optional int32 type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100501::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 main_type = 1;
    if (has_main_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->main_type());
    }
    
    // optional int32 sub_type = 2;
    if (has_sub_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sub_type());
    }
    
    // optional int32 page_index = 3;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
    // optional int32 sort = 4;
    if (has_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sort());
    }
    
    // optional int32 type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100501::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100501* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100501*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100501::MergeFrom(const Proto10100501& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_main_type()) {
      set_main_type(from.main_type());
    }
    if (from.has_sub_type()) {
      set_sub_type(from.sub_type());
    }
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
    if (from.has_sort()) {
      set_sort(from.sort());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100501::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100501::CopyFrom(const Proto10100501& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100501::IsInitialized() const {
  
  return true;
}

void Proto10100501::Swap(Proto10100501* other) {
  if (other != this) {
    std::swap(main_type_, other->main_type_);
    std::swap(sub_type_, other->sub_type_);
    std::swap(page_index_, other->page_index_);
    std::swap(sort_, other->sort_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100501::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100501_descriptor_;
  metadata.reflection = Proto10100501_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100502::kMoneyTypeFieldNumber;
const int Proto10100502::kIndexFieldNumber;
const int Proto10100502::kAmountFieldNumber;
const int Proto10100502::kPriceFieldNumber;
#endif  // !_MSC_VER

Proto10100502::Proto10100502()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100502::InitAsDefaultInstance() {
}

Proto10100502::Proto10100502(const Proto10100502& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100502::SharedCtor() {
  _cached_size_ = 0;
  money_type_ = 0;
  index_ = 0;
  amount_ = 0;
  price_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100502::~Proto10100502() {
  SharedDtor();
}

void Proto10100502::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100502::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100502::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100502_descriptor_;
}

const Proto10100502& Proto10100502::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto10100502* Proto10100502::default_instance_ = NULL;

Proto10100502* Proto10100502::New() const {
  return new Proto10100502;
}

void Proto10100502::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    money_type_ = 0;
    index_ = 0;
    amount_ = 0;
    price_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100502::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 money_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_type_)));
          set_has_money_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }
      
      // optional int32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_price;
        break;
      }
      
      // optional int32 price = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100502::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 money_type = 1;
  if (has_money_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->money_type(), output);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->amount(), output);
  }
  
  // optional int32 price = 4;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->price(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100502::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 money_type = 1;
  if (has_money_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->money_type(), target);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->amount(), target);
  }
  
  // optional int32 price = 4;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->price(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100502::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 money_type = 1;
    if (has_money_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money_type());
    }
    
    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 amount = 3;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
    // optional int32 price = 4;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100502::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100502* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100502*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100502::MergeFrom(const Proto10100502& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_money_type()) {
      set_money_type(from.money_type());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100502::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100502::CopyFrom(const Proto10100502& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100502::IsInitialized() const {
  
  return true;
}

void Proto10100502::Swap(Proto10100502* other) {
  if (other != this) {
    std::swap(money_type_, other->money_type_);
    std::swap(index_, other->index_);
    std::swap(amount_, other->amount_);
    std::swap(price_, other->price_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100502::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100502_descriptor_;
  metadata.reflection = Proto10100502_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100503::kMarketIndexFieldNumber;
const int Proto10100503::kItemIdFieldNumber;
const int Proto10100503::kBuyAmountFieldNumber;
#endif  // !_MSC_VER

Proto10100503::Proto10100503()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100503::InitAsDefaultInstance() {
}

Proto10100503::Proto10100503(const Proto10100503& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100503::SharedCtor() {
  _cached_size_ = 0;
  market_index_ = 0;
  item_id_ = 0;
  buy_amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100503::~Proto10100503() {
  SharedDtor();
}

void Proto10100503::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100503::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100503::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100503_descriptor_;
}

const Proto10100503& Proto10100503::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto10100503* Proto10100503::default_instance_ = NULL;

Proto10100503* Proto10100503::New() const {
  return new Proto10100503;
}

void Proto10100503::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    market_index_ = 0;
    item_id_ = 0;
    buy_amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100503::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 market_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &market_index_)));
          set_has_market_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }
      
      // optional int32 item_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_buy_amount;
        break;
      }
      
      // optional int32 buy_amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_amount_)));
          set_has_buy_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100503::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 market_index = 1;
  if (has_market_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->market_index(), output);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_id(), output);
  }
  
  // optional int32 buy_amount = 3;
  if (has_buy_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->buy_amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100503::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 market_index = 1;
  if (has_market_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->market_index(), target);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_id(), target);
  }
  
  // optional int32 buy_amount = 3;
  if (has_buy_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->buy_amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100503::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 market_index = 1;
    if (has_market_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->market_index());
    }
    
    // optional int32 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 buy_amount = 3;
    if (has_buy_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100503::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100503* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100503*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100503::MergeFrom(const Proto10100503& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_market_index()) {
      set_market_index(from.market_index());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_buy_amount()) {
      set_buy_amount(from.buy_amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100503::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100503::CopyFrom(const Proto10100503& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100503::IsInitialized() const {
  
  return true;
}

void Proto10100503::Swap(Proto10100503* other) {
  if (other != this) {
    std::swap(market_index_, other->market_index_);
    std::swap(item_id_, other->item_id_);
    std::swap(buy_amount_, other->buy_amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100503::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100503_descriptor_;
  metadata.reflection = Proto10100503_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100504::kPageIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100504::Proto10100504()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100504::InitAsDefaultInstance() {
}

Proto10100504::Proto10100504(const Proto10100504& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100504::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100504::~Proto10100504() {
  SharedDtor();
}

void Proto10100504::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100504::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100504::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100504_descriptor_;
}

const Proto10100504& Proto10100504::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto10100504* Proto10100504::default_instance_ = NULL;

Proto10100504* Proto10100504::New() const {
  return new Proto10100504;
}

void Proto10100504::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100504::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100504::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100504::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100504::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100504::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100504* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100504*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100504::MergeFrom(const Proto10100504& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100504::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100504::CopyFrom(const Proto10100504& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100504::IsInitialized() const {
  
  return true;
}

void Proto10100504::Swap(Proto10100504* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100504::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100504_descriptor_;
  metadata.reflection = Proto10100504_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100505::kMarketIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100505::Proto10100505()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100505::InitAsDefaultInstance() {
}

Proto10100505::Proto10100505(const Proto10100505& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100505::SharedCtor() {
  _cached_size_ = 0;
  market_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100505::~Proto10100505() {
  SharedDtor();
}

void Proto10100505::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100505::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100505::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100505_descriptor_;
}

const Proto10100505& Proto10100505::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto10100505* Proto10100505::default_instance_ = NULL;

Proto10100505* Proto10100505::New() const {
  return new Proto10100505;
}

void Proto10100505::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    market_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100505::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 market_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &market_index_)));
          set_has_market_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100505::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 market_index = 1;
  if (has_market_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->market_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100505::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 market_index = 1;
  if (has_market_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->market_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100505::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 market_index = 1;
    if (has_market_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->market_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100505::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100505* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100505*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100505::MergeFrom(const Proto10100505& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_market_index()) {
      set_market_index(from.market_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100505::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100505::CopyFrom(const Proto10100505& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100505::IsInitialized() const {
  
  return true;
}

void Proto10100505::Swap(Proto10100505* other) {
  if (other != this) {
    std::swap(market_index_, other->market_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100505::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100505_descriptor_;
  metadata.reflection = Proto10100505_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100506::kMarketIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100506::Proto10100506()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100506::InitAsDefaultInstance() {
}

Proto10100506::Proto10100506(const Proto10100506& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100506::SharedCtor() {
  _cached_size_ = 0;
  market_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100506::~Proto10100506() {
  SharedDtor();
}

void Proto10100506::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100506::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100506::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100506_descriptor_;
}

const Proto10100506& Proto10100506::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto10100506* Proto10100506::default_instance_ = NULL;

Proto10100506* Proto10100506::New() const {
  return new Proto10100506;
}

void Proto10100506::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    market_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100506::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 market_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &market_index_)));
          set_has_market_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100506::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 market_index = 1;
  if (has_market_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->market_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100506::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 market_index = 1;
  if (has_market_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->market_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100506::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 market_index = 1;
    if (has_market_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->market_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100506::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100506* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100506*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100506::MergeFrom(const Proto10100506& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_market_index()) {
      set_market_index(from.market_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100506::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100506::CopyFrom(const Proto10100506& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100506::IsInitialized() const {
  
  return true;
}

void Proto10100506::Swap(Proto10100506* other) {
  if (other != this) {
    std::swap(market_index_, other->market_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100506::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100506_descriptor_;
  metadata.reflection = Proto10100506_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100501::kTypeFieldNumber;
const int Proto50100501::kMainTypeFieldNumber;
const int Proto50100501::kSubTypeFieldNumber;
const int Proto50100501::kPageIndexFieldNumber;
const int Proto50100501::kTotalPageFieldNumber;
const int Proto50100501::kMarketSetFieldNumber;
const int Proto50100501::kBuyTimesFieldNumber;
#endif  // !_MSC_VER

Proto50100501::Proto50100501()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100501::InitAsDefaultInstance() {
}

Proto50100501::Proto50100501(const Proto50100501& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100501::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  main_type_ = 0;
  sub_type_ = 0;
  page_index_ = 0;
  total_page_ = 0;
  buy_times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100501::~Proto50100501() {
  SharedDtor();
}

void Proto50100501::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100501::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100501::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100501_descriptor_;
}

const Proto50100501& Proto50100501::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto50100501* Proto50100501::default_instance_ = NULL;

Proto50100501* Proto50100501::New() const {
  return new Proto50100501;
}

void Proto50100501::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    main_type_ = 0;
    sub_type_ = 0;
    page_index_ = 0;
    total_page_ = 0;
    buy_times_ = 0;
  }
  market_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100501::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_main_type;
        break;
      }
      
      // optional int32 main_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_main_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &main_type_)));
          set_has_main_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_sub_type;
        break;
      }
      
      // optional int32 sub_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sub_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sub_type_)));
          set_has_sub_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_page_index;
        break;
      }
      
      // optional int32 page_index = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_market_set;
        break;
      }
      
      // repeated .ProtoMarketItem market_set = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_market_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_market_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_market_set;
        if (input->ExpectTag(56)) goto parse_buy_times;
        break;
      }
      
      // optional int32 buy_times = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_times_)));
          set_has_buy_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100501::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 main_type = 2;
  if (has_main_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->main_type(), output);
  }
  
  // optional int32 sub_type = 3;
  if (has_sub_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sub_type(), output);
  }
  
  // optional int32 page_index = 4;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->page_index(), output);
  }
  
  // optional int32 total_page = 5;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->total_page(), output);
  }
  
  // repeated .ProtoMarketItem market_set = 6;
  for (int i = 0; i < this->market_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->market_set(i), output);
  }
  
  // optional int32 buy_times = 7;
  if (has_buy_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->buy_times(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100501::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 main_type = 2;
  if (has_main_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->main_type(), target);
  }
  
  // optional int32 sub_type = 3;
  if (has_sub_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sub_type(), target);
  }
  
  // optional int32 page_index = 4;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->page_index(), target);
  }
  
  // optional int32 total_page = 5;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->total_page(), target);
  }
  
  // repeated .ProtoMarketItem market_set = 6;
  for (int i = 0; i < this->market_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->market_set(i), target);
  }
  
  // optional int32 buy_times = 7;
  if (has_buy_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->buy_times(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100501::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 main_type = 2;
    if (has_main_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->main_type());
    }
    
    // optional int32 sub_type = 3;
    if (has_sub_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sub_type());
    }
    
    // optional int32 page_index = 4;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
    // optional int32 total_page = 5;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
    // optional int32 buy_times = 7;
    if (has_buy_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_times());
    }
    
  }
  // repeated .ProtoMarketItem market_set = 6;
  total_size += 1 * this->market_set_size();
  for (int i = 0; i < this->market_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->market_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100501::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100501* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100501*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100501::MergeFrom(const Proto50100501& from) {
  GOOGLE_CHECK_NE(&from, this);
  market_set_.MergeFrom(from.market_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_main_type()) {
      set_main_type(from.main_type());
    }
    if (from.has_sub_type()) {
      set_sub_type(from.sub_type());
    }
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
    if (from.has_buy_times()) {
      set_buy_times(from.buy_times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100501::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100501::CopyFrom(const Proto50100501& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100501::IsInitialized() const {
  
  return true;
}

void Proto50100501::Swap(Proto50100501* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(main_type_, other->main_type_);
    std::swap(sub_type_, other->sub_type_);
    std::swap(page_index_, other->page_index_);
    std::swap(total_page_, other->total_page_);
    market_set_.Swap(&other->market_set_);
    std::swap(buy_times_, other->buy_times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100501::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100501_descriptor_;
  metadata.reflection = Proto50100501_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100155::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto10100155::Proto10100155()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100155::InitAsDefaultInstance() {
}

Proto10100155::Proto10100155(const Proto10100155& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100155::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100155::~Proto10100155() {
  SharedDtor();
}

void Proto10100155::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100155::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100155::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100155_descriptor_;
}

const Proto10100155& Proto10100155::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto10100155* Proto10100155::default_instance_ = NULL;

Proto10100155* Proto10100155::New() const {
  return new Proto10100155;
}

void Proto10100155::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100155::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100155::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100155::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100155::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100155::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100155* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100155*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100155::MergeFrom(const Proto10100155& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100155::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100155::CopyFrom(const Proto10100155& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100155::IsInitialized() const {
  
  return true;
}

void Proto10100155::Swap(Proto10100155* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100155::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100155_descriptor_;
  metadata.reflection = Proto10100155_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100155::kFriendInfoFieldNumber;
#endif  // !_MSC_VER

Proto50100155::Proto50100155()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100155::InitAsDefaultInstance() {
  friend_info_ = const_cast< ::ProtoFriendInfo*>(&::ProtoFriendInfo::default_instance());
}

Proto50100155::Proto50100155(const Proto50100155& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100155::SharedCtor() {
  _cached_size_ = 0;
  friend_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100155::~Proto50100155() {
  SharedDtor();
}

void Proto50100155::SharedDtor() {
  if (this != default_instance_) {
    delete friend_info_;
  }
}

void Proto50100155::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100155::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100155_descriptor_;
}

const Proto50100155& Proto50100155::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto50100155* Proto50100155::default_instance_ = NULL;

Proto50100155* Proto50100155::New() const {
  return new Proto50100155;
}

void Proto50100155::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_friend_info()) {
      if (friend_info_ != NULL) friend_info_->::ProtoFriendInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100155::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoFriendInfo friend_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_friend_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100155::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoFriendInfo friend_info = 1;
  if (has_friend_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friend_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100155::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoFriendInfo friend_info = 1;
  if (has_friend_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->friend_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100155::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoFriendInfo friend_info = 1;
    if (has_friend_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friend_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100155::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100155* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100155*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100155::MergeFrom(const Proto50100155& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_friend_info()) {
      mutable_friend_info()->::ProtoFriendInfo::MergeFrom(from.friend_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100155::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100155::CopyFrom(const Proto50100155& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100155::IsInitialized() const {
  
  return true;
}

void Proto50100155::Swap(Proto50100155* other) {
  if (other != this) {
    std::swap(friend_info_, other->friend_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100155::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100155_descriptor_;
  metadata.reflection = Proto50100155_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400132::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400132::Proto11400132()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400132::InitAsDefaultInstance() {
}

Proto11400132::Proto11400132(const Proto11400132& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400132::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400132::~Proto11400132() {
  SharedDtor();
}

void Proto11400132::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400132::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400132::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400132_descriptor_;
}

const Proto11400132& Proto11400132::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto11400132* Proto11400132::default_instance_ = NULL;

Proto11400132* Proto11400132::New() const {
  return new Proto11400132;
}

void Proto11400132::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400132::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400132::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400132::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400132::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400132::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400132* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400132*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400132::MergeFrom(const Proto11400132& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400132::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400132::CopyFrom(const Proto11400132& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400132::IsInitialized() const {
  
  return true;
}

void Proto11400132::Swap(Proto11400132* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400132::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400132_descriptor_;
  metadata.reflection = Proto11400132_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400133::kSelloutSetFieldNumber;
#endif  // !_MSC_VER

Proto51400133::Proto51400133()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400133::InitAsDefaultInstance() {
}

Proto51400133::Proto51400133(const Proto51400133& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400133::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400133::~Proto51400133() {
  SharedDtor();
}

void Proto51400133::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400133::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400133::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400133_descriptor_;
}

const Proto51400133& Proto51400133::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto51400133* Proto51400133::default_instance_ = NULL;

Proto51400133* Proto51400133::New() const {
  return new Proto51400133;
}

void Proto51400133::Clear() {
  sellout_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400133::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoSellOut sellout_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sellout_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sellout_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_sellout_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400133::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoSellOut sellout_set = 1;
  for (int i = 0; i < this->sellout_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sellout_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400133::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoSellOut sellout_set = 1;
  for (int i = 0; i < this->sellout_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sellout_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400133::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoSellOut sellout_set = 1;
  total_size += 1 * this->sellout_set_size();
  for (int i = 0; i < this->sellout_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sellout_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400133::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400133* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400133*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400133::MergeFrom(const Proto51400133& from) {
  GOOGLE_CHECK_NE(&from, this);
  sellout_set_.MergeFrom(from.sellout_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400133::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400133::CopyFrom(const Proto51400133& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400133::IsInitialized() const {
  
  return true;
}

void Proto51400133::Swap(Proto51400133* other) {
  if (other != this) {
    sellout_set_.Swap(&other->sellout_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400133::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400133_descriptor_;
  metadata.reflection = Proto51400133_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100504::kOnsellSetFieldNumber;
const int Proto50100504::kPageIndexFieldNumber;
const int Proto50100504::kTotalPageFieldNumber;
#endif  // !_MSC_VER

Proto50100504::Proto50100504()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100504::InitAsDefaultInstance() {
}

Proto50100504::Proto50100504(const Proto50100504& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100504::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  total_page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100504::~Proto50100504() {
  SharedDtor();
}

void Proto50100504::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100504::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100504::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100504_descriptor_;
}

const Proto50100504& Proto50100504::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto50100504* Proto50100504::default_instance_ = NULL;

Proto50100504* Proto50100504::New() const {
  return new Proto50100504;
}

void Proto50100504::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    page_index_ = 0;
    total_page_ = 0;
  }
  onsell_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100504::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoMarketItem onsell_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_onsell_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_onsell_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_onsell_set;
        if (input->ExpectTag(16)) goto parse_page_index;
        break;
      }
      
      // optional int32 page_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100504::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoMarketItem onsell_set = 1;
  for (int i = 0; i < this->onsell_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->onsell_set(i), output);
  }
  
  // optional int32 page_index = 2;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_index(), output);
  }
  
  // optional int32 total_page = 3;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100504::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoMarketItem onsell_set = 1;
  for (int i = 0; i < this->onsell_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->onsell_set(i), target);
  }
  
  // optional int32 page_index = 2;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_index(), target);
  }
  
  // optional int32 total_page = 3;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100504::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 page_index = 2;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
    // optional int32 total_page = 3;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
  }
  // repeated .ProtoMarketItem onsell_set = 1;
  total_size += 1 * this->onsell_set_size();
  for (int i = 0; i < this->onsell_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->onsell_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100504::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100504* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100504*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100504::MergeFrom(const Proto50100504& from) {
  GOOGLE_CHECK_NE(&from, this);
  onsell_set_.MergeFrom(from.onsell_set_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100504::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100504::CopyFrom(const Proto50100504& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100504::IsInitialized() const {
  
  return true;
}

void Proto50100504::Swap(Proto50100504* other) {
  if (other != this) {
    onsell_set_.Swap(&other->onsell_set_);
    std::swap(page_index_, other->page_index_);
    std::swap(total_page_, other->total_page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100504::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100504_descriptor_;
  metadata.reflection = Proto50100504_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400301::kPageIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400301::Proto11400301()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400301::InitAsDefaultInstance() {
}

Proto11400301::Proto11400301(const Proto11400301& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400301::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400301::~Proto11400301() {
  SharedDtor();
}

void Proto11400301::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400301::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400301::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400301_descriptor_;
}

const Proto11400301& Proto11400301::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto11400301* Proto11400301::default_instance_ = NULL;

Proto11400301* Proto11400301::New() const {
  return new Proto11400301;
}

void Proto11400301::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400301::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400301::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400301::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400301::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400301::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400301* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400301*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400301::MergeFrom(const Proto11400301& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400301::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400301::CopyFrom(const Proto11400301& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400301::IsInitialized() const {
  
  return true;
}

void Proto11400301::Swap(Proto11400301* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400301::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400301_descriptor_;
  metadata.reflection = Proto11400301_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400301::kMailListFieldNumber;
const int Proto51400301::kDepositMailAmountFieldNumber;
#endif  // !_MSC_VER

Proto51400301::Proto51400301()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400301::InitAsDefaultInstance() {
}

Proto51400301::Proto51400301(const Proto51400301& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400301::SharedCtor() {
  _cached_size_ = 0;
  deposit_mail_amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400301::~Proto51400301() {
  SharedDtor();
}

void Proto51400301::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400301::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400301::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400301_descriptor_;
}

const Proto51400301& Proto51400301::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto51400301* Proto51400301::default_instance_ = NULL;

Proto51400301* Proto51400301::New() const {
  return new Proto51400301;
}

void Proto51400301::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    deposit_mail_amount_ = 0;
  }
  mail_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400301::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoMailInfo mail_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mail_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mail_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_mail_list;
        if (input->ExpectTag(16)) goto parse_deposit_mail_amount;
        break;
      }
      
      // optional int32 deposit_mail_amount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_deposit_mail_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deposit_mail_amount_)));
          set_has_deposit_mail_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400301::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoMailInfo mail_list = 1;
  for (int i = 0; i < this->mail_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->mail_list(i), output);
  }
  
  // optional int32 deposit_mail_amount = 2;
  if (has_deposit_mail_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->deposit_mail_amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400301::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoMailInfo mail_list = 1;
  for (int i = 0; i < this->mail_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->mail_list(i), target);
  }
  
  // optional int32 deposit_mail_amount = 2;
  if (has_deposit_mail_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->deposit_mail_amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400301::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 deposit_mail_amount = 2;
    if (has_deposit_mail_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->deposit_mail_amount());
    }
    
  }
  // repeated .ProtoMailInfo mail_list = 1;
  total_size += 1 * this->mail_list_size();
  for (int i = 0; i < this->mail_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mail_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400301::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400301* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400301*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400301::MergeFrom(const Proto51400301& from) {
  GOOGLE_CHECK_NE(&from, this);
  mail_list_.MergeFrom(from.mail_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_deposit_mail_amount()) {
      set_deposit_mail_amount(from.deposit_mail_amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400301::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400301::CopyFrom(const Proto51400301& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400301::IsInitialized() const {
  
  return true;
}

void Proto51400301::Swap(Proto51400301* other) {
  if (other != this) {
    mail_list_.Swap(&other->mail_list_);
    std::swap(deposit_mail_amount_, other->deposit_mail_amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400301::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400301_descriptor_;
  metadata.reflection = Proto51400301_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400302::kMailIdFieldNumber;
#endif  // !_MSC_VER

Proto11400302::Proto11400302()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400302::InitAsDefaultInstance() {
}

Proto11400302::Proto11400302(const Proto11400302& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400302::SharedCtor() {
  _cached_size_ = 0;
  mail_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400302::~Proto11400302() {
  SharedDtor();
}

void Proto11400302::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400302::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400302::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400302_descriptor_;
}

const Proto11400302& Proto11400302::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto11400302* Proto11400302::default_instance_ = NULL;

Proto11400302* Proto11400302::New() const {
  return new Proto11400302;
}

void Proto11400302::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mail_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400302::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 mail_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mail_id_)));
          set_has_mail_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400302::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 mail_id = 1;
  if (has_mail_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->mail_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400302::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 mail_id = 1;
  if (has_mail_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->mail_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400302::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 mail_id = 1;
    if (has_mail_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mail_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400302::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400302* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400302*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400302::MergeFrom(const Proto11400302& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mail_id()) {
      set_mail_id(from.mail_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400302::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400302::CopyFrom(const Proto11400302& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400302::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void Proto11400302::Swap(Proto11400302* other) {
  if (other != this) {
    std::swap(mail_id_, other->mail_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400302::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400302_descriptor_;
  metadata.reflection = Proto11400302_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400302::kMailIdFieldNumber;
const int Proto51400302::kMailTypeFieldNumber;
const int Proto51400302::kRoleNameFieldNumber;
const int Proto51400302::kMailTitleFieldNumber;
const int Proto51400302::kMailContentFieldNumber;
const int Proto51400302::kGoldFieldNumber;
const int Proto51400302::kCouponFieldNumber;
const int Proto51400302::kCopperFieldNumber;
const int Proto51400302::kBindCopperFieldNumber;
const int Proto51400302::kGoodsListFieldNumber;
const int Proto51400302::kLeftMinuteFieldNumber;
const int Proto51400302::kSenderVipFieldNumber;
#endif  // !_MSC_VER

Proto51400302::Proto51400302()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400302::InitAsDefaultInstance() {
}

Proto51400302::Proto51400302(const Proto51400302& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400302::SharedCtor() {
  _cached_size_ = 0;
  mail_id_ = GOOGLE_LONGLONG(0);
  mail_type_ = 0;
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mail_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mail_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  gold_ = 0;
  coupon_ = 0;
  copper_ = 0;
  bind_copper_ = 0;
  left_minute_ = 0;
  sender_vip_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400302::~Proto51400302() {
  SharedDtor();
}

void Proto51400302::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (mail_title_ != &::google::protobuf::internal::kEmptyString) {
    delete mail_title_;
  }
  if (mail_content_ != &::google::protobuf::internal::kEmptyString) {
    delete mail_content_;
  }
  if (this != default_instance_) {
  }
}

void Proto51400302::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400302::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400302_descriptor_;
}

const Proto51400302& Proto51400302::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto51400302* Proto51400302::default_instance_ = NULL;

Proto51400302* Proto51400302::New() const {
  return new Proto51400302;
}

void Proto51400302::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mail_id_ = GOOGLE_LONGLONG(0);
    mail_type_ = 0;
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
    if (has_mail_title()) {
      if (mail_title_ != &::google::protobuf::internal::kEmptyString) {
        mail_title_->clear();
      }
    }
    if (has_mail_content()) {
      if (mail_content_ != &::google::protobuf::internal::kEmptyString) {
        mail_content_->clear();
      }
    }
    gold_ = 0;
    coupon_ = 0;
    copper_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    bind_copper_ = 0;
    left_minute_ = 0;
    sender_vip_ = 0;
  }
  goods_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400302::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 mail_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mail_id_)));
          set_has_mail_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_mail_type;
        break;
      }
      
      // optional int32 mail_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mail_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mail_type_)));
          set_has_mail_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_role_name;
        break;
      }
      
      // optional string role_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_mail_title;
        break;
      }
      
      // optional string mail_title = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mail_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mail_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mail_title().data(), this->mail_title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_mail_content;
        break;
      }
      
      // optional string mail_content = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mail_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mail_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mail_content().data(), this->mail_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_gold;
        break;
      }
      
      // optional int32 gold = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_coupon;
        break;
      }
      
      // optional int32 coupon = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_coupon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coupon_)));
          set_has_coupon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_copper;
        break;
      }
      
      // optional int32 copper = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_copper:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copper_)));
          set_has_copper();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_bind_copper;
        break;
      }
      
      // optional int32 bind_copper = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bind_copper:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bind_copper_)));
          set_has_bind_copper();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_goods_list;
        break;
      }
      
      // repeated .ProtoItem goods_list = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_goods_list;
        if (input->ExpectTag(88)) goto parse_left_minute;
        break;
      }
      
      // optional int32 left_minute = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_minute:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_minute_)));
          set_has_left_minute();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_sender_vip;
        break;
      }
      
      // optional int32 sender_vip = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sender_vip:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sender_vip_)));
          set_has_sender_vip();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400302::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 mail_id = 1;
  if (has_mail_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->mail_id(), output);
  }
  
  // optional int32 mail_type = 2;
  if (has_mail_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mail_type(), output);
  }
  
  // optional string role_name = 3;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->role_name(), output);
  }
  
  // optional string mail_title = 4;
  if (has_mail_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mail_title().data(), this->mail_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->mail_title(), output);
  }
  
  // optional string mail_content = 5;
  if (has_mail_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mail_content().data(), this->mail_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->mail_content(), output);
  }
  
  // optional int32 gold = 6;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->gold(), output);
  }
  
  // optional int32 coupon = 7;
  if (has_coupon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->coupon(), output);
  }
  
  // optional int32 copper = 8;
  if (has_copper()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->copper(), output);
  }
  
  // optional int32 bind_copper = 9;
  if (has_bind_copper()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->bind_copper(), output);
  }
  
  // repeated .ProtoItem goods_list = 10;
  for (int i = 0; i < this->goods_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->goods_list(i), output);
  }
  
  // optional int32 left_minute = 11;
  if (has_left_minute()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->left_minute(), output);
  }
  
  // optional int32 sender_vip = 12;
  if (has_sender_vip()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->sender_vip(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400302::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 mail_id = 1;
  if (has_mail_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->mail_id(), target);
  }
  
  // optional int32 mail_type = 2;
  if (has_mail_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mail_type(), target);
  }
  
  // optional string role_name = 3;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->role_name(), target);
  }
  
  // optional string mail_title = 4;
  if (has_mail_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mail_title().data(), this->mail_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mail_title(), target);
  }
  
  // optional string mail_content = 5;
  if (has_mail_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mail_content().data(), this->mail_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->mail_content(), target);
  }
  
  // optional int32 gold = 6;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->gold(), target);
  }
  
  // optional int32 coupon = 7;
  if (has_coupon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->coupon(), target);
  }
  
  // optional int32 copper = 8;
  if (has_copper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->copper(), target);
  }
  
  // optional int32 bind_copper = 9;
  if (has_bind_copper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->bind_copper(), target);
  }
  
  // repeated .ProtoItem goods_list = 10;
  for (int i = 0; i < this->goods_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->goods_list(i), target);
  }
  
  // optional int32 left_minute = 11;
  if (has_left_minute()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->left_minute(), target);
  }
  
  // optional int32 sender_vip = 12;
  if (has_sender_vip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->sender_vip(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400302::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 mail_id = 1;
    if (has_mail_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mail_id());
    }
    
    // optional int32 mail_type = 2;
    if (has_mail_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mail_type());
    }
    
    // optional string role_name = 3;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
    // optional string mail_title = 4;
    if (has_mail_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mail_title());
    }
    
    // optional string mail_content = 5;
    if (has_mail_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mail_content());
    }
    
    // optional int32 gold = 6;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }
    
    // optional int32 coupon = 7;
    if (has_coupon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coupon());
    }
    
    // optional int32 copper = 8;
    if (has_copper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->copper());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 bind_copper = 9;
    if (has_bind_copper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bind_copper());
    }
    
    // optional int32 left_minute = 11;
    if (has_left_minute()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_minute());
    }
    
    // optional int32 sender_vip = 12;
    if (has_sender_vip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sender_vip());
    }
    
  }
  // repeated .ProtoItem goods_list = 10;
  total_size += 1 * this->goods_list_size();
  for (int i = 0; i < this->goods_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400302::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400302* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400302*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400302::MergeFrom(const Proto51400302& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_list_.MergeFrom(from.goods_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mail_id()) {
      set_mail_id(from.mail_id());
    }
    if (from.has_mail_type()) {
      set_mail_type(from.mail_type());
    }
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
    if (from.has_mail_title()) {
      set_mail_title(from.mail_title());
    }
    if (from.has_mail_content()) {
      set_mail_content(from.mail_content());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_coupon()) {
      set_coupon(from.coupon());
    }
    if (from.has_copper()) {
      set_copper(from.copper());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_bind_copper()) {
      set_bind_copper(from.bind_copper());
    }
    if (from.has_left_minute()) {
      set_left_minute(from.left_minute());
    }
    if (from.has_sender_vip()) {
      set_sender_vip(from.sender_vip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400302::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400302::CopyFrom(const Proto51400302& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400302::IsInitialized() const {
  
  return true;
}

void Proto51400302::Swap(Proto51400302* other) {
  if (other != this) {
    std::swap(mail_id_, other->mail_id_);
    std::swap(mail_type_, other->mail_type_);
    std::swap(role_name_, other->role_name_);
    std::swap(mail_title_, other->mail_title_);
    std::swap(mail_content_, other->mail_content_);
    std::swap(gold_, other->gold_);
    std::swap(coupon_, other->coupon_);
    std::swap(copper_, other->copper_);
    std::swap(bind_copper_, other->bind_copper_);
    goods_list_.Swap(&other->goods_list_);
    std::swap(left_minute_, other->left_minute_);
    std::swap(sender_vip_, other->sender_vip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400302::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400302_descriptor_;
  metadata.reflection = Proto51400302_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400304::kMailIdFieldNumber;
#endif  // !_MSC_VER

Proto11400304::Proto11400304()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400304::InitAsDefaultInstance() {
}

Proto11400304::Proto11400304(const Proto11400304& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400304::SharedCtor() {
  _cached_size_ = 0;
  mail_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400304::~Proto11400304() {
  SharedDtor();
}

void Proto11400304::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400304::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400304::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400304_descriptor_;
}

const Proto11400304& Proto11400304::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto11400304* Proto11400304::default_instance_ = NULL;

Proto11400304* Proto11400304::New() const {
  return new Proto11400304;
}

void Proto11400304::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mail_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400304::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 mail_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mail_id_)));
          set_has_mail_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400304::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 mail_id = 1;
  if (has_mail_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->mail_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400304::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 mail_id = 1;
  if (has_mail_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->mail_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400304::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 mail_id = 1;
    if (has_mail_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mail_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400304::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400304* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400304*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400304::MergeFrom(const Proto11400304& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mail_id()) {
      set_mail_id(from.mail_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400304::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400304::CopyFrom(const Proto11400304& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400304::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void Proto11400304::Swap(Proto11400304* other) {
  if (other != this) {
    std::swap(mail_id_, other->mail_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400304::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400304_descriptor_;
  metadata.reflection = Proto11400304_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400306::kDelTypeFieldNumber;
const int Proto11400306::kDelListFieldNumber;
#endif  // !_MSC_VER

Proto11400306::Proto11400306()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400306::InitAsDefaultInstance() {
}

Proto11400306::Proto11400306(const Proto11400306& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400306::SharedCtor() {
  _cached_size_ = 0;
  del_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400306::~Proto11400306() {
  SharedDtor();
}

void Proto11400306::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400306::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400306::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400306_descriptor_;
}

const Proto11400306& Proto11400306::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto11400306* Proto11400306::default_instance_ = NULL;

Proto11400306* Proto11400306::New() const {
  return new Proto11400306;
}

void Proto11400306::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    del_type_ = 0;
  }
  del_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400306::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 del_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &del_type_)));
          set_has_del_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_del_list;
        break;
      }
      
      // repeated int64 del_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_del_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16, input, this->mutable_del_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_del_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_del_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400306::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 del_type = 1;
  if (has_del_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->del_type(), output);
  }
  
  // repeated int64 del_list = 2;
  for (int i = 0; i < this->del_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->del_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400306::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 del_type = 1;
  if (has_del_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->del_type(), target);
  }
  
  // repeated int64 del_list = 2;
  for (int i = 0; i < this->del_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->del_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400306::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 del_type = 1;
    if (has_del_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->del_type());
    }
    
  }
  // repeated int64 del_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->del_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->del_list(i));
    }
    total_size += 1 * this->del_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400306::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400306* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400306*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400306::MergeFrom(const Proto11400306& from) {
  GOOGLE_CHECK_NE(&from, this);
  del_list_.MergeFrom(from.del_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_del_type()) {
      set_del_type(from.del_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400306::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400306::CopyFrom(const Proto11400306& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400306::IsInitialized() const {
  
  return true;
}

void Proto11400306::Swap(Proto11400306* other) {
  if (other != this) {
    std::swap(del_type_, other->del_type_);
    del_list_.Swap(&other->del_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400306::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400306_descriptor_;
  metadata.reflection = Proto11400306_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400307::kReceiverNameFieldNumber;
const int Proto11400307::kMailTitleFieldNumber;
const int Proto11400307::kMailContentFieldNumber;
const int Proto11400307::kMailGoldFieldNumber;
const int Proto11400307::kMailCopperFieldNumber;
const int Proto11400307::kAttachListFieldNumber;
#endif  // !_MSC_VER

Proto11400307::Proto11400307()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400307::InitAsDefaultInstance() {
}

Proto11400307::Proto11400307(const Proto11400307& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400307::SharedCtor() {
  _cached_size_ = 0;
  receiver_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mail_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mail_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mail_gold_ = 0;
  mail_copper_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400307::~Proto11400307() {
  SharedDtor();
}

void Proto11400307::SharedDtor() {
  if (receiver_name_ != &::google::protobuf::internal::kEmptyString) {
    delete receiver_name_;
  }
  if (mail_title_ != &::google::protobuf::internal::kEmptyString) {
    delete mail_title_;
  }
  if (mail_content_ != &::google::protobuf::internal::kEmptyString) {
    delete mail_content_;
  }
  if (this != default_instance_) {
  }
}

void Proto11400307::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400307::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400307_descriptor_;
}

const Proto11400307& Proto11400307::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto11400307* Proto11400307::default_instance_ = NULL;

Proto11400307* Proto11400307::New() const {
  return new Proto11400307;
}

void Proto11400307::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_receiver_name()) {
      if (receiver_name_ != &::google::protobuf::internal::kEmptyString) {
        receiver_name_->clear();
      }
    }
    if (has_mail_title()) {
      if (mail_title_ != &::google::protobuf::internal::kEmptyString) {
        mail_title_->clear();
      }
    }
    if (has_mail_content()) {
      if (mail_content_ != &::google::protobuf::internal::kEmptyString) {
        mail_content_->clear();
      }
    }
    mail_gold_ = 0;
    mail_copper_ = 0;
  }
  attach_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400307::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string receiver_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receiver_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->receiver_name().data(), this->receiver_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mail_title;
        break;
      }
      
      // optional string mail_title = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mail_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mail_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mail_title().data(), this->mail_title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_mail_content;
        break;
      }
      
      // optional string mail_content = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mail_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mail_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mail_content().data(), this->mail_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_mail_gold;
        break;
      }
      
      // optional int32 mail_gold = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mail_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mail_gold_)));
          set_has_mail_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_mail_copper;
        break;
      }
      
      // optional int32 mail_copper = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mail_copper:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mail_copper_)));
          set_has_mail_copper();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_attach_list;
        break;
      }
      
      // repeated .MailAttach attach_list = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attach_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attach_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_attach_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400307::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string receiver_name = 1;
  if (has_receiver_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiver_name().data(), this->receiver_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->receiver_name(), output);
  }
  
  // optional string mail_title = 2;
  if (has_mail_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mail_title().data(), this->mail_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->mail_title(), output);
  }
  
  // optional string mail_content = 3;
  if (has_mail_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mail_content().data(), this->mail_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->mail_content(), output);
  }
  
  // optional int32 mail_gold = 4;
  if (has_mail_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mail_gold(), output);
  }
  
  // optional int32 mail_copper = 5;
  if (has_mail_copper()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->mail_copper(), output);
  }
  
  // repeated .MailAttach attach_list = 6;
  for (int i = 0; i < this->attach_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->attach_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400307::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string receiver_name = 1;
  if (has_receiver_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiver_name().data(), this->receiver_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->receiver_name(), target);
  }
  
  // optional string mail_title = 2;
  if (has_mail_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mail_title().data(), this->mail_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mail_title(), target);
  }
  
  // optional string mail_content = 3;
  if (has_mail_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mail_content().data(), this->mail_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mail_content(), target);
  }
  
  // optional int32 mail_gold = 4;
  if (has_mail_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mail_gold(), target);
  }
  
  // optional int32 mail_copper = 5;
  if (has_mail_copper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->mail_copper(), target);
  }
  
  // repeated .MailAttach attach_list = 6;
  for (int i = 0; i < this->attach_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->attach_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400307::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string receiver_name = 1;
    if (has_receiver_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->receiver_name());
    }
    
    // optional string mail_title = 2;
    if (has_mail_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mail_title());
    }
    
    // optional string mail_content = 3;
    if (has_mail_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mail_content());
    }
    
    // optional int32 mail_gold = 4;
    if (has_mail_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mail_gold());
    }
    
    // optional int32 mail_copper = 5;
    if (has_mail_copper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mail_copper());
    }
    
  }
  // repeated .MailAttach attach_list = 6;
  total_size += 1 * this->attach_list_size();
  for (int i = 0; i < this->attach_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attach_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400307::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400307* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400307*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400307::MergeFrom(const Proto11400307& from) {
  GOOGLE_CHECK_NE(&from, this);
  attach_list_.MergeFrom(from.attach_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_receiver_name()) {
      set_receiver_name(from.receiver_name());
    }
    if (from.has_mail_title()) {
      set_mail_title(from.mail_title());
    }
    if (from.has_mail_content()) {
      set_mail_content(from.mail_content());
    }
    if (from.has_mail_gold()) {
      set_mail_gold(from.mail_gold());
    }
    if (from.has_mail_copper()) {
      set_mail_copper(from.mail_copper());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400307::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400307::CopyFrom(const Proto11400307& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400307::IsInitialized() const {
  
  return true;
}

void Proto11400307::Swap(Proto11400307* other) {
  if (other != this) {
    std::swap(receiver_name_, other->receiver_name_);
    std::swap(mail_title_, other->mail_title_);
    std::swap(mail_content_, other->mail_content_);
    std::swap(mail_gold_, other->mail_gold_);
    std::swap(mail_copper_, other->mail_copper_);
    attach_list_.Swap(&other->attach_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400307::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400307_descriptor_;
  metadata.reflection = Proto11400307_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100507::kItemIdFieldNumber;
#endif  // !_MSC_VER

Proto10100507::Proto10100507()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100507::InitAsDefaultInstance() {
}

Proto10100507::Proto10100507(const Proto10100507& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100507::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100507::~Proto10100507() {
  SharedDtor();
}

void Proto10100507::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100507::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100507::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100507_descriptor_;
}

const Proto10100507& Proto10100507::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto10100507* Proto10100507::default_instance_ = NULL;

Proto10100507* Proto10100507::New() const {
  return new Proto10100507;
}

void Proto10100507::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100507::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100507::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100507::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100507::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100507::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100507* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100507*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100507::MergeFrom(const Proto10100507& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100507::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100507::CopyFrom(const Proto10100507& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100507::IsInitialized() const {
  
  return true;
}

void Proto10100507::Swap(Proto10100507* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100507::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100507_descriptor_;
  metadata.reflection = Proto10100507_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100507::kLowPriceFieldNumber;
#endif  // !_MSC_VER

Proto50100507::Proto50100507()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100507::InitAsDefaultInstance() {
}

Proto50100507::Proto50100507(const Proto50100507& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100507::SharedCtor() {
  _cached_size_ = 0;
  low_price_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100507::~Proto50100507() {
  SharedDtor();
}

void Proto50100507::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100507::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100507::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100507_descriptor_;
}

const Proto50100507& Proto50100507::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto50100507* Proto50100507::default_instance_ = NULL;

Proto50100507* Proto50100507::New() const {
  return new Proto50100507;
}

void Proto50100507::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    low_price_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100507::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 low_price = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &low_price_)));
          set_has_low_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100507::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 low_price = 1;
  if (has_low_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->low_price(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100507::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 low_price = 1;
  if (has_low_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->low_price(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100507::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 low_price = 1;
    if (has_low_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->low_price());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100507::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100507* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100507*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100507::MergeFrom(const Proto50100507& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_low_price()) {
      set_low_price(from.low_price());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100507::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100507::CopyFrom(const Proto50100507& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100507::IsInitialized() const {
  
  return true;
}

void Proto50100507::Swap(Proto50100507* other) {
  if (other != this) {
    std::swap(low_price_, other->low_price_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100507::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100507_descriptor_;
  metadata.reflection = Proto50100507_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100012::kShopTypeFieldNumber;
const int Proto50100012::kShopSetFieldNumber;
#endif  // !_MSC_VER

Proto50100012::Proto50100012()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100012::InitAsDefaultInstance() {
}

Proto50100012::Proto50100012(const Proto50100012& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100012::SharedCtor() {
  _cached_size_ = 0;
  shop_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100012::~Proto50100012() {
  SharedDtor();
}

void Proto50100012::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100012::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100012::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100012_descriptor_;
}

const Proto50100012& Proto50100012::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto50100012* Proto50100012::default_instance_ = NULL;

Proto50100012* Proto50100012::New() const {
  return new Proto50100012;
}

void Proto50100012::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    shop_type_ = 0;
  }
  shop_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100012::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 shop_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_type_)));
          set_has_shop_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_shop_set;
        break;
      }
      
      // repeated .ProtoShopItem shop_set = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shop_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shop_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_shop_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100012::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 shop_type = 1;
  if (has_shop_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->shop_type(), output);
  }
  
  // repeated .ProtoShopItem shop_set = 2;
  for (int i = 0; i < this->shop_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->shop_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100012::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 shop_type = 1;
  if (has_shop_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->shop_type(), target);
  }
  
  // repeated .ProtoShopItem shop_set = 2;
  for (int i = 0; i < this->shop_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->shop_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100012::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 shop_type = 1;
    if (has_shop_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop_type());
    }
    
  }
  // repeated .ProtoShopItem shop_set = 2;
  total_size += 1 * this->shop_set_size();
  for (int i = 0; i < this->shop_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->shop_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100012::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100012* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100012*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100012::MergeFrom(const Proto50100012& from) {
  GOOGLE_CHECK_NE(&from, this);
  shop_set_.MergeFrom(from.shop_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shop_type()) {
      set_shop_type(from.shop_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100012::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100012::CopyFrom(const Proto50100012& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100012::IsInitialized() const {
  
  return true;
}

void Proto50100012::Swap(Proto50100012* other) {
  if (other != this) {
    std::swap(shop_type_, other->shop_type_);
    shop_set_.Swap(&other->shop_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100012::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100012_descriptor_;
  metadata.reflection = Proto50100012_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400401::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto11400401::Proto11400401()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400401::InitAsDefaultInstance() {
}

Proto11400401::Proto11400401(const Proto11400401& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400401::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400401::~Proto11400401() {
  SharedDtor();
}

void Proto11400401::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400401::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400401::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400401_descriptor_;
}

const Proto11400401& Proto11400401::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto11400401* Proto11400401::default_instance_ = NULL;

Proto11400401* Proto11400401::New() const {
  return new Proto11400401;
}

void Proto11400401::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400401::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400401::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400401::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400401::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400401::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400401* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400401*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400401::MergeFrom(const Proto11400401& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400401::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400401::CopyFrom(const Proto11400401& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400401::IsInitialized() const {
  
  return true;
}

void Proto11400401::Swap(Proto11400401* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400401::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400401_descriptor_;
  metadata.reflection = Proto11400401_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400401::kMountGradeFieldNumber;
const int Proto51400401::kHiddenFlagFieldNumber;
const int Proto51400401::kMountShapeFieldNumber;
const int Proto51400401::kForceFieldNumber;
const int Proto51400401::kBlessFieldNumber;
const int Proto51400401::kLeftTimeFieldNumber;
const int Proto51400401::kPropFieldNumber;
const int Proto51400401::kTypeFieldNumber;
const int Proto51400401::kAbilityFieldNumber;
const int Proto51400401::kGrowthFieldNumber;
const int Proto51400401::kTempFieldNumber;
const int Proto51400401::kSkillFieldNumber;
const int Proto51400401::kActShapeFieldNumber;
#endif  // !_MSC_VER

Proto51400401::Proto51400401()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400401::InitAsDefaultInstance() {
  prop_ = const_cast< ::ProtoFightPro*>(&::ProtoFightPro::default_instance());
  temp_ = const_cast< ::ProtoFightPro*>(&::ProtoFightPro::default_instance());
}

Proto51400401::Proto51400401(const Proto51400401& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400401::SharedCtor() {
  _cached_size_ = 0;
  mount_grade_ = 0;
  hidden_flag_ = 0;
  mount_shape_ = 0;
  force_ = 0;
  bless_ = 0;
  left_time_ = 0;
  prop_ = NULL;
  type_ = 0;
  ability_ = 0;
  growth_ = 0;
  temp_ = NULL;
  act_shape_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400401::~Proto51400401() {
  SharedDtor();
}

void Proto51400401::SharedDtor() {
  if (this != default_instance_) {
    delete prop_;
    delete temp_;
  }
}

void Proto51400401::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400401::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400401_descriptor_;
}

const Proto51400401& Proto51400401::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto51400401* Proto51400401::default_instance_ = NULL;

Proto51400401* Proto51400401::New() const {
  return new Proto51400401;
}

void Proto51400401::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mount_grade_ = 0;
    hidden_flag_ = 0;
    mount_shape_ = 0;
    force_ = 0;
    bless_ = 0;
    left_time_ = 0;
    if (has_prop()) {
      if (prop_ != NULL) prop_->::ProtoFightPro::Clear();
    }
    type_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    ability_ = 0;
    growth_ = 0;
    if (has_temp()) {
      if (temp_ != NULL) temp_->::ProtoFightPro::Clear();
    }
    act_shape_ = 0;
  }
  skill_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400401::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mount_grade = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mount_grade_)));
          set_has_mount_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_hidden_flag;
        break;
      }
      
      // optional int32 hidden_flag = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hidden_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hidden_flag_)));
          set_has_hidden_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_mount_shape;
        break;
      }
      
      // optional int32 mount_shape = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mount_shape:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mount_shape_)));
          set_has_mount_shape();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_force;
        break;
      }
      
      // optional int32 force = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_bless;
        break;
      }
      
      // optional int32 bless = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bless:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bless_)));
          set_has_bless();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_prop;
        break;
      }
      
      // optional .ProtoFightPro prop = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prop()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_type;
        break;
      }
      
      // optional int32 type = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_ability;
        break;
      }
      
      // optional int32 ability = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ability:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ability_)));
          set_has_ability();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_growth;
        break;
      }
      
      // optional int32 growth = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_growth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &growth_)));
          set_has_growth();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_temp;
        break;
      }
      
      // optional .ProtoFightPro temp = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_temp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_temp()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_skill;
        break;
      }
      
      // repeated .ProtoSkill skill = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skill()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_skill;
        if (input->ExpectTag(104)) goto parse_act_shape;
        break;
      }
      
      // optional int32 act_shape = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_shape:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_shape_)));
          set_has_act_shape();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400401::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 mount_grade = 1;
  if (has_mount_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mount_grade(), output);
  }
  
  // optional int32 hidden_flag = 2;
  if (has_hidden_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hidden_flag(), output);
  }
  
  // optional int32 mount_shape = 3;
  if (has_mount_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mount_shape(), output);
  }
  
  // optional int32 force = 4;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->force(), output);
  }
  
  // optional int32 bless = 5;
  if (has_bless()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->bless(), output);
  }
  
  // optional int32 left_time = 6;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->left_time(), output);
  }
  
  // optional .ProtoFightPro prop = 7;
  if (has_prop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->prop(), output);
  }
  
  // optional int32 type = 8;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->type(), output);
  }
  
  // optional int32 ability = 9;
  if (has_ability()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->ability(), output);
  }
  
  // optional int32 growth = 10;
  if (has_growth()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->growth(), output);
  }
  
  // optional .ProtoFightPro temp = 11;
  if (has_temp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->temp(), output);
  }
  
  // repeated .ProtoSkill skill = 12;
  for (int i = 0; i < this->skill_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->skill(i), output);
  }
  
  // optional int32 act_shape = 13;
  if (has_act_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->act_shape(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400401::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 mount_grade = 1;
  if (has_mount_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mount_grade(), target);
  }
  
  // optional int32 hidden_flag = 2;
  if (has_hidden_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hidden_flag(), target);
  }
  
  // optional int32 mount_shape = 3;
  if (has_mount_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mount_shape(), target);
  }
  
  // optional int32 force = 4;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->force(), target);
  }
  
  // optional int32 bless = 5;
  if (has_bless()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->bless(), target);
  }
  
  // optional int32 left_time = 6;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->left_time(), target);
  }
  
  // optional .ProtoFightPro prop = 7;
  if (has_prop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->prop(), target);
  }
  
  // optional int32 type = 8;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->type(), target);
  }
  
  // optional int32 ability = 9;
  if (has_ability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->ability(), target);
  }
  
  // optional int32 growth = 10;
  if (has_growth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->growth(), target);
  }
  
  // optional .ProtoFightPro temp = 11;
  if (has_temp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->temp(), target);
  }
  
  // repeated .ProtoSkill skill = 12;
  for (int i = 0; i < this->skill_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->skill(i), target);
  }
  
  // optional int32 act_shape = 13;
  if (has_act_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->act_shape(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400401::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 mount_grade = 1;
    if (has_mount_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mount_grade());
    }
    
    // optional int32 hidden_flag = 2;
    if (has_hidden_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hidden_flag());
    }
    
    // optional int32 mount_shape = 3;
    if (has_mount_shape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mount_shape());
    }
    
    // optional int32 force = 4;
    if (has_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->force());
    }
    
    // optional int32 bless = 5;
    if (has_bless()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bless());
    }
    
    // optional int32 left_time = 6;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional .ProtoFightPro prop = 7;
    if (has_prop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prop());
    }
    
    // optional int32 type = 8;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 ability = 9;
    if (has_ability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ability());
    }
    
    // optional int32 growth = 10;
    if (has_growth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->growth());
    }
    
    // optional .ProtoFightPro temp = 11;
    if (has_temp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->temp());
    }
    
    // optional int32 act_shape = 13;
    if (has_act_shape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_shape());
    }
    
  }
  // repeated .ProtoSkill skill = 12;
  total_size += 1 * this->skill_size();
  for (int i = 0; i < this->skill_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skill(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400401::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400401* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400401*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400401::MergeFrom(const Proto51400401& from) {
  GOOGLE_CHECK_NE(&from, this);
  skill_.MergeFrom(from.skill_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mount_grade()) {
      set_mount_grade(from.mount_grade());
    }
    if (from.has_hidden_flag()) {
      set_hidden_flag(from.hidden_flag());
    }
    if (from.has_mount_shape()) {
      set_mount_shape(from.mount_shape());
    }
    if (from.has_force()) {
      set_force(from.force());
    }
    if (from.has_bless()) {
      set_bless(from.bless());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_prop()) {
      mutable_prop()->::ProtoFightPro::MergeFrom(from.prop());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_ability()) {
      set_ability(from.ability());
    }
    if (from.has_growth()) {
      set_growth(from.growth());
    }
    if (from.has_temp()) {
      mutable_temp()->::ProtoFightPro::MergeFrom(from.temp());
    }
    if (from.has_act_shape()) {
      set_act_shape(from.act_shape());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400401::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400401::CopyFrom(const Proto51400401& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400401::IsInitialized() const {
  
  return true;
}

void Proto51400401::Swap(Proto51400401* other) {
  if (other != this) {
    std::swap(mount_grade_, other->mount_grade_);
    std::swap(hidden_flag_, other->hidden_flag_);
    std::swap(mount_shape_, other->mount_shape_);
    std::swap(force_, other->force_);
    std::swap(bless_, other->bless_);
    std::swap(left_time_, other->left_time_);
    std::swap(prop_, other->prop_);
    std::swap(type_, other->type_);
    std::swap(ability_, other->ability_);
    std::swap(growth_, other->growth_);
    std::swap(temp_, other->temp_);
    skill_.Swap(&other->skill_);
    std::swap(act_shape_, other->act_shape_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400401::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400401_descriptor_;
  metadata.reflection = Proto51400401_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400402::kAutoBuyFieldNumber;
const int Proto11400402::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto11400402::Proto11400402()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400402::InitAsDefaultInstance() {
}

Proto11400402::Proto11400402(const Proto11400402& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400402::SharedCtor() {
  _cached_size_ = 0;
  auto_buy_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400402::~Proto11400402() {
  SharedDtor();
}

void Proto11400402::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400402::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400402::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400402_descriptor_;
}

const Proto11400402& Proto11400402::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto11400402* Proto11400402::default_instance_ = NULL;

Proto11400402* Proto11400402::New() const {
  return new Proto11400402;
}

void Proto11400402::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    auto_buy_ = 0;
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400402::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 auto_buy = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_buy_)));
          set_has_auto_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400402::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 auto_buy = 1;
  if (has_auto_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->auto_buy(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400402::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 auto_buy = 1;
  if (has_auto_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->auto_buy(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400402::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 auto_buy = 1;
    if (has_auto_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_buy());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400402::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400402* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400402*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400402::MergeFrom(const Proto11400402& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_auto_buy()) {
      set_auto_buy(from.auto_buy());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400402::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400402::CopyFrom(const Proto11400402& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400402::IsInitialized() const {
  
  return true;
}

void Proto11400402::Swap(Proto11400402* other) {
  if (other != this) {
    std::swap(auto_buy_, other->auto_buy_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400402::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400402_descriptor_;
  metadata.reflection = Proto11400402_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400402::kEvaFlagFieldNumber;
const int Proto51400402::kMountGradeFieldNumber;
const int Proto51400402::kBlessFieldNumber;
const int Proto51400402::kForceFieldNumber;
const int Proto51400402::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto51400402::Proto51400402()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400402::InitAsDefaultInstance() {
}

Proto51400402::Proto51400402(const Proto51400402& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400402::SharedCtor() {
  _cached_size_ = 0;
  eva_flag_ = 0;
  mount_grade_ = 0;
  bless_ = 0;
  force_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400402::~Proto51400402() {
  SharedDtor();
}

void Proto51400402::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400402::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400402::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400402_descriptor_;
}

const Proto51400402& Proto51400402::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto51400402* Proto51400402::default_instance_ = NULL;

Proto51400402* Proto51400402::New() const {
  return new Proto51400402;
}

void Proto51400402::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    eva_flag_ = 0;
    mount_grade_ = 0;
    bless_ = 0;
    force_ = 0;
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400402::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eva_flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eva_flag_)));
          set_has_eva_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_mount_grade;
        break;
      }
      
      // optional int32 mount_grade = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mount_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mount_grade_)));
          set_has_mount_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_bless;
        break;
      }
      
      // optional int32 bless = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bless:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bless_)));
          set_has_bless();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_force;
        break;
      }
      
      // optional int32 force = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }
      
      // optional int32 type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400402::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 eva_flag = 1;
  if (has_eva_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eva_flag(), output);
  }
  
  // optional int32 mount_grade = 2;
  if (has_mount_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mount_grade(), output);
  }
  
  // optional int32 bless = 3;
  if (has_bless()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->bless(), output);
  }
  
  // optional int32 force = 4;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->force(), output);
  }
  
  // optional int32 type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400402::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 eva_flag = 1;
  if (has_eva_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eva_flag(), target);
  }
  
  // optional int32 mount_grade = 2;
  if (has_mount_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mount_grade(), target);
  }
  
  // optional int32 bless = 3;
  if (has_bless()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->bless(), target);
  }
  
  // optional int32 force = 4;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->force(), target);
  }
  
  // optional int32 type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400402::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 eva_flag = 1;
    if (has_eva_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eva_flag());
    }
    
    // optional int32 mount_grade = 2;
    if (has_mount_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mount_grade());
    }
    
    // optional int32 bless = 3;
    if (has_bless()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bless());
    }
    
    // optional int32 force = 4;
    if (has_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->force());
    }
    
    // optional int32 type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400402::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400402* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400402*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400402::MergeFrom(const Proto51400402& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eva_flag()) {
      set_eva_flag(from.eva_flag());
    }
    if (from.has_mount_grade()) {
      set_mount_grade(from.mount_grade());
    }
    if (from.has_bless()) {
      set_bless(from.bless());
    }
    if (from.has_force()) {
      set_force(from.force());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400402::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400402::CopyFrom(const Proto51400402& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400402::IsInitialized() const {
  
  return true;
}

void Proto51400402::Swap(Proto51400402* other) {
  if (other != this) {
    std::swap(eva_flag_, other->eva_flag_);
    std::swap(mount_grade_, other->mount_grade_);
    std::swap(bless_, other->bless_);
    std::swap(force_, other->force_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400402::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400402_descriptor_;
  metadata.reflection = Proto51400402_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400403::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto11400403::Proto11400403()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400403::InitAsDefaultInstance() {
}

Proto11400403::Proto11400403(const Proto11400403& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400403::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400403::~Proto11400403() {
  SharedDtor();
}

void Proto11400403::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400403::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400403::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400403_descriptor_;
}

const Proto11400403& Proto11400403::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto11400403* Proto11400403::default_instance_ = NULL;

Proto11400403* Proto11400403::New() const {
  return new Proto11400403;
}

void Proto11400403::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400403::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400403::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400403::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400403::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400403::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400403* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400403*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400403::MergeFrom(const Proto11400403& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400403::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400403::CopyFrom(const Proto11400403& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400403::IsInitialized() const {
  
  return true;
}

void Proto11400403::Swap(Proto11400403* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400403::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400403_descriptor_;
  metadata.reflection = Proto11400403_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400403::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto51400403::Proto51400403()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400403::InitAsDefaultInstance() {
}

Proto51400403::Proto51400403(const Proto51400403& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400403::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400403::~Proto51400403() {
  SharedDtor();
}

void Proto51400403::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400403::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400403::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400403_descriptor_;
}

const Proto51400403& Proto51400403::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient002_2eproto();  return *default_instance_;
}

Proto51400403* Proto51400403::default_instance_ = NULL;

Proto51400403* Proto51400403::New() const {
  return new Proto51400403;
}

void Proto51400403::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400403::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400403::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400403::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400403::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400403::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400403* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400403*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400403::MergeFrom(const Proto51400403& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400403::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400403::CopyFrom(const Proto51400403& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400403::IsInitialized() const {
  
  return true;
}

void Proto51400403::Swap(Proto51400403* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400403::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400403_descriptor_;
  metadata.reflection = Proto51400403_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
