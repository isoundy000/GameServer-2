// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient022.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto50100259_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100259_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100260_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100260_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100260_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100260_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100261_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100261_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100261_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100261_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100262_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100262_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100262_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100262_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100263_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100263_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100263_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100263_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100264_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100264_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100264_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100264_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400202_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400202_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401901_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401901_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100265_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100265_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100265_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100265_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80404007_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80404007_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400353_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400353_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100266_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100266_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100267_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100267_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100267_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100267_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100657_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100657_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100659_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100659_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50404007_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50404007_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10401103_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10401103_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401103_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401103_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10401104_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10401104_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401104_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401104_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10401105_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10401105_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401105_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401105_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401028_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401028_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400663_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400663_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400663_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400663_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100268_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100268_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100269_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100269_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100269_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100269_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100270_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100270_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11408004_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11408004_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51408004_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51408004_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51408005_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51408005_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80401101_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80401101_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80401102_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80401102_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80401103_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80401103_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80401104_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80401104_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10401030_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10401030_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10401106_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10401106_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401106_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401106_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10401107_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10401107_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401107_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401107_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400802_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400802_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400626_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400626_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient022_2eproto() {
  protobuf_AddDesc_ProtoClient022_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient022.proto");
  GOOGLE_CHECK(file != NULL);
  Proto50100259_descriptor_ = file->message_type(0);
  static const int Proto50100259_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100259, open_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100259, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100259, index_),
  };
  Proto50100259_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100259_descriptor_,
      Proto50100259::default_instance_,
      Proto50100259_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100259, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100259, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100259));
  Proto50100260_descriptor_ = file->message_type(1);
  static const int Proto50100260_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100260, index_),
  };
  Proto50100260_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100260_descriptor_,
      Proto50100260::default_instance_,
      Proto50100260_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100260, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100260, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100260));
  Proto10100260_descriptor_ = file->message_type(2);
  static const int Proto10100260_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100260, minute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100260, index_),
  };
  Proto10100260_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100260_descriptor_,
      Proto10100260::default_instance_,
      Proto10100260_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100260, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100260, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100260));
  Proto10100261_descriptor_ = file->message_type(3);
  static const int Proto10100261_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100261, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100261, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100261, amount_),
  };
  Proto10100261_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100261_descriptor_,
      Proto10100261::default_instance_,
      Proto10100261_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100261, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100261, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100261));
  Proto50100261_descriptor_ = file->message_type(4);
  static const int Proto50100261_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100261, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100261, move_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100261, position_),
  };
  Proto50100261_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100261_descriptor_,
      Proto50100261::default_instance_,
      Proto50100261_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100261, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100261, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100261));
  Proto10100262_descriptor_ = file->message_type(5);
  static const int Proto10100262_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100262, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100262, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100262, amount_),
  };
  Proto10100262_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100262_descriptor_,
      Proto10100262::default_instance_,
      Proto10100262_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100262, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100262, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100262));
  Proto50100262_descriptor_ = file->message_type(6);
  static const int Proto50100262_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100262, index_),
  };
  Proto50100262_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100262_descriptor_,
      Proto50100262::default_instance_,
      Proto50100262_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100262, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100262, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100262));
  Proto10100263_descriptor_ = file->message_type(7);
  static const int Proto10100263_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100263, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100263, player_id_),
  };
  Proto10100263_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100263_descriptor_,
      Proto10100263::default_instance_,
      Proto10100263_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100263, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100263, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100263));
  Proto50100263_descriptor_ = file->message_type(8);
  static const int Proto50100263_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100263, index_),
  };
  Proto50100263_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100263_descriptor_,
      Proto50100263::default_instance_,
      Proto50100263_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100263, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100263, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100263));
  Proto10100264_descriptor_ = file->message_type(9);
  static const int Proto10100264_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100264, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100264, page_),
  };
  Proto10100264_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100264_descriptor_,
      Proto10100264::default_instance_,
      Proto10100264_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100264, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100264, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100264));
  Proto50100264_descriptor_ = file->message_type(10);
  static const int Proto50100264_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100264, role_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100264, cur_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100264, total_page_),
  };
  Proto50100264_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100264_descriptor_,
      Proto50100264::default_instance_,
      Proto50100264_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100264, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100264, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100264));
  Proto10400202_descriptor_ = file->message_type(11);
  static const int Proto10400202_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400202, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400202, skill_pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400202, skill_pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400202, target_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400202, skill_step_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400202, target_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400202, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400202, play_coord_),
  };
  Proto10400202_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400202_descriptor_,
      Proto10400202::default_instance_,
      Proto10400202_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400202, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400202, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400202));
  Proto51401901_descriptor_ = file->message_type(12);
  static const int Proto51401901_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401901, first_player_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401901, tbattle_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401901, state_),
  };
  Proto51401901_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401901_descriptor_,
      Proto51401901::default_instance_,
      Proto51401901_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401901, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401901, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401901));
  Proto10100265_descriptor_ = file->message_type(13);
  static const int Proto10100265_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100265, times_),
  };
  Proto10100265_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100265_descriptor_,
      Proto10100265::default_instance_,
      Proto10100265_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100265, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100265, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100265));
  Proto50100265_descriptor_ = file->message_type(14);
  static const int Proto50100265_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100265, item_),
  };
  Proto50100265_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100265_descriptor_,
      Proto50100265::default_instance_,
      Proto50100265_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100265, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100265, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100265));
  Proto80404007_descriptor_ = file->message_type(15);
  static const int Proto80404007_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404007, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404007, kill_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404007, fight_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404007, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404007, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404007, flag_reward_),
  };
  Proto80404007_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80404007_descriptor_,
      Proto80404007::default_instance_,
      Proto80404007_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404007, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404007, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80404007));
  Proto50400353_descriptor_ = file->message_type(16);
  static const int Proto50400353_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400353, total_league_rank_),
  };
  Proto50400353_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400353_descriptor_,
      Proto50400353::default_instance_,
      Proto50400353_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400353, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400353, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400353));
  Proto10100266_descriptor_ = file->message_type(17);
  static const int Proto10100266_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100266, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100266, index_),
  };
  Proto10100266_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100266_descriptor_,
      Proto10100266::default_instance_,
      Proto10100266_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100266, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100266, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100266));
  Proto10100267_descriptor_ = file->message_type(18);
  static const int Proto10100267_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100267, index_),
  };
  Proto10100267_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100267_descriptor_,
      Proto10100267::default_instance_,
      Proto10100267_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100267, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100267, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100267));
  Proto50100267_descriptor_ = file->message_type(19);
  static const int Proto50100267_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100267, index_),
  };
  Proto50100267_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100267_descriptor_,
      Proto50100267::default_instance_,
      Proto50100267_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100267, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100267, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100267));
  Proto50100657_descriptor_ = file->message_type(20);
  static const int Proto50100657_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100657, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100657, leader_draw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100657, draw_map_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100657, today_contri_),
  };
  Proto50100657_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100657_descriptor_,
      Proto50100657::default_instance_,
      Proto50100657_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100657, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100657, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100657));
  Proto10100659_descriptor_ = file->message_type(21);
  static const int Proto10100659_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100659, index_),
  };
  Proto10100659_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100659_descriptor_,
      Proto10100659::default_instance_,
      Proto10100659_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100659, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100659, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100659));
  Proto50404007_descriptor_ = file->message_type(22);
  static const int Proto50404007_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404007, war_list_),
  };
  Proto50404007_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50404007_descriptor_,
      Proto50404007::default_instance_,
      Proto50404007_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404007, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404007, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50404007));
  Proto10401103_descriptor_ = file->message_type(23);
  static const int Proto10401103_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401103, refresh_),
  };
  Proto10401103_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10401103_descriptor_,
      Proto10401103::default_instance_,
      Proto10401103_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401103, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401103, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10401103));
  Proto50401103_descriptor_ = file->message_type(24);
  static const int Proto50401103_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401103, rank_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401103, self_rank_),
  };
  Proto50401103_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401103_descriptor_,
      Proto50401103::default_instance_,
      Proto50401103_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401103, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401103, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401103));
  Proto10401104_descriptor_ = file->message_type(25);
  static const int Proto10401104_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401104, refresh_),
  };
  Proto10401104_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10401104_descriptor_,
      Proto10401104::default_instance_,
      Proto10401104_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401104, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401104, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10401104));
  Proto50401104_descriptor_ = file->message_type(26);
  static const int Proto50401104_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401104, hall_of_fame_list_),
  };
  Proto50401104_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401104_descriptor_,
      Proto50401104::default_instance_,
      Proto50401104_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401104, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401104, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401104));
  Proto10401105_descriptor_ = file->message_type(27);
  static const int Proto10401105_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401105, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401105, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401105, rank_),
  };
  Proto10401105_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10401105_descriptor_,
      Proto10401105::default_instance_,
      Proto10401105_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401105, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401105, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10401105));
  Proto50401105_descriptor_ = file->message_type(28);
  static const int Proto50401105_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401105, trvl_role_),
  };
  Proto50401105_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401105_descriptor_,
      Proto50401105::default_instance_,
      Proto50401105_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401105, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401105, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401105));
  Proto50401028_descriptor_ = file->message_type(29);
  static const int Proto50401028_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401028, wb_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401028, refresh_tick_),
  };
  Proto50401028_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401028_descriptor_,
      Proto50401028::default_instance_,
      Proto50401028_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401028, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401028, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401028));
  Proto11400663_descriptor_ = file->message_type(30);
  static const int Proto11400663_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400663, times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400663, index_),
  };
  Proto11400663_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400663_descriptor_,
      Proto11400663::default_instance_,
      Proto11400663_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400663, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400663, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400663));
  Proto51400663_descriptor_ = file->message_type(31);
  static const int Proto51400663_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400663, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400663, nature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400663, state_),
  };
  Proto51400663_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400663_descriptor_,
      Proto51400663::default_instance_,
      Proto51400663_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400663, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400663, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400663));
  Proto50100268_descriptor_ = file->message_type(32);
  static const int Proto50100268_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100268, reward_gem_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100268, is_act_open_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100268, day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100268, remain_time_),
  };
  Proto50100268_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100268_descriptor_,
      Proto50100268::default_instance_,
      Proto50100268_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100268, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100268, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100268));
  Proto10100269_descriptor_ = file->message_type(33);
  static const int Proto10100269_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100269, synthesis_gem_id_),
  };
  Proto10100269_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100269_descriptor_,
      Proto10100269::default_instance_,
      Proto10100269_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100269, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100269, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100269));
  Proto50100269_descriptor_ = file->message_type(34);
  static const int Proto50100269_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100269, reward_gem_info_),
  };
  Proto50100269_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100269_descriptor_,
      Proto50100269::default_instance_,
      Proto50100269_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100269, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100269, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100269));
  Proto50100270_descriptor_ = file->message_type(35);
  static const int Proto50100270_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100270, reward_gem_info_),
  };
  Proto50100270_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100270_descriptor_,
      Proto50100270::default_instance_,
      Proto50100270_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100270, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100270, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100270));
  Proto11408004_descriptor_ = file->message_type(36);
  static const int Proto11408004_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11408004, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11408004, item_amount_),
  };
  Proto11408004_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11408004_descriptor_,
      Proto11408004::default_instance_,
      Proto11408004_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11408004, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11408004, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11408004));
  Proto51408004_descriptor_ = file->message_type(37);
  static const int Proto51408004_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408004, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408004, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408004, item_amount_),
  };
  Proto51408004_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51408004_descriptor_,
      Proto51408004::default_instance_,
      Proto51408004_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408004, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408004, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51408004));
  Proto51408005_descriptor_ = file->message_type(38);
  static const int Proto51408005_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408005, left_time_),
  };
  Proto51408005_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51408005_descriptor_,
      Proto51408005::default_instance_,
      Proto51408005_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408005, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408005, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51408005));
  Proto80401101_descriptor_ = file->message_type(39);
  static const int Proto80401101_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401101, cur_floor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401101, need_kill_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401101, kill_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401101, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401101, award_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401101, first_top_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401101, first_top_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401101, left_sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401101, max_floor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401101, treasure_owner_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401101, treasure_owner_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401101, treasure_left_sec_),
  };
  Proto80401101_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80401101_descriptor_,
      Proto80401101::default_instance_,
      Proto80401101_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401101, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401101, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80401101));
  Proto80401102_descriptor_ = file->message_type(40);
  static const int Proto80401102_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401102, cur_floor_),
  };
  Proto80401102_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80401102_descriptor_,
      Proto80401102::default_instance_,
      Proto80401102_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401102, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401102, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80401102));
  Proto80401103_descriptor_ = file->message_type(41);
  static const int Proto80401103_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401103, cur_floor_),
  };
  Proto80401103_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80401103_descriptor_,
      Proto80401103::default_instance_,
      Proto80401103_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401103, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401103, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80401103));
  Proto80401104_descriptor_ = file->message_type(42);
  static const int Proto80401104_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401104, rank_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401104, self_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401104, self_kill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401104, self_score_),
  };
  Proto80401104_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80401104_descriptor_,
      Proto80401104::default_instance_,
      Proto80401104_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401104, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401104, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80401104));
  Proto10401030_descriptor_ = file->message_type(43);
  static const int Proto10401030_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401030, boss_scene_id_),
  };
  Proto10401030_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10401030_descriptor_,
      Proto10401030::default_instance_,
      Proto10401030_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401030, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401030, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10401030));
  Proto10401106_descriptor_ = file->message_type(44);
  static const int Proto10401106_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401106, refresh_),
  };
  Proto10401106_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10401106_descriptor_,
      Proto10401106::default_instance_,
      Proto10401106_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401106, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401106, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10401106));
  Proto50401106_descriptor_ = file->message_type(45);
  static const int Proto50401106_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401106, rank_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401106, self_rank_),
  };
  Proto50401106_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401106_descriptor_,
      Proto50401106::default_instance_,
      Proto50401106_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401106, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401106, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401106));
  Proto10401107_descriptor_ = file->message_type(46);
  static const int Proto10401107_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401107, refresh_),
  };
  Proto10401107_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10401107_descriptor_,
      Proto10401107::default_instance_,
      Proto10401107_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401107, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401107, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10401107));
  Proto50401107_descriptor_ = file->message_type(47);
  static const int Proto50401107_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401107, record_list_),
  };
  Proto50401107_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401107_descriptor_,
      Proto50401107::default_instance_,
      Proto50401107_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401107, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401107, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401107));
  Proto81400802_descriptor_ = file->message_type(48);
  static const int Proto81400802_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400802, transfer_id_),
  };
  Proto81400802_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400802_descriptor_,
      Proto81400802::default_instance_,
      Proto81400802_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400802, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400802, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400802));
  Proto11400626_descriptor_ = file->message_type(49);
  static const int Proto11400626_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400626, equip_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400626, jewal_id_),
  };
  Proto11400626_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400626_descriptor_,
      Proto11400626::default_instance_,
      Proto11400626_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400626, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400626, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400626));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient022_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100259_descriptor_, &Proto50100259::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100260_descriptor_, &Proto50100260::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100260_descriptor_, &Proto10100260::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100261_descriptor_, &Proto10100261::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100261_descriptor_, &Proto50100261::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100262_descriptor_, &Proto10100262::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100262_descriptor_, &Proto50100262::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100263_descriptor_, &Proto10100263::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100263_descriptor_, &Proto50100263::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100264_descriptor_, &Proto10100264::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100264_descriptor_, &Proto50100264::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400202_descriptor_, &Proto10400202::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401901_descriptor_, &Proto51401901::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100265_descriptor_, &Proto10100265::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100265_descriptor_, &Proto50100265::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80404007_descriptor_, &Proto80404007::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400353_descriptor_, &Proto50400353::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100266_descriptor_, &Proto10100266::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100267_descriptor_, &Proto10100267::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100267_descriptor_, &Proto50100267::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100657_descriptor_, &Proto50100657::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100659_descriptor_, &Proto10100659::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50404007_descriptor_, &Proto50404007::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10401103_descriptor_, &Proto10401103::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401103_descriptor_, &Proto50401103::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10401104_descriptor_, &Proto10401104::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401104_descriptor_, &Proto50401104::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10401105_descriptor_, &Proto10401105::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401105_descriptor_, &Proto50401105::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401028_descriptor_, &Proto50401028::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400663_descriptor_, &Proto11400663::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400663_descriptor_, &Proto51400663::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100268_descriptor_, &Proto50100268::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100269_descriptor_, &Proto10100269::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100269_descriptor_, &Proto50100269::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100270_descriptor_, &Proto50100270::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11408004_descriptor_, &Proto11408004::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51408004_descriptor_, &Proto51408004::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51408005_descriptor_, &Proto51408005::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80401101_descriptor_, &Proto80401101::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80401102_descriptor_, &Proto80401102::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80401103_descriptor_, &Proto80401103::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80401104_descriptor_, &Proto80401104::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10401030_descriptor_, &Proto10401030::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10401106_descriptor_, &Proto10401106::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401106_descriptor_, &Proto50401106::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10401107_descriptor_, &Proto10401107::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401107_descriptor_, &Proto50401107::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400802_descriptor_, &Proto81400802::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400626_descriptor_, &Proto11400626::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient022_2eproto() {
  delete Proto50100259::default_instance_;
  delete Proto50100259_reflection_;
  delete Proto50100260::default_instance_;
  delete Proto50100260_reflection_;
  delete Proto10100260::default_instance_;
  delete Proto10100260_reflection_;
  delete Proto10100261::default_instance_;
  delete Proto10100261_reflection_;
  delete Proto50100261::default_instance_;
  delete Proto50100261_reflection_;
  delete Proto10100262::default_instance_;
  delete Proto10100262_reflection_;
  delete Proto50100262::default_instance_;
  delete Proto50100262_reflection_;
  delete Proto10100263::default_instance_;
  delete Proto10100263_reflection_;
  delete Proto50100263::default_instance_;
  delete Proto50100263_reflection_;
  delete Proto10100264::default_instance_;
  delete Proto10100264_reflection_;
  delete Proto50100264::default_instance_;
  delete Proto50100264_reflection_;
  delete Proto10400202::default_instance_;
  delete Proto10400202_reflection_;
  delete Proto51401901::default_instance_;
  delete Proto51401901_reflection_;
  delete Proto10100265::default_instance_;
  delete Proto10100265_reflection_;
  delete Proto50100265::default_instance_;
  delete Proto50100265_reflection_;
  delete Proto80404007::default_instance_;
  delete Proto80404007_reflection_;
  delete Proto50400353::default_instance_;
  delete Proto50400353_reflection_;
  delete Proto10100266::default_instance_;
  delete Proto10100266_reflection_;
  delete Proto10100267::default_instance_;
  delete Proto10100267_reflection_;
  delete Proto50100267::default_instance_;
  delete Proto50100267_reflection_;
  delete Proto50100657::default_instance_;
  delete Proto50100657_reflection_;
  delete Proto10100659::default_instance_;
  delete Proto10100659_reflection_;
  delete Proto50404007::default_instance_;
  delete Proto50404007_reflection_;
  delete Proto10401103::default_instance_;
  delete Proto10401103_reflection_;
  delete Proto50401103::default_instance_;
  delete Proto50401103_reflection_;
  delete Proto10401104::default_instance_;
  delete Proto10401104_reflection_;
  delete Proto50401104::default_instance_;
  delete Proto50401104_reflection_;
  delete Proto10401105::default_instance_;
  delete Proto10401105_reflection_;
  delete Proto50401105::default_instance_;
  delete Proto50401105_reflection_;
  delete Proto50401028::default_instance_;
  delete Proto50401028_reflection_;
  delete Proto11400663::default_instance_;
  delete Proto11400663_reflection_;
  delete Proto51400663::default_instance_;
  delete Proto51400663_reflection_;
  delete Proto50100268::default_instance_;
  delete Proto50100268_reflection_;
  delete Proto10100269::default_instance_;
  delete Proto10100269_reflection_;
  delete Proto50100269::default_instance_;
  delete Proto50100269_reflection_;
  delete Proto50100270::default_instance_;
  delete Proto50100270_reflection_;
  delete Proto11408004::default_instance_;
  delete Proto11408004_reflection_;
  delete Proto51408004::default_instance_;
  delete Proto51408004_reflection_;
  delete Proto51408005::default_instance_;
  delete Proto51408005_reflection_;
  delete Proto80401101::default_instance_;
  delete Proto80401101_reflection_;
  delete Proto80401102::default_instance_;
  delete Proto80401102_reflection_;
  delete Proto80401103::default_instance_;
  delete Proto80401103_reflection_;
  delete Proto80401104::default_instance_;
  delete Proto80401104_reflection_;
  delete Proto10401030::default_instance_;
  delete Proto10401030_reflection_;
  delete Proto10401106::default_instance_;
  delete Proto10401106_reflection_;
  delete Proto50401106::default_instance_;
  delete Proto50401106_reflection_;
  delete Proto10401107::default_instance_;
  delete Proto10401107_reflection_;
  delete Proto50401107::default_instance_;
  delete Proto50401107_reflection_;
  delete Proto81400802::default_instance_;
  delete Proto81400802_reflection_;
  delete Proto11400626::default_instance_;
  delete Proto11400626_reflection_;
}

void protobuf_AddDesc_ProtoClient022_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient022.proto\032\021ProtoPublic.prot"
    "o\"G\n\rProto50100259\022\022\n\nopen_state\030\001 \001(\005\022\023"
    "\n\013activity_id\030\002 \001(\005\022\r\n\005index\030\003 \001(\005\"\036\n\rPr"
    "oto50100260\022\r\n\005index\030\001 \001(\005\".\n\rProto10100"
    "260\022\016\n\006minute\030\001 \001(\005\022\r\n\005index\030\002 \001(\005\"<\n\rPr"
    "oto10100261\022\r\n\005index\030\001 \001(\005\022\014\n\004type\030\002 \001(\005"
    "\022\016\n\006amount\030\003 \001(\005\">\n\rProto50100261\022\r\n\005ind"
    "ex\030\001 \001(\005\022\014\n\004move\030\002 \001(\005\022\020\n\010position\030\003 \001(\005"
    "\"<\n\rProto10100262\022\r\n\005index\030\001 \001(\005\022\014\n\004type"
    "\030\002 \001(\005\022\016\n\006amount\030\003 \001(\005\"\036\n\rProto50100262\022"
    "\r\n\005index\030\001 \001(\005\"1\n\rProto10100263\022\r\n\005index"
    "\030\001 \001(\005\022\021\n\tplayer_id\030\002 \001(\003\"\036\n\rProto501002"
    "63\022\r\n\005index\030\001 \001(\005\",\n\rProto10100264\022\r\n\005in"
    "dex\030\001 \001(\005\022\014\n\004page\030\002 \001(\005\"X\n\rProto50100264"
    "\022!\n\trole_info\030\001 \003(\0132\016.ProtoRoleInfo\022\020\n\010c"
    "ur_page\030\002 \001(\005\022\022\n\ntotal_page\030\003 \001(\005\"\273\001\n\rPr"
    "oto10400202\022\020\n\010skill_id\030\001 \001(\005\022\025\n\rskill_p"
    "ixel_x\030\002 \001(\005\022\025\n\rskill_pixel_y\030\003 \001(\005\022\023\n\013t"
    "arget_list\030\004 \003(\003\022\022\n\nskill_step\030\005 \001(\005\022\021\n\t"
    "target_id\030\006 \001(\003\022\r\n\005angle\030\007 \001(\005\022\037\n\nplay_c"
    "oord\030\010 \001(\0132\013.ProtoCoord\"_\n\rProto51401901"
    "\022(\n\014first_player\030\001 \001(\0132\022.ProtoTrvlBaseRo"
    "le\022\025\n\rtbattle_value\030\002 \001(\005\022\r\n\005state\030\003 \001(\005"
    "\"\036\n\rProto10100265\022\r\n\005times\030\001 \001(\005\"+\n\rProt"
    "o50100265\022\032\n\004item\030\001 \003(\0132\014.ProtoItemId\"w\n"
    "\rProto80404007\022\r\n\005state\030\001 \001(\005\022\021\n\tkill_fl"
    "ag\030\002 \001(\005\022\023\n\013fight_score\030\003 \001(\005\022\014\n\004rank\030\004 "
    "\001(\005\022\014\n\004item\030\005 \003(\005\022\023\n\013flag_reward\030\006 \001(\005\"@"
    "\n\rProto50400353\022/\n\021total_league_rank\030\001 \003"
    "(\0132\024.ProtoLeagueRankInfo\"3\n\rProto1010026"
    "6\022\023\n\013activity_id\030\001 \001(\005\022\r\n\005index\030\002 \001(\005\"\036\n"
    "\rProto10100267\022\r\n\005index\030\001 \001(\005\"\036\n\rProto50"
    "100267\022\r\n\005index\030\001 \001(\005\"i\n\rProto50100657\022\014"
    "\n\004rank\030\001 \001(\005\022\023\n\013leader_draw\030\002 \001(\005\022\037\n\010dra"
    "w_map\030\003 \003(\0132\r.ProtoPairObj\022\024\n\014today_cont"
    "ri\030\004 \001(\005\"\036\n\rProto10100659\022\r\n\005index\030\001 \001(\005"
    "\"3\n\rProto50404007\022\"\n\010war_list\030\001 \003(\0132\020.Pr"
    "otoLeagueItem\" \n\rProto10401103\022\017\n\007refres"
    "h\030\001 \001(\005\"a\n\rProto50401103\022\'\n\trank_list\030\001 "
    "\003(\0132\024.ProtoTrvlBattleRank\022\'\n\tself_rank\030\002"
    " \001(\0132\024.ProtoTrvlBattleRank\" \n\rProto10401"
    "104\022\017\n\007refresh\030\001 \001(\005\"@\n\rProto50401104\022/\n"
    "\021hall_of_fame_list\030\001 \003(\0132\024.ProtoTrvlBatt"
    "leRank\"<\n\rProto10401105\022\017\n\007role_id\030\001 \001(\003"
    "\022\014\n\004type\030\002 \001(\005\022\014\n\004rank\030\003 \001(\005\"6\n\rProto504"
    "01105\022%\n\ttrvl_role\030\001 \001(\0132\022.ProtoTrvlBase"
    "Role\"K\n\rProto50401028\022$\n\007wb_info\030\001 \003(\0132\023"
    ".ProtoWorldBossInfo\022\024\n\014refresh_tick\030\002 \001("
    "\005\"-\n\rProto11400663\022\r\n\005times\030\001 \001(\005\022\r\n\005ind"
    "ex\030\002 \001(\005\"=\n\rProto51400663\022\r\n\005index\030\001 \001(\005"
    "\022\016\n\006nature\030\002 \001(\005\022\r\n\005state\030\003 \001(\005\"n\n\rProto"
    "50100268\022&\n\017reward_gem_info\030\001 \003(\0132\r.Prot"
    "oGemInfo\022\023\n\013is_act_open\030\002 \001(\005\022\013\n\003day\030\003 \001"
    "(\005\022\023\n\013remain_time\030\004 \001(\005\")\n\rProto10100269"
    "\022\030\n\020synthesis_gem_id\030\001 \001(\005\"7\n\rProto50100"
    "269\022&\n\017reward_gem_info\030\001 \003(\0132\r.ProtoGemI"
    "nfo\"7\n\rProto50100270\022&\n\017reward_gem_info\030"
    "\001 \003(\0132\r.ProtoGemInfo\"5\n\rProto11408004\022\017\n"
    "\007item_id\030\001 \001(\005\022\023\n\013item_amount\030\002 \001(\005\"H\n\rP"
    "roto51408004\022\017\n\007item_id\030\001 \001(\005\022\021\n\tleft_ti"
    "me\030\002 \001(\005\022\023\n\013item_amount\030\003 \001(\005\"\"\n\rProto51"
    "408005\022\021\n\tleft_time\030\001 \003(\005\"\233\002\n\rProto80401"
    "101\022\021\n\tcur_floor\030\001 \001(\005\022\030\n\020need_kill_amou"
    "nt\030\002 \001(\005\022\023\n\013kill_amount\030\003 \001(\005\022\r\n\005score\030\004"
    " \001(\005\022\023\n\013award_score\030\005 \001(\005\022\024\n\014first_top_i"
    "d\030\006 \001(\003\022\026\n\016first_top_name\030\007 \001(\t\022\020\n\010left_"
    "sec\030\010 \001(\005\022\021\n\tmax_floor\030\t \001(\005\022\031\n\021treasure"
    "_owner_id\030\n \001(\005\022\033\n\023treasure_owner_name\030\013"
    " \001(\t\022\031\n\021treasure_left_sec\030\014 \001(\005\"\"\n\rProto"
    "80401102\022\021\n\tcur_floor\030\001 \001(\005\"\"\n\rProto8040"
    "1103\022\021\n\tcur_floor\030\001 \001(\005\"r\n\rProto80401104"
    "\022\'\n\trank_list\030\001 \003(\0132\024.ProtoTrvlBattleRan"
    "k\022\021\n\tself_rank\030\002 \001(\005\022\021\n\tself_kill\030\003 \001(\005\022"
    "\022\n\nself_score\030\004 \001(\005\"&\n\rProto10401030\022\025\n\r"
    "boss_scene_id\030\001 \001(\005\" \n\rProto10401106\022\017\n\007"
    "refresh\030\001 \001(\005\"a\n\rProto50401106\022\'\n\trank_l"
    "ist\030\001 \003(\0132\024.ProtoTrvlBattleRank\022\'\n\tself_"
    "rank\030\002 \001(\0132\024.ProtoTrvlBattleRank\" \n\rProt"
    "o10401107\022\017\n\007refresh\030\001 \001(\005\":\n\rProto50401"
    "107\022)\n\013record_list\030\001 \003(\0132\024.ProtoTrvlBatt"
    "leRank\"$\n\rProto81400802\022\023\n\013transfer_id\030\001"
    " \001(\005\"6\n\rProto11400626\022\023\n\013equip_index\030\001 \001"
    "(\005\022\020\n\010jewal_id\030\002 \001(\005", 3300);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient022.proto", &protobuf_RegisterTypes);
  Proto50100259::default_instance_ = new Proto50100259();
  Proto50100260::default_instance_ = new Proto50100260();
  Proto10100260::default_instance_ = new Proto10100260();
  Proto10100261::default_instance_ = new Proto10100261();
  Proto50100261::default_instance_ = new Proto50100261();
  Proto10100262::default_instance_ = new Proto10100262();
  Proto50100262::default_instance_ = new Proto50100262();
  Proto10100263::default_instance_ = new Proto10100263();
  Proto50100263::default_instance_ = new Proto50100263();
  Proto10100264::default_instance_ = new Proto10100264();
  Proto50100264::default_instance_ = new Proto50100264();
  Proto10400202::default_instance_ = new Proto10400202();
  Proto51401901::default_instance_ = new Proto51401901();
  Proto10100265::default_instance_ = new Proto10100265();
  Proto50100265::default_instance_ = new Proto50100265();
  Proto80404007::default_instance_ = new Proto80404007();
  Proto50400353::default_instance_ = new Proto50400353();
  Proto10100266::default_instance_ = new Proto10100266();
  Proto10100267::default_instance_ = new Proto10100267();
  Proto50100267::default_instance_ = new Proto50100267();
  Proto50100657::default_instance_ = new Proto50100657();
  Proto10100659::default_instance_ = new Proto10100659();
  Proto50404007::default_instance_ = new Proto50404007();
  Proto10401103::default_instance_ = new Proto10401103();
  Proto50401103::default_instance_ = new Proto50401103();
  Proto10401104::default_instance_ = new Proto10401104();
  Proto50401104::default_instance_ = new Proto50401104();
  Proto10401105::default_instance_ = new Proto10401105();
  Proto50401105::default_instance_ = new Proto50401105();
  Proto50401028::default_instance_ = new Proto50401028();
  Proto11400663::default_instance_ = new Proto11400663();
  Proto51400663::default_instance_ = new Proto51400663();
  Proto50100268::default_instance_ = new Proto50100268();
  Proto10100269::default_instance_ = new Proto10100269();
  Proto50100269::default_instance_ = new Proto50100269();
  Proto50100270::default_instance_ = new Proto50100270();
  Proto11408004::default_instance_ = new Proto11408004();
  Proto51408004::default_instance_ = new Proto51408004();
  Proto51408005::default_instance_ = new Proto51408005();
  Proto80401101::default_instance_ = new Proto80401101();
  Proto80401102::default_instance_ = new Proto80401102();
  Proto80401103::default_instance_ = new Proto80401103();
  Proto80401104::default_instance_ = new Proto80401104();
  Proto10401030::default_instance_ = new Proto10401030();
  Proto10401106::default_instance_ = new Proto10401106();
  Proto50401106::default_instance_ = new Proto50401106();
  Proto10401107::default_instance_ = new Proto10401107();
  Proto50401107::default_instance_ = new Proto50401107();
  Proto81400802::default_instance_ = new Proto81400802();
  Proto11400626::default_instance_ = new Proto11400626();
  Proto50100259::default_instance_->InitAsDefaultInstance();
  Proto50100260::default_instance_->InitAsDefaultInstance();
  Proto10100260::default_instance_->InitAsDefaultInstance();
  Proto10100261::default_instance_->InitAsDefaultInstance();
  Proto50100261::default_instance_->InitAsDefaultInstance();
  Proto10100262::default_instance_->InitAsDefaultInstance();
  Proto50100262::default_instance_->InitAsDefaultInstance();
  Proto10100263::default_instance_->InitAsDefaultInstance();
  Proto50100263::default_instance_->InitAsDefaultInstance();
  Proto10100264::default_instance_->InitAsDefaultInstance();
  Proto50100264::default_instance_->InitAsDefaultInstance();
  Proto10400202::default_instance_->InitAsDefaultInstance();
  Proto51401901::default_instance_->InitAsDefaultInstance();
  Proto10100265::default_instance_->InitAsDefaultInstance();
  Proto50100265::default_instance_->InitAsDefaultInstance();
  Proto80404007::default_instance_->InitAsDefaultInstance();
  Proto50400353::default_instance_->InitAsDefaultInstance();
  Proto10100266::default_instance_->InitAsDefaultInstance();
  Proto10100267::default_instance_->InitAsDefaultInstance();
  Proto50100267::default_instance_->InitAsDefaultInstance();
  Proto50100657::default_instance_->InitAsDefaultInstance();
  Proto10100659::default_instance_->InitAsDefaultInstance();
  Proto50404007::default_instance_->InitAsDefaultInstance();
  Proto10401103::default_instance_->InitAsDefaultInstance();
  Proto50401103::default_instance_->InitAsDefaultInstance();
  Proto10401104::default_instance_->InitAsDefaultInstance();
  Proto50401104::default_instance_->InitAsDefaultInstance();
  Proto10401105::default_instance_->InitAsDefaultInstance();
  Proto50401105::default_instance_->InitAsDefaultInstance();
  Proto50401028::default_instance_->InitAsDefaultInstance();
  Proto11400663::default_instance_->InitAsDefaultInstance();
  Proto51400663::default_instance_->InitAsDefaultInstance();
  Proto50100268::default_instance_->InitAsDefaultInstance();
  Proto10100269::default_instance_->InitAsDefaultInstance();
  Proto50100269::default_instance_->InitAsDefaultInstance();
  Proto50100270::default_instance_->InitAsDefaultInstance();
  Proto11408004::default_instance_->InitAsDefaultInstance();
  Proto51408004::default_instance_->InitAsDefaultInstance();
  Proto51408005::default_instance_->InitAsDefaultInstance();
  Proto80401101::default_instance_->InitAsDefaultInstance();
  Proto80401102::default_instance_->InitAsDefaultInstance();
  Proto80401103::default_instance_->InitAsDefaultInstance();
  Proto80401104::default_instance_->InitAsDefaultInstance();
  Proto10401030::default_instance_->InitAsDefaultInstance();
  Proto10401106::default_instance_->InitAsDefaultInstance();
  Proto50401106::default_instance_->InitAsDefaultInstance();
  Proto10401107::default_instance_->InitAsDefaultInstance();
  Proto50401107::default_instance_->InitAsDefaultInstance();
  Proto81400802::default_instance_->InitAsDefaultInstance();
  Proto11400626::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient022_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient022_2eproto {
  StaticDescriptorInitializer_ProtoClient022_2eproto() {
    protobuf_AddDesc_ProtoClient022_2eproto();
  }
} static_descriptor_initializer_ProtoClient022_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto50100259::kOpenStateFieldNumber;
const int Proto50100259::kActivityIdFieldNumber;
const int Proto50100259::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto50100259::Proto50100259()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100259::InitAsDefaultInstance() {
}

Proto50100259::Proto50100259(const Proto50100259& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100259::SharedCtor() {
  _cached_size_ = 0;
  open_state_ = 0;
  activity_id_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100259::~Proto50100259() {
  SharedDtor();
}

void Proto50100259::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100259::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100259::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100259_descriptor_;
}

const Proto50100259& Proto50100259::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50100259* Proto50100259::default_instance_ = NULL;

Proto50100259* Proto50100259::New() const {
  return new Proto50100259;
}

void Proto50100259::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    open_state_ = 0;
    activity_id_ = 0;
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100259::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 open_state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_state_)));
          set_has_open_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_activity_id;
        break;
      }
      
      // optional int32 activity_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_index;
        break;
      }
      
      // optional int32 index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100259::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 open_state = 1;
  if (has_open_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->open_state(), output);
  }
  
  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activity_id(), output);
  }
  
  // optional int32 index = 3;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100259::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 open_state = 1;
  if (has_open_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->open_state(), target);
  }
  
  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activity_id(), target);
  }
  
  // optional int32 index = 3;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100259::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 open_state = 1;
    if (has_open_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open_state());
    }
    
    // optional int32 activity_id = 2;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 index = 3;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100259::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100259* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100259*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100259::MergeFrom(const Proto50100259& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_open_state()) {
      set_open_state(from.open_state());
    }
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100259::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100259::CopyFrom(const Proto50100259& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100259::IsInitialized() const {
  
  return true;
}

void Proto50100259::Swap(Proto50100259* other) {
  if (other != this) {
    std::swap(open_state_, other->open_state_);
    std::swap(activity_id_, other->activity_id_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100259::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100259_descriptor_;
  metadata.reflection = Proto50100259_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100260::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto50100260::Proto50100260()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100260::InitAsDefaultInstance() {
}

Proto50100260::Proto50100260(const Proto50100260& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100260::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100260::~Proto50100260() {
  SharedDtor();
}

void Proto50100260::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100260::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100260::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100260_descriptor_;
}

const Proto50100260& Proto50100260::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50100260* Proto50100260::default_instance_ = NULL;

Proto50100260* Proto50100260::New() const {
  return new Proto50100260;
}

void Proto50100260::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100260::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100260::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100260::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100260::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100260::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100260* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100260*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100260::MergeFrom(const Proto50100260& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100260::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100260::CopyFrom(const Proto50100260& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100260::IsInitialized() const {
  
  return true;
}

void Proto50100260::Swap(Proto50100260* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100260::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100260_descriptor_;
  metadata.reflection = Proto50100260_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100260::kMinuteFieldNumber;
const int Proto10100260::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100260::Proto10100260()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100260::InitAsDefaultInstance() {
}

Proto10100260::Proto10100260(const Proto10100260& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100260::SharedCtor() {
  _cached_size_ = 0;
  minute_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100260::~Proto10100260() {
  SharedDtor();
}

void Proto10100260::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100260::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100260::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100260_descriptor_;
}

const Proto10100260& Proto10100260::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto10100260* Proto10100260::default_instance_ = NULL;

Proto10100260* Proto10100260::New() const {
  return new Proto10100260;
}

void Proto10100260::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    minute_ = 0;
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100260::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 minute = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minute_)));
          set_has_minute();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }
      
      // optional int32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100260::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 minute = 1;
  if (has_minute()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->minute(), output);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100260::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 minute = 1;
  if (has_minute()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->minute(), target);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100260::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 minute = 1;
    if (has_minute()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->minute());
    }
    
    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100260::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100260* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100260*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100260::MergeFrom(const Proto10100260& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_minute()) {
      set_minute(from.minute());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100260::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100260::CopyFrom(const Proto10100260& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100260::IsInitialized() const {
  
  return true;
}

void Proto10100260::Swap(Proto10100260* other) {
  if (other != this) {
    std::swap(minute_, other->minute_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100260::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100260_descriptor_;
  metadata.reflection = Proto10100260_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100261::kIndexFieldNumber;
const int Proto10100261::kTypeFieldNumber;
const int Proto10100261::kAmountFieldNumber;
#endif  // !_MSC_VER

Proto10100261::Proto10100261()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100261::InitAsDefaultInstance() {
}

Proto10100261::Proto10100261(const Proto10100261& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100261::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  type_ = 0;
  amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100261::~Proto10100261() {
  SharedDtor();
}

void Proto10100261::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100261::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100261::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100261_descriptor_;
}

const Proto10100261& Proto10100261::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto10100261* Proto10100261::default_instance_ = NULL;

Proto10100261* Proto10100261::New() const {
  return new Proto10100261;
}

void Proto10100261::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    type_ = 0;
    amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100261::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100261::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100261::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100261::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 amount = 3;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100261::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100261* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100261*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100261::MergeFrom(const Proto10100261& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100261::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100261::CopyFrom(const Proto10100261& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100261::IsInitialized() const {
  
  return true;
}

void Proto10100261::Swap(Proto10100261* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(type_, other->type_);
    std::swap(amount_, other->amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100261::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100261_descriptor_;
  metadata.reflection = Proto10100261_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100261::kIndexFieldNumber;
const int Proto50100261::kMoveFieldNumber;
const int Proto50100261::kPositionFieldNumber;
#endif  // !_MSC_VER

Proto50100261::Proto50100261()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100261::InitAsDefaultInstance() {
}

Proto50100261::Proto50100261(const Proto50100261& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100261::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  move_ = 0;
  position_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100261::~Proto50100261() {
  SharedDtor();
}

void Proto50100261::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100261::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100261::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100261_descriptor_;
}

const Proto50100261& Proto50100261::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50100261* Proto50100261::default_instance_ = NULL;

Proto50100261* Proto50100261::New() const {
  return new Proto50100261;
}

void Proto50100261::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    move_ = 0;
    position_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100261::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_move;
        break;
      }
      
      // optional int32 move = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_move:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &move_)));
          set_has_move();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_position;
        break;
      }
      
      // optional int32 position = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &position_)));
          set_has_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100261::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional int32 move = 2;
  if (has_move()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->move(), output);
  }
  
  // optional int32 position = 3;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->position(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100261::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional int32 move = 2;
  if (has_move()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->move(), target);
  }
  
  // optional int32 position = 3;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->position(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100261::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 move = 2;
    if (has_move()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->move());
    }
    
    // optional int32 position = 3;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->position());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100261::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100261* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100261*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100261::MergeFrom(const Proto50100261& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_move()) {
      set_move(from.move());
    }
    if (from.has_position()) {
      set_position(from.position());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100261::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100261::CopyFrom(const Proto50100261& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100261::IsInitialized() const {
  
  return true;
}

void Proto50100261::Swap(Proto50100261* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(move_, other->move_);
    std::swap(position_, other->position_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100261::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100261_descriptor_;
  metadata.reflection = Proto50100261_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100262::kIndexFieldNumber;
const int Proto10100262::kTypeFieldNumber;
const int Proto10100262::kAmountFieldNumber;
#endif  // !_MSC_VER

Proto10100262::Proto10100262()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100262::InitAsDefaultInstance() {
}

Proto10100262::Proto10100262(const Proto10100262& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100262::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  type_ = 0;
  amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100262::~Proto10100262() {
  SharedDtor();
}

void Proto10100262::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100262::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100262::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100262_descriptor_;
}

const Proto10100262& Proto10100262::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto10100262* Proto10100262::default_instance_ = NULL;

Proto10100262* Proto10100262::New() const {
  return new Proto10100262;
}

void Proto10100262::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    type_ = 0;
    amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100262::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100262::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100262::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100262::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 amount = 3;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100262::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100262* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100262*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100262::MergeFrom(const Proto10100262& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100262::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100262::CopyFrom(const Proto10100262& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100262::IsInitialized() const {
  
  return true;
}

void Proto10100262::Swap(Proto10100262* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(type_, other->type_);
    std::swap(amount_, other->amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100262::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100262_descriptor_;
  metadata.reflection = Proto10100262_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100262::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto50100262::Proto50100262()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100262::InitAsDefaultInstance() {
}

Proto50100262::Proto50100262(const Proto50100262& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100262::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100262::~Proto50100262() {
  SharedDtor();
}

void Proto50100262::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100262::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100262::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100262_descriptor_;
}

const Proto50100262& Proto50100262::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50100262* Proto50100262::default_instance_ = NULL;

Proto50100262* Proto50100262::New() const {
  return new Proto50100262;
}

void Proto50100262::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100262::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100262::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100262::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100262::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100262::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100262* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100262*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100262::MergeFrom(const Proto50100262& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100262::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100262::CopyFrom(const Proto50100262& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100262::IsInitialized() const {
  
  return true;
}

void Proto50100262::Swap(Proto50100262* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100262::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100262_descriptor_;
  metadata.reflection = Proto50100262_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100263::kIndexFieldNumber;
const int Proto10100263::kPlayerIdFieldNumber;
#endif  // !_MSC_VER

Proto10100263::Proto10100263()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100263::InitAsDefaultInstance() {
}

Proto10100263::Proto10100263(const Proto10100263& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100263::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  player_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100263::~Proto10100263() {
  SharedDtor();
}

void Proto10100263::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100263::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100263::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100263_descriptor_;
}

const Proto10100263& Proto10100263::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto10100263* Proto10100263::default_instance_ = NULL;

Proto10100263* Proto10100263::New() const {
  return new Proto10100263;
}

void Proto10100263::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    player_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100263::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_player_id;
        break;
      }
      
      // optional int64 player_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
          set_has_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100263::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional int64 player_id = 2;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->player_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100263::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional int64 player_id = 2;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->player_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100263::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int64 player_id = 2;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100263::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100263* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100263*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100263::MergeFrom(const Proto10100263& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100263::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100263::CopyFrom(const Proto10100263& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100263::IsInitialized() const {
  
  return true;
}

void Proto10100263::Swap(Proto10100263* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(player_id_, other->player_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100263::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100263_descriptor_;
  metadata.reflection = Proto10100263_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100263::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto50100263::Proto50100263()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100263::InitAsDefaultInstance() {
}

Proto50100263::Proto50100263(const Proto50100263& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100263::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100263::~Proto50100263() {
  SharedDtor();
}

void Proto50100263::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100263::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100263::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100263_descriptor_;
}

const Proto50100263& Proto50100263::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50100263* Proto50100263::default_instance_ = NULL;

Proto50100263* Proto50100263::New() const {
  return new Proto50100263;
}

void Proto50100263::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100263::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100263::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100263::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100263::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100263::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100263* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100263*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100263::MergeFrom(const Proto50100263& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100263::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100263::CopyFrom(const Proto50100263& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100263::IsInitialized() const {
  
  return true;
}

void Proto50100263::Swap(Proto50100263* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100263::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100263_descriptor_;
  metadata.reflection = Proto50100263_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100264::kIndexFieldNumber;
const int Proto10100264::kPageFieldNumber;
#endif  // !_MSC_VER

Proto10100264::Proto10100264()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100264::InitAsDefaultInstance() {
}

Proto10100264::Proto10100264(const Proto10100264& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100264::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100264::~Proto10100264() {
  SharedDtor();
}

void Proto10100264::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100264::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100264::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100264_descriptor_;
}

const Proto10100264& Proto10100264::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto10100264* Proto10100264::default_instance_ = NULL;

Proto10100264* Proto10100264::New() const {
  return new Proto10100264;
}

void Proto10100264::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    page_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100264::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_page;
        break;
      }
      
      // optional int32 page = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
          set_has_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100264::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional int32 page = 2;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100264::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional int32 page = 2;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100264::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 page = 2;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100264::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100264* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100264*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100264::MergeFrom(const Proto10100264& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_page()) {
      set_page(from.page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100264::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100264::CopyFrom(const Proto10100264& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100264::IsInitialized() const {
  
  return true;
}

void Proto10100264::Swap(Proto10100264* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(page_, other->page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100264::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100264_descriptor_;
  metadata.reflection = Proto10100264_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100264::kRoleInfoFieldNumber;
const int Proto50100264::kCurPageFieldNumber;
const int Proto50100264::kTotalPageFieldNumber;
#endif  // !_MSC_VER

Proto50100264::Proto50100264()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100264::InitAsDefaultInstance() {
}

Proto50100264::Proto50100264(const Proto50100264& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100264::SharedCtor() {
  _cached_size_ = 0;
  cur_page_ = 0;
  total_page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100264::~Proto50100264() {
  SharedDtor();
}

void Proto50100264::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100264::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100264::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100264_descriptor_;
}

const Proto50100264& Proto50100264::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50100264* Proto50100264::default_instance_ = NULL;

Proto50100264* Proto50100264::New() const {
  return new Proto50100264;
}

void Proto50100264::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    cur_page_ = 0;
    total_page_ = 0;
  }
  role_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100264::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoRoleInfo role_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_role_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_role_info;
        if (input->ExpectTag(16)) goto parse_cur_page;
        break;
      }
      
      // optional int32 cur_page = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_page_)));
          set_has_cur_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100264::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoRoleInfo role_info = 1;
  for (int i = 0; i < this->role_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->role_info(i), output);
  }
  
  // optional int32 cur_page = 2;
  if (has_cur_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cur_page(), output);
  }
  
  // optional int32 total_page = 3;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100264::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoRoleInfo role_info = 1;
  for (int i = 0; i < this->role_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->role_info(i), target);
  }
  
  // optional int32 cur_page = 2;
  if (has_cur_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cur_page(), target);
  }
  
  // optional int32 total_page = 3;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100264::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 cur_page = 2;
    if (has_cur_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_page());
    }
    
    // optional int32 total_page = 3;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
  }
  // repeated .ProtoRoleInfo role_info = 1;
  total_size += 1 * this->role_info_size();
  for (int i = 0; i < this->role_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100264::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100264* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100264*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100264::MergeFrom(const Proto50100264& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_info_.MergeFrom(from.role_info_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_cur_page()) {
      set_cur_page(from.cur_page());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100264::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100264::CopyFrom(const Proto50100264& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100264::IsInitialized() const {
  
  return true;
}

void Proto50100264::Swap(Proto50100264* other) {
  if (other != this) {
    role_info_.Swap(&other->role_info_);
    std::swap(cur_page_, other->cur_page_);
    std::swap(total_page_, other->total_page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100264::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100264_descriptor_;
  metadata.reflection = Proto50100264_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400202::kSkillIdFieldNumber;
const int Proto10400202::kSkillPixelXFieldNumber;
const int Proto10400202::kSkillPixelYFieldNumber;
const int Proto10400202::kTargetListFieldNumber;
const int Proto10400202::kSkillStepFieldNumber;
const int Proto10400202::kTargetIdFieldNumber;
const int Proto10400202::kAngleFieldNumber;
const int Proto10400202::kPlayCoordFieldNumber;
#endif  // !_MSC_VER

Proto10400202::Proto10400202()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400202::InitAsDefaultInstance() {
  play_coord_ = const_cast< ::ProtoCoord*>(&::ProtoCoord::default_instance());
}

Proto10400202::Proto10400202(const Proto10400202& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400202::SharedCtor() {
  _cached_size_ = 0;
  skill_id_ = 0;
  skill_pixel_x_ = 0;
  skill_pixel_y_ = 0;
  skill_step_ = 0;
  target_id_ = GOOGLE_LONGLONG(0);
  angle_ = 0;
  play_coord_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400202::~Proto10400202() {
  SharedDtor();
}

void Proto10400202::SharedDtor() {
  if (this != default_instance_) {
    delete play_coord_;
  }
}

void Proto10400202::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400202::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400202_descriptor_;
}

const Proto10400202& Proto10400202::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto10400202* Proto10400202::default_instance_ = NULL;

Proto10400202* Proto10400202::New() const {
  return new Proto10400202;
}

void Proto10400202::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skill_id_ = 0;
    skill_pixel_x_ = 0;
    skill_pixel_y_ = 0;
    skill_step_ = 0;
    target_id_ = GOOGLE_LONGLONG(0);
    angle_ = 0;
    if (has_play_coord()) {
      if (play_coord_ != NULL) play_coord_->::ProtoCoord::Clear();
    }
  }
  target_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400202::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 skill_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_skill_pixel_x;
        break;
      }
      
      // optional int32 skill_pixel_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_pixel_x_)));
          set_has_skill_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_skill_pixel_y;
        break;
      }
      
      // optional int32 skill_pixel_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_pixel_y_)));
          set_has_skill_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_target_list;
        break;
      }
      
      // repeated int64 target_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_target_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 32, input, this->mutable_target_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_target_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_target_list;
        if (input->ExpectTag(40)) goto parse_skill_step;
        break;
      }
      
      // optional int32 skill_step = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_step:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_step_)));
          set_has_skill_step();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_target_id;
        break;
      }
      
      // optional int64 target_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_target_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_id_)));
          set_has_target_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_angle;
        break;
      }
      
      // optional int32 angle = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &angle_)));
          set_has_angle();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_play_coord;
        break;
      }
      
      // optional .ProtoCoord play_coord = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_play_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_play_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400202::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skill_id(), output);
  }
  
  // optional int32 skill_pixel_x = 2;
  if (has_skill_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skill_pixel_x(), output);
  }
  
  // optional int32 skill_pixel_y = 3;
  if (has_skill_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skill_pixel_y(), output);
  }
  
  // repeated int64 target_list = 4;
  for (int i = 0; i < this->target_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->target_list(i), output);
  }
  
  // optional int32 skill_step = 5;
  if (has_skill_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->skill_step(), output);
  }
  
  // optional int64 target_id = 6;
  if (has_target_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->target_id(), output);
  }
  
  // optional int32 angle = 7;
  if (has_angle()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->angle(), output);
  }
  
  // optional .ProtoCoord play_coord = 8;
  if (has_play_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->play_coord(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400202::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skill_id(), target);
  }
  
  // optional int32 skill_pixel_x = 2;
  if (has_skill_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skill_pixel_x(), target);
  }
  
  // optional int32 skill_pixel_y = 3;
  if (has_skill_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skill_pixel_y(), target);
  }
  
  // repeated int64 target_list = 4;
  for (int i = 0; i < this->target_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(4, this->target_list(i), target);
  }
  
  // optional int32 skill_step = 5;
  if (has_skill_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->skill_step(), target);
  }
  
  // optional int64 target_id = 6;
  if (has_target_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->target_id(), target);
  }
  
  // optional int32 angle = 7;
  if (has_angle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->angle(), target);
  }
  
  // optional .ProtoCoord play_coord = 8;
  if (has_play_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->play_coord(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400202::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 skill_id = 1;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
    // optional int32 skill_pixel_x = 2;
    if (has_skill_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_pixel_x());
    }
    
    // optional int32 skill_pixel_y = 3;
    if (has_skill_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_pixel_y());
    }
    
    // optional int32 skill_step = 5;
    if (has_skill_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_step());
    }
    
    // optional int64 target_id = 6;
    if (has_target_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->target_id());
    }
    
    // optional int32 angle = 7;
    if (has_angle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->angle());
    }
    
    // optional .ProtoCoord play_coord = 8;
    if (has_play_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->play_coord());
    }
    
  }
  // repeated int64 target_list = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->target_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->target_list(i));
    }
    total_size += 1 * this->target_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400202::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400202* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400202*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400202::MergeFrom(const Proto10400202& from) {
  GOOGLE_CHECK_NE(&from, this);
  target_list_.MergeFrom(from.target_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_skill_pixel_x()) {
      set_skill_pixel_x(from.skill_pixel_x());
    }
    if (from.has_skill_pixel_y()) {
      set_skill_pixel_y(from.skill_pixel_y());
    }
    if (from.has_skill_step()) {
      set_skill_step(from.skill_step());
    }
    if (from.has_target_id()) {
      set_target_id(from.target_id());
    }
    if (from.has_angle()) {
      set_angle(from.angle());
    }
    if (from.has_play_coord()) {
      mutable_play_coord()->::ProtoCoord::MergeFrom(from.play_coord());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400202::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400202::CopyFrom(const Proto10400202& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400202::IsInitialized() const {
  
  return true;
}

void Proto10400202::Swap(Proto10400202* other) {
  if (other != this) {
    std::swap(skill_id_, other->skill_id_);
    std::swap(skill_pixel_x_, other->skill_pixel_x_);
    std::swap(skill_pixel_y_, other->skill_pixel_y_);
    target_list_.Swap(&other->target_list_);
    std::swap(skill_step_, other->skill_step_);
    std::swap(target_id_, other->target_id_);
    std::swap(angle_, other->angle_);
    std::swap(play_coord_, other->play_coord_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400202::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400202_descriptor_;
  metadata.reflection = Proto10400202_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401901::kFirstPlayerFieldNumber;
const int Proto51401901::kTbattleValueFieldNumber;
const int Proto51401901::kStateFieldNumber;
#endif  // !_MSC_VER

Proto51401901::Proto51401901()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401901::InitAsDefaultInstance() {
  first_player_ = const_cast< ::ProtoTrvlBaseRole*>(&::ProtoTrvlBaseRole::default_instance());
}

Proto51401901::Proto51401901(const Proto51401901& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401901::SharedCtor() {
  _cached_size_ = 0;
  first_player_ = NULL;
  tbattle_value_ = 0;
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401901::~Proto51401901() {
  SharedDtor();
}

void Proto51401901::SharedDtor() {
  if (this != default_instance_) {
    delete first_player_;
  }
}

void Proto51401901::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401901::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401901_descriptor_;
}

const Proto51401901& Proto51401901::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto51401901* Proto51401901::default_instance_ = NULL;

Proto51401901* Proto51401901::New() const {
  return new Proto51401901;
}

void Proto51401901::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_first_player()) {
      if (first_player_ != NULL) first_player_->::ProtoTrvlBaseRole::Clear();
    }
    tbattle_value_ = 0;
    state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401901::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoTrvlBaseRole first_player = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_first_player()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_tbattle_value;
        break;
      }
      
      // optional int32 tbattle_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tbattle_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tbattle_value_)));
          set_has_tbattle_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_state;
        break;
      }
      
      // optional int32 state = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401901::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoTrvlBaseRole first_player = 1;
  if (has_first_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->first_player(), output);
  }
  
  // optional int32 tbattle_value = 2;
  if (has_tbattle_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->tbattle_value(), output);
  }
  
  // optional int32 state = 3;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401901::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoTrvlBaseRole first_player = 1;
  if (has_first_player()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->first_player(), target);
  }
  
  // optional int32 tbattle_value = 2;
  if (has_tbattle_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->tbattle_value(), target);
  }
  
  // optional int32 state = 3;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401901::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoTrvlBaseRole first_player = 1;
    if (has_first_player()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->first_player());
    }
    
    // optional int32 tbattle_value = 2;
    if (has_tbattle_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tbattle_value());
    }
    
    // optional int32 state = 3;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401901::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401901* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401901*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401901::MergeFrom(const Proto51401901& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_first_player()) {
      mutable_first_player()->::ProtoTrvlBaseRole::MergeFrom(from.first_player());
    }
    if (from.has_tbattle_value()) {
      set_tbattle_value(from.tbattle_value());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401901::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401901::CopyFrom(const Proto51401901& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401901::IsInitialized() const {
  
  return true;
}

void Proto51401901::Swap(Proto51401901* other) {
  if (other != this) {
    std::swap(first_player_, other->first_player_);
    std::swap(tbattle_value_, other->tbattle_value_);
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401901::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401901_descriptor_;
  metadata.reflection = Proto51401901_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100265::kTimesFieldNumber;
#endif  // !_MSC_VER

Proto10100265::Proto10100265()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100265::InitAsDefaultInstance() {
}

Proto10100265::Proto10100265(const Proto10100265& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100265::SharedCtor() {
  _cached_size_ = 0;
  times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100265::~Proto10100265() {
  SharedDtor();
}

void Proto10100265::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100265::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100265::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100265_descriptor_;
}

const Proto10100265& Proto10100265::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto10100265* Proto10100265::default_instance_ = NULL;

Proto10100265* Proto10100265::New() const {
  return new Proto10100265;
}

void Proto10100265::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    times_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100265::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 times = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &times_)));
          set_has_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100265::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 times = 1;
  if (has_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->times(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100265::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 times = 1;
  if (has_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->times(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100265::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 times = 1;
    if (has_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->times());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100265::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100265* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100265*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100265::MergeFrom(const Proto10100265& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_times()) {
      set_times(from.times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100265::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100265::CopyFrom(const Proto10100265& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100265::IsInitialized() const {
  
  return true;
}

void Proto10100265::Swap(Proto10100265* other) {
  if (other != this) {
    std::swap(times_, other->times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100265::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100265_descriptor_;
  metadata.reflection = Proto10100265_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100265::kItemFieldNumber;
#endif  // !_MSC_VER

Proto50100265::Proto50100265()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100265::InitAsDefaultInstance() {
}

Proto50100265::Proto50100265(const Proto50100265& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100265::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100265::~Proto50100265() {
  SharedDtor();
}

void Proto50100265::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100265::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100265::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100265_descriptor_;
}

const Proto50100265& Proto50100265::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50100265* Proto50100265::default_instance_ = NULL;

Proto50100265* Proto50100265::New() const {
  return new Proto50100265;
}

void Proto50100265::Clear() {
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100265::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItemId item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100265::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItemId item = 1;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100265::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItemId item = 1;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100265::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoItemId item = 1;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100265::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100265* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100265*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100265::MergeFrom(const Proto50100265& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100265::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100265::CopyFrom(const Proto50100265& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100265::IsInitialized() const {
  
  return true;
}

void Proto50100265::Swap(Proto50100265* other) {
  if (other != this) {
    item_.Swap(&other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100265::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100265_descriptor_;
  metadata.reflection = Proto50100265_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80404007::kStateFieldNumber;
const int Proto80404007::kKillFlagFieldNumber;
const int Proto80404007::kFightScoreFieldNumber;
const int Proto80404007::kRankFieldNumber;
const int Proto80404007::kItemFieldNumber;
const int Proto80404007::kFlagRewardFieldNumber;
#endif  // !_MSC_VER

Proto80404007::Proto80404007()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80404007::InitAsDefaultInstance() {
}

Proto80404007::Proto80404007(const Proto80404007& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80404007::SharedCtor() {
  _cached_size_ = 0;
  state_ = 0;
  kill_flag_ = 0;
  fight_score_ = 0;
  rank_ = 0;
  flag_reward_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80404007::~Proto80404007() {
  SharedDtor();
}

void Proto80404007::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80404007::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80404007::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80404007_descriptor_;
}

const Proto80404007& Proto80404007::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto80404007* Proto80404007::default_instance_ = NULL;

Proto80404007* Proto80404007::New() const {
  return new Proto80404007;
}

void Proto80404007::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    state_ = 0;
    kill_flag_ = 0;
    fight_score_ = 0;
    rank_ = 0;
    flag_reward_ = 0;
  }
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80404007::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_kill_flag;
        break;
      }
      
      // optional int32 kill_flag = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_kill_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kill_flag_)));
          set_has_kill_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_fight_score;
        break;
      }
      
      // optional int32 fight_score = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_score_)));
          set_has_fight_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_rank;
        break;
      }
      
      // optional int32 rank = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_item;
        break;
      }
      
      // repeated int32 item = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_item())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_item;
        if (input->ExpectTag(48)) goto parse_flag_reward;
        break;
      }
      
      // optional int32 flag_reward = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flag_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_reward_)));
          set_has_flag_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80404007::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->state(), output);
  }
  
  // optional int32 kill_flag = 2;
  if (has_kill_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->kill_flag(), output);
  }
  
  // optional int32 fight_score = 3;
  if (has_fight_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fight_score(), output);
  }
  
  // optional int32 rank = 4;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->rank(), output);
  }
  
  // repeated int32 item = 5;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->item(i), output);
  }
  
  // optional int32 flag_reward = 6;
  if (has_flag_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->flag_reward(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80404007::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->state(), target);
  }
  
  // optional int32 kill_flag = 2;
  if (has_kill_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->kill_flag(), target);
  }
  
  // optional int32 fight_score = 3;
  if (has_fight_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fight_score(), target);
  }
  
  // optional int32 rank = 4;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->rank(), target);
  }
  
  // repeated int32 item = 5;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->item(i), target);
  }
  
  // optional int32 flag_reward = 6;
  if (has_flag_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->flag_reward(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80404007::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 state = 1;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
    // optional int32 kill_flag = 2;
    if (has_kill_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->kill_flag());
    }
    
    // optional int32 fight_score = 3;
    if (has_fight_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_score());
    }
    
    // optional int32 rank = 4;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank());
    }
    
    // optional int32 flag_reward = 6;
    if (has_flag_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag_reward());
    }
    
  }
  // repeated int32 item = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item(i));
    }
    total_size += 1 * this->item_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80404007::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80404007* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80404007*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80404007::MergeFrom(const Proto80404007& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_kill_flag()) {
      set_kill_flag(from.kill_flag());
    }
    if (from.has_fight_score()) {
      set_fight_score(from.fight_score());
    }
    if (from.has_rank()) {
      set_rank(from.rank());
    }
    if (from.has_flag_reward()) {
      set_flag_reward(from.flag_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80404007::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80404007::CopyFrom(const Proto80404007& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80404007::IsInitialized() const {
  
  return true;
}

void Proto80404007::Swap(Proto80404007* other) {
  if (other != this) {
    std::swap(state_, other->state_);
    std::swap(kill_flag_, other->kill_flag_);
    std::swap(fight_score_, other->fight_score_);
    std::swap(rank_, other->rank_);
    item_.Swap(&other->item_);
    std::swap(flag_reward_, other->flag_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80404007::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80404007_descriptor_;
  metadata.reflection = Proto80404007_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400353::kTotalLeagueRankFieldNumber;
#endif  // !_MSC_VER

Proto50400353::Proto50400353()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400353::InitAsDefaultInstance() {
}

Proto50400353::Proto50400353(const Proto50400353& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400353::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400353::~Proto50400353() {
  SharedDtor();
}

void Proto50400353::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400353::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400353::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400353_descriptor_;
}

const Proto50400353& Proto50400353::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50400353* Proto50400353::default_instance_ = NULL;

Proto50400353* Proto50400353::New() const {
  return new Proto50400353;
}

void Proto50400353::Clear() {
  total_league_rank_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400353::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoLeagueRankInfo total_league_rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_total_league_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_total_league_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_total_league_rank;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400353::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoLeagueRankInfo total_league_rank = 1;
  for (int i = 0; i < this->total_league_rank_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->total_league_rank(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400353::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoLeagueRankInfo total_league_rank = 1;
  for (int i = 0; i < this->total_league_rank_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->total_league_rank(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400353::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoLeagueRankInfo total_league_rank = 1;
  total_size += 1 * this->total_league_rank_size();
  for (int i = 0; i < this->total_league_rank_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->total_league_rank(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400353::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400353* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400353*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400353::MergeFrom(const Proto50400353& from) {
  GOOGLE_CHECK_NE(&from, this);
  total_league_rank_.MergeFrom(from.total_league_rank_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400353::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400353::CopyFrom(const Proto50400353& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400353::IsInitialized() const {
  
  return true;
}

void Proto50400353::Swap(Proto50400353* other) {
  if (other != this) {
    total_league_rank_.Swap(&other->total_league_rank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400353::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400353_descriptor_;
  metadata.reflection = Proto50400353_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100266::kActivityIdFieldNumber;
const int Proto10100266::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100266::Proto10100266()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100266::InitAsDefaultInstance() {
}

Proto10100266::Proto10100266(const Proto10100266& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100266::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100266::~Proto10100266() {
  SharedDtor();
}

void Proto10100266::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100266::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100266::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100266_descriptor_;
}

const Proto10100266& Proto10100266::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto10100266* Proto10100266::default_instance_ = NULL;

Proto10100266* Proto10100266::New() const {
  return new Proto10100266;
}

void Proto10100266::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100266::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }
      
      // optional int32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100266::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100266::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100266::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100266::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100266* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100266*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100266::MergeFrom(const Proto10100266& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100266::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100266::CopyFrom(const Proto10100266& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100266::IsInitialized() const {
  
  return true;
}

void Proto10100266::Swap(Proto10100266* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100266::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100266_descriptor_;
  metadata.reflection = Proto10100266_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100267::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100267::Proto10100267()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100267::InitAsDefaultInstance() {
}

Proto10100267::Proto10100267(const Proto10100267& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100267::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100267::~Proto10100267() {
  SharedDtor();
}

void Proto10100267::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100267::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100267::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100267_descriptor_;
}

const Proto10100267& Proto10100267::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto10100267* Proto10100267::default_instance_ = NULL;

Proto10100267* Proto10100267::New() const {
  return new Proto10100267;
}

void Proto10100267::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100267::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100267::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100267::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100267::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100267::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100267* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100267*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100267::MergeFrom(const Proto10100267& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100267::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100267::CopyFrom(const Proto10100267& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100267::IsInitialized() const {
  
  return true;
}

void Proto10100267::Swap(Proto10100267* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100267::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100267_descriptor_;
  metadata.reflection = Proto10100267_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100267::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto50100267::Proto50100267()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100267::InitAsDefaultInstance() {
}

Proto50100267::Proto50100267(const Proto50100267& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100267::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100267::~Proto50100267() {
  SharedDtor();
}

void Proto50100267::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100267::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100267::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100267_descriptor_;
}

const Proto50100267& Proto50100267::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50100267* Proto50100267::default_instance_ = NULL;

Proto50100267* Proto50100267::New() const {
  return new Proto50100267;
}

void Proto50100267::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100267::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100267::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100267::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100267::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100267::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100267* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100267*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100267::MergeFrom(const Proto50100267& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100267::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100267::CopyFrom(const Proto50100267& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100267::IsInitialized() const {
  
  return true;
}

void Proto50100267::Swap(Proto50100267* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100267::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100267_descriptor_;
  metadata.reflection = Proto50100267_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100657::kRankFieldNumber;
const int Proto50100657::kLeaderDrawFieldNumber;
const int Proto50100657::kDrawMapFieldNumber;
const int Proto50100657::kTodayContriFieldNumber;
#endif  // !_MSC_VER

Proto50100657::Proto50100657()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100657::InitAsDefaultInstance() {
}

Proto50100657::Proto50100657(const Proto50100657& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100657::SharedCtor() {
  _cached_size_ = 0;
  rank_ = 0;
  leader_draw_ = 0;
  today_contri_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100657::~Proto50100657() {
  SharedDtor();
}

void Proto50100657::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100657::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100657::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100657_descriptor_;
}

const Proto50100657& Proto50100657::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50100657* Proto50100657::default_instance_ = NULL;

Proto50100657* Proto50100657::New() const {
  return new Proto50100657;
}

void Proto50100657::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rank_ = 0;
    leader_draw_ = 0;
    today_contri_ = 0;
  }
  draw_map_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100657::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_leader_draw;
        break;
      }
      
      // optional int32 leader_draw = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leader_draw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leader_draw_)));
          set_has_leader_draw();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_draw_map;
        break;
      }
      
      // repeated .ProtoPairObj draw_map = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_draw_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_draw_map()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_draw_map;
        if (input->ExpectTag(32)) goto parse_today_contri;
        break;
      }
      
      // optional int32 today_contri = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_today_contri:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &today_contri_)));
          set_has_today_contri();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100657::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 rank = 1;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank(), output);
  }
  
  // optional int32 leader_draw = 2;
  if (has_leader_draw()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->leader_draw(), output);
  }
  
  // repeated .ProtoPairObj draw_map = 3;
  for (int i = 0; i < this->draw_map_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->draw_map(i), output);
  }
  
  // optional int32 today_contri = 4;
  if (has_today_contri()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->today_contri(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100657::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 rank = 1;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank(), target);
  }
  
  // optional int32 leader_draw = 2;
  if (has_leader_draw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->leader_draw(), target);
  }
  
  // repeated .ProtoPairObj draw_map = 3;
  for (int i = 0; i < this->draw_map_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->draw_map(i), target);
  }
  
  // optional int32 today_contri = 4;
  if (has_today_contri()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->today_contri(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100657::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 rank = 1;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank());
    }
    
    // optional int32 leader_draw = 2;
    if (has_leader_draw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leader_draw());
    }
    
    // optional int32 today_contri = 4;
    if (has_today_contri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->today_contri());
    }
    
  }
  // repeated .ProtoPairObj draw_map = 3;
  total_size += 1 * this->draw_map_size();
  for (int i = 0; i < this->draw_map_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->draw_map(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100657::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100657* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100657*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100657::MergeFrom(const Proto50100657& from) {
  GOOGLE_CHECK_NE(&from, this);
  draw_map_.MergeFrom(from.draw_map_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rank()) {
      set_rank(from.rank());
    }
    if (from.has_leader_draw()) {
      set_leader_draw(from.leader_draw());
    }
    if (from.has_today_contri()) {
      set_today_contri(from.today_contri());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100657::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100657::CopyFrom(const Proto50100657& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100657::IsInitialized() const {
  
  return true;
}

void Proto50100657::Swap(Proto50100657* other) {
  if (other != this) {
    std::swap(rank_, other->rank_);
    std::swap(leader_draw_, other->leader_draw_);
    draw_map_.Swap(&other->draw_map_);
    std::swap(today_contri_, other->today_contri_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100657::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100657_descriptor_;
  metadata.reflection = Proto50100657_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100659::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100659::Proto10100659()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100659::InitAsDefaultInstance() {
}

Proto10100659::Proto10100659(const Proto10100659& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100659::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100659::~Proto10100659() {
  SharedDtor();
}

void Proto10100659::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100659::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100659::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100659_descriptor_;
}

const Proto10100659& Proto10100659::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto10100659* Proto10100659::default_instance_ = NULL;

Proto10100659* Proto10100659::New() const {
  return new Proto10100659;
}

void Proto10100659::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100659::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100659::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100659::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100659::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100659::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100659* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100659*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100659::MergeFrom(const Proto10100659& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100659::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100659::CopyFrom(const Proto10100659& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100659::IsInitialized() const {
  
  return true;
}

void Proto10100659::Swap(Proto10100659* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100659::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100659_descriptor_;
  metadata.reflection = Proto10100659_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50404007::kWarListFieldNumber;
#endif  // !_MSC_VER

Proto50404007::Proto50404007()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50404007::InitAsDefaultInstance() {
}

Proto50404007::Proto50404007(const Proto50404007& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50404007::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50404007::~Proto50404007() {
  SharedDtor();
}

void Proto50404007::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50404007::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50404007::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50404007_descriptor_;
}

const Proto50404007& Proto50404007::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50404007* Proto50404007::default_instance_ = NULL;

Proto50404007* Proto50404007::New() const {
  return new Proto50404007;
}

void Proto50404007::Clear() {
  war_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50404007::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoLeagueItem war_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_war_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_war_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_war_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50404007::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoLeagueItem war_list = 1;
  for (int i = 0; i < this->war_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->war_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50404007::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoLeagueItem war_list = 1;
  for (int i = 0; i < this->war_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->war_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50404007::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoLeagueItem war_list = 1;
  total_size += 1 * this->war_list_size();
  for (int i = 0; i < this->war_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->war_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50404007::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50404007* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50404007*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50404007::MergeFrom(const Proto50404007& from) {
  GOOGLE_CHECK_NE(&from, this);
  war_list_.MergeFrom(from.war_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50404007::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50404007::CopyFrom(const Proto50404007& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50404007::IsInitialized() const {
  
  return true;
}

void Proto50404007::Swap(Proto50404007* other) {
  if (other != this) {
    war_list_.Swap(&other->war_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50404007::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50404007_descriptor_;
  metadata.reflection = Proto50404007_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10401103::kRefreshFieldNumber;
#endif  // !_MSC_VER

Proto10401103::Proto10401103()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10401103::InitAsDefaultInstance() {
}

Proto10401103::Proto10401103(const Proto10401103& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10401103::SharedCtor() {
  _cached_size_ = 0;
  refresh_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10401103::~Proto10401103() {
  SharedDtor();
}

void Proto10401103::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10401103::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10401103::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10401103_descriptor_;
}

const Proto10401103& Proto10401103::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto10401103* Proto10401103::default_instance_ = NULL;

Proto10401103* Proto10401103::New() const {
  return new Proto10401103;
}

void Proto10401103::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    refresh_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10401103::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 refresh = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refresh_)));
          set_has_refresh();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10401103::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 refresh = 1;
  if (has_refresh()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->refresh(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10401103::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 refresh = 1;
  if (has_refresh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->refresh(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10401103::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 refresh = 1;
    if (has_refresh()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refresh());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10401103::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10401103* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10401103*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10401103::MergeFrom(const Proto10401103& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_refresh()) {
      set_refresh(from.refresh());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10401103::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10401103::CopyFrom(const Proto10401103& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10401103::IsInitialized() const {
  
  return true;
}

void Proto10401103::Swap(Proto10401103* other) {
  if (other != this) {
    std::swap(refresh_, other->refresh_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10401103::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10401103_descriptor_;
  metadata.reflection = Proto10401103_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401103::kRankListFieldNumber;
const int Proto50401103::kSelfRankFieldNumber;
#endif  // !_MSC_VER

Proto50401103::Proto50401103()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401103::InitAsDefaultInstance() {
  self_rank_ = const_cast< ::ProtoTrvlBattleRank*>(&::ProtoTrvlBattleRank::default_instance());
}

Proto50401103::Proto50401103(const Proto50401103& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401103::SharedCtor() {
  _cached_size_ = 0;
  self_rank_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401103::~Proto50401103() {
  SharedDtor();
}

void Proto50401103::SharedDtor() {
  if (this != default_instance_) {
    delete self_rank_;
  }
}

void Proto50401103::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401103::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401103_descriptor_;
}

const Proto50401103& Proto50401103::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50401103* Proto50401103::default_instance_ = NULL;

Proto50401103* Proto50401103::New() const {
  return new Proto50401103;
}

void Proto50401103::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_self_rank()) {
      if (self_rank_ != NULL) self_rank_->::ProtoTrvlBattleRank::Clear();
    }
  }
  rank_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401103::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoTrvlBattleRank rank_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rank_list;
        if (input->ExpectTag(18)) goto parse_self_rank;
        break;
      }
      
      // optional .ProtoTrvlBattleRank self_rank = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_self_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401103::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoTrvlBattleRank rank_list = 1;
  for (int i = 0; i < this->rank_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rank_list(i), output);
  }
  
  // optional .ProtoTrvlBattleRank self_rank = 2;
  if (has_self_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->self_rank(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401103::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoTrvlBattleRank rank_list = 1;
  for (int i = 0; i < this->rank_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rank_list(i), target);
  }
  
  // optional .ProtoTrvlBattleRank self_rank = 2;
  if (has_self_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->self_rank(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401103::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .ProtoTrvlBattleRank self_rank = 2;
    if (has_self_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->self_rank());
    }
    
  }
  // repeated .ProtoTrvlBattleRank rank_list = 1;
  total_size += 1 * this->rank_list_size();
  for (int i = 0; i < this->rank_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401103::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401103* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401103*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401103::MergeFrom(const Proto50401103& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_list_.MergeFrom(from.rank_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_self_rank()) {
      mutable_self_rank()->::ProtoTrvlBattleRank::MergeFrom(from.self_rank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401103::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401103::CopyFrom(const Proto50401103& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401103::IsInitialized() const {
  
  return true;
}

void Proto50401103::Swap(Proto50401103* other) {
  if (other != this) {
    rank_list_.Swap(&other->rank_list_);
    std::swap(self_rank_, other->self_rank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401103::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401103_descriptor_;
  metadata.reflection = Proto50401103_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10401104::kRefreshFieldNumber;
#endif  // !_MSC_VER

Proto10401104::Proto10401104()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10401104::InitAsDefaultInstance() {
}

Proto10401104::Proto10401104(const Proto10401104& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10401104::SharedCtor() {
  _cached_size_ = 0;
  refresh_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10401104::~Proto10401104() {
  SharedDtor();
}

void Proto10401104::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10401104::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10401104::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10401104_descriptor_;
}

const Proto10401104& Proto10401104::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto10401104* Proto10401104::default_instance_ = NULL;

Proto10401104* Proto10401104::New() const {
  return new Proto10401104;
}

void Proto10401104::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    refresh_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10401104::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 refresh = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refresh_)));
          set_has_refresh();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10401104::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 refresh = 1;
  if (has_refresh()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->refresh(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10401104::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 refresh = 1;
  if (has_refresh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->refresh(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10401104::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 refresh = 1;
    if (has_refresh()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refresh());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10401104::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10401104* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10401104*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10401104::MergeFrom(const Proto10401104& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_refresh()) {
      set_refresh(from.refresh());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10401104::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10401104::CopyFrom(const Proto10401104& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10401104::IsInitialized() const {
  
  return true;
}

void Proto10401104::Swap(Proto10401104* other) {
  if (other != this) {
    std::swap(refresh_, other->refresh_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10401104::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10401104_descriptor_;
  metadata.reflection = Proto10401104_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401104::kHallOfFameListFieldNumber;
#endif  // !_MSC_VER

Proto50401104::Proto50401104()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401104::InitAsDefaultInstance() {
}

Proto50401104::Proto50401104(const Proto50401104& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401104::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401104::~Proto50401104() {
  SharedDtor();
}

void Proto50401104::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50401104::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401104::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401104_descriptor_;
}

const Proto50401104& Proto50401104::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50401104* Proto50401104::default_instance_ = NULL;

Proto50401104* Proto50401104::New() const {
  return new Proto50401104;
}

void Proto50401104::Clear() {
  hall_of_fame_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401104::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoTrvlBattleRank hall_of_fame_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hall_of_fame_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hall_of_fame_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_hall_of_fame_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401104::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoTrvlBattleRank hall_of_fame_list = 1;
  for (int i = 0; i < this->hall_of_fame_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hall_of_fame_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401104::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoTrvlBattleRank hall_of_fame_list = 1;
  for (int i = 0; i < this->hall_of_fame_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hall_of_fame_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401104::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoTrvlBattleRank hall_of_fame_list = 1;
  total_size += 1 * this->hall_of_fame_list_size();
  for (int i = 0; i < this->hall_of_fame_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hall_of_fame_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401104::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401104* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401104*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401104::MergeFrom(const Proto50401104& from) {
  GOOGLE_CHECK_NE(&from, this);
  hall_of_fame_list_.MergeFrom(from.hall_of_fame_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401104::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401104::CopyFrom(const Proto50401104& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401104::IsInitialized() const {
  
  return true;
}

void Proto50401104::Swap(Proto50401104* other) {
  if (other != this) {
    hall_of_fame_list_.Swap(&other->hall_of_fame_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401104::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401104_descriptor_;
  metadata.reflection = Proto50401104_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10401105::kRoleIdFieldNumber;
const int Proto10401105::kTypeFieldNumber;
const int Proto10401105::kRankFieldNumber;
#endif  // !_MSC_VER

Proto10401105::Proto10401105()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10401105::InitAsDefaultInstance() {
}

Proto10401105::Proto10401105(const Proto10401105& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10401105::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  rank_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10401105::~Proto10401105() {
  SharedDtor();
}

void Proto10401105::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10401105::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10401105::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10401105_descriptor_;
}

const Proto10401105& Proto10401105::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto10401105* Proto10401105::default_instance_ = NULL;

Proto10401105* Proto10401105::New() const {
  return new Proto10401105;
}

void Proto10401105::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    type_ = 0;
    rank_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10401105::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_rank;
        break;
      }
      
      // optional int32 rank = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10401105::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  // optional int32 rank = 3;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rank(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10401105::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  // optional int32 rank = 3;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rank(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10401105::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 rank = 3;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10401105::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10401105* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10401105*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10401105::MergeFrom(const Proto10401105& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_rank()) {
      set_rank(from.rank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10401105::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10401105::CopyFrom(const Proto10401105& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10401105::IsInitialized() const {
  
  return true;
}

void Proto10401105::Swap(Proto10401105* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(type_, other->type_);
    std::swap(rank_, other->rank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10401105::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10401105_descriptor_;
  metadata.reflection = Proto10401105_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401105::kTrvlRoleFieldNumber;
#endif  // !_MSC_VER

Proto50401105::Proto50401105()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401105::InitAsDefaultInstance() {
  trvl_role_ = const_cast< ::ProtoTrvlBaseRole*>(&::ProtoTrvlBaseRole::default_instance());
}

Proto50401105::Proto50401105(const Proto50401105& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401105::SharedCtor() {
  _cached_size_ = 0;
  trvl_role_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401105::~Proto50401105() {
  SharedDtor();
}

void Proto50401105::SharedDtor() {
  if (this != default_instance_) {
    delete trvl_role_;
  }
}

void Proto50401105::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401105::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401105_descriptor_;
}

const Proto50401105& Proto50401105::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50401105* Proto50401105::default_instance_ = NULL;

Proto50401105* Proto50401105::New() const {
  return new Proto50401105;
}

void Proto50401105::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_trvl_role()) {
      if (trvl_role_ != NULL) trvl_role_->::ProtoTrvlBaseRole::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401105::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoTrvlBaseRole trvl_role = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trvl_role()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401105::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoTrvlBaseRole trvl_role = 1;
  if (has_trvl_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->trvl_role(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401105::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoTrvlBaseRole trvl_role = 1;
  if (has_trvl_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->trvl_role(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401105::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoTrvlBaseRole trvl_role = 1;
    if (has_trvl_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->trvl_role());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401105::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401105* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401105*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401105::MergeFrom(const Proto50401105& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_trvl_role()) {
      mutable_trvl_role()->::ProtoTrvlBaseRole::MergeFrom(from.trvl_role());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401105::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401105::CopyFrom(const Proto50401105& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401105::IsInitialized() const {
  
  return true;
}

void Proto50401105::Swap(Proto50401105* other) {
  if (other != this) {
    std::swap(trvl_role_, other->trvl_role_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401105::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401105_descriptor_;
  metadata.reflection = Proto50401105_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401028::kWbInfoFieldNumber;
const int Proto50401028::kRefreshTickFieldNumber;
#endif  // !_MSC_VER

Proto50401028::Proto50401028()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401028::InitAsDefaultInstance() {
}

Proto50401028::Proto50401028(const Proto50401028& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401028::SharedCtor() {
  _cached_size_ = 0;
  refresh_tick_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401028::~Proto50401028() {
  SharedDtor();
}

void Proto50401028::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50401028::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401028::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401028_descriptor_;
}

const Proto50401028& Proto50401028::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50401028* Proto50401028::default_instance_ = NULL;

Proto50401028* Proto50401028::New() const {
  return new Proto50401028;
}

void Proto50401028::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    refresh_tick_ = 0;
  }
  wb_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401028::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoWorldBossInfo wb_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_wb_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_wb_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_wb_info;
        if (input->ExpectTag(16)) goto parse_refresh_tick;
        break;
      }
      
      // optional int32 refresh_tick = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refresh_tick_)));
          set_has_refresh_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401028::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoWorldBossInfo wb_info = 1;
  for (int i = 0; i < this->wb_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->wb_info(i), output);
  }
  
  // optional int32 refresh_tick = 2;
  if (has_refresh_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->refresh_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401028::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoWorldBossInfo wb_info = 1;
  for (int i = 0; i < this->wb_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->wb_info(i), target);
  }
  
  // optional int32 refresh_tick = 2;
  if (has_refresh_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->refresh_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401028::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 refresh_tick = 2;
    if (has_refresh_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refresh_tick());
    }
    
  }
  // repeated .ProtoWorldBossInfo wb_info = 1;
  total_size += 1 * this->wb_info_size();
  for (int i = 0; i < this->wb_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->wb_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401028::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401028* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401028*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401028::MergeFrom(const Proto50401028& from) {
  GOOGLE_CHECK_NE(&from, this);
  wb_info_.MergeFrom(from.wb_info_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_refresh_tick()) {
      set_refresh_tick(from.refresh_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401028::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401028::CopyFrom(const Proto50401028& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401028::IsInitialized() const {
  
  return true;
}

void Proto50401028::Swap(Proto50401028* other) {
  if (other != this) {
    wb_info_.Swap(&other->wb_info_);
    std::swap(refresh_tick_, other->refresh_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401028::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401028_descriptor_;
  metadata.reflection = Proto50401028_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400663::kTimesFieldNumber;
const int Proto11400663::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400663::Proto11400663()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400663::InitAsDefaultInstance() {
}

Proto11400663::Proto11400663(const Proto11400663& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400663::SharedCtor() {
  _cached_size_ = 0;
  times_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400663::~Proto11400663() {
  SharedDtor();
}

void Proto11400663::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400663::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400663::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400663_descriptor_;
}

const Proto11400663& Proto11400663::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto11400663* Proto11400663::default_instance_ = NULL;

Proto11400663* Proto11400663::New() const {
  return new Proto11400663;
}

void Proto11400663::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    times_ = 0;
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400663::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 times = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &times_)));
          set_has_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }
      
      // optional int32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400663::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 times = 1;
  if (has_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->times(), output);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400663::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 times = 1;
  if (has_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->times(), target);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400663::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 times = 1;
    if (has_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->times());
    }
    
    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400663::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400663* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400663*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400663::MergeFrom(const Proto11400663& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_times()) {
      set_times(from.times());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400663::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400663::CopyFrom(const Proto11400663& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400663::IsInitialized() const {
  
  return true;
}

void Proto11400663::Swap(Proto11400663* other) {
  if (other != this) {
    std::swap(times_, other->times_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400663::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400663_descriptor_;
  metadata.reflection = Proto11400663_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400663::kIndexFieldNumber;
const int Proto51400663::kNatureFieldNumber;
const int Proto51400663::kStateFieldNumber;
#endif  // !_MSC_VER

Proto51400663::Proto51400663()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400663::InitAsDefaultInstance() {
}

Proto51400663::Proto51400663(const Proto51400663& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400663::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  nature_ = 0;
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400663::~Proto51400663() {
  SharedDtor();
}

void Proto51400663::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400663::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400663::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400663_descriptor_;
}

const Proto51400663& Proto51400663::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto51400663* Proto51400663::default_instance_ = NULL;

Proto51400663* Proto51400663::New() const {
  return new Proto51400663;
}

void Proto51400663::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    nature_ = 0;
    state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400663::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nature;
        break;
      }
      
      // optional int32 nature = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nature:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nature_)));
          set_has_nature();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_state;
        break;
      }
      
      // optional int32 state = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400663::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional int32 nature = 2;
  if (has_nature()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nature(), output);
  }
  
  // optional int32 state = 3;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400663::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional int32 nature = 2;
  if (has_nature()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nature(), target);
  }
  
  // optional int32 state = 3;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400663::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 nature = 2;
    if (has_nature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nature());
    }
    
    // optional int32 state = 3;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400663::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400663* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400663*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400663::MergeFrom(const Proto51400663& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_nature()) {
      set_nature(from.nature());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400663::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400663::CopyFrom(const Proto51400663& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400663::IsInitialized() const {
  
  return true;
}

void Proto51400663::Swap(Proto51400663* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(nature_, other->nature_);
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400663::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400663_descriptor_;
  metadata.reflection = Proto51400663_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100268::kRewardGemInfoFieldNumber;
const int Proto50100268::kIsActOpenFieldNumber;
const int Proto50100268::kDayFieldNumber;
const int Proto50100268::kRemainTimeFieldNumber;
#endif  // !_MSC_VER

Proto50100268::Proto50100268()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100268::InitAsDefaultInstance() {
}

Proto50100268::Proto50100268(const Proto50100268& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100268::SharedCtor() {
  _cached_size_ = 0;
  is_act_open_ = 0;
  day_ = 0;
  remain_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100268::~Proto50100268() {
  SharedDtor();
}

void Proto50100268::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100268::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100268::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100268_descriptor_;
}

const Proto50100268& Proto50100268::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50100268* Proto50100268::default_instance_ = NULL;

Proto50100268* Proto50100268::New() const {
  return new Proto50100268;
}

void Proto50100268::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    is_act_open_ = 0;
    day_ = 0;
    remain_time_ = 0;
  }
  reward_gem_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100268::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoGemInfo reward_gem_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_reward_gem_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_gem_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_reward_gem_info;
        if (input->ExpectTag(16)) goto parse_is_act_open;
        break;
      }
      
      // optional int32 is_act_open = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_act_open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_act_open_)));
          set_has_is_act_open();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_day;
        break;
      }
      
      // optional int32 day = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_day:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_)));
          set_has_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_remain_time;
        break;
      }
      
      // optional int32 remain_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_remain_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &remain_time_)));
          set_has_remain_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100268::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoGemInfo reward_gem_info = 1;
  for (int i = 0; i < this->reward_gem_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->reward_gem_info(i), output);
  }
  
  // optional int32 is_act_open = 2;
  if (has_is_act_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_act_open(), output);
  }
  
  // optional int32 day = 3;
  if (has_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->day(), output);
  }
  
  // optional int32 remain_time = 4;
  if (has_remain_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->remain_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100268::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoGemInfo reward_gem_info = 1;
  for (int i = 0; i < this->reward_gem_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->reward_gem_info(i), target);
  }
  
  // optional int32 is_act_open = 2;
  if (has_is_act_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_act_open(), target);
  }
  
  // optional int32 day = 3;
  if (has_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->day(), target);
  }
  
  // optional int32 remain_time = 4;
  if (has_remain_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->remain_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100268::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 is_act_open = 2;
    if (has_is_act_open()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_act_open());
    }
    
    // optional int32 day = 3;
    if (has_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->day());
    }
    
    // optional int32 remain_time = 4;
    if (has_remain_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->remain_time());
    }
    
  }
  // repeated .ProtoGemInfo reward_gem_info = 1;
  total_size += 1 * this->reward_gem_info_size();
  for (int i = 0; i < this->reward_gem_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_gem_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100268::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100268* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100268*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100268::MergeFrom(const Proto50100268& from) {
  GOOGLE_CHECK_NE(&from, this);
  reward_gem_info_.MergeFrom(from.reward_gem_info_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_is_act_open()) {
      set_is_act_open(from.is_act_open());
    }
    if (from.has_day()) {
      set_day(from.day());
    }
    if (from.has_remain_time()) {
      set_remain_time(from.remain_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100268::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100268::CopyFrom(const Proto50100268& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100268::IsInitialized() const {
  
  return true;
}

void Proto50100268::Swap(Proto50100268* other) {
  if (other != this) {
    reward_gem_info_.Swap(&other->reward_gem_info_);
    std::swap(is_act_open_, other->is_act_open_);
    std::swap(day_, other->day_);
    std::swap(remain_time_, other->remain_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100268::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100268_descriptor_;
  metadata.reflection = Proto50100268_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100269::kSynthesisGemIdFieldNumber;
#endif  // !_MSC_VER

Proto10100269::Proto10100269()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100269::InitAsDefaultInstance() {
}

Proto10100269::Proto10100269(const Proto10100269& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100269::SharedCtor() {
  _cached_size_ = 0;
  synthesis_gem_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100269::~Proto10100269() {
  SharedDtor();
}

void Proto10100269::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100269::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100269::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100269_descriptor_;
}

const Proto10100269& Proto10100269::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto10100269* Proto10100269::default_instance_ = NULL;

Proto10100269* Proto10100269::New() const {
  return new Proto10100269;
}

void Proto10100269::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    synthesis_gem_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100269::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 synthesis_gem_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &synthesis_gem_id_)));
          set_has_synthesis_gem_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100269::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 synthesis_gem_id = 1;
  if (has_synthesis_gem_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->synthesis_gem_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100269::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 synthesis_gem_id = 1;
  if (has_synthesis_gem_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->synthesis_gem_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100269::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 synthesis_gem_id = 1;
    if (has_synthesis_gem_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->synthesis_gem_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100269::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100269* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100269*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100269::MergeFrom(const Proto10100269& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_synthesis_gem_id()) {
      set_synthesis_gem_id(from.synthesis_gem_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100269::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100269::CopyFrom(const Proto10100269& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100269::IsInitialized() const {
  
  return true;
}

void Proto10100269::Swap(Proto10100269* other) {
  if (other != this) {
    std::swap(synthesis_gem_id_, other->synthesis_gem_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100269::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100269_descriptor_;
  metadata.reflection = Proto10100269_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100269::kRewardGemInfoFieldNumber;
#endif  // !_MSC_VER

Proto50100269::Proto50100269()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100269::InitAsDefaultInstance() {
}

Proto50100269::Proto50100269(const Proto50100269& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100269::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100269::~Proto50100269() {
  SharedDtor();
}

void Proto50100269::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100269::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100269::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100269_descriptor_;
}

const Proto50100269& Proto50100269::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50100269* Proto50100269::default_instance_ = NULL;

Proto50100269* Proto50100269::New() const {
  return new Proto50100269;
}

void Proto50100269::Clear() {
  reward_gem_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100269::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoGemInfo reward_gem_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_reward_gem_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_gem_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_reward_gem_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100269::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoGemInfo reward_gem_info = 1;
  for (int i = 0; i < this->reward_gem_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->reward_gem_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100269::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoGemInfo reward_gem_info = 1;
  for (int i = 0; i < this->reward_gem_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->reward_gem_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100269::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoGemInfo reward_gem_info = 1;
  total_size += 1 * this->reward_gem_info_size();
  for (int i = 0; i < this->reward_gem_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_gem_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100269::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100269* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100269*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100269::MergeFrom(const Proto50100269& from) {
  GOOGLE_CHECK_NE(&from, this);
  reward_gem_info_.MergeFrom(from.reward_gem_info_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100269::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100269::CopyFrom(const Proto50100269& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100269::IsInitialized() const {
  
  return true;
}

void Proto50100269::Swap(Proto50100269* other) {
  if (other != this) {
    reward_gem_info_.Swap(&other->reward_gem_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100269::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100269_descriptor_;
  metadata.reflection = Proto50100269_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100270::kRewardGemInfoFieldNumber;
#endif  // !_MSC_VER

Proto50100270::Proto50100270()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100270::InitAsDefaultInstance() {
}

Proto50100270::Proto50100270(const Proto50100270& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100270::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100270::~Proto50100270() {
  SharedDtor();
}

void Proto50100270::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100270::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100270::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100270_descriptor_;
}

const Proto50100270& Proto50100270::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50100270* Proto50100270::default_instance_ = NULL;

Proto50100270* Proto50100270::New() const {
  return new Proto50100270;
}

void Proto50100270::Clear() {
  reward_gem_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100270::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoGemInfo reward_gem_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_reward_gem_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_gem_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_reward_gem_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100270::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoGemInfo reward_gem_info = 1;
  for (int i = 0; i < this->reward_gem_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->reward_gem_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100270::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoGemInfo reward_gem_info = 1;
  for (int i = 0; i < this->reward_gem_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->reward_gem_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100270::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoGemInfo reward_gem_info = 1;
  total_size += 1 * this->reward_gem_info_size();
  for (int i = 0; i < this->reward_gem_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_gem_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100270::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100270* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100270*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100270::MergeFrom(const Proto50100270& from) {
  GOOGLE_CHECK_NE(&from, this);
  reward_gem_info_.MergeFrom(from.reward_gem_info_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100270::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100270::CopyFrom(const Proto50100270& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100270::IsInitialized() const {
  
  return true;
}

void Proto50100270::Swap(Proto50100270* other) {
  if (other != this) {
    reward_gem_info_.Swap(&other->reward_gem_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100270::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100270_descriptor_;
  metadata.reflection = Proto50100270_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11408004::kItemIdFieldNumber;
const int Proto11408004::kItemAmountFieldNumber;
#endif  // !_MSC_VER

Proto11408004::Proto11408004()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11408004::InitAsDefaultInstance() {
}

Proto11408004::Proto11408004(const Proto11408004& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11408004::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  item_amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11408004::~Proto11408004() {
  SharedDtor();
}

void Proto11408004::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11408004::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11408004::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11408004_descriptor_;
}

const Proto11408004& Proto11408004::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto11408004* Proto11408004::default_instance_ = NULL;

Proto11408004* Proto11408004::New() const {
  return new Proto11408004;
}

void Proto11408004::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    item_amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11408004::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_amount;
        break;
      }
      
      // optional int32 item_amount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_amount_)));
          set_has_item_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11408004::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 item_amount = 2;
  if (has_item_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11408004::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 item_amount = 2;
  if (has_item_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11408004::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_amount = 2;
    if (has_item_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11408004::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11408004* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11408004*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11408004::MergeFrom(const Proto11408004& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_amount()) {
      set_item_amount(from.item_amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11408004::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11408004::CopyFrom(const Proto11408004& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11408004::IsInitialized() const {
  
  return true;
}

void Proto11408004::Swap(Proto11408004* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(item_amount_, other->item_amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11408004::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11408004_descriptor_;
  metadata.reflection = Proto11408004_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51408004::kItemIdFieldNumber;
const int Proto51408004::kLeftTimeFieldNumber;
const int Proto51408004::kItemAmountFieldNumber;
#endif  // !_MSC_VER

Proto51408004::Proto51408004()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51408004::InitAsDefaultInstance() {
}

Proto51408004::Proto51408004(const Proto51408004& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51408004::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  left_time_ = 0;
  item_amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51408004::~Proto51408004() {
  SharedDtor();
}

void Proto51408004::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51408004::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51408004::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51408004_descriptor_;
}

const Proto51408004& Proto51408004::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto51408004* Proto51408004::default_instance_ = NULL;

Proto51408004* Proto51408004::New() const {
  return new Proto51408004;
}

void Proto51408004::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    left_time_ = 0;
    item_amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51408004::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_amount;
        break;
      }
      
      // optional int32 item_amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_amount_)));
          set_has_item_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51408004::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 left_time = 2;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_time(), output);
  }
  
  // optional int32 item_amount = 3;
  if (has_item_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51408004::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 left_time = 2;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_time(), target);
  }
  
  // optional int32 item_amount = 3;
  if (has_item_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51408004::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 left_time = 2;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 item_amount = 3;
    if (has_item_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51408004::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51408004* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51408004*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51408004::MergeFrom(const Proto51408004& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_item_amount()) {
      set_item_amount(from.item_amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51408004::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51408004::CopyFrom(const Proto51408004& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51408004::IsInitialized() const {
  
  return true;
}

void Proto51408004::Swap(Proto51408004* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(left_time_, other->left_time_);
    std::swap(item_amount_, other->item_amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51408004::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51408004_descriptor_;
  metadata.reflection = Proto51408004_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51408005::kLeftTimeFieldNumber;
#endif  // !_MSC_VER

Proto51408005::Proto51408005()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51408005::InitAsDefaultInstance() {
}

Proto51408005::Proto51408005(const Proto51408005& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51408005::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51408005::~Proto51408005() {
  SharedDtor();
}

void Proto51408005::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51408005::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51408005::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51408005_descriptor_;
}

const Proto51408005& Proto51408005::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto51408005* Proto51408005::default_instance_ = NULL;

Proto51408005* Proto51408005::New() const {
  return new Proto51408005;
}

void Proto51408005::Clear() {
  left_time_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51408005::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 left_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_left_time())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_left_time())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_left_time;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51408005::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 left_time = 1;
  for (int i = 0; i < this->left_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->left_time(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51408005::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 left_time = 1;
  for (int i = 0; i < this->left_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->left_time(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51408005::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 left_time = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->left_time_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->left_time(i));
    }
    total_size += 1 * this->left_time_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51408005::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51408005* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51408005*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51408005::MergeFrom(const Proto51408005& from) {
  GOOGLE_CHECK_NE(&from, this);
  left_time_.MergeFrom(from.left_time_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51408005::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51408005::CopyFrom(const Proto51408005& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51408005::IsInitialized() const {
  
  return true;
}

void Proto51408005::Swap(Proto51408005* other) {
  if (other != this) {
    left_time_.Swap(&other->left_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51408005::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51408005_descriptor_;
  metadata.reflection = Proto51408005_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80401101::kCurFloorFieldNumber;
const int Proto80401101::kNeedKillAmountFieldNumber;
const int Proto80401101::kKillAmountFieldNumber;
const int Proto80401101::kScoreFieldNumber;
const int Proto80401101::kAwardScoreFieldNumber;
const int Proto80401101::kFirstTopIdFieldNumber;
const int Proto80401101::kFirstTopNameFieldNumber;
const int Proto80401101::kLeftSecFieldNumber;
const int Proto80401101::kMaxFloorFieldNumber;
const int Proto80401101::kTreasureOwnerIdFieldNumber;
const int Proto80401101::kTreasureOwnerNameFieldNumber;
const int Proto80401101::kTreasureLeftSecFieldNumber;
#endif  // !_MSC_VER

Proto80401101::Proto80401101()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80401101::InitAsDefaultInstance() {
}

Proto80401101::Proto80401101(const Proto80401101& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80401101::SharedCtor() {
  _cached_size_ = 0;
  cur_floor_ = 0;
  need_kill_amount_ = 0;
  kill_amount_ = 0;
  score_ = 0;
  award_score_ = 0;
  first_top_id_ = GOOGLE_LONGLONG(0);
  first_top_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  left_sec_ = 0;
  max_floor_ = 0;
  treasure_owner_id_ = 0;
  treasure_owner_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  treasure_left_sec_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80401101::~Proto80401101() {
  SharedDtor();
}

void Proto80401101::SharedDtor() {
  if (first_top_name_ != &::google::protobuf::internal::kEmptyString) {
    delete first_top_name_;
  }
  if (treasure_owner_name_ != &::google::protobuf::internal::kEmptyString) {
    delete treasure_owner_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80401101::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80401101::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80401101_descriptor_;
}

const Proto80401101& Proto80401101::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto80401101* Proto80401101::default_instance_ = NULL;

Proto80401101* Proto80401101::New() const {
  return new Proto80401101;
}

void Proto80401101::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_floor_ = 0;
    need_kill_amount_ = 0;
    kill_amount_ = 0;
    score_ = 0;
    award_score_ = 0;
    first_top_id_ = GOOGLE_LONGLONG(0);
    if (has_first_top_name()) {
      if (first_top_name_ != &::google::protobuf::internal::kEmptyString) {
        first_top_name_->clear();
      }
    }
    left_sec_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    max_floor_ = 0;
    treasure_owner_id_ = 0;
    if (has_treasure_owner_name()) {
      if (treasure_owner_name_ != &::google::protobuf::internal::kEmptyString) {
        treasure_owner_name_->clear();
      }
    }
    treasure_left_sec_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80401101::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_floor = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_floor_)));
          set_has_cur_floor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_need_kill_amount;
        break;
      }
      
      // optional int32 need_kill_amount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_need_kill_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_kill_amount_)));
          set_has_need_kill_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_kill_amount;
        break;
      }
      
      // optional int32 kill_amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_kill_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kill_amount_)));
          set_has_kill_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_score;
        break;
      }
      
      // optional int32 score = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_award_score;
        break;
      }
      
      // optional int32 award_score = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_award_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &award_score_)));
          set_has_award_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_first_top_id;
        break;
      }
      
      // optional int64 first_top_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_top_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &first_top_id_)));
          set_has_first_top_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_first_top_name;
        break;
      }
      
      // optional string first_top_name = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_first_top_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_first_top_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->first_top_name().data(), this->first_top_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_left_sec;
        break;
      }
      
      // optional int32 left_sec = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_sec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_sec_)));
          set_has_left_sec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_max_floor;
        break;
      }
      
      // optional int32 max_floor = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_floor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_floor_)));
          set_has_max_floor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_treasure_owner_id;
        break;
      }
      
      // optional int32 treasure_owner_id = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_treasure_owner_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &treasure_owner_id_)));
          set_has_treasure_owner_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_treasure_owner_name;
        break;
      }
      
      // optional string treasure_owner_name = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_treasure_owner_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_treasure_owner_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->treasure_owner_name().data(), this->treasure_owner_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_treasure_left_sec;
        break;
      }
      
      // optional int32 treasure_left_sec = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_treasure_left_sec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &treasure_left_sec_)));
          set_has_treasure_left_sec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80401101::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_floor = 1;
  if (has_cur_floor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_floor(), output);
  }
  
  // optional int32 need_kill_amount = 2;
  if (has_need_kill_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->need_kill_amount(), output);
  }
  
  // optional int32 kill_amount = 3;
  if (has_kill_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->kill_amount(), output);
  }
  
  // optional int32 score = 4;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->score(), output);
  }
  
  // optional int32 award_score = 5;
  if (has_award_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->award_score(), output);
  }
  
  // optional int64 first_top_id = 6;
  if (has_first_top_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->first_top_id(), output);
  }
  
  // optional string first_top_name = 7;
  if (has_first_top_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->first_top_name().data(), this->first_top_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->first_top_name(), output);
  }
  
  // optional int32 left_sec = 8;
  if (has_left_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->left_sec(), output);
  }
  
  // optional int32 max_floor = 9;
  if (has_max_floor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->max_floor(), output);
  }
  
  // optional int32 treasure_owner_id = 10;
  if (has_treasure_owner_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->treasure_owner_id(), output);
  }
  
  // optional string treasure_owner_name = 11;
  if (has_treasure_owner_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->treasure_owner_name().data(), this->treasure_owner_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->treasure_owner_name(), output);
  }
  
  // optional int32 treasure_left_sec = 12;
  if (has_treasure_left_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->treasure_left_sec(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80401101::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_floor = 1;
  if (has_cur_floor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_floor(), target);
  }
  
  // optional int32 need_kill_amount = 2;
  if (has_need_kill_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->need_kill_amount(), target);
  }
  
  // optional int32 kill_amount = 3;
  if (has_kill_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->kill_amount(), target);
  }
  
  // optional int32 score = 4;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->score(), target);
  }
  
  // optional int32 award_score = 5;
  if (has_award_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->award_score(), target);
  }
  
  // optional int64 first_top_id = 6;
  if (has_first_top_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->first_top_id(), target);
  }
  
  // optional string first_top_name = 7;
  if (has_first_top_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->first_top_name().data(), this->first_top_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->first_top_name(), target);
  }
  
  // optional int32 left_sec = 8;
  if (has_left_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->left_sec(), target);
  }
  
  // optional int32 max_floor = 9;
  if (has_max_floor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->max_floor(), target);
  }
  
  // optional int32 treasure_owner_id = 10;
  if (has_treasure_owner_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->treasure_owner_id(), target);
  }
  
  // optional string treasure_owner_name = 11;
  if (has_treasure_owner_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->treasure_owner_name().data(), this->treasure_owner_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->treasure_owner_name(), target);
  }
  
  // optional int32 treasure_left_sec = 12;
  if (has_treasure_left_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->treasure_left_sec(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80401101::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_floor = 1;
    if (has_cur_floor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_floor());
    }
    
    // optional int32 need_kill_amount = 2;
    if (has_need_kill_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->need_kill_amount());
    }
    
    // optional int32 kill_amount = 3;
    if (has_kill_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->kill_amount());
    }
    
    // optional int32 score = 4;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }
    
    // optional int32 award_score = 5;
    if (has_award_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->award_score());
    }
    
    // optional int64 first_top_id = 6;
    if (has_first_top_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->first_top_id());
    }
    
    // optional string first_top_name = 7;
    if (has_first_top_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->first_top_name());
    }
    
    // optional int32 left_sec = 8;
    if (has_left_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_sec());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 max_floor = 9;
    if (has_max_floor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_floor());
    }
    
    // optional int32 treasure_owner_id = 10;
    if (has_treasure_owner_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->treasure_owner_id());
    }
    
    // optional string treasure_owner_name = 11;
    if (has_treasure_owner_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->treasure_owner_name());
    }
    
    // optional int32 treasure_left_sec = 12;
    if (has_treasure_left_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->treasure_left_sec());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80401101::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80401101* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80401101*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80401101::MergeFrom(const Proto80401101& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_floor()) {
      set_cur_floor(from.cur_floor());
    }
    if (from.has_need_kill_amount()) {
      set_need_kill_amount(from.need_kill_amount());
    }
    if (from.has_kill_amount()) {
      set_kill_amount(from.kill_amount());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_award_score()) {
      set_award_score(from.award_score());
    }
    if (from.has_first_top_id()) {
      set_first_top_id(from.first_top_id());
    }
    if (from.has_first_top_name()) {
      set_first_top_name(from.first_top_name());
    }
    if (from.has_left_sec()) {
      set_left_sec(from.left_sec());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_max_floor()) {
      set_max_floor(from.max_floor());
    }
    if (from.has_treasure_owner_id()) {
      set_treasure_owner_id(from.treasure_owner_id());
    }
    if (from.has_treasure_owner_name()) {
      set_treasure_owner_name(from.treasure_owner_name());
    }
    if (from.has_treasure_left_sec()) {
      set_treasure_left_sec(from.treasure_left_sec());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80401101::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80401101::CopyFrom(const Proto80401101& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80401101::IsInitialized() const {
  
  return true;
}

void Proto80401101::Swap(Proto80401101* other) {
  if (other != this) {
    std::swap(cur_floor_, other->cur_floor_);
    std::swap(need_kill_amount_, other->need_kill_amount_);
    std::swap(kill_amount_, other->kill_amount_);
    std::swap(score_, other->score_);
    std::swap(award_score_, other->award_score_);
    std::swap(first_top_id_, other->first_top_id_);
    std::swap(first_top_name_, other->first_top_name_);
    std::swap(left_sec_, other->left_sec_);
    std::swap(max_floor_, other->max_floor_);
    std::swap(treasure_owner_id_, other->treasure_owner_id_);
    std::swap(treasure_owner_name_, other->treasure_owner_name_);
    std::swap(treasure_left_sec_, other->treasure_left_sec_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80401101::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80401101_descriptor_;
  metadata.reflection = Proto80401101_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80401102::kCurFloorFieldNumber;
#endif  // !_MSC_VER

Proto80401102::Proto80401102()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80401102::InitAsDefaultInstance() {
}

Proto80401102::Proto80401102(const Proto80401102& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80401102::SharedCtor() {
  _cached_size_ = 0;
  cur_floor_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80401102::~Proto80401102() {
  SharedDtor();
}

void Proto80401102::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80401102::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80401102::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80401102_descriptor_;
}

const Proto80401102& Proto80401102::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto80401102* Proto80401102::default_instance_ = NULL;

Proto80401102* Proto80401102::New() const {
  return new Proto80401102;
}

void Proto80401102::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_floor_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80401102::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_floor = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_floor_)));
          set_has_cur_floor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80401102::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_floor = 1;
  if (has_cur_floor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_floor(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80401102::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_floor = 1;
  if (has_cur_floor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_floor(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80401102::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_floor = 1;
    if (has_cur_floor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_floor());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80401102::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80401102* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80401102*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80401102::MergeFrom(const Proto80401102& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_floor()) {
      set_cur_floor(from.cur_floor());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80401102::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80401102::CopyFrom(const Proto80401102& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80401102::IsInitialized() const {
  
  return true;
}

void Proto80401102::Swap(Proto80401102* other) {
  if (other != this) {
    std::swap(cur_floor_, other->cur_floor_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80401102::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80401102_descriptor_;
  metadata.reflection = Proto80401102_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80401103::kCurFloorFieldNumber;
#endif  // !_MSC_VER

Proto80401103::Proto80401103()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80401103::InitAsDefaultInstance() {
}

Proto80401103::Proto80401103(const Proto80401103& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80401103::SharedCtor() {
  _cached_size_ = 0;
  cur_floor_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80401103::~Proto80401103() {
  SharedDtor();
}

void Proto80401103::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80401103::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80401103::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80401103_descriptor_;
}

const Proto80401103& Proto80401103::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto80401103* Proto80401103::default_instance_ = NULL;

Proto80401103* Proto80401103::New() const {
  return new Proto80401103;
}

void Proto80401103::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_floor_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80401103::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_floor = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_floor_)));
          set_has_cur_floor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80401103::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_floor = 1;
  if (has_cur_floor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_floor(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80401103::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_floor = 1;
  if (has_cur_floor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_floor(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80401103::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_floor = 1;
    if (has_cur_floor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_floor());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80401103::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80401103* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80401103*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80401103::MergeFrom(const Proto80401103& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_floor()) {
      set_cur_floor(from.cur_floor());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80401103::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80401103::CopyFrom(const Proto80401103& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80401103::IsInitialized() const {
  
  return true;
}

void Proto80401103::Swap(Proto80401103* other) {
  if (other != this) {
    std::swap(cur_floor_, other->cur_floor_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80401103::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80401103_descriptor_;
  metadata.reflection = Proto80401103_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80401104::kRankListFieldNumber;
const int Proto80401104::kSelfRankFieldNumber;
const int Proto80401104::kSelfKillFieldNumber;
const int Proto80401104::kSelfScoreFieldNumber;
#endif  // !_MSC_VER

Proto80401104::Proto80401104()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80401104::InitAsDefaultInstance() {
}

Proto80401104::Proto80401104(const Proto80401104& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80401104::SharedCtor() {
  _cached_size_ = 0;
  self_rank_ = 0;
  self_kill_ = 0;
  self_score_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80401104::~Proto80401104() {
  SharedDtor();
}

void Proto80401104::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80401104::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80401104::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80401104_descriptor_;
}

const Proto80401104& Proto80401104::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto80401104* Proto80401104::default_instance_ = NULL;

Proto80401104* Proto80401104::New() const {
  return new Proto80401104;
}

void Proto80401104::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    self_rank_ = 0;
    self_kill_ = 0;
    self_score_ = 0;
  }
  rank_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80401104::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoTrvlBattleRank rank_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rank_list;
        if (input->ExpectTag(16)) goto parse_self_rank;
        break;
      }
      
      // optional int32 self_rank = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_self_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &self_rank_)));
          set_has_self_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_self_kill;
        break;
      }
      
      // optional int32 self_kill = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_self_kill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &self_kill_)));
          set_has_self_kill();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_self_score;
        break;
      }
      
      // optional int32 self_score = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_self_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &self_score_)));
          set_has_self_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80401104::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoTrvlBattleRank rank_list = 1;
  for (int i = 0; i < this->rank_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rank_list(i), output);
  }
  
  // optional int32 self_rank = 2;
  if (has_self_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->self_rank(), output);
  }
  
  // optional int32 self_kill = 3;
  if (has_self_kill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->self_kill(), output);
  }
  
  // optional int32 self_score = 4;
  if (has_self_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->self_score(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80401104::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoTrvlBattleRank rank_list = 1;
  for (int i = 0; i < this->rank_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rank_list(i), target);
  }
  
  // optional int32 self_rank = 2;
  if (has_self_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->self_rank(), target);
  }
  
  // optional int32 self_kill = 3;
  if (has_self_kill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->self_kill(), target);
  }
  
  // optional int32 self_score = 4;
  if (has_self_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->self_score(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80401104::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 self_rank = 2;
    if (has_self_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->self_rank());
    }
    
    // optional int32 self_kill = 3;
    if (has_self_kill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->self_kill());
    }
    
    // optional int32 self_score = 4;
    if (has_self_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->self_score());
    }
    
  }
  // repeated .ProtoTrvlBattleRank rank_list = 1;
  total_size += 1 * this->rank_list_size();
  for (int i = 0; i < this->rank_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80401104::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80401104* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80401104*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80401104::MergeFrom(const Proto80401104& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_list_.MergeFrom(from.rank_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_self_rank()) {
      set_self_rank(from.self_rank());
    }
    if (from.has_self_kill()) {
      set_self_kill(from.self_kill());
    }
    if (from.has_self_score()) {
      set_self_score(from.self_score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80401104::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80401104::CopyFrom(const Proto80401104& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80401104::IsInitialized() const {
  
  return true;
}

void Proto80401104::Swap(Proto80401104* other) {
  if (other != this) {
    rank_list_.Swap(&other->rank_list_);
    std::swap(self_rank_, other->self_rank_);
    std::swap(self_kill_, other->self_kill_);
    std::swap(self_score_, other->self_score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80401104::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80401104_descriptor_;
  metadata.reflection = Proto80401104_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10401030::kBossSceneIdFieldNumber;
#endif  // !_MSC_VER

Proto10401030::Proto10401030()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10401030::InitAsDefaultInstance() {
}

Proto10401030::Proto10401030(const Proto10401030& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10401030::SharedCtor() {
  _cached_size_ = 0;
  boss_scene_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10401030::~Proto10401030() {
  SharedDtor();
}

void Proto10401030::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10401030::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10401030::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10401030_descriptor_;
}

const Proto10401030& Proto10401030::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto10401030* Proto10401030::default_instance_ = NULL;

Proto10401030* Proto10401030::New() const {
  return new Proto10401030;
}

void Proto10401030::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    boss_scene_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10401030::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 boss_scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boss_scene_id_)));
          set_has_boss_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10401030::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 boss_scene_id = 1;
  if (has_boss_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->boss_scene_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10401030::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 boss_scene_id = 1;
  if (has_boss_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->boss_scene_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10401030::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 boss_scene_id = 1;
    if (has_boss_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boss_scene_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10401030::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10401030* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10401030*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10401030::MergeFrom(const Proto10401030& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_boss_scene_id()) {
      set_boss_scene_id(from.boss_scene_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10401030::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10401030::CopyFrom(const Proto10401030& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10401030::IsInitialized() const {
  
  return true;
}

void Proto10401030::Swap(Proto10401030* other) {
  if (other != this) {
    std::swap(boss_scene_id_, other->boss_scene_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10401030::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10401030_descriptor_;
  metadata.reflection = Proto10401030_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10401106::kRefreshFieldNumber;
#endif  // !_MSC_VER

Proto10401106::Proto10401106()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10401106::InitAsDefaultInstance() {
}

Proto10401106::Proto10401106(const Proto10401106& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10401106::SharedCtor() {
  _cached_size_ = 0;
  refresh_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10401106::~Proto10401106() {
  SharedDtor();
}

void Proto10401106::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10401106::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10401106::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10401106_descriptor_;
}

const Proto10401106& Proto10401106::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto10401106* Proto10401106::default_instance_ = NULL;

Proto10401106* Proto10401106::New() const {
  return new Proto10401106;
}

void Proto10401106::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    refresh_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10401106::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 refresh = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refresh_)));
          set_has_refresh();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10401106::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 refresh = 1;
  if (has_refresh()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->refresh(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10401106::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 refresh = 1;
  if (has_refresh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->refresh(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10401106::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 refresh = 1;
    if (has_refresh()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refresh());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10401106::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10401106* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10401106*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10401106::MergeFrom(const Proto10401106& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_refresh()) {
      set_refresh(from.refresh());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10401106::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10401106::CopyFrom(const Proto10401106& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10401106::IsInitialized() const {
  
  return true;
}

void Proto10401106::Swap(Proto10401106* other) {
  if (other != this) {
    std::swap(refresh_, other->refresh_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10401106::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10401106_descriptor_;
  metadata.reflection = Proto10401106_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401106::kRankListFieldNumber;
const int Proto50401106::kSelfRankFieldNumber;
#endif  // !_MSC_VER

Proto50401106::Proto50401106()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401106::InitAsDefaultInstance() {
  self_rank_ = const_cast< ::ProtoTrvlBattleRank*>(&::ProtoTrvlBattleRank::default_instance());
}

Proto50401106::Proto50401106(const Proto50401106& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401106::SharedCtor() {
  _cached_size_ = 0;
  self_rank_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401106::~Proto50401106() {
  SharedDtor();
}

void Proto50401106::SharedDtor() {
  if (this != default_instance_) {
    delete self_rank_;
  }
}

void Proto50401106::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401106::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401106_descriptor_;
}

const Proto50401106& Proto50401106::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50401106* Proto50401106::default_instance_ = NULL;

Proto50401106* Proto50401106::New() const {
  return new Proto50401106;
}

void Proto50401106::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_self_rank()) {
      if (self_rank_ != NULL) self_rank_->::ProtoTrvlBattleRank::Clear();
    }
  }
  rank_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401106::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoTrvlBattleRank rank_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rank_list;
        if (input->ExpectTag(18)) goto parse_self_rank;
        break;
      }
      
      // optional .ProtoTrvlBattleRank self_rank = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_self_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401106::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoTrvlBattleRank rank_list = 1;
  for (int i = 0; i < this->rank_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rank_list(i), output);
  }
  
  // optional .ProtoTrvlBattleRank self_rank = 2;
  if (has_self_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->self_rank(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401106::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoTrvlBattleRank rank_list = 1;
  for (int i = 0; i < this->rank_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rank_list(i), target);
  }
  
  // optional .ProtoTrvlBattleRank self_rank = 2;
  if (has_self_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->self_rank(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401106::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .ProtoTrvlBattleRank self_rank = 2;
    if (has_self_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->self_rank());
    }
    
  }
  // repeated .ProtoTrvlBattleRank rank_list = 1;
  total_size += 1 * this->rank_list_size();
  for (int i = 0; i < this->rank_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401106::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401106* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401106*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401106::MergeFrom(const Proto50401106& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_list_.MergeFrom(from.rank_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_self_rank()) {
      mutable_self_rank()->::ProtoTrvlBattleRank::MergeFrom(from.self_rank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401106::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401106::CopyFrom(const Proto50401106& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401106::IsInitialized() const {
  
  return true;
}

void Proto50401106::Swap(Proto50401106* other) {
  if (other != this) {
    rank_list_.Swap(&other->rank_list_);
    std::swap(self_rank_, other->self_rank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401106::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401106_descriptor_;
  metadata.reflection = Proto50401106_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10401107::kRefreshFieldNumber;
#endif  // !_MSC_VER

Proto10401107::Proto10401107()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10401107::InitAsDefaultInstance() {
}

Proto10401107::Proto10401107(const Proto10401107& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10401107::SharedCtor() {
  _cached_size_ = 0;
  refresh_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10401107::~Proto10401107() {
  SharedDtor();
}

void Proto10401107::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10401107::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10401107::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10401107_descriptor_;
}

const Proto10401107& Proto10401107::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto10401107* Proto10401107::default_instance_ = NULL;

Proto10401107* Proto10401107::New() const {
  return new Proto10401107;
}

void Proto10401107::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    refresh_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10401107::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 refresh = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refresh_)));
          set_has_refresh();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10401107::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 refresh = 1;
  if (has_refresh()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->refresh(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10401107::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 refresh = 1;
  if (has_refresh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->refresh(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10401107::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 refresh = 1;
    if (has_refresh()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refresh());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10401107::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10401107* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10401107*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10401107::MergeFrom(const Proto10401107& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_refresh()) {
      set_refresh(from.refresh());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10401107::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10401107::CopyFrom(const Proto10401107& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10401107::IsInitialized() const {
  
  return true;
}

void Proto10401107::Swap(Proto10401107* other) {
  if (other != this) {
    std::swap(refresh_, other->refresh_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10401107::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10401107_descriptor_;
  metadata.reflection = Proto10401107_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401107::kRecordListFieldNumber;
#endif  // !_MSC_VER

Proto50401107::Proto50401107()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401107::InitAsDefaultInstance() {
}

Proto50401107::Proto50401107(const Proto50401107& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401107::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401107::~Proto50401107() {
  SharedDtor();
}

void Proto50401107::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50401107::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401107::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401107_descriptor_;
}

const Proto50401107& Proto50401107::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto50401107* Proto50401107::default_instance_ = NULL;

Proto50401107* Proto50401107::New() const {
  return new Proto50401107;
}

void Proto50401107::Clear() {
  record_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401107::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoTrvlBattleRank record_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_record_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_record_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401107::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoTrvlBattleRank record_list = 1;
  for (int i = 0; i < this->record_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->record_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401107::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoTrvlBattleRank record_list = 1;
  for (int i = 0; i < this->record_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->record_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401107::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoTrvlBattleRank record_list = 1;
  total_size += 1 * this->record_list_size();
  for (int i = 0; i < this->record_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401107::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401107* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401107*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401107::MergeFrom(const Proto50401107& from) {
  GOOGLE_CHECK_NE(&from, this);
  record_list_.MergeFrom(from.record_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401107::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401107::CopyFrom(const Proto50401107& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401107::IsInitialized() const {
  
  return true;
}

void Proto50401107::Swap(Proto50401107* other) {
  if (other != this) {
    record_list_.Swap(&other->record_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401107::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401107_descriptor_;
  metadata.reflection = Proto50401107_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400802::kTransferIdFieldNumber;
#endif  // !_MSC_VER

Proto81400802::Proto81400802()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400802::InitAsDefaultInstance() {
}

Proto81400802::Proto81400802(const Proto81400802& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400802::SharedCtor() {
  _cached_size_ = 0;
  transfer_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400802::~Proto81400802() {
  SharedDtor();
}

void Proto81400802::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400802::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400802::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400802_descriptor_;
}

const Proto81400802& Proto81400802::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto81400802* Proto81400802::default_instance_ = NULL;

Proto81400802* Proto81400802::New() const {
  return new Proto81400802;
}

void Proto81400802::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    transfer_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400802::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 transfer_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transfer_id_)));
          set_has_transfer_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400802::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 transfer_id = 1;
  if (has_transfer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->transfer_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400802::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 transfer_id = 1;
  if (has_transfer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->transfer_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400802::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 transfer_id = 1;
    if (has_transfer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transfer_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400802::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400802* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400802*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400802::MergeFrom(const Proto81400802& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_transfer_id()) {
      set_transfer_id(from.transfer_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400802::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400802::CopyFrom(const Proto81400802& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400802::IsInitialized() const {
  
  return true;
}

void Proto81400802::Swap(Proto81400802* other) {
  if (other != this) {
    std::swap(transfer_id_, other->transfer_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400802::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400802_descriptor_;
  metadata.reflection = Proto81400802_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400626::kEquipIndexFieldNumber;
const int Proto11400626::kJewalIdFieldNumber;
#endif  // !_MSC_VER

Proto11400626::Proto11400626()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400626::InitAsDefaultInstance() {
}

Proto11400626::Proto11400626(const Proto11400626& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400626::SharedCtor() {
  _cached_size_ = 0;
  equip_index_ = 0;
  jewal_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400626::~Proto11400626() {
  SharedDtor();
}

void Proto11400626::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400626::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400626::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400626_descriptor_;
}

const Proto11400626& Proto11400626::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient022_2eproto();  return *default_instance_;
}

Proto11400626* Proto11400626::default_instance_ = NULL;

Proto11400626* Proto11400626::New() const {
  return new Proto11400626;
}

void Proto11400626::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    equip_index_ = 0;
    jewal_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400626::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 equip_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equip_index_)));
          set_has_equip_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_jewal_id;
        break;
      }
      
      // optional int32 jewal_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jewal_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jewal_id_)));
          set_has_jewal_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400626::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 equip_index = 1;
  if (has_equip_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->equip_index(), output);
  }
  
  // optional int32 jewal_id = 2;
  if (has_jewal_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->jewal_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400626::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 equip_index = 1;
  if (has_equip_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->equip_index(), target);
  }
  
  // optional int32 jewal_id = 2;
  if (has_jewal_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->jewal_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400626::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 equip_index = 1;
    if (has_equip_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equip_index());
    }
    
    // optional int32 jewal_id = 2;
    if (has_jewal_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jewal_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400626::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400626* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400626*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400626::MergeFrom(const Proto11400626& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equip_index()) {
      set_equip_index(from.equip_index());
    }
    if (from.has_jewal_id()) {
      set_jewal_id(from.jewal_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400626::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400626::CopyFrom(const Proto11400626& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400626::IsInitialized() const {
  
  return true;
}

void Proto11400626::Swap(Proto11400626* other) {
  if (other != this) {
    std::swap(equip_index_, other->equip_index_);
    std::swap(jewal_id_, other->jewal_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400626::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400626_descriptor_;
  metadata.reflection = Proto11400626_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
