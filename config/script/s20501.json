{
    "scene_id" : 20501,
    "name" : "问鼎江湖",
    "relive" : {
        "type" : "111",
        "wait" : 3,
        "posX" : 491,
        "posY" : 2229
    },
	// 当前副本的离开场景后，回到进入副本前的场景
    "exits" : [{
        "id" : "10600",
        "posX" : 1272,
        "posY" : 3799
    }],
    "layout" : [
	{//第一层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500011,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第二层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500021,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第三层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500031,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第四层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500041,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002],
		"flag_set":["no_move"]
    },
	{//第五层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500051,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第6层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500061,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第7层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500071,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第8层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500081,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第9层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500091,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第10层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500101,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第11层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500111,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第12层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500121,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第13层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500131,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第14层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500141,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第15层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500151,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第16层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500161,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第17层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500171,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第18层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500181,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第19层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500191,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第20层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500201,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第21层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500211,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第22层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500221,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第23层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500231,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第24层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500241,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第25层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500251,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第26层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500261,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第27层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500271,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第28层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500281,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第29层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500291,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第30层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500301,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第31层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500311,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第32层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500321,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第33层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500331,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第34层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500341,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第35层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500351,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第36层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500361,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第37层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500371,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第38层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500381,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第39层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500391,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第40层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500401,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第41层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500411,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第42层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500421,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第43层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500431,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第44层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500441,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第45层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500451,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第46层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500461,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第47层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500471,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第48层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500481,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第49层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500491,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第50层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500501,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第51层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500511,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第52层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500521,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第53层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500531,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第54层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500541,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第55层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500551,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第56层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500561,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第57层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500571,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第58层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500581,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第59层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500591,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },	
	{//第60层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500601,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第61层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500611,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第62层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500621,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第63层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500631,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第64层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500641,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第65层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500651,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第66层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500661,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第67层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500671,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第68层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500681,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第69层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500691,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第70层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500701,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第71层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500711,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第72层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500721,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第73层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500731,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第74层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500741,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第75层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500751,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第76层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500761,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第77层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500771,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第78层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500781,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第79层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500791,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
    {//第80层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500801,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第81层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500811,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第82层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500821,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第83层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500831,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第84层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500841,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第85层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500851,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第86层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500861,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第87层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500871,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第88层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500881,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第89层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500891,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
    {//第90层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500901,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第91层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500911,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第92层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500921,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第93层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500931,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第94层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500941,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第95层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500951,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第96层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500961,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第97层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500971,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第98层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500981,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第99层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501500991,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
 {//第100层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501001,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第101层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501011,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第102层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501021,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第103层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501031,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第104层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501041,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第105层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501051,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第106层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501061,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第107层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501071,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第108层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501081,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第109层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501091,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第110层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501101,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第111层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501111,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第112层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501121,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第113层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501131,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第114层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501141,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第115层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501151,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第116层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501161,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第117层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501171,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第118层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501181,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第119层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501191,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第120层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501501201,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    }
	]
}
