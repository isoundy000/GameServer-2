{
    "scene_id" : 20901,
    "name" : "论剑武林",
    "relive" : {
        "type" : "111",
        "wait" : 3,
        "posX" : 491,
        "posY" : 2229
    },
	// 当前副本的离开场景后，回到进入副本前的场景
    "exits" : [{
        "id" : "10600",
        "posX" : 1272,
        "posY" : 3799
    }],
    "layout" : [
	{//第一层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550011,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第二层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550021,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第三层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550031,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第四层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550041,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002],
		"flag_set":["no_move"]
    },
	{//第五层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550051,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第6层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550061,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第7层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550071,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第8层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550081,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第9层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550091,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第10层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550101,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第11层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550111,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第12层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550121,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第13层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550131,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第14层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550141,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第15层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550151,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第16层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550161,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第17层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550171,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第18层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550181,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第19层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550191,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第20层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550201,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第21层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550211,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第22层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550221,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第23层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550231,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第24层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550241,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第25层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550251,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第26层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550261,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第27层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550271,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第28层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550281,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第29层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550291,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第30层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550301,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第31层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550311,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第32层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550321,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第33层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550331,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第34层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550341,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第35层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550351,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第36层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550361,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第37层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550371,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第38层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550381,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第39层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550391,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第40层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550401,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第41层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550411,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第42层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550421,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第43层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550431,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第44层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550441,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第45层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550451,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第46层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550461,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第47层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550471,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第48层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550481,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第49层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550491,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第50层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550501,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第51层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550511,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第52层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550521,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第53层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550531,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第54层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550541,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第55层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550551,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第56层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550561,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第57层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550571,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第58层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550581,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第59层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550591,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },	
	{//第60层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550601,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第61层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550611,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第62层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550621,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第63层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550631,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第64层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550641,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第65层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550651,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第66层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550661,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第67层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550671,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第68层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550681,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第69层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550691,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第70层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550701,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第71层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550711,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第72层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550721,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第73层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550731,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第74层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550741,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第75层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550751,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第76层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550761,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第77层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550771,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第78层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550781,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第79层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550791,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
    {//第80层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550801,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第81层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550811,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第82层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550821,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第83层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550831,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第84层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550841,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第85层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550851,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第86层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550861,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第87层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550871,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第88层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550881,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第89层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550891,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
    {//第90层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550901,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第91层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550911,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第92层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550921,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第93层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550931,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第94层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550941,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第95层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550951,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第96层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550961,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第97层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550971,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第98层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550981,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第99层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501550991,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第100层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551001,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第101层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551011,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第102层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551021,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第103层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551031,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第104层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551041,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第105层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551051,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第106层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551061,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第107层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551071,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第108层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551081,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第109层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551091,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
    {//第110层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551101,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第111层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551111,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第112层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551121,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第113层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551131,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第114层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551141,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第115层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551151,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第116层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551161,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第117层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551171,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第118层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551181,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第119层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551191,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
    {//第120层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551201,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第121层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551211,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第122层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551221,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第123层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551231,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第124层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551241,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第125层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551251,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第126层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551261,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第127层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551271,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    },
	{//第128层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551281,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第129层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551291,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002,400030005]
    },
	{//第130层
        // 指定点模式
        "born_type" : "point",
        "monster_sort" : 501551301,
        // 怪物行为树
        "monster_tree" : "bev1002.json",
        // 怪物出生点集合
        "point_coordxy" : [[1360,2183]],
        // 怪物刷新间隔,如果有wave字段,则刷新间隔从上一波刷新出怪开始计时
        "fresh" : 1,
        // 一次刷出多少只怪
        "once" : 1,
        // 最多同时存在多少只怪,没有则不限制
        "max_exist" : 1,
        // 最多生产多少只怪，没有则不限制
        "max_count" : 1,
        "skill_set" : [400030002]
    }
	]
}
